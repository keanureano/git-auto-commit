{
  "empty_messages": [
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    "",
    ""
  ],
  "bot_commits": [
    "bump browserify-sign from 4.0.4 to 4.2.2 in /fixtures/packaging/brunch/dev",
    "bump browserify-sign from 4.2.1 to 4.2.2 in /fixtures/fizz",
    "bump browserify-sign from 4.0.4 to 4.2.2 in /fixtures/packaging/browserify/prod",
    "bump browserify-sign from 4.0.4 to 4.2.2 in /fixtures/attribute-behavior",
    "bump browserify-sign from 4.2.1 to 4.2.2 in /fixtures/concurrent/time-slicing",
    "bump browserify-sign from 4.0.4 to 4.2.2 in /fixtures/expiration",
    "bump browserify-sign from 4.0.4 to 4.2.2 in /fixtures/packaging/brunch/prod",
    "bump browserify-sign from 4.2.1 to 4.2.2 in /fixtures/dom",
    "bump browserify-sign from 4.2.1 to 4.2.2 in /fixtures/ssr2",
    "bump browserify-sign from 4.0.4 to 4.2.2 in /fixtures/packaging/browserify/dev",
    "bump lodash from 4.17.15 to 4.17.21",
    "bump lodash from 4.17.4 to 4.17.21 in /fixtures/packaging/systemjs-builder/prod",
    "bump lodash from 4.17.15 to 4.17.21 in /fixtures/art",
    "bump lodash from 4.17.4 to 4.17.21 in /fixtures/expiration",
    "bump lodash from 4.17.4 to 4.17.21 in /fixtures/attribute-behavior",
    "bump qs from 6.5.2 to 6.5.3 in /fixtures/concurrent/time-slicing",
    "bump qs from 6.4.0 to 6.4.1 in /fixtures/packaging/brunch/dev",
    "bump qs from 6.4.0 to 6.4.1 in /fixtures/packaging/webpack-alias/prod",
    "bump qs from 6.4.0 to 6.4.1 in /fixtures/packaging/webpack/dev",
    "bump qs from 6.4.0 to 6.4.1 in /fixtures/attribute-behavior",
    "bump decode-uri-component from 0.2.0 to 0.2.2 in /fixtures/concurrent/time-slicing",
    "bump decode-uri-component from 0.2.0 to 0.2.2 in /fixtures/ssr",
    "bump decode-uri-component from 0.2.0 to 0.2.2 in /fixtures/legacy-jsx-runtimes",
    "bump decode-uri-component from 0.2.0 to 0.2.2 in /fixtures/blocks",
    "bump decode-uri-component from 0.2.0 to 0.2.2",
    "bump decode-uri-component from 0.2.0 to 0.2.2 in /fixtures/dom",
    "bump decode-uri-component from 0.2.0 to 0.2.2 in /fixtures/fizz",
    "bump loader-utils from 1.4.0 to 1.4.2 in /fixtures/fizz",
    "bump loader-utils from 2.0.0 to 2.0.4 in /fixtures/flight",
    "merge duplicate imports",
    "bump css-what from 2.1.0 to 2.1.3 in /fixtures/flight",
    "bump css-what from 2.1.0 to 2.1.3 in /fixtures/fiber-debugger",
    "bump css-what from 2.1.0 to 2.1.3 in /fixtures/attribute-behavior",
    "bump css-what from 2.1.0 to 2.1.3 in /fixtures/expiration",
    "bump eventsource from 1.0.7 to 1.1.2",
    "bump eventsource from 1.0.7 to 1.1.2 in /fixtures/blocks",
    "merge duplicate imports",
    "bump mout from 1.1.0 to 1.2.4 in /fixtures/packaging/brunch/dev",
    "bump async from 2.6.3 to 2.6.4 in /fixtures/concurrent/time-slicing",
    "bump cross-fetch from 3.1.4 to 3.1.5",
    "bump shell-quote in /fixtures/packaging/browserify/prod",
    "bump terser from 4.6.13 to 4.8.1",
    "bump jsdom from 16.4.0 to 16.7.0 in /fixtures/legacy-jsx-runtimes",
    "bump terser from 4.6.7 to 4.8.1 in /fixtures/blocks",
    "bump terser from 4.8.0 to 4.8.1 in /fixtures/fizz",
    "bump shell-quote in /fixtures/packaging/browserify/dev",
    "bump async from 2.6.3 to 2.6.4 in /fixtures/dom",
    "bump async from 2.6.3 to 2.6.4 in /fixtures/blocks",
    "bump moment from 2.24.0 to 2.29.4",
    "bump moment from 2.29.1 to 2.29.4 in /fixtures/ssr",
    "bump jpeg-js from 0.4.3 to 0.4.4",
    "bump jszip from 2.6.1 to 2.7.0",
    "bump versions for next release",
    "bump local package.json versions for 18.1 release",
    "bump `@next` versions",
    "bump react-refresh version",
    "bump react-refresh version",
    "bump versions to rc.3",
    "bump versions to rc.2",
    "bump versions to rc.2",
    "bump versions to prepare for rc.1",
    "bump beta -> rc",
    "bump 18 from alpha to beta",
    "bump tar from 5.0.5 to 5.0.11",
    "bump ws from 6.1.2 to 6.2.2 in /scripts/release",
    "bump ecstatic from 2.2.1 to 2.2.2 in /scripts/bench",
    "merge /unstable-fizz entry point into /server",
    "merge isobject branches",
    "bump electron version from 9.1.0 to 11.1.0 for darwin-arm64 builds",
    "bump fixture dependency versions",
    "bump versions for 17",
    "bump to latest eslint-config-fbjs",
    "bump https-proxy-agent from 2.2.1 to 2.2.4 in /scripts/release",
    "bump https-proxy-agent from 2.2.2 to 2.2.4",
    "bump minimist from 1.2.0 to 1.2.3 in /scripts/bench",
    "bump minimist from 1.2.0 to 1.2.3",
    "bump react-shallow-renderer to 16.13.1",
    "merge branch 'gasimgasimzada-scope-devtools-styles'",
    "bump prettier",
    "bump handlebars from 4.0.6 to 4.5.3 in /fixtures/dom",
    "bump handlebars from 4.0.10 to 4.5.3 in /fixtures/attribute-behavior",
    "bump handlebars from 4.0.11 to 4.5.3 in /fixtures/expiration",
    "bump handlebars from 4.1.2 to 4.5.3",
    "bump handlebars from 4.0.6 to 4.5.3 in /fixtures/fiber-debugger",
    "merge branch 'devtools-v4-merge'",
    "merge branch 'master' into devtools-v4-merge",
    "merge branch 'master' into devtools-v4-merge",
    "merge branch 'master' into devtools-v4-merge",
    "bump eslint plugin to 2.0",
    "merge branch 'master' into devtools-v4-merge",
    "merge branch 'master' into devtools-v4-merge",
    "merge branch 'master' into devtools-v4-merge",
    "merge remote-tracking branch 'devtools-merge/master' into devtools-v4-merge",
    "bump package.json versions",
    "bump deps in packages/**/package.json",
    "merge pull request #342 from marvinhagemeister/attach_configure",
    "merge pull request #331 from trueadm/flare_displayname",
    "merge pull request #325 from bvaughn/hydration",
    "merge pull request #320 from gaearon/own",
    "merge pull request #319 from gaearon/legacy-fix",
    "merge pull request #316 from gaearon/lighter",
    "merge pull request #315 from bvaughn/settings",
    "merge branch 'master' into legacy",
    "merge pull request #173 from bvaughn/legacy",
    "merge pull request #310 from bvaughn/track-changed-props",
    "merge branch 'master' into legacy",
    "merge pull request #308 from bvaughn/dependabot/npm_and_yarn/js-yaml-3.13.1",
    "bump js-yaml from 3.12.1 to 3.13.1",
    "merge pull request #295 from bvaughn/horizontal-compression",
    "merge remote-tracking branch 'upstream/master' into act-async",
    "merge pull request #289 from bvaughn/cache-inspected-element",
    "merge pull request #281 from bvaughn/persiste-profiling-data-after-navigation",
    "merge pull request #279 from bvaughn/profiling-architecture-eager-data-push",
    "merge pull request #274 from bvaughn/commit-priority-level",
    "merge pull request #275 from lucasecdb/fix/undefined-chartnode",
    "merge pull request #271 from tux-tn/master",
    "merge pull request #268 from frankcalise/master",
    "merge pull request #264 from bvaughn/filter-owners-list",
    "merge pull request #262 from submetu/enhancement/label-improvement",
    "merge pull request #258 from bvaughn/profiler-test-experiments",
    "merge pull request #257 from bvaughn/right-align-flame-graph",
    "merge branch 'master' into sompylasar-232-clear-profiling-data-for-unmounted-root",
    "merge pull request #242 from sompylasar/improve-flow-coverage-any",
    "merge pull request #207 from sompylasar/131-highlight-all-children",
    "merge pull request #245 from bvaughn/custom-filtering",
    "merge pull request #234 from gaearon/nested-suspense-test",
    "merge pull request #229 from sompylasar/217-workaround-disconnected-port-error",
    "merge pull request #251 from gaearon/devserver",
    "merge pull request #233 from gaearon/preset-env",
    "merge pull request #243 from sompylasar/rename-profiler-types-to-frontend-backend-to-disambiguate",
    "merge pull request #247 from sompylasar/fix-flow-on-circleci",
    "bump scheduler version to 0.14.0",
    "merge pull request #239 from sompylasar/remove-agent-addbridge",
    "merge pull request #238 from sompylasar/fix-typo-recursivelyinitializetree",
    "merge pull request #230 from gaearon/assert-maps",
    "merge pull request #227 from gaearon/string-table",
    "merge pull request #213 from wldcordeiro/fix-firefox-perms",
    "merge pull request #223 from bvaughn/owners-list-intermediate-components",
    "merge pull request #226 from gaearon/mutate-children",
    "merge pull request #221 from gaearon/heuristic",
    "merge pull request #220 from gaearon/removed-ids",
    "merge pull request #218 from gaearon/bump-react",
    "bump react versions",
    "merge pull request #196 from bvaughn/selected-element-suspense",
    "merge pull request #215 from bvaughn/persist-selection",
    "merge branch 'master' into selected-element-suspense",
    "merge pull request #201 from gaearon/scroll-fix",
    "merge pull request #205 from bvaughn/@reach/tooltip",
    "merge pull request #203 from gaearon/push-ops",
    "merge branch 'master' into push-ops",
    "merge pull request #204 from gaearon/no-weakset",
    "merge pull request #206 from gaearon/leading",
    "merge pull request #199 from gaearon/another-check",
    "merge branch 'master' into more-suspensey-stuff",
    "merge pull request #200 from gaearon/clear-stuff",
    "merge pull request #193 from gaearon/no-reorder",
    "merge pull request #186 from gaearon/more-suspensey-stuff",
    "merge pull request #188 from gaearon/humble-search",
    "merge pull request #184 from bvaughn/harden",
    "merge pull request #181 from gaearon/consoleerror",
    "merge pull request #182 from bvaughn/suspense-toggle",
    "merge pull request #174 from robertknight/mousedown-tab-select",
    "merge pull request #175 from lucasecdb/assign-timeout",
    "merge pull request #180 from gaearon/suspense-more-fixes",
    "merge pull request #178 from gaearon/removal-integrity",
    "merge pull request #168 from bvaughn/collapse-nodes-by-default",
    "merge pull request #171 from bvaughn/improve-contrast-light-mode",
    "merge pull request #164 from gaearon/fix-lots-of-stuff",
    "bump alpha to get andrew's fix",
    "bump to canary",
    "merge pull request #162 from gaearon/suspense-test",
    "merge pull request #161 from gaearon/fast",
    "merge pull request #158 from gaearon/stress-test",
    "merge pull request #160 from gaearon/add-prod-shell",
    "merge pull request #159 from gaearon/l-to-the-r-to-the-u",
    "merge pull request #148 from gaearon/scroll-consistent",
    "merge pull request #155 from gaearon/view-dom-inspect",
    "merge pull request #154 from gaearon/resize-hilite",
    "merge pull request #150 from gaearon/bump-hooks-plugin",
    "bump react hooks plugin",
    "merge pull request #149 from gaearon/dont-reset",
    "merge pull request #147 from gaearon/no-propagation",
    "merge pull request #145 from bvaughn/deploy-chrome-updates",
    "merge pull request #133 from bvaughn/tests",
    "merge pull request #135 from lucasecdb/fiber-info-overflow",
    "merge pull request #126 from bvaughn/js-hover",
    "bump scheduler version to 0.14.0",
    "merge pull request #134 from sophiebits/bridge-batch",
    "merge pull request #123 from gaearon/focus-keyboard",
    "merge pull request #122 from gaearon/prevent",
    "merge pull request #114 from gaearon/lazy-sync",
    "merge pull request #120 from gaearon/mutation-index",
    "merge pull request #118 from gaearon/required-title",
    "merge pull request #116 from bvaughn/issues/105",
    "merge pull request #117 from gaearon/hide-shell",
    "merge pull request #101 from gaearon/find-nit",
    "merge pull request #108 from bvaughn/reach-ui-menubutton",
    "merge pull request #103 from gaearon/sad-one-way",
    "merge pull request #107 from sophiebits/flicker",
    "merge pull request #99 from gaearon/sync-tabs",
    "merge branch 'master' into continuous-select",
    "merge pull request #92 from gaearon/highlight-on-hover",
    "merge pull request #91 from gaearon/fix-scroll",
    "merge pull request #93 from gaearon/keep-mounted",
    "merge pull request #94 from gaearon/rendered-by",
    "merge pull request #86 from gaearon/owner-stack-id",
    "merge pull request #87 from gaearon/bump-overscan",
    "merge branch 'hristo-kanchev-owner-stack-enhancement'",
    "merge pull request #88 from gaearon/remove-ring",
    "merge pull request #89 from gaearon/toggle-fix",
    "bump overscan",
    "merge pull request #71 from gaearon/suspense-special",
    "merge pull request #81 from gaearon/overlay-owner",
    "merge pull request #84 from gaearon/dead",
    "merge pull request #75 from gaearon/fix-double-add",
    "merge pull request #61 from gaearon/toggle-suspense-2",
    "merge pull request #72 from gaearon/search-bug",
    "merge pull request #70 from gaearon/free-debug",
    "merge pull request #63 from gaearon/smarter-search-match",
    "merge pull request #66 from gaearon/dont-dismiss-menu",
    "merge pull request #62 from gaearon/search-fix",
    "merge pull request #51 from gaearon/tweak-el-display",
    "merge pull request #45 from gaearon/rename",
    "merge pull request #41 from gaearon/smoother-right-pane",
    "merge pull request #35 from bvaughn/reload-and-profile",
    "merge pull request #38 from lucasecdb/patch-1",
    "merge pull request #33 from bvaughn/portals",
    "merge pull request #32 from reznord/fix/long-props-fix",
    "merge pull request #29 from tsriram/fix-import",
    "merge pull request #27 from gaurav5430/master",
    "merge pull request #4 from mishaor/linux-support",
    "merge pull request #2 from jessidhia/fix-utf-encoding",
    "bump gcc",
    "bump versions to beta.0",
    "bump version to 16.6.0-beta.0",
    "bump babel-eslint and remove flow supressions",
    "bump \"fbjs-scripts\" to remove babel 5 from dependencies",
    "bump prettier",
    "bump expiration for interactive updates to 150ms in production",
    "bump simple-cache-provider version",
    "bump jest to 22.0.6",
    "bump node devengines to 8.x",
    "bump jest version",
    "bump peer deps of react to ^16.0.0",
    "bump object-assign patch range to match main package.json",
    "bump versions for 16.0.0-rc.2",
    "bump prop-types",
    "merge pull request #9264 from aickin/server-render-unit-tests-forms",
    "merge pull request #9276 from trueadm/getdeclarationerroraddendum_dev",
    "merge branch 'giamir-add_toggle_to_fiber_triangle_demo'",
    "merge pull request #9145 from acdlite/explicitnullcheckfiberupdatequeue",
    "merge pull request #9187 from acdlite/prettierci",
    "merge pull request #9101 from sebmarkbage/prettier",
    "merge pull request #9096 from trueadm/component-tree-hook-dev",
    "merge pull request #9121 from jddxf/refactor",
    "merge remote-tracking branch 'upstream/master' into component-tree-hook-dev",
    "merge pull request #9088 from acdlite/testerrorutilsshim",
    "merge pull request #9097 from acdlite/dontextractprodproptypeerror",
    "merge pull request #9098 from acdlite/printwarnings",
    "merge pull request #9087 from acdlite/fixstringcasting",
    "merge pull request #9082 from acdlite/nobooleanorstringconstructors",
    "merge pull request #9080 from trueadm/remove-stack-dependencies-from-tests",
    "merge branch 'master' into remove-stack-dependencies-from-tests",
    "merge pull request #8950 from acdlite/fibercompositecomponenttests",
    "merge pull request #8961 from acdlite/fiberbreakonuncaught",
    "merge pull request #9060 from acdlite/fixrecordtestsscript",
    "merge pull request #9054 from acdlite/fiberpreventextensions",
    "merge pull request #9058 from nihgwu/patch-1",
    "merge pull request #9004 from acdlite/proptypescheck",
    "merge pull request #9045 from trueadm/emptyobject-reference-mismatch-due-to-mocking",
    "merge pull request #9043 from trueadm/fix-fiber-functional-componment-childcontext",
    "merge pull request #8949 from acdlite/fibercomponentlifecycletests",
    "merge pull request #9040 from acdlite/assignstateincwrp",
    "merge pull request #8974 from acdlite/fibercallbackvalidation",
    "merge pull request #8978 from acdlite/nooptionaltypes",
    "merge pull request #8948 from acdlite/fiberdonttesthostcleanup",
    "merge pull request #8919 from acdlite/fibermounttests",
    "merge pull request #8937 from acdlite/inlineinternalerrormessage",
    "merge pull request #8936 from acdlite/removemapsaschildren",
    "merge pull request #8926 from acdlite/fiberuseinvariant",
    "merge pull request #8927 from mitenka/patch-5",
    "bump fbjs to 0.8.9",
    "merge pull request #8921 from facebook/revert-8907-fiberproderrorcode",
    "merge pull request #8907 from acdlite/fiberproderrorcode",
    "merge pull request #8905 from acdlite/fiberfinddomnodeunmount",
    "merge pull request #8906 from acdlite/warningnewline",
    "merge pull request #8908 from acdlite/fiberemptycomponent",
    "merge pull request #8893 from gaearon/fix-dom-prod-test",
    "merge pull request #8890 from acdlite/fiberfragmentinvariants",
    "merge pull request #8897 from acdlite/fiberfixfinddomnode",
    "merge pull request #8840 from sebmarkbage/statelesscoroutines",
    "merge pull request #8797 from acdlite/fix-arrays",
    "merge pull request #8645 from bvaughn/add-failing-scu-current-props-test",
    "merge pull request #8742 from bvaughn/stack-fiber-gcc-warning",
    "merge pull request #8757 from acdlite/fiberfeatureflag",
    "merge pull request #8655 from acdlite/fibermemoizepremptedwork",
    "merge pull request #8746 from acdlite/fiberrevertcommitinfo",
    "bump react-noop-renderer version to fix ci",
    "merge pull request #8728 from acdlite/fibernocallbacklist",
    "merge pull request #8723 from bvaughn/improve-unmasked-context-caching",
    "merge pull request #8710 from acdlite/fiberscheduleupdateoptimization",
    "merge pull request #8589 from nhunzaker/browser-testing",
    "merge pull request #8706 from bvaughn/dont-recreate-masked-context-unless-needed",
    "merge pull request #8704 from murtazahaveliwala/patch-3",
    "merge pull request #8685 from acdlite/fiberrefeffect",
    "merge pull request #8679 from bvaughn/fix-react-conf-2017-name",
    "merge pull request #8677 from bvaughn/add-callback-validation-to-dom-render",
    "merge pull request #8661 from acdlite/fiberunbatchedupdates",
    "merge pull request #8671 from bonham000/update-docs",
    "merge pull request #8658 from acdlite/nullupdatetest",
    "merge pull request #8673 from madeinfree/patch-1",
    "merge pull request #8674 from neeldeep/patch-1",
    "merge pull request #8634 from acdlite/fibersyncmount",
    "merge pull request #8641 from jddxf/remove-superfluous-check",
    "merge pull request #8646 from bvaughn/focus-side-effect",
    "merge pull request #8611 from bvaughn/shared-context-stack",
    "merge pull request #8622 from bvaughn/preproccessor-jest-cching",
    "merge pull request #8613 from sebmarkbage/fiberrefactorbailout",
    "merge pull request #8585 from acdlite/batchstateandcallback",
    "merge pull request #8610 from acdlite/fiberfixrooterror",
    "merge pull request #8606 from acdlite/fiberhostrootupdatequeue",
    "merge pull request #8605 from facebook/revert-8584-fiberhostrootupdatequeue",
    "merge pull request #8590 from bvaughn/unexpected-context-pop",
    "merge pull request #8587 from acdlite/fiberupdatequeuefollowup",
    "merge pull request #8594 from bvaughn/dont-warn-about-getinitialstate-on-class-if-state-set",
    "merge pull request #8584 from acdlite/fiberhostrootupdatequeue",
    "merge pull request #8538 from acdlite/fiberupdatequeue",
    "merge pull request #8560 from bvaughn/react-native-fiber",
    "merge pull request #8528 from acdlite/callbacksemantics",
    "merge pull request #8563 from sebmarkbage/enforcelowercasetags",
    "merge pull request #8568 from bvaughn/top-level-context-push-pop",
    "merge pull request #8558 from bvaughn/rename-initialize-core",
    "merge pull request #8557 from bvaughn/add-create-text-instance-param",
    "merge pull request #8491 from sebmarkbage/fibercurrenteventhandlers",
    "merge pull request #8521 from bvaughn/react-art-fiber",
    "merge pull request #8520 from bvaughn/do-not-reset-inner-html-for-null-children",
    "merge pull request #8450 from sebmarkbage/fiberfinddomnode",
    "merge pull request #8476 from alanbreck/patch-1",
    "merge pull request #8478 from lucas-aragno/add-return-to-render",
    "merge pull request #8463 from spicyj/travis",
    "merge pull request #8441 from sebmarkbage/movefromstack",
    "merge pull request #8400 from sebmarkbage/fibercontainerchildren",
    "merge pull request #8365 from sebmarkbage/fiberdom",
    "merge pull request #8347 from sebmarkbage/fiberdom",
    "merge pull request #8346 from shubheksha/docs/improve-state-and-lifecycle",
    "merge pull request #8345 from shubheksha/docs/improve-introducing-jsx",
    "merge pull request #8339 from nolanlawson/patch-1",
    "merge pull request #8319 from sebmarkbage/fiberdom",
    "merge pull request #8332 from gaearon/prod-dev",
    "merge pull request #8335 from lacker/newlink",
    "merge pull request #8317 from marcysutton/master",
    "merge pull request #8232 from sebmarkbage/treetraversal",
    "merge pull request #8293 from gaearon/154-post",
    "merge pull request #8272 from gaearon/fiber-context",
    "merge pull request #8277 from qiuyuntao/master",
    "merge pull request #8206 from acdlite/fibertasklifecycleupdates",
    "merge pull request #8210 from gaearon/fiber-error-boundaries-fatal",
    "merge pull request #8127 from facebook/fibersynchronouswork",
    "merge pull request #8133 from gaearon/error-boundaries-more",
    "merge pull request #8128 from sebmarkbage/fiberdom",
    "merge pull request #8118 from facebook/fiberpurecomponent",
    "merge pull request #8083 from sebmarkbage/fiberfinddomnode",
    "merge pull request #8028 from sebmarkbage/nodidupdateforbailout",
    "merge pull request #8096 from sebmarkbage/fiberdom",
    "merge reacttreetraversal",
    "merge pull request #8086 from sebmarkbage/fiberdom",
    "merge pull request #8078 from sebmarkbage/rmcomment",
    "merge pull request #8055 from sebmarkbage/fiberclassname",
    "merge pull request #8015 from sebmarkbage/fiberclassinit",
    "merge pull request #8029 from sebmarkbage/fiberreturnfromtoprender",
    "merge pull request #8000 from piperchester/patch-1",
    "merge pull request #7344 from acdlite/fibersetstate",
    "merge pull request #7636 from sebmarkbage/fiberrefactor",
    "merge pull request #7644 from flarnie/flowifyeventpluginregistry",
    "merge pull request #7634 from spicyj/flowfix",
    "merge pull request #7625 from vjeux/jest15",
    "merge pull request #7248 from sebmarkbage/fibercleanup",
    "merge pull request #7381 from keyanzhang/rename-hooks",
    "merge pull request #7308 from zpao/jekyll3",
    "merge pull request #7321 from keyanzhang/codemod-es6-component",
    "merge pull request #7229 from zpao/blog-post-errorcodes",
    "merge pull request #7154 from sebmarkbage/sideeffects",
    "merge pull request #7034 from sebmarkbage/newreconciler",
    "merge pull request #7053 from vjeux/flow_accumulate",
    "merge pull request #6988 from sebmarkbage/newreconciler",
    "merge pull request #6981 from sebmarkbage/newreconciler",
    "merge pull request #6957 from zpao/flow026",
    "merge pull request #6931 from sebmarkbage/newreconciler",
    "merge pull request #6903 from sebmarkbage/newreconciler",
    "merge pull request #6859 from sebmarkbage/newreconciler",
    "merge pull request #6886 from weizenlol/patch-1",
    "merge pull request #6677 from zpao/dont-warn-css-0-string",
    "merge pull request #6890 from grgur/patch-1",
    "merge pull request #6880 from gaearon/clone-key-ref-props-2",
    "merge pull request #6872 from gaearon/jest-cli@12",
    "merge pull request #6775 from spicyj/fix-art",
    "merge pull request #6801 from iamdustan/instrumentation-to-shared",
    "merge pull request #6804 from dmitriiabramov/update_typescript",
    "merge pull request #6814 from ivanwangcy/master",
    "merge pull request #6789 from gaearon/tree-devtool-fixes",
    "merge pull request #6787 from gaearon/tree-devtool-test-tweaks",
    "merge pull request #6767 from gaearon/fix-broken-master",
    "merge pull request #6763 from nfcampos/is-running",
    "merge pull request #6753 from facebook/fix-6750",
    "merge pull request #6752 from facebook/fix-6742",
    "merge pull request #6377 from puradox/proptypes-symbol",
    "merge pull request #6730 from elas7/fix-docs",
    "merge pull request #6647 from gaearon/bye-bye-reactperf",
    "merge pull request #6696 from dotu/patch-3",
    "merge pull request #6669 from dotu/patch-2",
    "merge pull request #6046 from gaearon/new-perf",
    "merge pull request #6633 from gaearon/native-tree-devtool",
    "merge pull request #6638 from cpojer/master",
    "merge pull request #6628 from sheerun/patch-1",
    "merge pull request #6620 from cpojer/master",
    "merge pull request #6612 from gaearon/instrumentation-new-operations",
    "merge pull request #6388 from gaearon/bye-bye-deprecated-utils",
    "merge pull request #6605 from gaearon/fix-warning-condition",
    "merge pull request #6549 from gaearon/instrumentation-new",
    "merge pull request #6587 from sahrens/patch-2",
    "merge pull request #6584 from sahrens/patch-1",
    "merge pull request #6576 from yuji0602/tutorial_md_sample_json_change",
    "merge pull request #6588 from sahrens/patch-3",
    "merge pull request #6572 from spicyj/rn-batch",
    "merge pull request #6553 from zpao/cleanuppkg",
    "merge pull request #6338 from sebmarkbage/reactnative2",
    "bump package versions",
    "merge pull request #6469 from keyanzhang/validate-foreignobject-children",
    "merge pull request #6516 from gaearon/ignore-dom-writes-outside-batch",
    "merge pull request #6519 from zpao/envdocsfixup",
    "merge pull request #6510 from jimfb/ssr-environment-docs",
    "merge pull request #6215 from nhunzaker/nh-fix-disabled-inputs",
    "merge pull request #6362 from gaearon/no-owner-in-test-utils",
    "merge pull request #3 from raitobezarius/fork/proptypes-symbol",
    "merge pull request #6148 from jimfb/node-package-manager",
    "merge pull request #6504 from alexlur/patch-1",
    "merge pull request #6462 from wildhoney/master",
    "merge pull request #6442 from trevorsmith/master",
    "merge pull request #6443 from aweary/patch-1",
    "merge pull request #6458 from mondaychen/master",
    "merge pull request #6449 from spicyj/option-value",
    "merge pull request #6444 from zpao/re__spreadwarn",
    "merge pull request #6364 from p-jackson/issue-5700",
    "merge pull request #6134 from richardscarrott/master",
    "merge pull request #6400 from jimfb/return-value-legacy",
    "merge pull request #6341 from borisyankov/master",
    "merge pull request #6419 from ivanvergiliev/master",
    "bump version for v16 development",
    "merge pull request #6430 from formido/patch-1",
    "merge pull request #6431 from sebmarkbage/killspread",
    "merge pull request #6432 from zpao/testutilsinlinerequiresinject",
    "merge pull request #6426 from zpao/valuetest",
    "merge pull request #6428 from zpao/15-docs-attrs",
    "merge pull request #6429 from zpao/viceversa2words",
    "merge pull request #6380 from zpao/simulatewarning",
    "merge pull request #6413 from zpao/deps-cleanup",
    "merge pull request #6228 from everdimension/fix_option_value",
    "merge pull request #2 from raitobezarius/fork/proptypes-symbol",
    "merge pull request #6408 from facebook/gaearon-patch-2",
    "merge pull request #1 from raitobezarius/fork/proptypes-symbol",
    "merge pull request #6415 from sebmarkbage/typofix",
    "merge pull request #6376 from zpao/object.assign",
    "merge pull request #6405 from facebook/gaearon-patch-2",
    "merge pull request #5731 from matthewherbst/docs-arrayof-custom-validator",
    "merge pull request #6399 from facebook/gaearon-flip-dev",
    "merge pull request #6389 from gaearon/reactperf-reactdebuginstancemap",
    "merge pull request #6392 from facebook/gaearon-add-meeting-notes",
    "merge pull request #6381 from cbrwizard/clipboard_event_unit_tests",
    "merge pull request #6367 from sottar/translate-thinking-in-react.md-to-japanese",
    "merge pull request #6383 from gaearon/consistent-spies",
    "merge pull request #6374 from mfunkie/patch-3",
    "merge pull request #6363 from facebook/gaearon-patch-1",
    "merge pull request #6373 from mfunkie/patch-2",
    "merge pull request #6360 from cbrwizard/synthetickeyboardevent_unit_tests",
    "merge pull request #6337 from zpao/15-examples",
    "merge pull request #6370 from gaearon/148-post",
    "merge branch 'andreypopp-patch-1'",
    "merge pull request #6305 from maherbeg/maher-error-find-dom-node",
    "merge pull request #6326 from gaearon/fix-test",
    "merge pull request #6330 from speedskater/patch-1",
    "merge pull request #6242 from edvinerikson/add-origin-to-css-warnings",
    "merge pull request #6331 from zpao/isonpmorphic",
    "merge pull request #6332 from kentcdodds/pr/beginner-friendly",
    "merge pull request #6195 from mxstbr/perf-links",
    "merge pull request #6191 from strawbrary/edit-on-github-position",
    "merge pull request #6296 from jontewks/add-warnings",
    "merge pull request #6310 from gaearon/setstate-warning",
    "merge pull request #6333 from kentcdodds/pr/beginner-friendly-badge",
    "merge pull request #6257 from terry3/highlight-not-working",
    "merge pull request #6307 from cbrwizard/geteventcharcode_unit_tests",
    "merge pull request #6309 from victor-homyakov/patch-1",
    "merge pull request #6312 from vjeux/fix_docs_jump",
    "merge pull request #6313 from jimfb/script-integrity-attribute",
    "merge pull request #6303 from qerub/use-loose-envify",
    "merge pull request #6301 from gaearon/remove-dead-export",
    "merge pull request #6281 from rgarifullin/microfix_docs",
    "merge pull request #6286 from gaearon/opaque-perf-measurements",
    "merge pull request #6287 from gaearon/rename-perf-methods",
    "merge pull request #6289 from gaearon/strip-circular-refs",
    "merge pull request #6285 from gaearon/no-addons",
    "merge pull request #6273 from cbrwizard/geteventkey_tests",
    "merge pull request #6276 from gaearon/fix-custom-components",
    "merge pull request #6270 from rofrischmann/unitless-css-property",
    "merge pull request #6274 from facebook/revert-6226-pr-5202",
    "merge pull request #6226 from antoaravinth/pr-5202",
    "merge pull request #6260 from iawia002/master",
    "merge pull request #6267 from gaearon/svg-whitelist",
    "merge pull request #6258 from iamchenxin/zh_docs031316rest",
    "merge pull request #6256 from iamchenxin/zh_docs031316",
    "merge pull request #6210 from rofrischmann/unitless-border-image-outset",
    "merge pull request #6202 from vjeux/search",
    "merge pull request #6243 from zpao/fuck-svg-2",
    "merge pull request #6251 from zpao/docfragfix",
    "merge pull request #6245 from koba04/fix-test-is-not-a-function",
    "merge pull request #6233 from sairion/15rc1-comment-bug",
    "merge pull request #6224 from koba04/adding-a-warning-for-responder-synthetic-event",
    "merge pull request #6095 from yiminghe/fix-async-ref-destruct",
    "merge pull request #6223 from lelandrichardson/patch-1",
    "merge pull request #6214 from koba04/patch-6",
    "merge pull request #6201 from zpao/docs-babel-6",
    "merge pull request #6200 from cpojer/master",
    "merge pull request #5781 from ara4n/master",
    "merge pull request #6207 from zpao/15rc-blog-post-corrections",
    "merge pull request #6208 from jinxiulee/patch-2",
    "merge pull request #6199 from jquense/patch-4",
    "merge pull request #6185 from zpao/fbjs-upgrade",
    "merge pull request #6121 from raineroviir/rainer",
    "merge pull request #6180 from camjc/master",
    "merge pull request #6184 from gaearon/fix-svg-warning",
    "merge pull request #6177 from yuanyan/patch-1",
    "merge pull request #6189 from zpao/sythetic-events-fix",
    "merge pull request #6183 from jimfb/rec-update",
    "merge pull request #6175 from zpao/eslintrc-fixes",
    "merge pull request #6172 from mgmcdermott/master",
    "merge pull request #6159 from mxstbr/move-jsx-comment",
    "merge pull request #6164 from gaearon/fix-svg",
    "merge pull request #6152 from jimfb/fix-blog-code-fragment",
    "merge pull request #6090 from joecritch/docs-external-link-icon",
    "merge pull request #6151 from zpao/docs-external-sidebar-followup",
    "merge pull request #6140 from nogsmpls/removebabelbrowser",
    "merge pull request #6132 from chicoxyzzy/use_object_is_in_oneof_validate_method",
    "merge pull request #6141 from wikinee/master",
    "merge pull request #6005 from milesj/synthetic-transition",
    "merge pull request #6139 from mxstbr/fix-rendertostaticmarkup-invariant",
    "merge pull request #6133 from stevenvachon/patch-1",
    "merge pull request #6129 from gaearon/syranide-lessvpm",
    "merge pull request #6113 from kittens/babel-6",
    "merge pull request #6127 from jimfb/linkedinput-to-packages",
    "merge pull request #6068 from gaearon/react-instrumentation",
    "merge pull request #6082 from spicyj/nq-set-props",
    "merge pull request #5877 from spicyj/mount-class-error",
    "merge pull request #6123 from changhw01/patch-1",
    "merge pull request #6112 from mxstbr/surpresscontenteditablewarning",
    "merge pull request #5947 from koba04/add-warning-for-adding-synthetic-event-property",
    "merge pull request #6092 from dpercy/patch-2",
    "merge pull request #6094 from aprilarcus/cite-attribute",
    "merge pull request #6089 from chromakey/bb-fix-htmltojsx-script-link",
    "merge pull request #6085 from srph/patch-1",
    "merge pull request #6071 from nakazye/fix_highlight",
    "merge pull request #5997 from truongduy134/clone-element",
    "merge pull request #6074 from sebmarkbage/versionpost",
    "merge pull request #6070 from spicyj/server-text",
    "merge pull request #6073 from sebmarkbage/versionpost",
    "merge pull request #5753 from mwiencek/no-text-span-2",
    "merge pull request #6065 from benjycui/fix-comments",
    "merge pull request #6063 from andrew8xx8/master",
    "merge pull request #4940 from spicyj/no-construct",
    "merge pull request #5940 from kentcdodds/pr/warn-event-pool-access",
    "merge pull request #6059 from jimfb/tutorial-children-callback",
    "merge pull request #6064 from jimfb/provide-msunsafe-wrapper",
    "merge pull request #5720 from edmellum/master",
    "merge pull request #6052 from cpojer/master",
    "merge pull request #6039 from mxstbr/convert-docs-to-stateless",
    "merge pull request #6032 from saiichihashimoto/allow-profile-attr",
    "merge pull request #6017 from zpao/docs-sri-task",
    "merge pull request #5744 from prometheansacrifice/warn-if-user-accesses-key-ref-props",
    "merge pull request #6048 from mxstbr/update-tutorial-versions",
    "merge pull request #6028 from sambev/issue/6027-uncaught-type-error",
    "merge pull request #6031 from jontewks/update-docs",
    "merge pull request #6044 from bellanchor/master",
    "merge pull request #5864 from theblasfem/master",
    "merge pull request #6030 from facebook/vjeux-patch-1",
    "merge pull request #5892 from ianobermiller/children-map-key-slash",
    "merge pull request #6008 from jimfb/module-pattern",
    "merge pull request #6009 from jimfb/error-boundaries-initial-render-componentwillunmount",
    "merge pull request #6016 from zpao/rm-batched-updates-addons",
    "merge pull request #5909 from rajatsehgal/patch-1",
    "merge pull request #6004 from theblasfem/sri-links",
    "merge pull request #5977 from jfairbank/remove-new-call",
    "merge pull request #6000 from shinnn/process",
    "merge pull request #5999 from shinnn/https",
    "merge pull request #5992 from pra85/patch-1",
    "merge pull request #5986 from zpao/fix-lint",
    "merge pull request #5982 from jimfb/error-boundaries-composite-unmount",
    "merge pull request #4437 from gajus/patch-1",
    "merge pull request #5965 from karczk/issue-5957",
    "merge pull request #5961 from markmurphy/issue-5959",
    "merge pull request #5953 from davidvgalbraith/dont-redundantly-set",
    "merge pull request #5955 from pekeq/patch-docs-1",
    "merge pull request #5946 from tjfryan/fix-docs-css",
    "merge pull request #5884 from jimfb/component-extends-react-component",
    "merge pull request #1510 from syranide/propattr",
    "merge pull request #3372 from jonhester/void-elements",
    "merge pull request #5923 from puppybits/patch-1",
    "merge pull request #5928 from scjody/patch-1",
    "merge pull request #5903 from zpao/rm-build-deps",
    "merge pull request #5911 from mathieuu/patch-1",
    "merge pull request #5922 from zpao/package-empty-deps",
    "merge pull request #5917 from zeke/homepage-urls",
    "merge pull request #5912 from chrisbolin/patch-1",
    "merge pull request #5904 from sercaneraslan/master",
    "merge pull request #5887 from natejlee/patch-1",
    "merge pull request #5886 from goatslacker/cant-dangerouslysetinnerhtml-for-option",
    "merge pull request #5885 from knpwrs/patch-1",
    "merge pull request #5891 from zpao/vendor-semi",
    "merge pull request #5900 from tmysz/ja-doc",
    "merge pull request #5811 from jontewks/warn-nan-style",
    "merge pull request #5865 from leeyoungalias/master",
    "merge remote-tracking branch 'facebook/master'",
    "merge pull request #5872 from simenb/patch-1",
    "merge pull request #5870 from simenb/patch-1",
    "merge pull request #5849 from david0178418/master",
    "merge pull request #5840 from koba04/release-event-target-on-destructor",
    "merge pull request #5859 from jimfb/clonewithprops",
    "merge pull request #5724 from iamchenxin/docs122315",
    "merge pull request #5832 from jimfb/cleanup-top-level-dom-api",
    "merge pull request #5718 from jimfb/linked-input",
    "merge pull request #5833 from jimfb/remove-getdomnode",
    "merge pull request #5735 from cody/refs",
    "merge pull request #5732 from iamchenxin/en-docs",
    "merge pull request #5728 from spicyj/input-gc",
    "merge pull request #5834 from spicyj/no-ie8",
    "merge pull request #5836 from koba04/fixup-jsdoc-for-syntheticevent",
    "merge pull request #5826 from jacenko/master",
    "merge pull request #5829 from zpao/style-followup",
    "merge pull request #5823 from mgmcdermott/master",
    "merge pull request #5814 from zpao/docs-update-attrs-0.14.6",
    "merge pull request #5686 from vitorbal/master",
    "merge pull request #5813 from graue/tips-unneeded-finddomnode",
    "merge pull request #5790 from jimfb/componentwillreceiveprops-blogpost",
    "merge pull request #5806 from zhangjd/master",
    "merge pull request #5801 from zpao/docs-bigger-embeds",
    "merge pull request #5799 from gmcquistin/patch-1",
    "merge pull request #5787 from milesj/receive-props-context-fix",
    "merge pull request #5784 from jimfb/getnativenode",
    "merge pull request #5782 from spicyj/img",
    "merge pull request #5689 from jimfb/cleanup-5151",
    "merge pull request #5775 from facebook/fix-checkbox-wording",
    "merge pull request #5767 from yhagio/patch-2",
    "merge pull request #5748 from rickbeerendonk/year-agnostic-copyright",
    "merge pull request #5749 from spicyj/lib-native",
    "merge pull request #5741 from mziwisky/patch-1",
    "merge pull request #5730 from spicyj/input-type-value",
    "merge pull request #5590 from jimfb/use-devtool-for-unknown-property-warning",
    "merge pull request #5736 from gaearon/document-svg-passthrough",
    "merge pull request #5729 from spicyj/input-type-value",
    "merge pull request #5714 from gaearon/passthrough-svg-attributes",
    "merge pull request #5725 from rochesterinnyc/patch-1",
    "merge pull request #5716 from jwworth/pull-request-1450816256",
    "merge pull request #5721 from jdalton/fast-finish",
    "merge pull request #5712 from dortonway/master",
    "merge pull request #5308 from spicyj/rep",
    "merge pull request #5713 from zpao/jest-coverage-followups",
    "merge pull request #5711 from iamchenxin/docs122215",
    "merge pull request #5707 from jdalton/coveralls",
    "merge pull request #5709 from zpao/youtubenocookie",
    "merge pull request #5706 from kchia/patch-3",
    "merge pull request #5708 from kchia/patch-4",
    "merge pull request #5705 from facebook/gaearon-patch-1",
    "merge pull request #5699 from jwworth/pull-request-1450702663",
    "merge pull request #5695 from gaearon/patch-2",
    "merge pull request #5702 from gaearon/patch-3",
    "merge pull request #5701 from cesarwbr/patch-1",
    "merge pull request #5697 from kolodny/stricter-update-tests",
    "merge pull request #5694 from spicyj/div-html-nesting",
    "merge pull request #5698 from facebook/daniel15-patch-1",
    "merge pull request #5693 from gaearon/elements-post",
    "merge pull request #5692 from zpao/small-style-fixups",
    "merge pull request #5216 from nlight/number-in-data-attrs-2329",
    "merge pull request #5599 from zramaekers/shallow-compare-docs",
    "merge pull request #5683 from zpao/build-no-vendor",
    "merge pull request #5602 from jimfb/error-boundaries",
    "merge pull request #5587 from jimfb/ismounted-alternatives",
    "merge pull request #5673 from djcordhose/reactelement-doc-fix",
    "merge pull request #5346 from prometheansacrifice/warn-immutable-props",
    "merge pull request #5663 from jonathanp/fix-code-comment",
    "merge pull request #4888 from spicyj/ssr-no-queue",
    "merge pull request #5654 from jutaz/bugfix/typos",
    "merge pull request #5658 from applegrain/clarify-dependency-installation",
    "merge pull request #5550 from spicyj/cc-speed",
    "merge pull request #5655 from adraeth/patch-1",
    "merge pull request #5623 from freddyrangel/autocorrect_autocapitalize",
    "merge pull request #5605 from thekevlau/patch-1",
    "merge pull request #5644 from andrewhenderson/patch-1",
    "merge pull request #5643 from koh-taka/patch-1",
    "merge pull request #5610 from yangshun/change-devtools-message",
    "merge pull request #5593 from zwhitchcox/patch-3",
    "merge pull request #5611 from dittos/irc-remove-2ndarg",
    "merge pull request #5603 from henryw4k/patch-3",
    "merge pull request #5614 from mark-rushakoff/avoid-negative-lookahead",
    "merge pull request #5640 from spicyj/no-typechecks",
    "merge pull request #5609 from vitorbal/patch-1",
    "merge pull request #5600 from zwhitchcox/patch-4",
    "merge pull request #5595 from remko/select-bug",
    "merge pull request #5570 from jimfb/remove-setprops-replaceprops",
    "merge pull request #5584 from zwhitchcox/patch-2",
    "merge pull request #5561 from graue/setstate-cwm",
    "merge pull request #5589 from wrakky/fix-minlength-docs",
    "merge pull request #5559 from shogunsea/docs-add-marked",
    "merge pull request #5588 from jimfb/setprops-replaceprops-deprecated",
    "merge pull request #5576 from spicyj/log-top-level",
    "merge pull request #5581 from yuyokk/patch-1",
    "merge pull request #5564 from jackiewung/master",
    "merge pull request #5536 from zpao/keys-on-prototypes",
    "merge pull request #5546 from cody/singlechild",
    "merge pull request #5520 from mhujer/docs-spread-fix-babel",
    "merge pull request #5556 from timuric/patch-1",
    "merge pull request #5526 from yangshun/todo-app-id",
    "merge pull request #5547 from spicyj/mc-noq",
    "merge pull request #5543 from spicyj/rt103",
    "merge pull request #5539 from matthewlooi/addcodehighlighttotutorialdoc",
    "merge pull request #5523 from hejld/add-selection-and-composition-events-on-reference-page",
    "merge pull request #5524 from chenglou/woohoo-its-me",
    "merge pull request #5533 from kryogenic/patch-1",
    "merge pull request #5500 from hejld/master",
    "merge pull request #5518 from mhujer/docs-spread-fix",
    "merge pull request #5411 from simonewebdesign/master",
    "merge pull request #5503 from spicyj/measure-analyze",
    "merge pull request #5451 from spicyj/empty-comments",
    "merge pull request #5511 from keweicodes/patch-1",
    "merge pull request #5508 from yangshun/patch-1",
    "merge pull request #5510 from jimfb/useless-find-dom-nodes",
    "merge pull request #5495 from jimfb/remove-public-dom-instance",
    "merge pull request #5501 from zpao/release-react-dom-server",
    "merge pull request #5330 from laskos/fix-shallow-rendering-function-refs",
    "merge pull request #5417 from zpao/ol-reversed",
    "merge pull request #5445 from yangshun/controlled-components-in-tutorial",
    "merge pull request #5496 from zpao/reactdomserverfollowup",
    "merge pull request #5493 from spicyj/gh-4589",
    "merge pull request #5489 from hejld/master",
    "merge pull request #5381 from kevinrobinson/react-dom-server-package",
    "merge pull request #5481 from hejld/master",
    "merge pull request #5456 from hugo-agbonon/fix-classname-manipulation-doc",
    "merge pull request #5368 from spicyj/adler32",
    "merge pull request #5390 from chicoxyzzy/arrayof-objectof-tests",
    "merge pull request #5406 from acdlite/better-error-message-for-setstate-in-constructor",
    "merge pull request #5458 from chicoxyzzy/update_deps",
    "merge pull request #5444 from zpao/tutorial-ids-for-data",
    "merge pull request #2774 from jimfb/webcomponents",
    "merge pull request #5387 from mattijskneppers/master",
    "merge pull request #5412 from yangshun/document-next-context",
    "merge pull request #5431 from zpao/license-in-packages",
    "merge pull request #5442 from nickclaw/patch-1",
    "merge pull request #5416 from bbrooks/undo-optimistic-update-on-error",
    "merge pull request #5403 from yuyokk/patch-1",
    "merge pull request #5433 from spicyj/unmount-children-order",
    "merge pull request #5434 from spicyj/two-reconcile",
    "merge pull request #5430 from jimfb/changelog-broken-links",
    "merge pull request #5424 from stowball/animation-docs-whitespace",
    "merge pull request #5405 from yangshun/inconsistent-error-messages",
    "merge pull request #5287 from benhalpern/patch-1",
    "merge pull request #5391 from zjjw/transition_timeouts",
    "merge pull request #5231 from davidkpiano/patch-1",
    "merge pull request #5396 from zpao/packagejsons",
    "merge pull request #5352 from chicoxyzzy/eslint-upgrade",
    "merge pull request #5394 from spicyj/tu-shallow-ref",
    "merge pull request #5353 from chicoxyzzy/patch-1",
    "merge pull request #5385 from marocchino/update-korean",
    "merge pull request #5205 from spicyj/cotree-num",
    "merge pull request #5372 from csbok/patch-1",
    "merge pull request #5361 from ali/warn-on-missing-event-handlers",
    "merge pull request #5376 from spicyj/gh-4993",
    "merge pull request #4993 from jsdf/shallow-render-lifecycle",
    "merge pull request #5356 from rpominov/patch-1",
    "merge pull request #5358 from conorhastings/invariant-testutils-simulate-shallow-render",
    "merge pull request #5370 from zpao/babel6docs",
    "merge pull request #5350 from ludovicofischer/master",
    "merge pull request #5023 from spicyj/jsc-perf",
    "merge pull request #5344 from chicoxyzzy/update-rcc",
    "merge pull request #5348 from hzoo/patch-2",
    "merge pull request #5331 from tbroadley/typescript-test-windows",
    "merge pull request #5341 from zpao/domprop-integrity",
    "merge pull request #5093 from jimfb/avoid-children-to-string-coercion",
    "merge pull request #5366 from zpao/react-dom-peer-dep",
    "merge pull request #5367 from spicyj/haste-manifest",
    "merge pull request #5293 from chicoxyzzy/update-deps",
    "merge pull request #5339 from jimfb/contributing-first-bug",
    "merge pull request #5235 from wincent/update-blog-syntax",
    "merge pull request #5300 from zpao/lint-eqeqeq",
    "merge pull request #5049 from xelad1/patch-1",
    "merge pull request #5320 from drdelambre/overwrite_props",
    "merge pull request #5321 from cpojer/update-tests",
    "merge pull request #5334 from facebook/revert-5320-overwrite_props",
    "merge pull request #5328 from zpao/non-native-event-name-dispatch",
    "merge pull request #5327 from zpao/definepropgetter",
    "merge pull request #5317 from nickbalestra/patch-1",
    "merge pull request #5326 from tbroadley/grunt-lint-windows",
    "merge pull request #5316 from third9/master",
    "merge pull request #5309 from spicyj/bench",
    "merge pull request #5304 from evanvosberg/master",
    "merge pull request #5291 from spicyj/afu-cycle",
    "merge pull request #5237 from spicyj/gh-5125",
    "merge pull request #5209 from antoaravinth/5189",
    "merge pull request #5297 from quadrupleslap/master",
    "merge pull request #5289 from jonathanp/patch-1",
    "merge pull request #5089 from thomasp9/patch-1",
    "merge pull request #5266 from spicyj/lt-fix-2",
    "merge pull request #5252 from zpao/eslintlock",
    "merge pull request #5286 from translucens/add_reactdom_js",
    "merge pull request #5274 from spartasixzero/master",
    "merge pull request #5268 from dnshi/update-readme",
    "merge pull request #5263 from spicyj/npmreactreadme",
    "merge pull request #5253 from spicyj/dt-lazy",
    "merge pull request #5261 from spicyj/dom-null-undef",
    "merge pull request #5250 from conorhastings/track-default-property",
    "merge pull request #5236 from spicyj/eslint-17",
    "merge pull request #5233 from yiminghe/fix-typo",
    "merge pull request #5230 from kohashi/patch-1",
    "merge pull request #5154 from cmatheson/master",
    "merge pull request #5217 from zpao/rm-react-codemod",
    "merge pull request #4051 from jquense/ie-noisy-input-event",
    "merge pull request #5192 from spicyj/ev-ind",
    "merge pull request #5214 from benigeri/patch-1",
    "merge pull request #5211 from vjeux/reactiflux",
    "merge pull request #5199 from jimfb/number-found",
    "merge pull request #5203 from wanderwang/docs-cn",
    "merge pull request #5187 from tomduncalf/support_invalid_event-issue_5152",
    "merge pull request #5185 from yungsters/invariant",
    "merge pull request #5213 from spicyj/gh-5187-f",
    "merge pull request #5195 from trickford/patch-1",
    "merge pull request #5198 from spicyj/gh-5071a",
    "merge pull request #5184 from zpao/fix-style-issues",
    "merge pull request #5178 from jimfb/multiple-authors",
    "merge pull request #5176 from jimfb/tweak-props-change-wording",
    "merge pull request #5193 from conorhastings/enqueue-callback-error",
    "merge pull request #5048 from antoaravinth/pr-5013",
    "merge pull request #5175 from spicyj/text-no-frag",
    "merge pull request #4988 from spicyj/fdn",
    "merge pull request #5174 from zpao/dom-attributes-track",
    "merge pull request #5164 from zpao/fix-csstransitiongroup-proptype",
    "merge pull request #5140 from pluma/patch-1",
    "merge pull request #5166 from spicyj/gh-5157",
    "merge pull request #5165 from spicyj/cache-lenient",
    "merge pull request #5160 from spicyj/gh-5151",
    "merge pull request #5157 from spicyj/createevent",
    "merge pull request #5147 from zpao/update-release-task",
    "merge pull request #5137 from vipulnsward/2576-add-comparison-tests",
    "merge pull request #5146 from spicyj/ce-scripts",
    "merge pull request #5150 from jimfb/node-v4-readme",
    "merge pull request #5156 from spicyj/bp-codemods",
    "merge pull request #5142 from maxprafferty/add-selection-and-composition-events-on-reference-page",
    "merge pull request #5124 from bhamodi/master",
    "merge pull request #5144 from zpao/grunt-gulp-windows",
    "merge pull request #5130 from matiassingers/jasmine-spy-call-args-consistency",
    "merge pull request #5141 from pluma/patch-2",
    "merge pull request #5123 from vipulnsward/fix-html-jsx-page",
    "merge pull request #5129 from matiassingers/jasmine-spy-calls-length-consistency",
    "merge pull request #5120 from abloomston/patch-1",
    "merge pull request #5126 from bhamodi/white-space",
    "merge pull request #5116 from jimfb/download-page-links",
    "merge pull request #5014 from spicyj/native-parents",
    "merge pull request #5111 from spicyj/vdn-current",
    "merge pull request #5113 from spicyj/document-context",
    "merge pull request #5101 from bcbcb/patch-1",
    "merge pull request #5109 from josh-a-e/undefined_this_on_controlled_components",
    "merge pull request #5105 from jimfb/changelog-0.14",
    "merge pull request #4981 from iamchenxin/zh_docs",
    "merge pull request #5085 from spicyj/cdp",
    "merge pull request #5083 from spicyj/warn-min",
    "merge pull request #5100 from spicyj/ssr-dupe",
    "merge pull request #5081 from spicyj/svg-tu",
    "merge pull request #5102 from tracyjordan/master",
    "merge pull request #5107 from mbrookes/patch-1",
    "merge pull request #5084 from spicyj/rearrange-utils",
    "merge pull request #5096 from songawee/docs_babel_fix",
    "merge pull request #5063 from facebook/revert-5062-revert-4959-no-shams",
    "merge pull request #5075 from spicyj/docs-downloads",
    "merge pull request #5032 from jimfb/remove-react-link",
    "merge pull request #5066 from camsong/patch-2",
    "merge pull request #5078 from nickpresta/master",
    "merge pull request #5057 from camsong/patch-1",
    "merge pull request #4983 from spicyj/id-swap",
    "merge pull request #4918 from glenjamin/shallow-getinstance",
    "merge pull request #4947 from fabiomcosta/server_render_index",
    "merge pull request #4779 from mnordick/master",
    "merge pull request #5073 from mfunkie/patch-2",
    "merge pull request #5072 from spicyj/14blog",
    "bump version in master for 0.15 development",
    "merge pull request #4785 from zpao/0.14-authors",
    "merge pull request #4943 from bspaulding/throw-stateless-ref",
    "merge pull request #5062 from facebook/revert-4959-no-shams",
    "merge pull request #4959 from dgreensp/no-shams",
    "merge pull request #5065 from spicyj/docs-pkgs",
    "merge pull request #5055 from jimfb/reactdom-render",
    "merge pull request #5045 from coderk/master",
    "merge pull request #5041 from spicyj/val-key-err",
    "merge pull request #5056 from jimfb/reactdom-in-src",
    "merge pull request #5019 from jimfb/renderer-blog-post",
    "merge pull request #5038 from chicoxyzzy/docs-notation-fixes",
    "merge pull request #5034 from zpao/fbjs-0.3",
    "merge pull request #5026 from chicoxyzzy/clarify-events-doc",
    "merge pull request #5021 from sebmarkbage/prototypetag",
    "merge pull request #5016 from spicyj/tu-stateless",
    "merge pull request #5001 from claudiopro/master",
    "merge pull request #5029 from jabbrass/patch-1",
    "merge pull request #5025 from chicoxyzzy/fix-event-methods-notation",
    "merge pull request #4964 from jimfb/stateless-functions-and-render-docs",
    "merge pull request #5020 from sebmarkbage/fixjestcli",
    "merge pull request #5008 from james4388/patch-3",
    "merge pull request #5017 from spicyj/gh-5005",
    "merge pull request #5018 from spicyj/ev-l-bool",
    "merge pull request #4980 from edvinerikson/add-window-document-note",
    "merge pull request #4736 from yhagio/patch-1",
    "merge pull request #5003 from spicyj/gh-4996",
    "merge pull request #4985 from mbrookes/patch-1",
    "merge pull request #5002 from spicyj/check-no-warn-jest",
    "merge pull request #4995 from gregrperkins/master",
    "merge pull request #4901 from zpao/npm-react-dom-dist",
    "merge pull request #4953 from zpao/test-utils-scry",
    "merge pull request #4987 from spicyj/perf",
    "merge pull request #4893 from jw-00000/patch-1",
    "merge pull request #4846 from zpao/docs-use-babel",
    "merge pull request #4978 from zpao/tutorial-server",
    "merge pull request #4976 from spicyj/gh-4870",
    "merge pull request #4977 from spicyj/gh-4870",
    "merge pull request #4975 from spicyj/gh-3285",
    "merge pull request #4973 from zpao/lint-again",
    "merge pull request #4942 from darobin/rdfa-attributes",
    "merge pull request #4965 from iamchenxin/translate",
    "merge pull request #4967 from zhangjg/zhangjg-br",
    "merge pull request #4966 from zpao/examples-rm-server-rendering",
    "merge pull request #4914 from zpao/0.14-examples",
    "merge pull request #4853 from zpao/jsfiddle-babel",
    "merge pull request #4961 from iamchenxin/en_docs",
    "merge pull request #4956 from reggi/patch-1",
    "merge pull request #4658 from zpao/iojs",
    "merge pull request #4960 from iamchenxin/translate",
    "merge pull request #4951 from spicyj/gh-4840",
    "merge pull request #4944 from zpao/rm-event-path",
    "merge pull request #4683 from jaehunro/master",
    "merge pull request #4935 from saifelse/fix-firefox-dom-sel",
    "merge pull request #3069 from wickynilliams/patch-1",
    "merge pull request #4945 from spicyj/nocatch-sim",
    "merge pull request #4946 from spicyj/nan",
    "merge pull request #4916 from spicyj/hwc",
    "merge pull request #4931 from bspaulding/safe-taint-docs",
    "merge pull request #4903 from spicyj/event-unmounted",
    "merge pull request #4921 from benjaffe/master",
    "merge pull request #4904 from spicyj/npm-2",
    "merge pull request #4891 from igncp/documentation-fix",
    "merge pull request #4899 from iamchenxin/master",
    "merge pull request #4874 from brigand/patch-6",
    "merge pull request #4887 from spicyj/form-proptypes-dev",
    "merge pull request #4884 from moretti/patch-1",
    "merge pull request #4858 from zpao/eslint-1.4",
    "merge pull request #4829 from zpao/docs-jekyll-feed",
    "merge pull request #4869 from arush/patch-1",
    "merge pull request #4859 from zpao/stateless-arrow-functions",
    "merge pull request #4868 from ansavvides/docs-readability",
    "merge pull request #4866 from andrewsokolov/bug/--no-explicit-require-didnt-works",
    "merge pull request #4855 from iamchenxin/master",
    "merge pull request #4845 from steveluscher/community-roundup-27-relay-edition",
    "merge pull request #4833 from youngminz/master",
    "merge pull request #4861 from zpao/symbol-test-node4",
    "merge pull request #4802 from 8398a7/patch-1",
    "merge pull request #4797 from spicyj/rc14blog",
    "merge pull request #4832 from sebmarkbage/xssfix",
    "merge pull request #4747 from spicyj/gh-1939",
    "merge pull request #4825 from spicyj/gh-2770",
    "merge pull request #4827 from spicyj/occured",
    "merge pull request #4823 from spicyj/gh-4776",
    "merge pull request #4821 from spicyj/dom-dist",
    "merge pull request #4824 from facebook/prefill-stack-overflow-tag",
    "merge pull request #4719 from djrodgerspryor/fix_css_transition_group_child_props",
    "merge pull request #4724 from ansavvides/test-util-readability",
    "merge pull request #4818 from gdi2290/patch-1",
    "merge pull request #4796 from spicyj/lazy-node",
    "merge pull request #4793 from edvinerikson/document-svg-attributes",
    "merge pull request #4814 from zpao/build-react-dom-browser-2",
    "merge pull request #4787 from simek/patch-5",
    "merge pull request #4798 from zpao/pull-out-version",
    "merge pull request #4786 from jontewks/master",
    "merge pull request #4767 from spicyj/com",
    "merge pull request #4788 from jontewks/html-attribute-docs",
    "merge pull request #4663 from spicyj/isreactclass",
    "merge pull request #2065 from crm416/container-warnings",
    "merge pull request #3942 from spicyj/el-plain-obj",
    "merge pull request #4773 from spicyj/new-dt-blog",
    "merge pull request #4781 from jontewks/master",
    "merge pull request #4780 from matchu/patch-1",
    "merge pull request #4759 from spicyj/devprod",
    "merge pull request #4763 from spicyj/pre-commit",
    "merge pull request #4746 from zpao/use-fbjs-lint",
    "merge pull request #4702 from spicyj/react-mod-depr",
    "merge pull request #4764 from spicyj/pre-commit",
    "merge pull request #4762 from spicyj/ts",
    "merge pull request #4750 from zpao/fbjs-0.2",
    "merge pull request #4755 from michelletodd/react-warnings-0.14",
    "merge pull request #4731 from spicyj/map-one-pass",
    "merge pull request #4735 from spicyj/shallow-error",
    "merge pull request #4739 from henrik/patch-1",
    "merge pull request #4744 from spicyj/gh-4635-f",
    "merge pull request #4737 from oliviertassinari/patch-1",
    "merge pull request #4727 from spicyj/gh-4233",
    "merge pull request #4635 from edvinerikson/event-pooling-warning",
    "merge pull request #4734 from zpao/reverse-logic",
    "merge pull request #4720 from spicyj/destructor",
    "merge pull request #4482 from niole/issue4168",
    "merge pull request #4732 from spicyj/eslint-undef",
    "merge pull request #4701 from spicyj/gh-4525",
    "merge pull request #4703 from spicyj/rarr",
    "merge pull request #4682 from lyip1992/patch-2",
    "merge pull request #4700 from spicyj/frag-array",
    "merge pull request #4684 from lyip1992/patch-3",
    "merge pull request #4687 from lyip1992/patch-6",
    "merge pull request #4686 from lyip1992/patch-5",
    "merge pull request #4688 from lyip1992/patch-7",
    "merge pull request #4685 from lyip1992/patch-4",
    "merge pull request #4678 from ning-github/patch-1",
    "merge pull request #4679 from ning-github/patch-2",
    "merge pull request #2081 from rexxars/search-input-attributes",
    "merge pull request #4540 from scottburch/ie8-fix",
    "merge pull request #4654 from zpao/checkversionsoninstall",
    "merge pull request #4546 from rgbkrk/patch-1",
    "merge pull request #4666 from spicyj/prod",
    "merge pull request #4561 from djrodgerspryor/css_transition_group_robust_cleanup",
    "merge pull request #4665 from spicyj/gh-2407",
    "merge pull request #4664 from spicyj/ref-docs",
    "merge pull request #4660 from tylerbrock/patch-2",
    "merge pull request #4567 from koba04/fix-set-boolean-properties",
    "merge pull request #4657 from zpao/abcorderevents",
    "merge pull request #4656 from spicyj/jest-fast",
    "merge pull request #4655 from levibuzolic/patch-1",
    "merge pull request #4089 from sebmarkbage/killowner",
    "merge pull request #4611 from spicyj/create-element",
    "merge pull request #4451 from dmatteo/testutils.simulate-docs",
    "merge pull request #4652 from spicyj/no-isre",
    "merge pull request #4634 from edvinerikson/event-pooling",
    "merge pull request #4481 from dmatteo/simulate.change-tests",
    "merge pull request #4641 from mik01aj/master",
    "merge pull request #4631 from simek/tiny-code-tweak-reactmultichild",
    "merge pull request #4632 from simek/react-codemod-lint-fix",
    "merge pull request #4627 from tako-black/translate_top-level-api_to_japanese",
    "merge pull request #4607 from hekar/add/html-table-summary-attr",
    "merge pull request #4622 from jorrit/instanceofreporttype",
    "merge pull request #4643 from yasaricli/master",
    "merge pull request #4624 from torwori/null-check-fix",
    "merge pull request #4623 from tako-black/translate_introduction_to_japanese",
    "merge pull request #4610 from lili21/fix-component-api-doc",
    "merge pull request #4619 from jaredly/beta-2",
    "merge pull request #4613 from tako-black/translate_advanced-performance_to_japanese",
    "merge pull request #4626 from yoshuki/fix-markdown-conversion",
    "merge pull request #4609 from spicyj/warn-r2",
    "merge pull request #3332 from spicyj/warn-r2",
    "merge pull request #4477 from mridgway/autobind-opt-out",
    "merge pull request #4470 from jimfb/ref-error-means-multiple-react",
    "merge pull request #4344 from jimfb/update-children-because-context",
    "merge pull request #4182 from sebmarkbage/fixguards",
    "merge pull request #4602 from tako-black/update_tutorial_ja-jp",
    "merge pull request #3650 from spicyj/toarray",
    "merge pull request #4598 from zpao/eslint-1.1",
    "merge pull request #4587 from spicyj/stateless-fn",
    "merge pull request #4596 from jaredly/add-source-self",
    "merge pull request #4597 from spicyj/coco",
    "merge pull request #4584 from jessebeach/jessebeach-reactcomponentexpect-silent-fail",
    "merge pull request #4588 from sebmarkbage/ownersforcontext",
    "merge pull request #4581 from youmoo/patch-1",
    "merge pull request #4585 from spicyj/disable-path",
    "merge pull request #4554 from chernysh/chernysh-added-docs-img-events",
    "merge pull request #4580 from spicyj/gh-4578",
    "merge pull request #4579 from sebmarkbage/ownersforcontext",
    "merge pull request #4569 from sebmarkbage/ownersforcontext",
    "merge pull request #4577 from marjan-georgiev/add-stopopacity-to-unitless-props",
    "merge pull request #4559 from salier/ie-selection",
    "merge pull request #4565 from koba04/remove-fasttest",
    "merge pull request #4552 from psibi/patch-1",
    "merge pull request #4473 from facebook/devtools-blog-post",
    "merge pull request #4545 from salzhrani/patch-2",
    "merge pull request #4539 from zpao/fix-encrypted-media-event",
    "merge pull request #4381 from mikrofusion/clarify-main-ideas",
    "merge pull request #4541 from marocchino/update-korean",
    "merge pull request #4528 from cpojer/codemod-updates",
    "merge pull request #4010 from zpao/really-deprecate-react-tools",
    "merge pull request #4513 from jimfb/fix-global-events",
    "merge pull request #4512 from zpao/codeofconduct",
    "merge pull request #4501 from zpao/build-more-addons",
    "merge pull request #4493 from dmatteo/scryrendereddomcomponents.bug",
    "merge pull request #4537 from afhole/patch-1",
    "merge pull request #3761 from alexpien/customclassesforreactcsstransitiongroup",
    "merge pull request #4370 from blainekasten/video-events",
    "merge pull request #3742 from mminer/order-css-vendor-prefixes",
    "merge pull request #2664 from jasonwebster/patch-1",
    "merge pull request #4506 from tako-black/translate_perf_to_japanese",
    "merge pull request #4503 from jimfb/remove-npm-run-jest",
    "merge pull request #4495 from tako-black/translate_pure-render-mixin_to_japanese",
    "merge pull request #4469 from kevintcoughlin/kevintcoughlin/#4265",
    "merge pull request #4422 from jimfb/reconciler-cleanup",
    "merge pull request #4499 from zpao/update-fbjs",
    "merge pull request #4486 from yangmillstheory/docfix",
    "merge pull request #4483 from marocchino/update-korean",
    "merge pull request #4478 from tako-black/translate_update_to_japanese",
    "merge pull request #4367 from simek/traverse-children-cleanup",
    "merge pull request #4386 from ansavvides/4369-walkthrough-clarification",
    "merge pull request #4167 from zpao/vendor2fbjs",
    "merge pull request #4395 from wibud/v0.0.1",
    "merge pull request #4474 from zpao/ts14",
    "merge pull request #4453 from spicyj/react-dom",
    "merge pull request #4466 from jimfb/path-events-in-detached-nodes",
    "merge pull request #4472 from tako-black/translate_create-fragment_to_japanese",
    "merge pull request #4471 from yeti-or/yeti-or.fix-docs",
    "merge pull request #4456 from zpao/babel58",
    "merge pull request #4460 from tako-black/enclose_variables_in_back_quote",
    "merge pull request #4459 from tako-black/translate_clone-with-props_to_japanese",
    "merge pull request #4455 from marocchino/update-korean",
    "merge pull request #4449 from zpao/lock-babel",
    "merge pull request #4447 from spicyj/tag-end",
    "merge pull request #4404 from jbonta/component_api_docs",
    "merge pull request #4443 from tako-black/translate_test-utils_to_japanese",
    "merge pull request #4444 from tako-black/add_period",
    "merge pull request #4400 from jimfb/adler32",
    "merge pull request #4427 from spicyj/gh-1232",
    "merge pull request #4092 from mking/remove-react-source-gem",
    "merge pull request #4435 from rtfeldman/fix-error-message",
    "merge pull request #4432 from spicyj/eslint-upg",
    "merge pull request #4387 from spicyj/aep",
    "merge pull request #4419 from simek/invert-if-else-with-negation",
    "merge pull request #4408 from jimfb/remove-children-map",
    "merge pull request #4414 from zpao/lint-src-test",
    "merge pull request #4412 from hawsome/patch-2",
    "merge pull request #4379 from eriklharper/patch-1",
    "merge pull request #4413 from zpao/more-default-value-docs-chagnes",
    "merge pull request #4306 from brigand/patch-5",
    "merge pull request #4407 from simek/patch-4",
    "merge pull request #4382 from tako-black/enclose_a_name_of_library_in_back_quote",
    "merge pull request #4409 from tako-black/translate_class-name-manipulation_to_japanese",
    "merge pull request #3186 from benekastah/patch-1",
    "merge pull request #4393 from zpao/rm-browser-tests",
    "merge pull request #4383 from tako-black/translate_form-input-binding-sugar_to_japanese",
    "merge pull request #4384 from zpao/jest-on-travis-again",
    "merge pull request #4377 from sugarshin/typo_docs",
    "merge pull request #4237 from jas14/issue-4226",
    "merge pull request #4371 from tako-black/translate_animation_to_japanese",
    "merge pull request #4291 from rwoodnz/patch-2",
    "merge pull request #4144 from lukehorvat/docs/iife-jsx",
    "merge pull request #4357 from yangmillstheory/docfix",
    "merge pull request #4355 from makky3939/use_html5_meta_charset_tag",
    "merge pull request #4363 from tako-black/change_css_to_uppercase",
    "merge pull request #4362 from makky3939/translate_04_self_closing_tag",
    "merge pull request #4358 from makky3939/remove_controll_character_from_jp_docs",
    "merge pull request #4349 from makky3939/remove_type_attribute_in_script_tag",
    "merge pull request #4351 from tako-black/translate_addons_to_japanese",
    "merge pull request #4348 from himkt/master",
    "merge pull request #4356 from makky3939/fix_03-interactivity-and-dynamic-uis_ja-jp_md",
    "merge pull request #4346 from makky3939/fix_typo_09-tooling-integration_ja-jp_md",
    "merge pull request #4342 from laiso/unexpected_character",
    "merge pull request #4324 from drd/improve-warning-in-react-mount",
    "merge pull request #4336 from zpao/id-not-id",
    "merge pull request #4338 from dcousens/patch-1",
    "merge pull request #4337 from tako-black/translate_tooling-integration_to_japanese",
    "merge pull request #4334 from tako-black/add_meta_tag_in_the_header_of_html",
    "merge pull request #4330 from zpao/eslint-jest",
    "merge pull request #4332 from bgw/eslint-tests-use-jest",
    "merge pull request #4329 from zpao/fix-jest",
    "merge pull request #4327 from jimfb/markup-unit-test",
    "merge pull request #4325 from jimfb/self-closing-checksum",
    "merge pull request #4311 from jimfb/fix-input-events",
    "merge pull request #4320 from tako-black/translate_more-about-refs_to_japanese",
    "merge pull request #4317 from koba04/add-deprecation-warning-for-clonewithprops",
    "merge pull request #4319 from tako-black/enclose_a_name_of_function_in_back_quote",
    "merge pull request #4318 from jlongster/master",
    "merge pull request #4309 from mmoss/addons-warning-fix",
    "merge pull request #4314 from devonharvey/patch-1",
    "merge pull request #4312 from tako-black/translate_working-with-the-browser_to_japanese",
    "merge pull request #4310 from tako-black/enclose_a_value_of_variable_in_back_quote",
    "merge pull request #4290 from rwoodnz/patch-1",
    "merge pull request #4284 from simek/patch-3",
    "merge pull request #4289 from joshuago/patch-1",
    "merge pull request #4283 from yeti-or/patch-1",
    "merge pull request #4287 from simek/semicolon-cleanup",
    "merge pull request #4300 from tako-black/translate_forms_to_japanese",
    "merge pull request #4209 from aruberto/iterable_node_proptype",
    "merge pull request #4292 from dariocravero/patch-1",
    "merge pull request #4299 from tako-black/enclose_a_value_in_back_quote",
    "merge pull request #4278 from koba04/fix-addons-update-package",
    "merge pull request #4276 from tako-black/translate_transferring-props_to_japanese",
    "merge pull request #3798 from levibuzolic/attribute-inputmode",
    "bump version to beta1",
    "merge pull request #4273 from spicyj/addons",
    "merge commit 'pr/4185'",
    "merge pull request #4184 from zpao/move-from-addons",
    "merge pull request #4270 from kamronbatman/patch-1",
    "merge pull request #4221 from jimfb/ryans-context-bug",
    "merge pull request #4150 from jimfb/event-path",
    "merge pull request #4231 from darkscorpion/clickcounter",
    "merge pull request #4238 from bhamodi/bhamodi/update-dependency-notation",
    "merge pull request #4262 from coryhouse/patch-1",
    "merge pull request #4259 from janraasch/patch-1",
    "merge pull request #4268 from jimfb/remove-setprops",
    "merge pull request #4266 from tako-black/translate_reusable-components_to_japanese",
    "merge pull request #4162 from sebmarkbage/updator",
    "merge pull request #4258 from mjomble/patch-1",
    "merge pull request #4252 from bhamodi/patch-2",
    "merge pull request #4223 from spicyj/check-no-warn",
    "merge pull request #4249 from tako-black/translate_multiple-components_to_japanese",
    "merge pull request #4229 from tako-black/translate_jsx-spread_to_japanese",
    "merge pull request #4242 from tako-black/translate_interactivity-and-dynamic-uis_to_japanese",
    "merge pull request #4240 from tako-black/translate_jsx-gotchas_to_japanese",
    "merge pull request #4239 from tako-black/change_word_to_uppercase",
    "merge pull request #4232 from marocchino/update-docs",
    "merge pull request #4204 from dpercy/patch-1",
    "merge pull request #4222 from tako-black/translate_jsx-in-depth_to_japanese",
    "merge pull request #4217 from brigand/patch-5",
    "merge pull request #4215 from spicyj/prod-props",
    "merge pull request #4200 from spicyj/ten-thousand",
    "merge pull request #4208 from battaile/master",
    "merge pull request #4206 from yiminghe/fix_change_type",
    "merge pull request #4202 from tako-black/translate_displaying-data_to_japanese",
    "merge pull request #4139 from spicyj/dom-refs",
    "merge pull request #4084 from spicyj/carc",
    "merge pull request #4207 from yangshun/patch-1",
    "merge pull request #4188 from jisaacks/master",
    "merge pull request #4196 from oluckyman/componentdidunmount-warning",
    "merge pull request #4190 from dantman/fix-%s-module",
    "merge pull request #4164 from spicyj/jest-wc",
    "merge pull request #4172 from jimfb/freeze-props",
    "merge pull request #4170 from johanneslumpe/patch-1",
    "merge pull request #4171 from sebmarkbage/simplifylifecycle",
    "merge pull request #4156 from tako-black/fix_link",
    "merge pull request #4154 from spicyj/gh-3478",
    "merge pull request #4158 from zpao/mv-packages",
    "merge pull request #2981 from hzoo/jsdoc-fixes",
    "merge pull request #4157 from zpao/svg-image",
    "merge pull request #4140 from zpao/mv-errorutils",
    "merge pull request #4100 from zpao/deprecate-react-calls",
    "merge pull request #4151 from spicyj/fairti",
    "merge pull request #4152 from spicyj/rce",
    "merge pull request #4142 from zpao/lint-changed",
    "merge pull request #4121 from cristovaov/tutorial-doc/script-src",
    "merge pull request #4145 from rreverser/patch-1",
    "merge pull request #4105 from sebmarkbage/moveismounted",
    "merge pull request #4137 from spicyj/setpropsinternal",
    "merge pull request #4115 from spicyj/dom-hash",
    "merge pull request #4103 from marocchino/ko-update",
    "merge pull request #4097 from zpao/react-dom-package",
    "merge pull request #4132 from tako-black/translate_why-react_to_japanese",
    "merge pull request #4128 from prathamesh-sonpatki/more-typos",
    "merge pull request #4123 from carterchung/patch-1",
    "merge pull request #4119 from iamdustan/patch-1",
    "merge pull request #4114 from spicyj/void-warn",
    "merge pull request #4112 from kevhuang/doc/readme-grammar",
    "merge pull request #4091 from sebmarkbage/updatequeuewarning",
    "merge pull request #4095 from zpao/update-jest",
    "merge pull request #4102 from tomarak/patch-1",
    "merge pull request #4098 from spicyj/grunt",
    "merge pull request #4074 from jimfb/docs-context-parameter-confusing",
    "merge pull request #4090 from sebmarkbage/fixdomcomponentest",
    "merge pull request #4088 from zpao/fix-class-test",
    "merge pull request #4077 from neojski/svg-namespace",
    "merge pull request #4058 from yiminghe/classname_contains",
    "merge pull request #4071 from spicyj/warn-dom-props",
    "merge pull request #3752 from jhicken/custom-element-support",
    "merge pull request #4086 from spicyj/ta",
    "merge pull request #4070 from tako-black/fix_md_file",
    "merge pull request #4003 from ansavvides/on-change-vs-on-input",
    "merge pull request #4063 from zpao/fix-ja-docs",
    "merge pull request #4046 from basarat/patch-2",
    "merge pull request #4060 from cody/addons",
    "merge pull request #4045 from davemeetsworld/add-warning-for-mispelling-of-componentwillreceiveprops",
    "merge pull request #3884 from glenjamin/patch-3",
    "merge pull request #4059 from jquense/patch-3",
    "merge pull request #4040 from pipeep/eslint-updates",
    "merge pull request #4054 from jquense/patch-2",
    "merge pull request #3984 from neojski/uppercase-node-name",
    "merge pull request #4043 from spicyj/80",
    "merge pull request #4042 from spicyj/warn-dom-props",
    "merge pull request #4035 from spicyj/dc-os",
    "merge pull request #4037 from spicyj/ref-trans",
    "merge pull request #4034 from pipeep/eslint-rules-as-a-plugin",
    "merge pull request #4033 from spicyj/dc-events",
    "merge pull request #4029 from pipeep/warning-invariant-rules-take-two",
    "merge pull request #4030 from spicyj/dc-button",
    "merge pull request #4032 from pipeep/babel-eslint-no-unused-vars",
    "merge pull request #3940 from troutowicz/context_processing",
    "merge pull request #3913 from edvinerikson/edvinerikson/better-warning-message",
    "merge pull request #4027 from spicyj/dc-textarea",
    "merge pull request #4028 from spicyj/npm-run-lint",
    "merge pull request #3941 from troutowicz/testing_type",
    "merge pull request #4022 from zpao/fix-undefined-location",
    "merge pull request #4011 from spicyj/cfpc",
    "merge pull request #4007 from pipeep/eslint-plugin-react",
    "merge pull request #3416 from koba04/remove-jshint",
    "merge pull request #4021 from pipeep/warning-invariant-rules",
    "merge pull request #3067 from jimfb/arbitrary-attributes-for-dash-elements",
    "merge pull request #3998 from pipeep/comma-dangle",
    "merge pull request #4009 from jimfb/kill-.type",
    "merge pull request #3930 from wildhoney/add-is-attribute",
    "merge pull request #4006 from cody/console",
    "merge pull request #3976 from spicyj/no-wrapper",
    "merge pull request #3999 from jimfb/more-context-cleanup",
    "merge pull request #3988 from jrobison153/troubleshooting_docs",
    "merge pull request #3985 from pipeep/eslint-tests",
    "merge pull request #3992 from thorn0/patch-1",
    "merge pull request #3977 from spicyj/jest-lines",
    "merge pull request #3993 from arianf/doctype",
    "merge pull request #3980 from cody/http",
    "merge pull request #3997 from donabrams/patch-1",
    "merge pull request #3967 from jamischarles/master",
    "merge pull request #3975 from marocchino/update-korean",
    "merge pull request #3970 from jimfb/remove-_context",
    "merge pull request #3969 from spicyj/pt",
    "merge pull request #3950 from cody/capture",
    "merge pull request #3966 from spicyj/no-worker-test",
    "merge pull request #3923 from jimfb/fix-grunt-test-debug",
    "merge pull request #3963 from alansouzati/react_prop_array_validation",
    "merge pull request #3938 from vjeux/blog_rn_release_process",
    "merge pull request #3934 from spicyj/gh-3921",
    "merge pull request #3935 from julen/docs/transition-group",
    "merge pull request #3931 from marocchino/update-korean",
    "merge pull request #3788 from zpao/better-invariantwarning-replacement",
    "merge pull request #3909 from spicyj/tir-redirect",
    "merge pull request #3803 from zpao/docs-fancy-authors",
    "merge pull request #3912 from laskos/shallow-context-pass",
    "merge pull request #3917 from spicyj/option-context",
    "merge pull request #3910 from spicyj/gh-3904",
    "merge pull request #3896 from zpao/babel-ignore-web-components",
    "merge pull request #3908 from spicyj/lint",
    "merge pull request #3905 from troeggla/replace-getdomnode",
    "merge pull request #3883 from spicyj/revert-nested",
    "merge pull request #3894 from bhamodi/patch-2",
    "merge pull request #3892 from spicyj/docs-wwb",
    "merge pull request #3737 from morhaus/nested-proptypes-warnings",
    "merge pull request #3888 from marocchino/korean-update",
    "merge pull request #3889 from garethnic/workbrowser",
    "merge pull request #3874 from bhamodi/patch-1",
    "merge pull request #3746 from chrisgrovers/patch-1",
    "merge pull request #3881 from ef718/docs-grammar",
    "merge pull request #3866 from sebmarkbage/coreapi",
    "merge pull request #3882 from wali-s/get-html5-minlength-working",
    "merge pull request #3847 from bloodyowl/option-flatten-children",
    "merge pull request #3719 from spicyj/vdn2",
    "merge pull request #3651 from spicyj/tac-noi",
    "merge pull request #3872 from spicyj/nested-num",
    "merge pull request #3869 from zpao/jsx-cleanup",
    "merge pull request #3871 from spicyj/group",
    "merge pull request #3870 from spicyj/gh-3865",
    "merge pull request #3834 from chicoxyzzy/remove_jslint",
    "merge pull request #3857 from spicyj/dev-rckv",
    "merge pull request #3837 from davidneat/transition-group-appear-high-level-docs",
    "merge pull request #3852 from thewarpaint/patch-1",
    "merge pull request #3861 from spicyj/nested-v",
    "merge pull request #3856 from chaseadamsio/chaseadamsio-patch-1",
    "merge pull request #3864 from cvrebert/patch-1",
    "merge pull request #3841 from spicyj/yolo",
    "merge pull request #3835 from zpao/fix-keys-keys-keys-test",
    "merge pull request #3831 from madlittlemods/tab-size-unit-less",
    "merge pull request #3828 from chicoxyzzy/patch-1",
    "merge pull request #3830 from gberg1/patch-1",
    "merge pull request #3829 from murashki/reactmultichildtext-test.js-__html-typo",
    "merge pull request #3718 from framp/master",
    "merge pull request #3777 from zpao/deprecate-react-tools",
    "merge pull request #3815 from neojski/ismounted-should-return-boolean",
    "merge pull request #3813 from spicyj/babel",
    "merge pull request #3801 from spicyj/babel",
    "merge pull request #3778 from masterfung/docs-update",
    "merge pull request #3805 from hejld/master",
    "merge pull request #3797 from marocchino/update-korean",
    "merge pull request #3802 from spicyj/cleaner-depr",
    "merge pull request #3794 from jsfb/fix-thinking-in-react-blog-post",
    "merge pull request #3795 from spicyj/batch-unmount",
    "merge pull request #3786 from hurricanejames/master",
    "merge pull request #3785 from iamdustan/addons",
    "merge pull request #3781 from spicyj/elval",
    "merge pull request #3784 from ef718/docs-punctuation",
    "merge pull request #3779 from katzoo/dry-quadratic-example",
    "merge pull request #3722 from spicyj/travis-rel-grunt",
    "merge pull request #3767 from kubosho/patch-1",
    "merge pull request #3740 from jsfb/element-is-parent-of-render-result-test",
    "merge pull request #3757 from spicyj/es6",
    "merge pull request #3758 from spicyj/keys-keys-keys",
    "merge pull request #3749 from victorkoenders/master",
    "merge pull request #3747 from jayeszee/patch-1",
    "merge pull request #3739 from chenglou/style-mut-comments",
    "merge pull request #3734 from marocchino/update-korean",
    "merge pull request #2027 from chenglou/warn-style-mutation",
    "merge pull request #3727 from spicyj/dsih",
    "merge pull request #3429 from aodev/patch-1",
    "merge pull request #3665 from mridgway/replacehasownproperty",
    "merge pull request #3716 from graue/optional-shallow-render-context",
    "merge pull request #3691 from jonscottclark/patch-1",
    "merge pull request #3712 from zpao/changelog-jsxtransformer",
    "merge pull request #3640 from jsfb/render-subtree-pass-context",
    "merge pull request #3676 from zpao/rm-withcontext",
    "merge pull request #3706 from spicyj/no-raf",
    "merge pull request #3705 from zpao/doc/update-supported-attrs",
    "merge pull request #3723 from jsfb/fix-bad-homepage-link",
    "merge pull request #3693 from reedloden/swap-http-to-https",
    "merge pull request #3697 from basecode/improve-pooler-tests",
    "merge pull request #3703 from jimbobsquarepants/patch-1",
    "merge pull request #3694 from adamzap/fix-tutorial-line-highlighting",
    "merge pull request #3625 from dmin/patch-1",
    "merge pull request #3678 from marocchino/update-korean",
    "merge pull request #3684 from vjeux/react-native-0-4",
    "merge pull request #3675 from spicyj/gh-3655",
    "merge pull request #3485 from jnu/ie10-flex-unitless",
    "merge pull request #3673 from ultrafez/patch-1",
    "merge pull request #3668 from elquatro/master",
    "merge pull request #3663 from spicyj/san-md",
    "merge pull request #1366 from spicyj/enterleave-testutils",
    "merge pull request #3662 from zpao/update-uglify",
    "merge pull request #3658 from sbezludny/patch-1",
    "merge pull request #3646 from facebook/revert-3580-2402-warn-multiple-copies-of-react-on-same-page",
    "merge pull request #3642 from marocchino/ko-update",
    "merge pull request #3645 from facebook/revert-3644-patch-1",
    "merge pull request #3644 from gregorym/patch-1",
    "merge pull request #3639 from salier/select-event-plugin",
    "merge pull request #3641 from ljharb/patch-1",
    "merge pull request #3615 from jsfb/enable-new-context",
    "merge pull request #3638 from devicehubnet/master",
    "merge pull request #3635 from garethnic/reusecompdoc",
    "merge pull request #3636 from cody/jsx-target",
    "merge pull request #3580 from robertknight/2402-warn-multiple-copies-of-react-on-same-page",
    "merge pull request #3627 from spicyj/mut-warn-clone",
    "merge pull request #3584 from thornwinters/patch-1",
    "merge pull request #3628 from spicyj/do-not-bind",
    "merge pull request #3587 from spicyj/kill-plq",
    "merge pull request #3604 from charca/firefox-tests-fixes",
    "merge pull request #3618 from timebomb/master",
    "merge pull request #3622 from cpojer/copyright-headers",
    "merge pull request #2 from bhamodi/bhamodi-patch-1",
    "merge pull request #1 from bhamodi/2015-update",
    "merge pull request #3621 from bhamodi/master",
    "merge pull request #3595 from spicyj/select-ssr",
    "merge pull request #3589 from theseyi/master",
    "merge pull request #3588 from marocchino/ko-update",
    "merge pull request #3614 from kassens/set_style_null",
    "merge pull request #3590 from koba04/patch-1",
    "merge pull request #3612 from gaearon/patch-1",
    "merge pull request #3567 from chenglou/rm-getdomnode",
    "merge pull request #3576 from chenglou/last-getdomnode",
    "merge pull request #3572 from iamdoron/patch-1",
    "merge pull request #3574 from rogozhnikoff/patch-1",
    "merge pull request #3560 from mariodu/mariodu",
    "merge pull request #3555 from spicyj/native-overrides",
    "merge pull request #3564 from spicyj/travis",
    "merge pull request #2549 from ashtuchkin/fix-transitiongroup-multiremove",
    "merge pull request #3563 from quizlet/fix-addons-hasownproperty",
    "merge pull request #3562 from dalinaum/rename",
    "merge pull request #3556 from wali-s/patch-1",
    "merge pull request #3534 from tonyspiro/master",
    "merge pull request #3552 from james-dunn/fix-for-loops",
    "merge pull request #3519 from jonchester/patch-1",
    "merge pull request #3537 from marocchino/korean-update",
    "merge pull request #3549 from spicyj/trans-sync",
    "merge pull request #3445 from mihaip/master",
    "merge pull request #3540 from spicyj/auto-gh-pages",
    "merge pull request #3543 from spicyj/keep-docs-js-react",
    "merge pull request #3545 from vjeux/roundup_26",
    "merge pull request #3544 from prathamesh-sonpatki/fix-link-to-display-name",
    "merge pull request #3539 from russellpwirtz/patch-1",
    "merge pull request #3240 from reactkr/translate-ko-release",
    "merge pull request #3521 from grant/master",
    "merge pull request #3527 from mertkahyaoglu/master",
    "merge pull request #3529 from uzarubin/patch-1",
    "merge pull request #3525 from spicyj/home-3",
    "merge pull request #3520 from spicyj/validate-message",
    "merge pull request #3518 from alopatin/patch-1",
    "merge pull request #3516 from spicyj/valid-4",
    "merge pull request #3498 from ansavvides/patch-1",
    "merge pull request #3506 from cpojer/react-codemod",
    "merge pull request #3517 from spicyj/jest-config",
    "merge pull request #3515 from cpojer/fix-class-transform",
    "merge pull request #3504 from clariroid/docsjp",
    "merge pull request #3513 from agelter/master",
    "merge pull request #3494 from letiemble/b_context_rerender",
    "merge pull request #3511 from ansavvides/glossary-space",
    "merge pull request #3491 from bobbyrenwick/transition-group-appear-docs",
    "merge pull request #3503 from aredridel/patch-1",
    "merge pull request #3507 from dpellier/master",
    "merge pull request #3487 from zpao/doc/video",
    "merge pull request #3499 from sverrejoh/patch-1",
    "merge pull request #3502 from spicyj/tests",
    "merge pull request #3490 from chenglou/remove-class-addon",
    "merge pull request #3467 from spicyj/valid-3",
    "merge pull request #3440 from spicyj/console-error",
    "merge pull request #3488 from delftswa2014/grunt-coverage-fix",
    "merge pull request #3271 from delftswa2014/fix/todo-example",
    "merge pull request #3483 from julen/docs/document-body-footgun",
    "merge pull request #3481 from mertkahyaoglu/master",
    "merge pull request #3475 from maximabramchuck/patch-1",
    "merge pull request #3472 from mertkahyaoglu/master",
    "merge pull request #3471 from mertkahyaoglu/master",
    "merge pull request #3129",
    "merge pull request #3464 from martomi/html-tags",
    "merge pull request #3442 from spicyj/kill-initializetouchevents",
    "merge pull request #3463 from josephsavona/relay-components",
    "merge pull request #3456 from cody/html-jsx",
    "merge pull request #3441 from cpojer/rm-perf",
    "merge pull request #3439 from cpojer/dom-node-warn",
    "merge pull request #3438 from spicyj/lint",
    "merge pull request #3433 from mihaip/master",
    "merge pull request #3430 from fourcolors/patch-1",
    "merge pull request #3431 from sebmarkbage/ignoreowner",
    "merge pull request #3176 from jsfb/webcomponent-to-vendor-thirdparty",
    "merge pull request #3395 from simek/reactcomponentexpect-cleanup",
    "merge pull request #3169 from jsfb/mount-into-shadowdom",
    "merge pull request #3427 from zpao/full-page-dom-components",
    "merge pull request #3425 from zpao/fix-pure-test",
    "merge pull request #3414 from spicyj/gh-3407",
    "merge pull request #3381 from zpao/jsx-nonstrictmodule",
    "merge pull request #3413 from zpao/travis",
    "merge pull request #3419 from xmo-odoo/patch-1",
    "merge pull request #3412 from spicyj/gh-3329",
    "merge pull request #2842 from acubed/master",
    "merge pull request #3422 from jviereck/doc-typo-fix",
    "merge pull request #3402 from vkramskikh/fix-empty-selects-with-value",
    "merge pull request #3410 from robertknight/3409-style-null-to-nonnull",
    "merge pull request #3397 from koba04/eslint-ignore-built-files",
    "merge pull request #3355 from cpojer/shallowcompare",
    "merge pull request #3384 from syranide/npmjobt",
    "merge pull request #3394 from cody/getdomnode",
    "merge pull request #3385 from richardlitt/patch-2",
    "merge pull request #3383 from ariabuckles/proptype-warnings",
    "merge pull request #3356 from cpojer/finddomnode",
    "merge pull request #3370 from varunrau/master",
    "merge pull request #3317 from ianobermiller/fix-shallow-equal",
    "merge pull request #3323 from jonhester/ie8-compat-mode",
    "merge pull request #3321 from smert/master",
    "merge pull request #3327 from simek/initialize-variables-fix",
    "bump version in readme",
    "merge pull request #2266 from syranide/voidelem",
    "merge pull request #2946 from benmoss/nested-render-warning",
    "merge pull request #2868 from chicoxyzzy/dev_and_prod_environments_consistancy",
    "merge pull request #3253 from jsfb/fix-comment-to-reflect-class-type-usage",
    "merge pull request #3230 from nmn/master",
    "merge pull request #3246 from spicyj/onclick",
    "merge pull request #3366 from sebmarkbage/docs2",
    "bump version so we can get back to work",
    "merge pull request #3310 from darcyadams/console-exists-before-warn",
    "merge pull request #3283 from zpao/0.13-authors",
    "merge pull request #3363 from zpao/0.13-docs-cloneelement",
    "merge pull request #3364 from jsfb/refs-docs",
    "merge pull request #3362 from jsfb/docs-for-setstate",
    "merge pull request #3361 from zpao/deprecate-replaceprops",
    "merge pull request #3360 from zpao/0.13-docs-api-deprecations",
    "merge pull request #3354 from zpao/0.13-examples",
    "merge pull request #3358 from coliff/patch-1",
    "merge pull request #2963 from graue/document-shallow-testing",
    "merge pull request #3345 from zertosh/update-derequire",
    "merge pull request #3353 from spicyj/frag",
    "merge pull request #3337 from facebook/cpojer-patch-2",
    "merge pull request #3331 from zpao/null-frag-proptypes",
    "merge pull request #3341 from rickbeerendonk/3338-documentation-issue",
    "merge pull request #3347 from koba04/fix-perf-displayname",
    "merge pull request #3330 from spicyj/no-render",
    "merge pull request #3339 from gabelevi/patch-1",
    "merge pull request #3343 from binarymuse/docs/bkt-add-contextmenu-event",
    "merge pull request #3336 from facebook/cpojer-patch-1",
    "merge pull request #3333 from ariabuckles/docs",
    "merge pull request #2802 from jsfb/finddomnode-in-docs",
    "merge pull request #3294 from zpao/jsxcompiler-linenumbers",
    "merge pull request #3304 from facebook/matthewjohnston4-croundup-1",
    "merge pull request #3305 from brafdlog/patch-1",
    "merge pull request #3264 from zpao/transform-jsx",
    "merge pull request #3299 from sebmarkbage/fixwarningformats",
    "merge pull request #3284 from delftswa2014/bugfix/blog/https-urls",
    "merge pull request #3275 from spicyj/gh-3222",
    "merge pull request #3288 from apaatsio/remove-unnecessary-variable-in-test",
    "merge pull request #3276 from spicyj/gh-2978",
    "merge pull request #3295 from koba04/patch-1",
    "merge pull request #3266 from sebmarkbage/cloneelement",
    "merge pull request #3293 from spicyj/gh-3286",
    "merge pull request #3265 from sebmarkbage/shouldupdaterefs",
    "merge pull request #3257 from danmane/update-tutorial-md",
    "merge pull request #3263 from wmertens/patch-1",
    "merge pull request #3239 from rralian/update/docs-clarify-forceupdate",
    "merge pull request #3255 from chenglou/fix-blog-post",
    "merge pull request #3251 from simek/empty-docs-prevnext-fix",
    "merge pull request #3250 from sebmarkbage/blogpost",
    "merge pull request #3224 from simek/patch-2",
    "merge pull request #3232 from artnez/master",
    "merge pull request #3233 from artnez/es6-call-spread",
    "merge pull request #2994 from chenglou/docs-classset",
    "merge pull request #3212 from denis-sokolov/patch-1",
    "merge pull request #2847 from zpao/jsx-es5",
    "merge pull request #3209 from chicoxyzzy/eslint-everywhere",
    "merge pull request #2993 from chenglou/classset-ded",
    "merge pull request #2921 from hanski07/updatetransferringpropsdocs",
    "merge pull request #3161 from koba04/fix-clone-with-props-document",
    "merge pull request #3208 from jsfb/clonewithprops-jsdocs",
    "merge pull request #3191 from zpao/jsxtransformer-use-shared-code",
    "merge pull request #3206 from zpao/lint-fbtransform",
    "merge pull request #3198 from zpao/jsx-option-parsing",
    "merge pull request #3201 from zpao/non-factory-invariant",
    "merge pull request #3205 from sebmarkbage/warningfixes",
    "merge pull request #3193 from fisherwebdev/remove_lodash",
    "merge pull request #3165 from oiva/jquery-mobile-example",
    "merge pull request #3180 from cody/https",
    "merge pull request #3189 from hzoo/more-lint",
    "merge pull request #3187 from yungsters/shallow",
    "merge pull request #2821 from zpao/unitless-css-boxflex",
    "merge pull request #3108 from zpao/quadratic-example",
    "merge pull request #3183 from yungsters/master",
    "merge pull request #3177 from sebmarkbage/fixbindwarningstring",
    "merge pull request #3175 from sebmarkbage/fixhasownorder",
    "merge pull request #3171 from sebmarkbage/moarwarnings",
    "merge pull request #3170 from adelevie/patch-1",
    "merge pull request #3148 from hmarr/fix-nan-mutation-warning",
    "merge pull request #3154 from iamdustan/patch-1",
    "merge pull request #3162 from vsiao/mount-element",
    "merge pull request #3147 from hzoo/lint-fixes",
    "merge pull request #3168 from briankung/docs-jsx-namespacing",
    "merge pull request #3167 from michelletodd/docs-grammar",
    "merge pull request #3164 from oiva/master",
    "merge pull request #3145 from jsfb/dedup-is-owner-important",
    "merge pull request #3134 from briankung/update-safe_yaml",
    "merge pull request #3139 from brianpchsu/master",
    "bump jstransform version to 9.1.0 to include new flow updates",
    "merge pull request #3143 from jeffmo/flow_0_3_0",
    "merge pull request #3132 from jsfb/warn-less-for-owner-necessary",
    "merge pull request #3123 from chicoxyzzy/remove-jshint",
    "merge pull request #3133 from zpao/more-lint",
    "merge pull request #3126 from sourdoughh/patch-1",
    "merge pull request #3130 from sebmarkbage/identifiablewarnings",
    "merge pull request #3107 from sebmarkbage/fragments",
    "merge pull request #3114 from chicoxyzzy/master",
    "merge pull request #3118 from rkho/patch-1",
    "merge pull request #3117 from jsfb/use-warning-module",
    "merge pull request #3103 from zpao/lifecyle-warn-not-throw",
    "merge pull request #3105 from matiassingers/jasmine-call-count-consistency",
    "merge pull request #3100 from sebmarkbage/fragments",
    "merge pull request #3030 from sebmarkbage/fragments",
    "merge pull request #2998 from rickbeerendonk/docs-conferences",
    "merge pull request #3097 from zpao/upgrade-eslint",
    "merge pull request #2968 from climbsrocks/patch-5",
    "merge pull request #3089 from iamdanfox/fix-markdown-parsing-error-3075",
    "merge pull request #3082 from hzoo/patch-1",
    "merge pull request #2854 from cedrics/add-iframe-component",
    "merge pull request #3080 from zpao/upgrade-internal-modules",
    "merge pull request #3073 from gsklee/patch-3",
    "merge pull request #3074 from noyobo/master",
    "merge pull request #3078 from vincentriemer/patch-1",
    "merge pull request #3047 from syranide/escbrow2",
    "merge pull request #3046 from cobbweb/patch-1",
    "merge pull request #1599 from syranide/escbrow",
    "merge pull request #3068 from sebmarkbage/dedupwarning",
    "merge pull request #3045 from milanlandaverde/removes-validation-msg",
    "merge pull request #2135 from syranide/ie8enctype",
    "merge pull request #2969 from gsklee/patch-1",
    "merge pull request #3036 from jergason/master",
    "merge pull request #2991 from leebyron/state-queue",
    "merge pull request #3039 from sebmarkbage/fixismounted",
    "merge pull request #3032 from germ13/patch-1",
    "merge pull request #3013 from akheron/patch-2",
    "merge pull request #3022 from btholt/master",
    "merge pull request #3016 from hnordt/patch-1",
    "merge pull request #3020 from syranide/jsxbracketcodemod",
    "merge pull request #3026 from sebmarkbage/fixdependency",
    "merge pull request #3017 from syranide/trydefine",
    "merge pull request #3025 from sebmarkbage/fixrendercallback",
    "merge pull request #3018 from jsfb/assert-not-throw",
    "merge pull request #3023 from sebmarkbage/devtoolsfix",
    "merge pull request #1864 from syranide/ie8text2",
    "merge pull request #3000 from syranide/openbool",
    "merge pull request #3007 from joelotter/patch-2",
    "merge pull request #2997 from rickbeerendonk/2943-jsx-build-tool-documentation",
    "merge pull request #3012 from sebmarkbage/typescript",
    "merge pull request #3001 from rgarcia/patch-1",
    "merge pull request #3011 from koba04/fix-coponent-api-doc",
    "merge pull request #2999 from sedovsek/master",
    "merge pull request #2995 from rickbeerendonk/copyright-2015",
    "merge pull request #1912 from syranide/safereuse",
    "merge pull request #1568 from syranide/dompurge",
    "merge pull request #2990 from jeffkole/patch-1",
    "merge pull request #2987 from jsfb/fix-markdown-output-wrap",
    "merge pull request #2960 from jsfb/add-detectable-prefix-to-reactelement-warning",
    "merge pull request #2967 from zpao/jest-match-internal",
    "merge pull request #2966 from zpao/grunt-jest",
    "merge pull request #2964 from zertosh/no-derequire-when-minifying",
    "merge pull request #2965 from climbsrocks/patch-4",
    "merge pull request #2961 from climbsrocks/patch-1",
    "merge pull request #2962 from climbsrocks/patch-3",
    "merge pull request #2940 from kevinold/2749-consistent-use-of-spys-or-mocks",
    "merge pull request #2948 from jergason/master",
    "merge pull request #2959 from sebmarkbage/createmixin",
    "merge pull request #2957 from sebmarkbage/renamecomponent",
    "merge pull request #2936 from sebmarkbage/refactorlifecycles",
    "merge pull request #2935 from sebmarkbage/batchupdates",
    "merge pull request #2953 from sebmarkbage/callbacktests",
    "merge pull request #2930 from sebmarkbage/updatequeue",
    "merge pull request #2941 from kevinold/2870-update-warning-calls",
    "merge pull request #2942 from sebmarkbage/metamatchers",
    "merge pull request #2939 from patlaughlin/patch-1",
    "merge pull request #2952 from sebmarkbage/typescript",
    "merge pull request #2951 from mzabriskie/semicolon",
    "merge pull request #2920 from jsfb/move-proptype-validation",
    "merge pull request #2933 from sebmarkbage/pendingcontext",
    "merge pull request #2944 from sebmarkbage/coffeescript",
    "merge pull request #2917 from spicyj/ref-composite",
    "merge pull request #2919 from sebmarkbage/removecreateref",
    "merge pull request #2923 from sebmarkbage/dropcomponentmixin",
    "merge pull request #2918 from sebmarkbage/fixcontexts",
    "merge pull request #2916 from spicyj/ref-composite",
    "merge pull request #2765 from zpao/jsxtransformerlinenumber",
    "merge pull request #2903 from tendant/merge-conflicts-in-translation",
    "merge pull request #2518 from jsfb/documentation-for-dangerouslysetinnerhtml",
    "merge pull request #2892 from jsfb/fbme-url-for-dangerouslysetinnerhtml",
    "merge pull request #2915 from zpao/lint-fixup",
    "merge pull request #2902 from swestwood/patch-2",
    "merge pull request #2913 from sebmarkbage/typewarning",
    "merge pull request #2890 from amykyta/patch-1",
    "merge pull request #2900 from wincent/test-desc-fix",
    "merge pull request #2889 from salier/react-default-perf",
    "merge pull request #2894 from yungsters/local-event-trap-mixin",
    "merge pull request #2884 from chenglou/fix-ex-source-map",
    "merge pull request #2875 from kchia/patch-2",
    "merge pull request #2881 from camsong/master",
    "merge pull request #2808 from sebmarkbage/modernclasses",
    "merge pull request #2853 from jsfb/warn-only-on-read",
    "merge pull request #2874 from carlsson87/patch-1",
    "merge pull request #2297 from pedronauck/docs-namespace-in-jsx",
    "merge pull request #2360 from beausmith/patch-1",
    "merge pull request #2795 from chenglou/tips-lib",
    "merge pull request #2675 from af/toplevelapidocs",
    "merge pull request #2734 from minwe/master",
    "merge pull request #2707 from camsong/master",
    "merge pull request #2824 from zpao/docs-tutorial-server",
    "merge pull request #2502 from fabiomcosta/patch-4",
    "merge pull request #2867 from zpao/no-warn-mock-methods",
    "merge pull request #2866 from sebmarkbage/fixbindwarning",
    "merge pull request #2851 from jsfb/unique-key-in-dev-only",
    "merge pull request #2865 from zpao/revert-jasmine-helper",
    "merge pull request #2540 from spicyj/no-mutate-props",
    "merge pull request #2859 from javawizard/patch-1",
    "merge pull request #2852 from zpao/lint-fail-travis",
    "merge pull request #2751 from zpao/eslint-fixup",
    "merge pull request #2805 from sebmarkbage/baseclass1",
    "merge pull request #2818 from jsfb/unmasked-context-in-performcontextupdate",
    "merge pull request #2662 from zpao/eslint",
    "merge pull request #2806 from sebmarkbage/baseclass",
    "merge pull request #2844 from kchia/patch-1",
    "merge pull request #2830 from jsfb/remove-tag-warning",
    "merge pull request #2799 from stkb/master",
    "merge pull request #2822 from zpao/rm-immutable",
    "merge pull request #2832 from kikyous/patch-1",
    "merge pull request #2814 from jsfb/testutils-consolemock",
    "merge pull request #2807 from joshsgman/patch-1",
    "merge pull request #2793 from huang47/improve/use-bundle-collapser-to-reduce-file-size",
    "merge pull request #2520 from jsfb/warn-for-dangerouslysetinnerhtml",
    "merge pull request #2614 from jsfb/monitor-should-update-owner-is-useful",
    "merge pull request #2800 from jsfb/getdomnode-becomes-finddomnode",
    "merge pull request #2791 from rickbeerendonk/patch-1",
    "merge pull request #2801 from jsfb/componentdidupdate-docs",
    "merge pull request #2788 from mihaip/master",
    "merge pull request #2785 from c-das/patch-1",
    "merge pull request #2767 from sebmarkbage/moderntypevalidation",
    "merge pull request #2783 from dylanharrington/master",
    "merge pull request #2768 from sebmarkbage/duplicatetests",
    "merge pull request #2769 from sebmarkbage/breakonwarning",
    "merge pull request #2773 from vanesyan/patch-1",
    "merge pull request #2772 from zpao/fixjsdoc",
    "merge pull request #2771 from zpao/temp-fix-empty-component",
    "merge pull request #2760 from alextsg/patch-3",
    "merge pull request #2759 from alextsg/patch-2",
    "merge pull request #2646 from jsfb/getdomnode-becomes-finddomnode",
    "merge pull request #2754 from songawee/fix_version_typo",
    "merge pull request #2752 from peterblazejewicz/fix/blog-typo",
    "merge pull request #2586 from rileytomasek/master",
    "merge pull request #2748 from sebmarkbage/modern",
    "merge pull request #2745 from sebmarkbage/types",
    "merge pull request #2744 from sebmarkbage/types",
    "merge pull request #2740 from facebook/revert-2613-monitor-clonewithprops",
    "merge pull request #2727 from zpao/update-npm-deps",
    "merge pull request #2732 from zpao/travis-container",
    "merge pull request #2733 from morenoh149/patch-1",
    "merge pull request #2726 from zpao/createelement-undefined-null",
    "merge pull request #2647 from zpao/text-component-expect",
    "merge pull request #2718 from alextsg/patch-1",
    "merge pull request #2710 from zpao/lint-fix-again",
    "merge pull request #2655 from zpao/rm-deprecated",
    "merge pull request #2708 from zpao/strip-types",
    "merge pull request #2716 from richardlitt/patch-2",
    "merge pull request #2705 from swader/patch-1",
    "merge pull request #2695 from jsfb/fix-scry2",
    "merge pull request #2694 from camsong/master",
    "merge pull request #2690 from salier/before-input",
    "merge pull request #2689 from camsong/master",
    "merge pull request #2700 from sebmarkbage/classic",
    "merge pull request #2679 from tschaub/patch-1",
    "merge pull request #2677 from zpao/lint-internal",
    "merge pull request #2671 from benkeen/patch-1",
    "merge pull request #2658 from ianobermiller/margin-attrs",
    "merge pull request #2489 from cody/form",
    "merge pull request #2672 from cookfront/master",
    "merge pull request #2653 from salier/ie-selection",
    "merge pull request #2635 from zpao/docs/props-state-clarification",
    "merge pull request #2639 from zpao/own-jsfiddle",
    "merge pull request #2649 from cookfront/master",
    "merge pull request #2651 from arnihermann/use-charat-not-string-index-markup-diff",
    "merge pull request #2615 from af/createelement-docs",
    "merge pull request #2622 from rafd/patch-1",
    "merge pull request #2636 from zpao/docs/spread-assign-update",
    "merge pull request #2616 from christianalfoni/patch-3",
    "merge pull request #2623 from jbhatab/patch-1",
    "merge pull request #2633 from koba04/fix-addons-document",
    "merge pull request #2629 from arnihermann/diff-msg-on-checksum-fail",
    "merge pull request #2630 from shamrin/patch-1",
    "merge pull request #2613 from jsfb/monitor-clonewithprops",
    "merge pull request #2610 from zpao/update-commonjs-example",
    "merge pull request #2553 from mhuggins/headers-attribute",
    "merge pull request #2600 from zpao/npm-test",
    "merge pull request #2596 from sebmarkbage/rce",
    "merge pull request #2602 from jsfb/context-tripple-equals",
    "merge pull request #2603 from facebook/revert-2601-rm-fbtransform-syntax",
    "merge pull request #2601 from zpao/rm-fbtransform-syntax",
    "merge pull request #2597 from jsfb/render-into-document",
    "merge pull request #2566 from zpao/style-fixup",
    "merge pull request #2594 from steveluscher/community-round-up-24",
    "merge pull request #2593 from sebmarkbage/mountimage",
    "merge pull request #2583 from spicyj/style-example",
    "merge pull request #2565 from jsfb/fixwhitespace",
    "merge pull request #2581 from spicyj/rm-elt-docs",
    "merge pull request #2567 from sebmarkbage/childrenreconciler",
    "merge pull request #2579 from jsfb/context-to-warning-module",
    "merge pull request #2582 from spicyj/rendercomponent",
    "merge pull request #2571 from yungsters/cleanup",
    "merge pull request #2570 from yungsters/updates",
    "merge pull request #2544 from mjul/patch-1",
    "merge pull request #2555 from mfunkie/patch-1",
    "merge pull request #2554 from samccone/patch-1",
    "merge pull request #2464 from yungsters/immutable",
    "merge pull request #2552 from sebmarkbage/cleanupinternals",
    "merge pull request #2465 from yungsters/perf",
    "merge pull request #2508 from jsfb/monitor-with-context",
    "merge pull request #2550 from sebmarkbage/cleanupinternals",
    "merge pull request #2509 from jsfb/use-parent-context",
    "merge pull request #2497 from graue/2393-v1",
    "merge pull request #2546 from sebmarkbage/cleanupinternals",
    "merge pull request #2539 from sebmarkbage/cleanupinternals",
    "merge pull request #2527 from gabelevi/master",
    "merge pull request #2537 from sebmarkbage/hidedomcomponentinternals",
    "merge pull request #2385 from shripadk/bool-fix",
    "merge pull request #2514 from jvalente/patch-1",
    "merge pull request #2512 from leebyron/transition-appear",
    "merge pull request #2498 from ikr/patch-1",
    "merge pull request #2482 from binarymuse/bkt/fix-stroke-opacity",
    "merge pull request #2481 from mjul/fix-typos",
    "merge pull request #2479 from spicyj/nitfix",
    "merge pull request #2480 from spicyj/text-stability",
    "merge pull request #2445 from sebmarkbage/classes",
    "merge pull request #2476 from jsfb/patch-1",
    "merge pull request #2473 from zertosh/docs-ssr-at-sc",
    "merge pull request #2475 from jsfb/master",
    "merge pull request #2446 from enaqx/master",
    "merge pull request #2241 from syranide/selectvalue",
    "merge pull request #2408 from peeja/patch-1",
    "merge pull request #2452 from shahor/master",
    "merge pull request #2463 from fson/render-to-string-docs",
    "merge pull request #2458 from leebyron/fix-iterable",
    "merge pull request #2443 from kruppel/kurt/minor-tip-typo",
    "merge pull request #2224 from zertosh/remove-esprima-fb-dep",
    "merge pull request #2433 from zpao/fiddle-integration",
    "merge pull request #1708 from chenglou/displayname",
    "merge branch 'master' into docs-namespace-in-jsx",
    "merge pull request #2437 from zpao/lint-cleanup",
    "merge pull request #2435 from sebmarkbage/fixretest",
    "merge pull request #2434 from shraymonks/proptypes-docs",
    "merge pull request #2431 from wassil/master",
    "merge pull request #2428 from cody/fixes",
    "merge pull request #2419 from johnheroy/patch-1",
    "merge pull request #2375 from sebmarkbage/droplegacyfactories",
    "merge pull request #2416 from zachasme/update-jstransform",
    "merge pull request #2415 from zpao/sync-internal",
    "merge pull request #2418 from spencer48/patch-1",
    "merge branch '0.12-stable'",
    "merge pull request #2399 from zpao/0.12-docs",
    "merge pull request #2414 from benleiken/patch-1",
    "merge pull request #2413 from leonfedotov/patch-1",
    "merge pull request #2413 from leonfedotov/patch-1",
    "merge pull request #2414 from benleiken/patch-1",
    "merge pull request #2409 from enaqx/master",
    "merge pull request #2084 from kimagure/unmount-comp-error",
    "merge pull request #2387 from fabiomcosta/avoid_double_scrollread",
    "merge pull request #2396 from sebmarkbage/classmodule",
    "merge pull request #2405 from sebmarkbage/hideelementconstructor",
    "merge pull request #2397 from mjul/fix-gruntfile",
    "merge remote-tracking branch 'upstream/master' into fix-gruntfile",
    "merge pull request #2376 from leebyron/iterable",
    "bump version to 0.13.0-alpha",
    "merge pull request #2322 from zpao/update-licenses-docs-examples",
    "merge pull request #2388 from spicyj/null-key",
    "merge pull request #2372 from spicyj/docs012-1",
    "merge pull request #2370 from chenglou/rm-school",
    "merge pull request #2373 from genbit/docs-animation-props",
    "merge pull request #2356 from vjeux/roundup_23",
    "merge pull request #2381 from shripadk/jsdoc-fix",
    "merge pull request #2368 from spicyj/use-the-string",
    "merge pull request #2364 from zpao/0.12rc-blog-post",
    "merge pull request #2384 from sebmarkbage/deprecateisvalidclass",
    "merge pull request #2350 from sebmarkbage/assign",
    "merge pull request #2363 from sebmarkbage/assign",
    "merge pull request #2344 from thomascrvsr/master",
    "merge pull request #2357 from jimjea/patch-1",
    "merge pull request #2359 from zpao/fix-blog-post",
    "merge pull request #2343 from zpao/proptypes-deprecation",
    "merge pull request #2330 from alexeyraspopov/patch-1",
    "merge pull request #2349 from zpao/update-deps",
    "merge pull request #2139 from syranide/acceptcharset",
    "merge pull request #2317 from zpao/npm-ship-merge",
    "merge pull request #2337 from sebmarkbage/devtoolshook",
    "merge pull request #2312 from zpao/license-update",
    "merge pull request #2313 from sebmarkbage/sanitizetags",
    "merge pull request #2320 from zpao/jsxtransformer-no-docblock",
    "merge pull request #2316 from zpao/devtoolsmarker",
    "merge pull request #2310 from tmcw/list-require-attribute",
    "merge pull request #2308 from sebmarkbage/dropdocblock",
    "merge pull request #2304 from zpao/rm-server-rendering-deprecation-notice",
    "merge pull request #2002 from zpao/rename-rendercomponent",
    "merge pull request #2306 from zpao/cleanup-textcomponent-dep",
    "merge pull request #2303 from sebmarkbage/dropmerge",
    "merge pull request #2305 from sebmarkbage/missingrename",
    "merge pull request #2238 from syranide/noclassid",
    "merge pull request #2252 from syranide/htmlmanifest",
    "merge pull request #2276 from spicyj/asap",
    "merge pull request #2300 from sebmarkbage/descriptorstoelements",
    "merge pull request #2287 from sebmarkbage/stringelements2",
    "merge pull request #2254 from jgable/spellingfix",
    "merge pull request #2208 from wincent/typo-fix-03",
    "merge pull request #2219 from pablolmiranda/master",
    "merge pull request #2202 from syranide/noscroll",
    "merge pull request #1520 from syranide/ediblechildren",
    "merge pull request #1598 from syranide/nogettext",
    "merge branch 'zpao-rm-flux-docs'",
    "merge pull request #2236 from zpao/rm-flux-docs",
    "merge pull request #2240 from christianalfoni/patch-1",
    "merge pull request #2234 from fisherwebdev/master",
    "merge pull request #2149 from imcotton/jsx-reduce-warning",
    "merge pull request #2228 from xuefengwu/patch-1",
    "merge pull request #2237 from markhovskiy/patch-1",
    "merge pull request #2212 from oleg24/patch-1",
    "merge pull request #2225 from jesseskinner/patch-1",
    "merge pull request #2180 from zpao/fix-2179",
    "merge pull request #2209 from glenjamin/patch-2",
    "merge pull request #2211 from jacobgreenleaf/master",
    "merge pull request #2218 from fisherwebdev/master",
    "merge pull request #2223 from cody/striptypes",
    "merge pull request #1301 from markijbema/patch-1",
    "merge pull request #2186 from vjeux/roundup_22",
    "merge pull request #2170 from undernewmanagement/patch-1",
    "merge pull request #2181 from zpao/move-onscroll-detection",
    "merge pull request #2097 from fitzgen/explain-where-to-provide-key",
    "merge pull request #2167 from mhintz/patch-1",
    "merge pull request #2178 from benfoxall/patch-1",
    "merge pull request #2113 from binarymuse/fix_numeric_properties",
    "merge pull request #2165 from djcordhose/patch-1",
    "merge pull request #1848 from fgnass/master",
    "merge pull request #2144 from zertosh/master",
    "merge pull request #1988 from syranide/tacfix",
    "merge pull request #2155 from rickbeerendonk/patch-1",
    "merge pull request #2156 from simonwelsh/patch-1",
    "merge pull request #2158 from daniel15/htmltojsx-move",
    "merge pull request #2116 from spicyj/nl-jsx-spread",
    "merge pull request #2152 from rreverser/fix-pr-check",
    "merge pull request #2153 from jeffmo/jsx_strip_types",
    "bump esprima + jstransform versions",
    "merge pull request #2148 from nordstrom-innovation/docfix",
    "merge pull request #2147 from naman34/patch-2",
    "merge pull request #2106 from subtlegradient/subtlegradient/improve-reactperf-debugging",
    "merge pull request #2033 from pekim/master",
    "merge pull request #2120 from zpao/svg-logo",
    "merge pull request #2124 from daniel15/htmltojsx-fixes",
    "merge pull request #2101 from jeffchan/patch-1",
    "merge pull request #2075 from ivanvergiliev/patch-1",
    "merge pull request #2091 from julen/docs/linkedstate",
    "merge pull request #2117 from spicyj/jest-vendor",
    "merge pull request #2118 from spicyj/es7-spread",
    "merge pull request #2119 from naman34/patch-1",
    "merge pull request #2036 from crm416/static-functions",
    "merge pull request #2039 from crm416/return-false",
    "merge pull request #2083 from chenglou/docs-retina-icon",
    "merge pull request #2080 from fisherwebdev/master",
    "merge pull request #2078 from michaelrp/patch-1",
    "merge pull request #2054 from chenglou/accum",
    "merge pull request #2076 from whatasunnyday/master",
    "merge pull request #2037 from crm416/duplicate-key",
    "merge pull request #2068 from chrisski/patch-1",
    "merge pull request #2053 from zpao/jsx-transformer-optional-sourcemaps",
    "merge pull request #2062 from dmitriiabramov/patch-1",
    "merge pull request #2058 from chantastic/patch-2",
    "merge pull request #1826 from syranide/jsxasync",
    "merge pull request #1601 from gaearon/apply-component-and-mixin-spec-deterministically",
    "merge pull request #2038 from zpao/update-testutil-docs",
    "merge pull request #2042 from zpao/update-recast",
    "merge pull request #1832 from rayqian/master",
    "merge pull request #1867 from wickynilliams/patch-1",
    "merge pull request #2007 from janhancic/better-docs-for-select-multiple",
    "merge pull request #2010 from nw/patch-1",
    "merge pull request #1060 from spicyj/gh-906",
    "merge pull request #1952 from slorber/master",
    "merge pull request #2035 from zpao/jekyll-update",
    "merge pull request #2026 from spicyj/likely-a-bug-in-the-framework",
    "merge pull request #2028 from andrezsanchez/patch-1",
    "merge pull request #2021 from adammark/patch-1",
    "merge pull request #1662 from gaearon/warn-when-using-hyphenated-style-names",
    "merge pull request #2025 from zpao/rm-flux-todomvc",
    "merge pull request #1974 from jstoja/jquery-tutorial",
    "merge pull request #2016 from samselikoff/patch-1",
    "merge pull request #2000 from rreverser/stop-travis-on-docs",
    "merge pull request #1990 from syranide/rmctest",
    "merge pull request #2018 from samselikoff/patch-2",
    "merge pull request #1993 from spicyj/devtools-warning-2",
    "merge pull request #1972 from cutbko/patch-1",
    "merge pull request #1985 from jimobrien/master",
    "merge pull request #1956 from syranide/ffenter",
    "merge pull request #1976 from vjeux/community_21",
    "merge pull request #1885 from syranide/testinnerhtml",
    "merge pull request #1827 from syranide/jsxstrict",
    "merge pull request #1960 from julen/docs/setstate",
    "merge pull request #1759 from spicyj/gh-1698",
    "merge pull request #1854 from syranide/floatfix",
    "merge pull request #1758 from spicyj/setimmediate",
    "merge pull request #1961 from knuton/patch-1",
    "merge pull request #1951 from jedwatson/patch-1",
    "merge pull request #1941 from divad12/animating-one-or-zero-items-docs",
    "merge pull request #1943 from shaneosullivan/patch-1",
    "merge pull request #1944 from shaneosullivan/patch-3",
    "merge pull request #1929 from zertosh/master",
    "merge pull request #1942 from loukan/roundup_20",
    "merge pull request #1924 from spicyj/autobind-bind",
    "merge pull request #1770 from eins78/master",
    "merge pull request #1865 from syranide/modistatefalse",
    "merge pull request #1511 from syranide/strsidefx",
    "merge pull request #1903 from syranide/ie8nmlb",
    "merge pull request #1560 from spicyj/simplify-lifecycle",
    "merge pull request #1774 from syranide/ie8focusthrow",
    "merge pull request #1879 from syranide/modistatewrong",
    "merge pull request #1909 from zpao/move-react-source",
    "merge pull request #1908 from spicyj/simpler-server-willmount",
    "merge pull request #1892 from thauburger/patch-1",
    "merge pull request #1891 from robarnold/patch-1",
    "merge pull request #1882 from glenjamin/patch-1",
    "merge pull request #1893 from chenglou/docs-bar",
    "merge pull request #1876 from petehunt/fix-jsxt2",
    "merge pull request #1870 from spicyj/gh-1866",
    "merge pull request #1869 from syranide/modistatecase",
    "merge pull request #1837 from garrensmith/update-todo-example",
    "merge pull request #1835 from amm385/patch-1",
    "merge pull request #1860 from kyleamathews/patch-3",
    "bump version for 0.12.0-alpha",
    "merge pull request #1818 from chenglou/docs-apply",
    "merge pull request #1821 from chenglou/docs-addons-perf",
    "merge pull request #1840 from spicyj/statics-proptypes",
    "merge pull request #1817 from chenglou/docs-purerendermixin",
    "merge pull request #1842 from spicyj/jstransform-visitors",
    "merge pull request #1813 from baddox/patch-2",
    "merge pull request #1812 from baddox/patch-1",
    "merge pull request #1825 from zpao/jsx-sourcemap",
    "bump dependencies that are known safe",
    "merge pull request #1783 from avanderhoorn/patch-1",
    "merge pull request #1799 from julen/patch-1",
    "merge pull request #1796 from enguerran/footer",
    "merge pull request #1802 from zpao/jsxtransformer-cleanup",
    "merge pull request #1801 from zpao/jsxtransformer-sourcemaps",
    "merge pull request #1797 from spicyj/transition-group-names",
    "merge pull request #1784 from wvl/package-built-source-with-npm",
    "merge pull request #1786 from zpao/react-tools-readme",
    "merge pull request #1793 from monsanto/browserify-note",
    "merge pull request #1780 from jbrantly/issue-1292",
    "merge pull request #1461 from spicyj/no-esc-slash",
    "merge pull request #1779 from spicyj/spell-gram",
    "merge pull request #1531 from spicyj/two-face",
    "merge pull request #1763 from chenglou/docs-tut",
    "merge pull request #1750 from protron/patch-1",
    "merge pull request #1765 from chenglou/docs-tut-again",
    "merge pull request #1767 from jgebhardt/fixlink",
    "merge pull request #1760 from spicyj/docs-harmony",
    "merge pull request #1622 from gebrits/patch-1",
    "merge pull request #1738 from cassus/master",
    "merge pull request #1741 from spicyj/mount-unused",
    "merge pull request #1642 from ryanseddon/trimcssvalues",
    "merge pull request #1748 from pieterv/community-roundup-19-fix",
    "merge pull request #1716 from somethingkindawierd/master",
    "merge pull request #1737 from spicyj/notime",
    "merge pull request #1664 from spicyj/warn-pooling",
    "merge pull request #1495 from syranide/ie8noscript",
    "merge pull request #1731 from cody/master",
    "merge pull request #1464 from spicyj/style-esc",
    "merge pull request #1542 from remixz/gh-1420",
    "merge pull request #1710 from benjamn/fix-tests-broken-by-undefined-window-references",
    "merge pull request #1724 from spicyj/main-nor",
    "merge pull request #1721 from whatthejeff/patch-1",
    "merge pull request #1244 from rayqian/master",
    "merge pull request #1713 from bmihelac/patch-1",
    "merge pull request #1513 from danielschonfeld/shouldcomponentupdate-boolean",
    "merge pull request #1712 from mathieumg/master",
    "merge pull request #910 from andrewdavey/react-transform-source-map",
    "merge pull request #1609 from spicyj/tlt-indirect",
    "merge pull request #1206 from brandonbloom/apply",
    "merge pull request #1661 from spicyj/test-ie10-select-multiple",
    "merge pull request #1660 from spicyj/test-ie10-proptypesname",
    "merge pull request #1659 from spicyj/test-ie10-iframe",
    "merge pull request #1685 from randallsquared/patch-1",
    "merge pull request #1597 from spicyj/defaultprops-autobind",
    "merge pull request #1631 from dblandin/master",
    "merge pull request #1611 from mathieumg/master",
    "merge pull request #1671 from gasi/fix-unset-style",
    "merge pull request #1636 from harshadsabne/master",
    "merge pull request #1658 from spicyj/test-ie10-submit-label",
    "merge pull request #1687 from kyleamathews/patch-2",
    "merge pull request #1638 from spicyj/getmodifierstate-2",
    "merge pull request #1632 from spicyj/img-load-error",
    "merge pull request #1627 from enome/master",
    "merge pull request #1614 from chenglou/1-year",
    "merge pull request #1620 from kmeht/jestdoc",
    "merge pull request #1583 from nhunzaker/jsxtransform-parallel",
    "merge pull request #1596 from mindeavor/patch-1",
    "merge pull request #1536 from spicyj/gh-1169",
    "merge pull request #1590 from spicyj/svg-classname",
    "merge pull request #1556 from joshma/flux-dispatcher-docs",
    "bump to react 0.10 in todomvc flux",
    "bump esprima-fb and jstransform versions",
    "merge pull request #1363 from spicyj/batch-all",
    "merge pull request #1576 from spicyj/ex-shim",
    "merge pull request #760 from syranide/jsxns",
    "merge pull request #1575 from spicyj/dispatch-index",
    "merge pull request #1579 from gscottolson/master",
    "merge pull request #1577 from piranha/master",
    "merge pull request #1553 from givingstage/invalid_checksum_warning_spacing",
    "merge pull request #1559 from spicyj/gh-1376",
    "merge pull request #1571 from spicyj/style-test",
    "merge pull request #1563 from spicyj/travis-no-sauce",
    "merge upstream changes",
    "merge pull request #1564 from spicyj/hop-ie8",
    "merge pull request #1189 from spicyj/hasown",
    "merge pull request #1558 from nhunzaker/fix-1530",
    "merge pull request #1491 from naturalatlas/itemscope",
    "merge pull request #1537 from chenglou/rm-filter-attrs",
    "merge pull request #1552 from t3chnoboy/master",
    "merge pull request #1358 from spicyj/one-transaction",
    "merge pull request #1487 from somethingkindawierd/master",
    "merge pull request #1504 from spicyj/flux-621",
    "merge pull request #1516 from syranide/es5err",
    "merge pull request #1503 from dybskiy/patch-2",
    "merge pull request #1499 from vjeux/flux",
    "merge pull request #1492 from spicyj/rtg-from-false",
    "merge pull request #1460 from spicyj/tg2",
    "merge pull request #1486 from nbostrom/patch-1",
    "merge pull request #1276 from marcins/bugfix/1275-transitiongroup-android",
    "merge pull request #1490 from vijar/master",
    "merge pull request #1480 from volkanunsal/patch-1",
    "merge pull request #1032 from fforw/master",
    "merge pull request #776 from syranide/superkey",
    "merge pull request #1468 from dschafer/tutorial",
    "merge pull request #1470 from hendrikswan/master",
    "merge pull request #1479 from fisherwebdev/master",
    "merge pull request #1477 from kyleamathews/patch-1",
    "merge pull request #1476 from fisherwebdev/master",
    "merge pull request #1462 from spicyj/lint",
    "merge pull request #1463 from andreypopp/example-commonjs",
    "merge pull request #1459 from spicyj/ti",
    "merge pull request #1458 from spicyj/gh-1457",
    "merge branch 'spicyj-nested-render' from #1402",
    "merge pull request #1455 from jeffmo/master",
    "bump jstransform dependency to point at 4.0.1 or higher",
    "merge pull request #1452 from chenglou/perf-fix",
    "merge pull request #887 from syranide/textdocument",
    "merge pull request #1450 from sahat/patch-1",
    "merge pull request #879 from syranide/inlinechild",
    "merge pull request #1441 from zpao/update-jstransform",
    "merge pull request #1188 from spicyj/comp-spec-inv",
    "merge pull request #1419 from spicyj/inv-process",
    "merge pull request #1410 from spicyj/sih",
    "merge pull request #1340 from matthewwithanm/download-attribute",
    "merge pull request #1183 from lrowe/patch-6",
    "merge pull request #1412 from gasi/patch-3",
    "merge pull request #1406 from petehunt/testperf",
    "merge pull request #1403 from spicyj/keyword-spacing",
    "merge pull request #1384 from chenglou/render-docs",
    "merge pull request #1284 from plievone/directives-2-commands",
    "merge pull request #1386 from georgesisco/master",
    "merge pull request #1324 from jordwalke/executedispatchesinorder",
    "merge pull request #1184 from spicyj/setinnerhtml",
    "merge pull request #1405 from spicyj/css-tests",
    "merge pull request #1394 from spicyj/gh-1164",
    "merge pull request #1190 from spicyj/custom-set-null",
    "merge pull request #1390 from chenglou/doc-new-proptypes",
    "merge pull request #1231 from spicyj/gh-1227",
    "merge pull request #925 from chenglou/rm-comm",
    "merge pull request #1285 from justinj/weak-shape-checker",
    "merge pull request #1364 from spicyj/key-collisions-2",
    "merge pull request #1381 from marcinkwiatkowski/master",
    "merge pull request #813 from spicyj/e-view-detail",
    "merge pull request #1379 from fkling/patch-1",
    "merge pull request #1365 from akre54/unminified-docs-js",
    "merge pull request #1362 from spicyj/cb-queue",
    "merge pull request #1356 from petehunt/server-rendering-example2",
    "merge pull request #1251 from davidxi/patch-1",
    "merge pull request #970 from syranide/jsxws",
    "merge pull request #1338 from chenglou/tip-children",
    "merge pull request #1313 from spicyj/ms-prefix",
    "merge pull request #1308 from chenglou/pure",
    "merge pull request #1258 from fisherwebdev/master",
    "merge pull request #1345 from kmeht/referencedoc",
    "merge pull request #1329 from irae/transition-group-leftovers",
    "merge pull request #1325 from venmo/add-scrolling-attribute",
    "merge pull request #1306 from twobit/master",
    "merge pull request #1336 from daniel15/making-zpao-happy",
    "merge pull request #1330 from spicyj/clone-imm",
    "merge pull request #1334 from spicyj/non-numeric-top-level",
    "merge pull request #1332 from chenglou/linter",
    "merge pull request #1288 from vjeux/server_docs",
    "merge pull request #1322 from spicyj/transformer-harmony",
    "merge pull request #1318 from spicyj/existence",
    "merge pull request #1320 from gasi/patch-2",
    "merge pull request #1309 from spicyj/dom-arg-order",
    "merge pull request #1310 from plievone/patch-1",
    "merge pull request #1282 from jeffbski/addcodewinds004videos",
    "merge pull request #1186 from chenglou/doc-tostring-opt",
    "merge pull request #1273 from wincent/typo-fix-02",
    "merge pull request #1234 from rreverser/pure-cjs",
    "merge pull request #1193 from spicyj/jsx-polygon",
    "merge pull request #1226 from lilyj/master",
    "merge pull request #1248 from asolove/svg-text-anchor",
    "merge pull request #1229 from spicyj/no-jsx",
    "merge pull request #1262 from vjeux/harmony-react-to",
    "merge pull request #1181 from lrowe/patch-5",
    "merge pull request #1242 from syranide/jsxcomfix",
    "merge pull request #1243 from jeffcarp/master",
    "merge pull request #1246 from ericflo/patch-1",
    "merge pull request #1225 from spicyj/cprop",
    "merge pull request #1235 from fxbois/master",
    "merge pull request #1228 from spicyj/grunt-debug",
    "merge pull request #1219 from syranide/jsxempty",
    "merge pull request #1208 from passy/patch-3",
    "merge pull request #1180 from evanc/master",
    "merge pull request #1222 from spicyj/npm-dl",
    "merge pull request #1211 from spicyj/freeze",
    "merge pull request #1192 from spicyj/srcset",
    "merge pull request #1215 from benjamn/fix-clonewithprops-test",
    "merge pull request #1209 from petehunt/thinking-in-react",
    "merge pull request #1203 from fson/jsx-integrations",
    "merge pull request #1204 from jmingov/patch-1",
    "merge pull request #1207 from passy/patch-2",
    "merge the lists of jsx integrations in the docs.",
    "merge pull request #1200 from ericflo/patch-1",
    "merge pull request #1082 from spicyj/class-false",
    "merge pull request #1148 from spicyj/jsx-constructor",
    "merge pull request #1166 from chenglou/docs-examples-consolidate",
    "merge pull request #1174 from spicyj/addons-update",
    "merge pull request #1156 from chenglou/1154",
    "merge pull request #1155 from petehunt/update-helper",
    "merge pull request #1150 from andreypopp/update-react-router-component-link",
    "merge pull request #1146 from dlau/patch-1",
    "merge pull request #1143 from jeffmo/npm_test",
    "merge branch 'joshduck-patch-1'",
    "merge pull request #1131 from spicyj/rel-notes-0.9-2",
    "merge pull request #1135 from spicyj/testutils-docs",
    "merge pull request #939 from spicyj/simulate-synthetic",
    "merge pull request #1133 from martinandert/repo-owner-change",
    "merge pull request #1112 from petehunt/testutils-addons",
    "merge pull request #1132 from petehunt/docs-clonewithprops",
    "merge pull request #1059 from petehunt/rtg-docs",
    "merge pull request #1100 from plievone/mapchildren-docs",
    "merge pull request #1130 from spicyj/if-attr-value",
    "merge pull request #1128 from spicyj/media-attrs",
    "merge pull request #1116 from spicyj/gh-1115",
    "merge pull request #1122 from spicyj/gh-1120",
    "merge pull request #1106 from spicyj/gh-1105",
    "merge pull request #1117 from andreypopp/envify-bump",
    "merge pull request #1110 from dustingetz/master",
    "merge pull request #1097 from spicyj/es3ify",
    "merge pull request #1099 from benjamn/make-reactwebworker-test-less-flaky",
    "merge pull request #1096 from spicyj/comma-splice",
    "merge pull request #1095 from jeffmo/sync_transforms",
    "merge pull request #1094 from jeffmo/jsx_whitespace_codemod_fixup",
    "merge pull request #1081 from spicyj/textcontent",
    "merge pull request #1088 from petehunt/fixtests",
    "merge pull request #1086 from spicyj/new-proptypes",
    "merge pull request #940 from chenglou/tips-val",
    "merge pull request #1022 from spicyj/multichild-throw",
    "merge pull request #1084 from spicyj/jsx-wh",
    "merge pull request #1067 from spicyj/sandbox-seamless",
    "merge pull request #1069 from spicyj/gh-1028",
    "merge pull request #1076 from spicyj/button-warn",
    "merge pull request #1075 from spicyj/defperf",
    "merge pull request #979 from jeffmo/jsx_whitespace_codemod_tool",
    "merge pull request #855 from syranide/onerror",
    "merge pull request #1034 from nadeeshacabral/patch-1",
    "merge pull request #1046 from spicyj/errutils",
    "merge pull request #1048 from spicyj/form-onreset",
    "merge pull request #1055 from spicyj/jsx-transformer-ie8",
    "merge pull request #1021 from spicyj/close-finally",
    "merge pull request #1042 from adelevie/master",
    "merge pull request #1045 from spicyj/srcdoc",
    "merge pull request #1040 from zpao/react-tools-revamp",
    "merge pull request #1039 from imagentleman/patch-2",
    "merge pull request #1003 from rdworth/patch-1",
    "merge pull request #1038 from imagentleman/patch-1",
    "merge pull request #1033 from bripkens/tostring-docs",
    "merge branch 'spicyj-uncontrolled-select'",
    "merge pull request #1019 from petehunt/docs99",
    "merge branch 'reorg'",
    "merge pull request #922 from spicyj/submit-submit",
    "merge pull request #1013 from bripkens/lint",
    "merge pull request #982 from bripkens/async-tostring",
    "merge pull request #967 from syranide/noie8catch",
    "merge pull request #1018 from stoyan/patch-2",
    "merge pull request #975 from spicyj/transaction-no-catch",
    "merge pull request #1016 from benjamn/revert-pure-cjs-until-0.9",
    "merge pull request #1002 from rreverser/pure-cjs",
    "merge pull request #1005 from jjt/boolattr",
    "merge pull request #1012 from jaredly/patch-1",
    "merge pull request #963 from bobeagan/patch-1",
    "merge pull request #1011 from petehunt/complementary-tools",
    "merge pull request #1001 from kmeht/rendercomponentdocs",
    "merge pull request #1010 from petehunt/meteorvid",
    "merge pull request #973 from syranide/hidethekill",
    "merge pull request #985 from petehunt/remove-react-page",
    "merge pull request #995 from contra/patch-1",
    "merge pull request #880 from jbaiter/reactlink_checkbox",
    "merge pull request #981 from benjamn/upgrade-commoner-to-remove-output-directory-locking",
    "merge pull request #980 from benjamn/issue-856-delete-build-modules",
    "merge pull request #964 from bobeagan/patch-2",
    "merge pull request #958 from aymanosman/master",
    "merge pull request #959 from benjamn/commoner-multiple-file-support",
    "merge pull request #480 from syranide/whitespace",
    "merge pull request #952 from jeanlauliac/patch-1",
    "merge pull request #748 from spicyj/private-getvalue",
    "merge pull request #885 from syranide/natext",
    "merge pull request #901 from syranide/80chars",
    "merge pull request #918 from spicyj/npm-react-rec",
    "merge pull request #921 from spicyj/grunt-jsx-no-dev",
    "merge pull request #731 from fabiomcosta/jsxtransform-filename",
    "merge pull request #934 from syranide/minid",
    "merge pull request #924 from zpao/update-deps",
    "merge pull request #914 from chenglou/jsx",
    "merge pull request #861 from andrewdavey/unitless-css-props",
    "merge pull request #928 from nick-thompson/componentwillmount-descrip",
    "merge pull request #852 from spicyj/no-store-mount-image",
    "merge pull request #931 from spicyj/master",
    "merge pull request #822 from chenglou/setstate",
    "merge pull request #892 from rtfeldman/update-shim-docs",
    "merge pull request #881 from spicyj/checkbox-not-checked",
    "merge pull request #897 from spicyj/gh-208",
    "merge pull request #895 from spicyj/zomgperf",
    "merge pull request #884 from spicyj/tut-datatype",
    "merge pull request #876 from spicyj/cb-ctx",
    "merge pull request #864 from spicyj/transition-key-set-faster",
    "merge pull request #878 from spicyj/mount-unmounted",
    "merge pull request #871 from fernandoacorreia/jquery-mobile-example",
    "merge pull request #865 from jergason/link-to-docs-on-keys-warning",
    "merge pull request #862 from cpojer/docs-proptypes",
    "merge pull request #797 from spicyj/should-update",
    "merge pull request #803 from spicyj/gh-788",
    "merge pull request #786 from spicyj/gh-781",
    "merge pull request #778 from syranide/flipwheel",
    "merge pull request #640 from spicyj/immutable-props-2",
    "merge pull request #771 from spicyj/gh-694",
    "merge pull request #780 from syranide/newhasevent",
    "merge pull request #850 from spicyj/docs-ref-unmount",
    "merge pull request #718 from syranide/npmenvify",
    "merge pull request #757 from spicyj/ng",
    "merge pull request #846 from spicyj/docs-nomin",
    "merge pull request #844 from xixixao/patch-1",
    "merge pull request #799 from spicyj/display-name",
    "merge pull request #829 from spicyj/transitiongroup-null-child",
    "merge pull request #773 from spicyj/select-event-ff",
    "merge pull request #772 from spicyj/gh-444",
    "merge pull request #827 from spicyj/jstransform-202",
    "merge pull request #774 from spicyj/img-onload",
    "merge pull request #768 from spicyj/findcomponentroot-err",
    "merge pull request #821 from subtlegradient/subtlegradient/perf-task",
    "bump jstransform version to 2.0.2",
    "merge pull request #808 from spicyj/prefer-textcontent",
    "merge pull request #741 from spicyj/flatten-nonull",
    "merge pull request #789 from spicyj/gh-785",
    "merge pull request #819 from mtharrison/add-more-svg-tags",
    "merge pull request #754 from spicyj/over-and-out",
    "merge pull request #764 from spicyj/browser-source-maps",
    "merge pull request #826 from spicyj/invariant-license",
    "merge pull request #804 from spicyj/examples-no-browserify",
    "merge pull request #823 from spicyj/key-docs",
    "merge pull request #688 from vjeux/community_14",
    "merge pull request #747 from spicyj/currenttarget",
    "merge pull request #818 from daniel15/link-htmltojsx",
    "merge pull request #809 from passy/patch-1",
    "merge pull request #643 from spicyj/scroll-pos",
    "merge pull request #811 from xixixao/issue793",
    "merge pull request #806 from spicyj/patch-4",
    "merge pull request #805 from spicyj/docs-mention-react-art",
    "merge pull request #721 from spicyj/change-bubble-ie",
    "merge pull request #795 from philix/master",
    "merge pull request #783 from benjamn/upgrade-commoner",
    "merge pull request #779 from chenglou/live-err",
    "merge pull request #784 from vjeux/react_dev_tools",
    "merge pull request #725 from cpojer/getinitialstate-invariant",
    "merge pull request #775 from chenglou/doc-fix",
    "merge pull request #765 from spicyj/editorconfig-80",
    "merge pull request #763 from spicyj/gh-762",
    "merge pull request #758 from chenglou/docs-kill-wiki",
    "merge pull request #753 from vjeux/virtual_dom_docs",
    "merge pull request #752 from spicyj/docs-ie8-css",
    "merge pull request #755 from spicyj/cm-scroll",
    "merge pull request #623 from chenglou/tips-communication",
    "merge pull request #746 from petehunt/tip-update",
    "merge pull request #737 from spicyj/docs-ajax-state",
    "merge pull request #687 from vjeux/community_13",
    "merge pull request #736 from spicyj/minify-before-browserify",
    "merge pull request #739 from jhiswin/master",
    "merge pull request #749 from spicyj/docs-ie8",
    "merge pull request #750 from chenglou/docs-clean",
    "merge pull request #732 from chenglou/doc-pragma",
    "merge pull request #734 from ivan/tut-jsx-header",
    "merge pull request #733 from ivan/master",
    "merge pull request #717 from syranide/testkeytransfer",
    "merge pull request #714 from syranide/escapekey",
    "merge pull request #729 from syranide/dragevent",
    "merge pull request #716 from bitshadow/hotfix",
    "merge pull request #730 from syranide/lint80",
    "merge pull request #700 from syranide/100%autofocus",
    "merge pull request #728 from spicyj/gh-724",
    "merge pull request #722 from wincent/typo-fix-01",
    "merge pull request #695 from luigy/patch-1",
    "merge pull request #591 from spicyj/mount-key",
    "merge pull request #713 from syranide/nokeytransfer",
    "merge pull request #705 from chenglou/rm-vid",
    "merge pull request #704 from vjeux/talks_doc",
    "merge pull request #701 from fabiomcosta/react-video-version-note",
    "merge pull request #703 from fabiomcosta/onscroll-doc-ie8-note",
    "merge pull request #702 from syranide/lessmice",
    "merge pull request #642 from cartas/master",
    "merge pull request #607 from syranide/html5key",
    "merge pull request #684 from syranide/ie8dangerousinnerhtml",
    "merge pull request #699 from vjeux/fix_typo",
    "merge pull request #698 from vjeux/fix_compiler",
    "merge pull request #692 from loganfynne/master",
    "merge pull request #686 from vjeux/community_12",
    "merge pull request #662 from benjamn/replace-envify",
    "merge pull request #411 from vjeux/diff_algorithm",
    "merge pull request #691 from daniel15/hackathon40-htmltojsx-master",
    "merge pull request #673 from quark-zju/fix-select-multiple",
    "merge pull request #675 from chenglou/special-attrs",
    "merge pull request #674 from squidsoup/tutorial-jquery-src",
    "merge pull request #668 from nicholasbs/fix-docs-typo",
    "merge pull request #650 from jaredly/patch-1",
    "merge pull request #672 from benjamn/upgrade-populist",
    "merge pull request #661 from benjamn/upgrade-recast",
    "merge pull request #651 from fabiomcosta/patch-2",
    "merge pull request #670 from subtlegradient/subtlegradient/escape-the-things",
    "merge pull request #657 from zpao/grunt-version-check-cleanup",
    "merge pull request #653 from fabiomcosta/patch-3",
    "merge pull request #637 from cpojer/use-rest-params",
    "merge remote-tracking branch 'syranide/textarearows'",
    "merge pull request #646 from spicyj/lint2",
    "merge pull request #648 from bricooke/patch-1",
    "merge pull request #628 from subtlegradient/subtlegradient/travis-task-cleanup",
    "bump version to 0.9.0-alpha",
    "merge pull request #592 from spicyj/guard-fn",
    "bump version of wd",
    "merge pull request #636 from cpojer/rest-parameters-react",
    "merge pull request #635 from subtlegradient/subtlegradient/fixes-webdriver-test",
    "merge remote-tracking branch 'spicyj/depth-not-owner'",
    "merge pull request #617 from subtlegradient/subtlegradient/complexity-task",
    "bump webdriver timeouts",
    "merge pull request #367 from benjamn/findcomponentroot-memory-usage-improvements",
    "merge pull request #630 from spicyj/remove-updatepropertiesbyid",
    "merge pull request #535 from benjamn/commoner-cache-buster",
    "merge pull request #624 from spicyj/remove-registrationnameskeys",
    "merge pull request #626 from spicyj/getunboundedscrollposition-license",
    "merge pull request #602 from chenglou/tips-bind",
    "merge pull request #576 from spicyj/immutable-props",
    "merge pull request #609 from subtlegradient/subtlegradient/fixes-ios-crasher",
    "merge pull request #625 from spicyj/patch-3",
    "merge pull request #537 from hojberg/dont_animate_undefined_children",
    "merge pull request #581 from chenglou/docs-select-value",
    "merge pull request #618 from chenglou/didmout-didupdate-new",
    "merge pull request #599 from chenglou/dl-addons",
    "merge pull request #597 from spicyj/gh-527",
    "merge pull request #593 from spicyj/run-lint",
    "merge pull request #598 from spicyj/gh-516",
    "merge pull request #610 from chenglou/jsx-js",
    "merge pull request #616 from davidhellsing/patch-1",
    "merge pull request #594 from spicyj/skip-spec",
    "merge pull request #595 from spicyj/old-logger",
    "merge pull request #440 from petehunt/new-taglines",
    "merge pull request #596 from spicyj/gh-532",
    "merge pull request #589 from balanceiskey/master",
    "merge pull request #601 from spicyj/commoner-088",
    "merge pull request #575 from spicyj/owner",
    "merge pull request #586 from benjamn/reinstate-reacteventemitter-mocking",
    "merge pull request #584 from spicyj/mock",
    "merge pull request #573 from spicyj/tests",
    "merge pull request #578 from spicyj/patch-2",
    "merge pull request #577 from stillmotion/master",
    "merge pull request #565 from chenglou/classname-htmlfor",
    "merge pull request #495 from syranide/fixutils",
    "merge branch 'chenglou-classset'",
    "merge pull request #539 from spicyj/doc-anchors-again",
    "merge pull request #550 from subtlegradient/subtlegradient/code-coverage",
    "merge pull request #20 from zpao/tips",
    "merge pull request #362 from mcsheffrey/feat-documentation-cookbook",
    "merge pull request #510 from subtlegradient/subtlegradient/run-the-browser-tests-on-saucelabs",
    "merge pull request #529 from benjamn/upgrade-populist",
    "merge pull request #460 from chenglou/opacity-1",
    "merge pull request #526 from benjamn/rewrite-vendor/constants.js",
    "merge pull request #522 from pieter-vanderwerff/blog-footer-position-fix",
    "merge pull request #493 from guidobouman/master",
    "merge pull request #524 from brainkim/suchfailing-wow-sotest",
    "merge pull request #19 from chenglou/title-case",
    "merge pull request #506 from syranide/wheelie8",
    "merge pull request #484 from syranide/jsxie8",
    "merge pull request #492 from chenglou/move-tooling",
    "merge pull request #486 from benjamn/jsx-version",
    "merge pull request #488 from spicyj/gh-473",
    "merge pull request #487 from spicyj/multi-proptypes",
    "merge pull request #451 from subtlegradient/subtlegradient/browser-testing",
    "merge pull request #483 from spicyj/sm-img",
    "merge pull request #482 from chenglou/data-lowercase",
    "merge pull request #481 from andreypopp/master",
    "merge pull request #476 from sanderspies/unused-onselect",
    "merge pull request #453 from petehunt/blogpost2",
    "merge pull request #472 from lrowe/patch-4",
    "merge pull request #458 from chenglou/rm-wrapup",
    "merge pull request #465 from matnel/bug388",
    "merge pull request #457 from benjamn/upgrade-populist",
    "bump populist version to v0.1.4.",
    "merge pull request #18 from chenglou/title-case",
    "merge pull request #17 from chenglou/feat-documentation-cookbook",
    "merge pull request #16 from chenglou/feat-documentation-cookbook",
    "merge pull request #423 from andreypopp/master",
    "merge pull request #446 from brianr/master",
    "merge pull request #438 from spicyj/select-range",
    "bump version to 0.6.0-alpha",
    "bump baseline jstransform and esprima dependency versions",
    "merge branch 'sanderspies-sspi-dom-attribute-process'",
    "merge pull request #426 from sanderspies/sspi-fix-jsx-doc-link",
    "merge pull request #419 from piranha/svg-attrs",
    "merge pull request #370 from zpao/addons",
    "merge pull request #374 from spicyj/workers",
    "merge pull request #407 from samangan/master",
    "merge pull request #378 from spicyj/html-reconciliation",
    "merge pull request #387 from spicyj/exec-fix",
    "merge pull request #384 from chenglou/doc-link",
    "merge pull request #386 from chenglou/unitless-line-height",
    "merge pull request #376 from spicyj/noglobal",
    "merge pull request #375 from danielmiladinov/master",
    "merge pull request #336 from spicyj/jsx-spacing",
    "merge pull request #359 from sanderspies/master",
    "merge pull request #343 from benjamn/fix-if-statement-pruning",
    "merge pull request #351 from spicyj/api-docs",
    "merge pull request #356 from yungsters/master",
    "merge pull request #339 from spicyj/doc-rendering",
    "merge pull request #332 from spicyj/radio-test",
    "merge pull request #344 from benjamn/fix-silent-test-failure-due-to-requiring-react",
    "merge pull request #338 from spicyj/fullpage-tests",
    "merge pull request #274 from chenglou/textarea-patch",
    "merge pull request #205 from spicyj/version",
    "merge pull request #330 from spicyj/warn-class-for",
    "merge pull request #328 from zpao/no-transform-class",
    "merge pull request #287 from spicyj/noglobal",
    "merge pull request #281 from spicyj/radio",
    "merge pull request #267 from spicyj/warn-props",
    "merge pull request #324 from chenglou/backbone-todo-ex",
    "merge pull request #325 from spicyj/elseifdev",
    "merge pull request #323 from benjamn/simplify-bin/jsx",
    "merge pull request #322 from petehunt/build-animations",
    "merge pull request #294 from clayallsopp/better_update_msg",
    "merge pull request #298 from vjeux/pagination",
    "merge pull request #305 from brianr/tutorial-explain-showdown",
    "merge pull request #312 from zpao/docs-redirect",
    "merge pull request #307 from chenglou/todomvc-director",
    "merge pull request #289 from jordwalke/serverrenderingfixes3",
    "merge pull request #280 from jeffmo/jstransform_npm",
    "merge pull request #277 from stoyan/patch-1",
    "merge pull request #251 from spicyj/select-value",
    "merge pull request #275 from spicyj/input-private",
    "merge pull request #268 from spicyj/bind-null",
    "merge pull request #258 from chenglou/patch-3",
    "merge pull request #261 from benjamn/phantomjs-1.9.0-1",
    "merge pull request #249 from pcottle/fixlinks",
    "merge pull request #245 from chenglou/patch-3",
    "merge pull request #207 from thisishugo/patch-1",
    "merge pull request #237 from yungsters/master",
    "merge pull request #241 from gasi/master",
    "merge pull request #224 from spicyj/cb-context",
    "merge pull request #217 from jakubmal/non-browser-env",
    "merge remote branch 'upstream/master' into non-browser-env",
    "merge pull request #218 from chenglou/patch-2",
    "merge pull request #213 from benjamn/remove-stray-nodes-after-each-test",
    "merge pull request #216 from phleet/patch-1",
    "merge pull request #212 from spicyj/docfix",
    "merge pull request #211 from phleet/patch-1",
    "merge pull request #210 from benjamn/rewrite-function.prototype.bind-polyfill",
    "merge pull request #209 from benjamn/speed-up-tests",
    "merge pull request #206 from benjamn/getattribute-instead-of-getattributenode",
    "merge pull request #203 from spicyj/homepage",
    "merge branch 'chenglou-master'",
    "bump version for v0.4.0",
    "merge pull request #200 from spicyj/version",
    "merge branch 'master' into docs-refactor",
    "merge pull request #188 from facebook/docs-refactor",
    "merge remote-tracking branch 'upstream/docs-refactor' into head",
    "merge pull request #199 from chenglou/patch-1",
    "merge pull request #196 from zpao/fix-test-warnings",
    "merge pull request #194 from benjamn/build-jasmine-bundle-with-populist",
    "merge pull request #195 from benjamn/force-upgrade-graceful-fs",
    "merge pull request #193 from benjamn/use-populist-for-testing",
    "merge pull request #178 from paulshen/master",
    "merge pull request #167 from benjamn/issue-166-fix-phantomjs-executability",
    "merge pull request #176 from andreypopp/master",
    "merge pull request #173 from chenglou/patch-4",
    "merge pull request #157 from vjeux/communit_4",
    "merge pull request #153 from lrowe/patch-2",
    "merge pull request #150 from benjamn/commoner-dir-watcher",
    "merge pull request #115 from spicyj/async-state",
    "merge pull request #151 from spicyj/bq",
    "merge pull request #147 from lrowe/patch-1",
    "merge pull request #145 from benjamn/no-jsx-dependency-scanning-by-default",
    "bump commoner version to fix emfile errors.",
    "merge pull request #144 from benjamn/fix-emfile-jsx-errors",
    "bump commoner version to disable dependency scanning by default.",
    "merge pull request #143 from spicyj/ie8-fixes-2",
    "merge branch 'master' into async-state",
    "merge pull request #136 from jeffmo/empty_expressions",
    "merge pull request #135 from vjeux/bugbuster",
    "merge pull request #123 from vjeux/patch-2",
    "bump version to 0.4.0a",
    "merge pull request #126 from vjeux/community_3",
    "merge pull request #132 from petehunt/engines",
    "merge pull request #128 from mathieumg/master",
    "merge pull request #124 from zpao/keep-compare-size-cache",
    "merge pull request #112 from spicyj/check-dom-nodetype",
    "merge pull request #99 from petehunt/invariants",
    "merge pull request #113 from vjeux/community_2",
    "merge pull request #109 from zpao/esprima-dep-as-tarball",
    "merge pull request #110 from vjeux/patch-1",
    "merge remote-tracking branch 'origin/master' into textarea-update-value",
    "merge pull request #107 from remixz/package-json-fix",
    "merge pull request #106 from benjamn/rename-woodchipper",
    "merge pull request #105 from benjamn/fix-options.writeback-bug",
    "merge pull request #103 from benjamn/fix-maxbuffer-exceeded",
    "merge pull request #102 from zpao/fix-transformer",
    "merge pull request #88 from vjeux/jsx_pitfall",
    "merge pull request #95 from groodt/patch-1",
    "merge pull request #96 from groodt/master",
    "merge pull request #97 from spicyj/patch-1",
    "merge pull request #61 from spicyj/getdomnodeid",
    "merge pull request #91 from yungsters/master",
    "merge pull request #92 from spicyj/fix-textchange",
    "merge pull request #89 from vjeux/patch-4",
    "merge pull 75 upstream",
    "merge pull request #67 from vjeux/fb_comments",
    "merge pull request #86 from petehunt/fixed-width-height",
    "merge pull request #68 from vjeux/twitter",
    "merge pull request #75 from spicyj/textchange",
    "merge pull request #84 from spicyj/remove-props",
    "merge pull request #77 from spicyj/componentdidmount-order",
    "merge pull request #81 from benjamn/issue-80-commoner-no-longer-rewrites-require",
    "merge pull request #72 from benjamn/module-cache",
    "merge pull request #69 from jordow/simplifyexample",
    "merge pull request #66 from zpao/sync-latest",
    "merge pull request #58 from spicyj/unmount-nothrow",
    "merge pull request #32 from spicyj/input",
    "merge pull request #56 from petehunt/blogpost",
    "merge pull request #55 from spicyj/docs-fix-2",
    "merge pull request #53 from yungsters/master",
    "merge pull request #43 from vjeux/jsfiddle",
    "merge pull request #41 from divad12/homepage-examples-autobind",
    "merge pull request #49 from paulshen/jekyllrss",
    "merge pull request #52 from zpao/blog-tweaks",
    "merge pull request #48 from petehunt/add-blog",
    "merge pull request #51 from dschafer/patch-1",
    "merge pull request #1 from benjamn/run-tests-in-iframes",
    "merge pull request #42 from vjeux/blog",
    "merge pull request #46 from jordow/chromeinstructions",
    "merge pull request #38 from camspiers/range-attributes",
    "merge pull request #44 from vjeux/script_download",
    "merge pull request #36 from jeffreylin/master",
    "merge pull request #33 from spicyj/docs-fix",
    "merge pull request #34 from zpao/npm-ship-modules",
    "merge pull request #20 from benjamn/issue-12-test-install-package",
    "merge pull request #27 from seiffert/master",
    "merge pull request #31 from spicyj/immutable-state",
    "bump docs version to v0.3.1",
    "merge pull request #29 from petehunt/mixin-docs",
    "bump to 0.3.1",
    "merge pull request #23 from yungsters/jsx-compiler",
    "merge pull request #22 from yungsters/docs",
    "merge pull request #19 from seiffert/submit_button",
    "merge pull request #17 from seiffert/master",
    "merge pull request #11 from zpao/fix-node-module",
    "merge pull request #14 from petehunt/marketing",
    "merge pull request #13 from petehunt/update-docs",
    "merge pull request #9 from chroman/master",
    "merge pull request #8 from yungsters/master",
    "merge pull request #7 from jeffreylin/master",
    "merge pull request #5 from jeffreylin/master",
    "merge pull request #6 from paulshen/apidocs",
    "merge pull request #4 from yungsters/master",
    "merge pull request #3 from paulshen/spellings",
    "merge pull request #2 from paulshen/homebuttons"
  ],
  "short_messages": [
    "preserve header format in artifacts",
    "upgrade flow to 0.220.1",
    "upgrade flow to 0.221.0",
    "enable usememocache for reacttestrenderer",
    "enable enableunifiedsynclane",
    "handle errors in `onheaders`",
    "bootstrap scripts should only emit once",
    "small cleanup in reactfibercompletework",
    "fix for failing id overwrites for postpone",
    "implement a working copy of usememocache",
    "rename unstable_offscreen to unstable_activity",
    "reuse original taskcontroller",
    "support flow `as` expressions in eslint rules",
    "minor parsing improvements and modifications",
    "close response after creating root chunk",
    "allow sync actions",
    "allow hr as child of select",
    "update utils-test.js desciption",
    "pass task.childindex in retryreplaytask",
    "use content hash for facebook-react-native build\"",
    "do not reinsert stylesheets after initial insert",
    "use content hash for facebook-react-native build",
    "useformstate queues actions in wrong order",
    "postponing in the shell",
    "add initial canary changelog",
    "usedeferredvalue loop during popstate transition",
    "upgrade to flow 0.219.0",
    "detriplicate objects",
    "optimize end tags chunks",
    "cleanup turbopack tests",
    "do not write after closing the stream",
    "add proper assertion for stream fix",
    "pass cancellation reason to abort",
    "update error message",
    "react devtools 4.28.4 -> 4.28.5",
    "add stub for usememocache in reactdebughook",
    "prerendering support for usedeferredvalue",
    "initialize session id on the client for logging",
    "use globals to eliminate dead code",
    "error messages",
    "track entangled lanes separately from update lane",
    "disable servercontext in canary",
    "align reactnativeviewconfigregistry flow typing",
    "use esm exports in reactnativeviewconfigregistry",
    "pass children when cloning",
    "enforce \"simple object\" rule in production",
    "add support for onscrollend event",
    "pull implementations from the right react-dom",
    "reduce install network flake",
    "remove prefix from `formstate` option",
    "upgrade server actions to canary",
    "optimistic update does not get reset",
    "taint apis",
    "fix checkbox and radio hydration",
    "fix controlled radios, maybe for real this time",
    "restrict types of keypath when it is known",
    "add missing warning assertion",
    "react devtools 4.28.3 -> 4.28.4",
    "refactor resources",
    "add server context deprecation warning",
    "implement `react-server-dom-turbopack`",
    "pass lanes as argument to performsyncworkonroot",
    "ship diffincommitphase",
    "track postpones in fallbacks",
    "preinitialize module imports during ssr",
    "upgrade to flow 0.217.0",
    "update tracked value after resetting radio group",
    "simplify replaynode data structure",
    "restrict react dom imports from server components",
    "replay postponed paths",
    "reuse rootsegmentid as the suspenseboundaryid",
    "allow passing a reason to `abortstream`",
    "ensure resumable state is serializable",
    "only emit markers if postback state is provided",
    "mpa submissions to a different page",
    "fix root segment ids",
    "various smaller refactors",
    "compare action signatures when reusing form state",
    "reuse state from previous form submission",
    "add dark theme for popup",
    "initialize childindex in task constructor",
    "skip hidden inputs before text instance",
    "emit comment to mark whether state matches",
    "remove unnecessary try/finally blocks",
    "move formatcontext tracking back to the task",
    "react devtools 4.28.2 -> 4.28.3",
    "fixed duplicating panels in firefox",
    "move /static build into /server builds",
    "react devtools 4.28.1 -> 4.28.2",
    "track postponed holes in the prerender pass",
    "action -> target",
    "react devtools 4.28.0 -> 4.28.1",
    "minify production builds to strip comments",
    "scaffolding for useformstate",
    "override .bind on server references on the client",
    "client implementation of useformstate",
    "fix escaping in action error url",
    "don't suspend if showing fallback",
    "fix mount-or-update check in rerenderoptimistic",
    "stylesheet in error ui suspends indefinitely",
    "remove unused file maxints.js",
    "upgrade to 0.215.0",
    "remove haste config",
    "upgrade to 0.214.0",
    "track key path",
    "refactor emit and process functions",
    "implement `preloadmodule` and `preinitmodule`",
    "remove excess validation",
    "float integrity bugfix",
    "add postpone api",
    "should not export functions that are not imported",
    "preload \"suspensey\" images",
    "update readme.md",
    "forgot to gate pushimg",
    "mount suspense fallback set in timed out case",
    "-added open in editor to appear by default",
    "upgrade to 0.213.0",
    "integrate scheduler.yield in schedulerposttask",
    "client and server reference creation into runtime",
    "add `referrerpolicy` option to `reactdom.preload`",
    "emit viewport meta before preloads",
    "'low'`",
    "unify preload queue",
    "uninstall unused webpack 4 packages",
    "disallow hooks in async functions",
    "-removed unused css",
    "don't transpile async/await in tests",
    "add support for map and set",
    "react devtools 4.27.8 -> 4.28.0",
    "detect crashes caused by async client components",
    "remove usemutablesource",
    "specify correct version gate for test",
    "update webpack configurations",
    "support x_google_ignorelist source maps extension",
    "nonce preload support",
    "upgrade to 0.209.0",
    "upgrade to webpack v5",
    "use common float types",
    "devtools cannot be closed correctly",
    "optimize large strings by not escaping them",
    "display nan as string in values",
    "delete processstringchunk",
    "remove xhr support from flight",
    "- fixed dev tools inspect mode on shadow dom",
    "always trigger componentwillunmount in strictmode",
    "preload `bootstrapmodules`",
    "add bundler-less version of rsc using plain esm",
    "clean up enablesyncdefaultupdates flag a bit",
    "preload `bootstrapscripts`",
    "update enablesyncdefaultupdates for www",
    "remove temporary circleci workaround",
    "upgrade to 0.206.0",
    "move enablesyncdefaultupdates to test config",
    "add $flowfixme to fix react native difftrain",
    "react devtools 4.27.7 -> 4.27.8",
    "fix strict mode badge url",
    "updated copyright comment from facebook to meta",
    "remove flight relay dom/native",
    "fix uses hydration in strict mode",
    "fix suspense throttling mechanism",
    "lower suspense throttling heuristic to 300ms",
    "always set rn$stopsurface",
    "reduce dynamic schedulerfeatureflags",
    "fix nightly job to publish to \"canary\" channel",
    "flow upgrade to 0.205.1",
    "change `yarn test` to default to experimental",
    "small flowconfig fixes",
    "add useformstatus to server rendering stub",
    "use native scheduler if defined in global scope",
    "fix backend activation",
    "progressively enhanced server actions",
    "print a hint where to get the token",
    "react devtools 4.27.6 -> 4.27.7",
    "gracefully handle suspending in dom configs",
    "add useformstatus to flight fixture",
    "check for nullish values on reactcustomformaction",
    "useoptimisticstate -> useoptimistic",
    "gate devtools test to fix ci",
    "remove deprecated workflow key from circle config",
    "update while suspended fails to interrupt",
    "allow forms to skip hydration of hidden inputs",
    "add \"canary\" to list of allowed npm dist tags",
    "rename \"next\" prerelease channel to \"canary\"",
    "preinits should support a nonce option",
    "implement experimental_useoptimisticstate",
    "use content hash for react-native builds",
    "unregister content scripts before registration",
    "encode external fizz runtime into chunks eagerly",
    "implement experimental_useformstatus",
    "resolve entangled actions independently",
    "fix double preload",
    "add support for usememocache",
    "replay client actions after hydration",
    "use require to implement script src in tests",
    "fix escaping in reactdominput code",
    "fix file upload in node.js",
    "clean up enableusehook flag",
    "add stub for experimental_useformstatus",
    "turn off enableformactions in meta build",
    "flight support for float",
    "add error boundary to flight fixture",
    "allow node.js 20 to build",
    "rethrow errors from form actions",
    "update broken icon link",
    "invokeguardedcallback without metaprogramming",
    "add two event system cleanup todos",
    "remove react-is download hack",
    "use .slice for all substring-ing",
    "react devtools 4.27.5 -> 4.27.6",
    "initial  async actions support",
    "commit from special branches iff they exist",
    "better html parsing behavior for fizz tests",
    "add `alwaysthrottleretries` flag",
    "add  functions as form actions",
    "update messages / fixed npm view com\u2026",
    "serialize date",
    "encode formdata",
    "add assertions about <input> value dirty state",
    "fix input tracking bug",
    "serialize weird numbers",
    "react devtools 4.27.4 -> 4.27.5",
    "fix style nit from #26623",
    "throttle retries even if everything has loaded",
    "copy to clipboard only on frontend side",
    "convert more suspense tests to use act",
    "provide icon to edge devtools.",
    "convert more suspense tests to use `act`",
    "delete unused `eventtimes` fiber field",
    "remove initoption special case",
    "rename $$$hostconfig to $$$config",
    "remove jnd delay for non-transition updates",
    "rename reactserverformatconfig to reactfizzconfig",
    "refactor some controlled component stuff",
    "`waitforthrow` should diff strings",
    "remove backend dependency from the global hook",
    "move `destroy` field to shared instance object",
    "clean up discrete event replaying",
    "remove no-fallthrough lint suppressions",
    "revert \"cleanup enablesyncdefaultupdate flag \"",
    "inline references to fiber flags",
    "fix logic around attribute seralization",
    "forbid editing class instances in props",
    "fix suspense replaying forward refs",
    "clean up deferrenderphaseupdatetonextbatch",
    "suspend unstyled content for up to 1 minute",
    "move reactdomfloat to react-dom/src/",
    "remove skipunmountedboundaries",
    "warn for aria typos on custom elements",
    "refactor domproperty and cssproperty",
    "allow transitions to interrupt suspensey commits",
    "scan for \"use client\"",
    "convert a few more tests to waitfor test helpers",
    "delete \"triangle\" resuming fuzz tester",
    "move update scheduling to microtask",
    "update suspense fuzz tests to use `act`",
    "add support bigint support",
    "improve tests that deal with microtasks",
    "improve script injection logic",
    "remove disablenativecomponentframes",
    "remove unnecessary circle_ci_api_token checks",
    "codemod more tests to waitfor pattern",
    "suspensily committing a prerendered tree",
    "codemod some expiration tests to waitforexpired",
    "fix flow types of useeffectevent",
    "make flow suppressions explicit on the error",
    "missing file name in package.json",
    "update rollup to 3.x",
    "remove layout effect warning on the server",
    "react devtools 4.27.3 -> 4.27.4",
    "suspenselist incorrectly forces a fallback",
    "should not throw for children of iframe or object",
    "fix enableclientrenderfallbackontextmismatch flag",
    "react devtools 4.27.2 -> 4.27.3",
    "update links of docs and api",
    "small flow upgrade to 0.202.0",
    "add revision file to react-fbsource-import",
    "fix docs link for usesyncexternalstore",
    "update new docs links for react-dom",
    "don't prerender siblings of suspended component",
    "fix broken workflow",
    "add artifacts for react native to compiled",
    "suspend commit without blocking render",
    "fix sizebot not working due to missing auth token",
    "fix download_base_build_for_sizebot",
    "fix use of stale props in fabric events",
    "enable enablefilteremptystringattributesdom flag",
    "fix a test case in reactupdates-test",
    "updated comment message",
    "remove hydrate entry point from www builds",
    "fix devtools tests after internal test changes",
    "sync from oss-experimental, not oss-stable",
    "remove unstable_flushcontrolled",
    "disable ie innerhtml workaround behind a flag",
    "undo dependency injection of batching",
    "delete unused dom files",
    "allow empty string to be passed to formaction",
    "support context as renderable node",
    "remove redundant `use`",
    "remove internal `act` from devtools e2e test",
    "support promise as a renderable node",
    "add disablelegacycontext test gates where needed",
    "fix proxying with compression",
    "exhaust queue even if something throws",
    "update float tests to check for specific errors",
    "add undefined and iterable support",
    "add support for returning `undefined` from render",
    "add reply encoding",
    "close messagechannel port to prevent leak",
    "call scope function after an async gap",
    "don't preload nomodule scripts",
    "update more tests to not rely on sync queuing",
    "codemod redundant async act scopes",
    "use node's messagechannel to queue task",
    "refactor reactfabrichostcomponent",
    "codemod act -> await act",
    "convert class equivlance tests to flushsync",
    "make version in build artifacts match",
    "delete non-awaited form of act",
    "codemod act -> await act",
    "codemod act -> await act",
    "move internalact to internal-test-utils package",
    "codemod act -> await act",
    "specify node.js 16 as minimum for dev",
    "use content hash for facebook-www builds",
    "upgrade to node.js 18",
    "upgrade flow to 0.201",
    "support iterables in flight",
    "infinite act loop caused by wrong shouldyield",
    "convert reactlazy-test to waitfor pattern",
    "codemod tests to waitfor pattern",
    "send server reference error chunks to the client",
    "fix bug in processing existing elements",
    "codemod tests to waitfor pattern",
    "codemod tests to waitfor pattern",
    "codemod tests to waitfor pattern",
    "codemod tests to waitfor pattern",
    "codemod tests to waitfor pattern",
    "codemod tests to waitfor pattern",
    "improve troubleshooting in readme",
    "add back accidentally deleted test comments",
    "remove renderer.js from extension build",
    "codemod tests to waitfor pattern",
    "add preconnect and prefetchdns to rendering-stub",
    "waitfor, waitforall, waitforpaint",
    "show ssr support with css",
    "cleanup enablesyncdefaultupdate flag",
    "support type for reactdom.preload options",
    "remove script tag immediately",
    "fix null bytes written at text chunk boundaries",
    "switch to mount dispatcher after use when needed",
    "permanently polyfill for raf in devtools_page",
    "prod` to `yarn start`",
    "make github sha clickable for easier debugging",
    "remove eventtime field from class update type",
    "fail yarn build if any bundle fails to build",
    "process mutation records before disconnecting",
    "distribute bundles more evenly into ci shards",
    "update closure compiler",
    "change commit message for difftrain commigs",
    "add test case for semver major comparisons",
    "update rollup config to use modulesideeffects",
    "rename yarn build-combined to just yarn build",
    "remove flow check in electron app.js",
    "remove dependency on node-fetch",
    "react devtools 4.27.1 -> 4.27.2",
    "don't recommend deprecated debugger script",
    "add `scale` as a unitless property",
    "remove unguarded getrootnode call",
    "remove redundant test steps",
    "remove unnecessary flowconfig ignore paths",
    "fix and update attribute-behavior fixture",
    "minor jest upgrade",
    "migrate testrunner from jasmine2 to jest-circus",
    "treat displayname as undefined",
    "update jest printbasicprototype config",
    "enable lti inference mode",
    "model float on hoistables semantics",
    "update jest escapestring config",
    "delete blocks fixture",
    "only restore yarn caches on exact key hits",
    "update to jest 29",
    "add support for svg `transformorigin` prop",
    "prefer jsx in reactnoop assertions",
    "fix main",
    "improve error handling in extension",
    "cache yarn instead of node_modules",
    "revert the outer module object to an object",
    "upgrade to 0.199.0",
    "fix async test in react reconciler",
    "exit if circleci request fails",
    "refactor flight encoding",
    "serialize promises through flight",
    "support reactdom.render without crashing",
    "add edge server builds for workerd / edge-light",
    "remove unused dependency 'abort-controller'",
    "remove unused package jest-mock-scheduler",
    "revert \"hold host functions in var\"",
    "fully roll out warnaboutspreadingkeytojsx",
    "remove deletedtreecleanuplevel feature flag",
    "add enabletrustedtypesintegration flag back in",
    "remove finddomnode www shim",
    "rejct towarndev if given callback throws",
    "fix local build for extension",
    "update danger.js token",
    "include removal of scheduler/tracing in changelog",
    "set enabletrustedtypesintegration to false",
    "remove warnaboutdeprecatedlifecycles feature flag",
    "upgrade prettier",
    "test case for stack overflow in reactfizzserver",
    "reuse variable \"remoterepodir\"",
    "remove useless parameter",
    "remove duplicate jsresourcereferenceimpl mock",
    "enable exact_empty_objects",
    "batch sync, default and continuous lanes",
    "remove unused flow suppressions",
    "upgrade to flow 0.196.3",
    "enable enforce_local_inference_annotations",
    "fix function type for flow",
    "add perf regression test page in shell",
    "remove vestigial suspense batching logic",
    "add `fetchpriority` to `<img>` and `<link>`",
    "fix small typo - \"mode\"",
    "changelog.md change parentheses position",
    "revert \"fork reactdomsharedinternals for www \"",
    "resubmit add hydrationsynclane",
    "eslint upgrade to use hermes-eslint",
    "add support for setnativeprops to fabric",
    "remove forked bundle",
    "offscreen add attach",
    "fix unwinding context during selective hydration",
    "rename experimental useevent to useeffectevent",
    "fix typo in reactdomresourcevalidation.js",
    "react devtools 4.27.0 -> 4.27.1",
    "fix tests for when float is off",
    "tostring children of title",
    "remove forked bundle",
    "revert \" remove forked bundle\"",
    "add revision and revision_transform to output",
    "revert recent hydration changes",
    "strip @license from files",
    "fork reactdomsharedinternals for www",
    "use original commit message",
    "fix link to reactdomhostconfig in reconciler docs",
    "add component name to strictmode error message",
    "hold host functions in var",
    "add flow types to reactfiberhooks",
    "remove reconciler fork",
    "fix null artifactsurl and add more logging",
    "react devtools 4.26.1 -> 4.27.0",
    "allow async blocks in `todev`",
    "remove reconciler fork",
    "add bun streaming server renderer",
    "fix precomputed chunk being cleared on node 18",
    "resubmit add hydrationsynclane",
    "revert \"add synchydrationlane\"",
    "fix incorrect build path",
    "tweak folder structure",
    "add ref cleanup function",
    "add synchydrationlane",
    "reorganize build folders for difftrain",
    "track thenablestate alongside other hooks",
    "check thenable instead of thenablestate",
    "fix jest cache for transform-react-version-pragma",
    "reuse hooks when replaying a suspended component",
    "allow more hooks to be added when replaying mount",
    "pass thenablestate to replaysuspendedunitofwork",
    "don't reset work loop until stack is unwound",
    "don't suspend if there are pending updates",
    "force unwind work loop during selective hydration",
    "bug fix for hydrating fibers",
    "feature detect getrootnode",
    "don't disappear layout effects unnecessarily",
    "add support for hostsingleton & hostresource",
    "remove check in renderdidsuspenddelayifpossible",
    "unwrap sync resolved thenables without suspending",
    "fix type check for null",
    "clean up vestige of useopaqueidentifier",
    "allow uncached io to stablize",
    "in work loop, add enum of reasons for suspending",
    "setup for adding data attributes streaming format",
    "reuse memoized result from first pass",
    "handle noscript context for resources",
    "flight client error stack",
    "device storage support",
    "track thenable state in work loop",
    "unify promise switch statements",
    "revert yieldy behavior for non-use suspense",
    "support <base> as resource",
    "bug fix when resolving cache",
    "revert fetch instrumentation to only rsc",
    "revert yieldy behavior for non-use suspense",
    "fix transposed escape functions",
    "upgrade to manifest v3",
    "support all links as resources",
    "support meta tags as resources",
    "support `use` in `act` testing api",
    "non-stable function identity",
    "let reactdom initialize in rsc",
    "support title tags as resources",
    "remove feature flag enablestricteffects",
    "add fetch instrumentation to dedupe fetches",
    "fill in the flow missing type",
    "add cache api",
    "add detach to offscreen component",
    "flow: typing of scheduler",
    "update copyright header to meta",
    "move resource acquisition to mutation phase",
    "add support for scripts and other enhancements",
    "suspending in shell during discrete update",
    "flow upgrade to 0.190",
    "enable usememocachehook for reactnative-fb build",
    "add script to generate inline fizz runtime",
    "fix download-build script",
    "add jest entry file for external-server-runtime",
    "initialize usememocache with sentinel values",
    "react devtools 4.26.0 -> 4.26.1",
    "split cache into its own dispatcher",
    "extract fizz instruction set to build macro",
    "implement hostsingleton fiber type",
    "dynamic feature flag for ref access warning",
    "legacyhidden shouldn't defer effects",
    "remove shallow renderer tests",
    "server render fork for react-dom",
    "support script preloads",
    "track resources in different roots separately",
    "remove unused suppressions",
    "inference_mode=constrain_writes",
    "flow upgrade to 0.176",
    "flow upgrade to 0.182",
    "add rulesofhooks support for `use`",
    "flow upgrade to 0.175",
    "flow upgrade to 0.188",
    "run codemod to remove existential type",
    "flow upgrade to 0.152",
    "flow upgrade to 0.185",
    "flow upgrade to 0.154",
    "flow upgrade to 0.155",
    "flow upgrade to 0.146",
    "flow upgrade to 0.153",
    "flow upgrade to 0.145",
    "flow upgrade to 0.143",
    "types first in react-native-renderer",
    "complete types first migration",
    "types first in shared",
    "add nodejs 18.x as devengine",
    "well formed exports for smaller packages",
    "updated link in contributing",
    "fix devtools typos and grammar",
    "remove extra space in wedge.js",
    "types first in reconciler",
    "update circleci docker image",
    "delete old appveyor config",
    "float for stylesheet resources",
    "use  property shorthand",
    "put modern strictmode behind a feature flag",
    "fix rulesofhooks test case indentation",
    "reacthooks.js - delete emptyobject",
    "remove max_workers setting",
    "remove outdated comments.",
    "reconcilation -> reconciliation",
    "refactor useevent",
    "documentation typos",
    "experimental_useevent",
    "more word doubles removed",
    "fix eventlistener fork",
    "removed duplicated words in comments",
    "fix duplicate words tests",
    "check useevent references instead",
    "update rulesofhooks with useevent rules",
    "add ref to offscreen component",
    "add some missing types in react-reconciler",
    "typing of scheduler",
    "fix memory leak after repeated setstate bailouts",
    "double invoked effects on suspended children",
    "move digest from errorinfo to error instance",
    "grammar. removed doubles of the word \"the\".",
    "react devtools 4.25.0 -> 4.26.0",
    "reorganize react-dom internals to match react",
    "updated the url link for serve",
    "read username using gh in release script",
    "well_formed_exports for devtools",
    "handle rejections to avoid uncaught rejections",
    "fix webpack chunk loading",
    "response.readroot -> use",
    "experimental_useevent",
    "show devtools icons in edge browser panel",
    "upgrade to 0.142",
    "extract node_modules cache key computation",
    "usememocache implementation",
    "try to make caching more reliable",
    "straightford explicit types",
    "add simple explicit export types to devtools",
    "upgrade to 0.140",
    "more accurate end time",
    "centralize calls to patchconsoleusingwindowvalues",
    "add early exit to strict mode",
    "reactfiberhotreloading recursive type",
    "add some test coverage for some error cases",
    "upgrade to 0.127",
    "prettier ignore removed and fixed",
    "upgrade to 0.131",
    "enable exact_by_default",
    "implicit-inexact-object=error",
    "change variable names, etc.",
    "enable unsafe-addition error",
    "fix fiber typed as any",
    "experimental_use for server components and ssr",
    "remove explicit object syntax",
    "upgrade to 0.132",
    "experimental_use for ssr",
    "update to flow from 0.97 to 0.122",
    "experimental_use for server components",
    "don't hide fragment if it has a key",
    "experimental_use",
    "its type is container",
    "remove custom suppress comment config",
    "only allow capitalized component names",
    "run `yarn prettier-all`",
    "run prettier",
    "minor error handling fixes",
    "fix flow type",
    "fix code highlighting in vscode",
    "remove symbol polyfill",
    "experimental_use",
    "add support for webpack async modules",
    "supportsmicrotask -> supportsmicrotasks",
    "test the node-register hooks in unit tests",
    "allow functions to be used as module references",
    "highlight rn elements on hover",
    "add events necessary for click to inspect on rn",
    "align strictmode behaviour with production",
    "fix typo from directores to directories",
    "scaffolding for usememocache hook",
    "fix typo from perfomrance to performance",
    "update fixtures/flight to webpack 5",
    "add tag field to marker instance",
    "resume immediately pinged fiber without unwinding",
    "clarify folders in react devtools readme #25077",
    "clean up unused deletion flag",
    "revert last grammatical edit",
    "add offscreen test",
    "add api to force scheduler to yield for macrotask",
    "bug fix for <app /> vs. <counter />",
    "add 4.5.0 release to eslint rules changelog",
    "log more events + metadata",
    "reused components commit with timing as new ones",
    "extract layout effects to separate functions",
    "add simple usage events for internal logging",
    "add transistion callbacks to hydrateroot",
    "react devtools 4.24.7 -> 4.25.0",
    "implement offscreen in fizz",
    "onmarkerprogress",
    "use recursion to traverse during layout phase",
    "tracing marker name change in update warning",
    "add ontransitionprogress callback",
    "move flag check into each switch case",
    "delete marker name change tests",
    "move flag check into each switch case",
    "wrap try-catch directly around each user function",
    "wrap try-catch directly around each user function",
    "land forked reconciler changes",
    "delete partial renderer ssr implementation",
    "code cleanup",
    "move ref commit effects inside switch statement",
    "add missing null checks to offscreeninstance code",
    "change transition type passed pending transitions",
    "refactor code to remove offscreeinstance todos",
    "add test gate alias for offscreen",
    "resign timeline profiler sidebar",
    "land forked reconciler changes",
    "refactor transition tracing root code",
    "fix bugs with component stacks",
    "front-end for profiling event stack",
    "add column number to viewsourcelinefunction",
    "log page url in internal build",
    "track nearest suspense handler on stack",
    "revert \" refactor transition tracing root code \"",
    "fix excess calls to the transition start callback",
    "fix enabletransitiontracing flag",
    "add link to diff view",
    "add tracing markers",
    "clean up devtools code",
    "aborting early should not infinitely suspend",
    "fix build-for-devtools script",
    "component stacks backend",
    "abort flight",
    "rename segment to task in flight",
    "add support for multiple transitions on root",
    "fix usedeferredvalue to match reconciler change",
    "extra space",
    "fix typo in dangerfile.js",
    "offscreen instance is null during setstate",
    "push transition when offscreen becomes visible",
    "move the error creation to be lazy",
    "typo",
    "enable no-longer experimental",
    "changelog for 18.2",
    "update changelog release date for 18.2.0",
    "land enableclientrenderfallbackontextmismatch",
    "create/process marker complete callback",
    "fix cache and transitions pop order",
    "land enableclientrenderfallbackontextmismatch",
    "land enablesuspenselayouteffectsemantics flag",
    "add tracing marker stack",
    "check for infinite update loops even if unmounted",
    "find best renderer when inspecting",
    "fix misapplying prod error opt-out",
    "fix check_error_codes ci job",
    "remove extra server context argument",
    "revealing a hidden update",
    "support abort reasons",
    "run devtools regression tests once a day",
    "persist build artifacts to workspace",
    "disallow complex children in <title> elements",
    "track revs that intentionally fork the reconciler",
    "refactor of interleaved  update queue",
    "support errorinfo in onrecoverableerror",
    "remove copypasta from sizebot download job",
    "download to build instead of base-build",
    "download build artifacts",
    "allow aritfacts download even if ci is broken",
    "run e2e regression tests hourly on circle ci",
    "devtools-test-shell regression app fixes",
    "implement useid hook",
    "react devtools 4.24.6 -> 4.24.7",
    "add snapshot testing on e2e test failure",
    "improve text separator byte efficiency",
    "send errors down to client",
    "devtools] e2e regression testing app",
    "regression-proof e2e tests",
    "add option for source maps when running tests",
    "make devtools regression build",
    "handle github rate limiting response",
    "add jest-cli --reactversion argument",
    "add react version pragma to tests",
    "regression test jest config",
    "move hydration code out of normal suspense path",
    "remove dependency on build artifacts mirror",
    "use inline snapshots for storestresstestsync",
    "fix scripts folder text",
    "added support for suspense boundaries",
    "remove enableflipoffscreenunhideorder",
    "fix a bug in console.log with non-string args",
    "support document rendering",
    "react devtools 4.24.5 -> 4.24.6",
    "fix forward ref",
    "unify jsresourcereference interfaces",
    "constrain the container type of createportal",
    "fix race condition when unmounting fibers",
    "react devtools 4.24.4 -> 4.24.5",
    "fix regex for formatewithstyles function",
    "fork reactsymbols",
    "add test for hiding children after layout destroy",
    "fixed wrong method call for lru cache",
    "hide children of offscreen after destroy effects",
    "fill in date in changelog for 18.1",
    "add missing item to the changelog",
    "add @andarist to changelog credits",
    "add date to changelog",
    "react `version` field should match package.json",
    "changelog for 18.1",
    "revert #24236",
    "forwardref et al shouldn't affect if props reused",
    "usedeferredvalue should reuse previous value",
    "land enableselectivehydration flag",
    "land enablelazyelements flag",
    "fix typo that happened during rebasing",
    "add offscreen queue",
    "fix suspense fallback throttling",
    "fix pushtransition for transition tracing",
    "fix exhaustive deps check for unstable vars",
    "move passive flag",
    "remove unnecessary check",
    "remove create-subscription from the list",
    "add transition tracing transitions stack",
    "delete create-subscription folder",
    "add pendingpassivetransitions",
    "remove console.error in reactfiberlane",
    "pipeable stream perf",
    "don't call cwu if already unmounted",
    "wrap try-catch directly around each user function",
    "use recursion to traverse during mutation phase",
    "move update flag check into each switch case",
    "inline commitwork into commitmutationonfiber",
    "remove wrong return pointer warning",
    "add fallback shim for abortcontroller",
    "add back lost cache test",
    "combine commitwork into single switch statement",
    "react devtools 4.24.3 -> 4.24.4",
    "moved mutation code to passive",
    "update types for nonidlelanes and idlelane",
    "update create-subscription readme",
    "fix warning about setstate in useeffect",
    "update attribute fixture snapshot",
    "remove unnecessary flag check",
    "don't mute hydration errors forcing client render",
    "update some readmes",
    "fix import in example",
    "warn on setstate in useinsertioneffect",
    "add more tests for suppresshydrationwarning",
    "fix import in readme",
    "rename controls to pipeablestream",
    "update example render for react v18",
    "changed transitions type to array<transition>",
    "test suite for hydration diff warnings",
    "update @next version",
    "fix for ssr2 fixture not working locally",
    "fix build script for react dev tools",
    "remove react 18 issue template",
    "add 4.4.0 release to eslint rules changelog",
    "add custom error type for future new hooks",
    "fix changelog typos",
    "show changelog before minor/patch prompt",
    "update changelog.md",
    "add a missing breaking change to changelog",
    "react devtools 4.24.2 -> 4.24.3",
    "add react 18 changelog",
    "update local package.jsons for 18",
    "fix usage of console.error to prevent transform",
    "devtools imports",
    "remove rc suffix from versions",
    "fix validateiterable call",
    "ignore duplicate welcome \"message\" events",
    "fix fixture",
    "add node 17 to devengines",
    "clean up selective hydration / event replay flag",
    "react devtools 4.24.1 -> 4.24.2",
    "store throws a specific error type",
    "enablecacheelement flag",
    "avoid conditions where control flow is sufficient",
    "update devtools readmes",
    "flag for text hydration mismatch",
    "fix createroot container signature",
    "add authorization header to artifacts request",
    "add offscreen state node",
    "fix dispatch config type for skipbubbling",
    "update changelog.md",
    "react devtools 4.24.0 -> 4.24.1",
    "add skipbubbling property to dispatch config",
    "fix use of hydrateroot in devtools test",
    "revert accdientally merged pr",
    "pass children to hydration root constructor",
    "react devtools 4.23.0 -> 4.24.0",
    "add isrootdehydrated function",
    "add support for lazy components in flight server",
    "don't flush empty segments",
    "gate legacy hidden",
    "fixed edge case bug in profiler",
    "prevent unhandledpromiserejection if shell errors",
    "flight support for servercontext",
    "add more feature flag checks",
    "write chunks to a buffer with no re-use",
    "export debug function for fb",
    "move oncompleteall to .allready promise",
    "support add/removeeventlistener",
    "show devtools backend and frontend versions in ui",
    "refactor cache code",
    "move createroot/hydrateroot to react-dom/client",
    "react devtools 4.23.0 -> 4.24.0",
    "fix false positive hydration warnings",
    "use 'h' to separate main id from hook index",
    "re-trigger load events for img elements on commit",
    "revert to client render on text mismatch",
    "remove flushcontrolled from experimental releases",
    "deprecate rendertonodestream",
    "warn if rendersubtreeintocontainer is called",
    "add warnings for common root api mistakes",
    "to beginning and end of every useid",
    "remove object-assign polyfill",
    "land warnonsubscriptioninsidestarttransition flag",
    "re-arrange main reactfeatureflags module",
    "re-add reentrancy avoidance",
    "remove createmutablesource from stable exports",
    "remove numeric fallback of symbols",
    "split writechunk into void and return value",
    "change reactbatchconfig.transition",
    "remove ./src/* export from public build",
    "log a recoverable error whenever hydration fails",
    "enable enablecache on test renderer native",
    "delete vestigial retryaftererror logic",
    "land skipunmountedboundaries experiment",
    "allow suspending in the shell during hydration",
    "simplify cache pool contexts",
    "gracefully handle empty \"xstyle\" prop values",
    "add transition callbacks to createroot",
    "add <tracingmarker> component boilerplate",
    "allow suspending outside a suspense boundary",
    "multiple hydration errors in same render",
    "fix wrong context argument to `apply`",
    "resolve default onrecoverableerror at root init",
    "remove deprecated wildcard folder mapping",
    "update the exports field",
    "add exports field to react-dom",
    "remove path resolution from internal forks plugin",
    "add onerrorshell callback",
    "revert \"update node.js version for ci \"",
    "update node.js version for ci",
    "remove logic for multiple error recovery attempts",
    "disable avoidthisfallback support in fizz",
    "revert 4f5449",
    "remove main from scheduler `index.js`",
    "readme fixes",
    "suppress act warnings in devtools tests",
    "gracefully handle empty \"xstyle\" prop values",
    "timeline profiler refactor",
    "react devtools 4.22.1 -> 4.23.0",
    "prettier",
    "replace array.isarray with module isarray",
    "fix change events for custom elements",
    "warn when a callback ref returns a function",
    "add rn_fb bundles for react-is",
    "add --no-show-signature to \"git show\" commands",
    "add enabletransitiontracing feature flag",
    "add exports field to react-refresh's package.json",
    "update package.json",
    "console message fixed for devtools",
    "run devtools e2e tests on circle ci",
    "correct typing errors detected in several files",
    "parseexportnamesinto specifiers typo",
    "fix variable name",
    "made the variable name more meaningful",
    "only show strictmode badge on root elements",
    "remove unnecessary clearcontainer call",
    "react-devtools-inline readme updates",
    "react devtools 4.22.0 -> 4.22.1",
    "refactored devtools test shell for e2e",
    "don't skip writing updated package.json",
    "add custom element property support behind a flag",
    "log errors occurring or reported to the frontend",
    "support mulitple devtools instances per page",
    "use `next` as prerelease label",
    "remove unstableavoidthisfallback from oss",
    "don't override use-sync-external-store peerdeps",
    "devtools should inject itself for xhtml pages too",
    "fix peer deps for use-sync-external-store",
    "updated devtools changelog",
    "add ci job to check npm dependencies",
    "correctly log errors reported from the store",
    "react devtools 4.21.0 -> 4.22.0",
    "remove hydrate option from createroot",
    "enable continuous replay flag",
    "implement identifierprefix option for useid",
    "replay capture phase for continuous events",
    "decouple dispatching from attempttodispatchevent",
    "log version in internal logger",
    "remove unused flag",
    "document can be `null`, not just `undefined`",
    "track currently replaying event",
    "fork dispatch function based on the flag",
    "update attribute-behavior fixture",
    "timeline search",
    "add `imagesizes` and `imagesrcset` to know props",
    "treat empty string as null",
    "double check wasmounted",
    "migrate from cliengine to the new eslint class.",
    "esacpe -> escape",
    "add test selectors to experimental build",
    "remove 'packages/shared/invariant.js'",
    "proof of concept for e2e tests using playwright",
    "allow publishing with `beta` tag",
    "move suspenselist to experimental channel",
    "fixed typos",
    "fix comment typo",
    "grammatical typo for test description",
    "re-enable usemutablesource in internal rn",
    "dont restore profiling data if we're profling",
    "filter empty commits  from profiler",
    "fix typos",
    "fix typos",
    "react-refresh@0.11.0",
    "eslint-plugin-react-hooks@4.3.0",
    "support typescript namespace syntax",
    "changelog for eslint-plugin-react-hooks@4.3.0",
    "accept json file in import fileinput",
    "expose css vars to reach-ui portal components",
    "improved snapshot view",
    "delete unused circle ci scripts.",
    "fix small typos",
    "add open in editor for fb",
    "fix useid in strict mode",
    "improved workers filenames in devtools-inline",
    "upgrade useid to alpha channel",
    "fix module-boundary wrappers",
    "remove experimental useopaqueidentifier api",
    "useid",
    "re-land #22292",
    "pin ci to node 14",
    "react devtools 4.20.2 -> 4.21.0",
    "upgrade usesyncexternalstore to alpha channel",
    "fix passing strings as chunks",
    "reapply changes from #22631",
    "fix comment typo",
    "initial implementation of cache cleanup",
    "remove warning for dangling passive effects",
    "hydrate using suspensecomponent as the parent",
    "react devtools 4.20.0 -> 4.20.1",
    "include edge in browser name detection",
    "upgrade useinsertioneffect to stable",
    "fix typos",
    "react devtools 4.20.1 -> 4.20.2",
    "enable cache in test renderer",
    "de-emphasize react internal frames",
    "add marks for component effects",
    "react devtools 4.19.2 -> 4.20.2",
    "reattachment of the splash page event listeners",
    "enable experimental cache api in www testrenderer",
    "improved workers filenames in devtools-core",
    "nested useopaqueidentifier references",
    "duplicate value in variable",
    "react devtools 4.19.1 -> 4.19.2",
    "register logger for standalone devtools",
    "added devtools extension link for microsoft edge",
    "usesyncexternalstoreextra",
    "remove duplicate error code",
    "react devtools 4.19.0 -> 4.19.1",
    "log basic usage events",
    "reopen #22481 fixed modal closing issue",
    "codemod invariant -> throw new error",
    "fall back to local build",
    "release pooled cache reference in complete/unwind",
    "fixed link on documentation",
    "fb convention",
    "react devtools 4.18.0 -> 4.19.0",
    "show suspense resource .displayname",
    "remove usereducer eager bailout",
    "extract queueing logic into shared functions",
    "add isarray in devtools utils",
    "make root.unmount synchronous",
    "remove reentrancy hack",
    "rename onreadytostream to oncompleteshell",
    "devtools encoding supports multibyte characters",
    "improve dev errors if string coercion throws",
    "errors should not \"unsuspend\" a transition",
    "add hasownproperty to devtools backend",
    "hydration errors should force a client render",
    "lazily parse indexed map sections",
    "remove assignid mechanism",
    "root.hydrate -> root.isdehydrated",
    "update node.js to latest v14.17.6 lts",
    "never attach ping listeners in legacy suspense",
    "hook names optimizations",
    "revert \" retry error on client \"",
    "retry error on client",
    "scrape warning messages in ci",
    "add back usemutablesource temporarily",
    "fix sizebot mistakenly detecting deleted files",
    "delete all but one `build2` reference",
    "local scripts",
    "move build_devtools_and_process_artifacts",
    "delete unused ci jobs",
    "don't patch console during first render",
    "-> download-build-artifacts",
    "sizebot",
    "add commit_sha to build directory",
    "move lint job to new, combined ci workflow",
    "write artifacts to `build` instead of `build2`",
    "correct typos",
    "usesyncexternalstore react native version",
    "move dom fixtures test job to main ci workflow",
    "display actual reactdom api name in root type",
    "fix links in packages/react-devtools/readme.md",
    "implement usesyncexternalstore on server",
    "react-devtools\\overview.md --> fixed typos",
    "enable hook names in standalone app",
    "fix memory leak via alternate fiber pointer",
    "clear performance marks after measuring",
    "implement getserversnapshot in userspace shim",
    "cleanup after failure if no unstaged changes",
    "delete usemutablesource implementation",
    "fix typo in types.js",
    "add avoidthisfallback support",
    "verticalscrollview -> fixed  typos",
    "replace-fork should not clear uncommitted changes",
    "fix typo in view.js",
    "add useinsertioneffect",
    "reuse old selection if possible",
    "fixed broken build script --unsafe-partial flag",
    "fix link",
    "import prefixed native api",
    "warn if callback ref returns a function",
    "add missing param to fetchfrompage",
    "clean up my \"hard to read\" code",
    "check for store mutations before commit",
    "revert suspense cache thenable.catch change",
    "add named hooks support to react-devtools-inline",
    "devtools suspense cache cleanup",
    "detect subscriptions wrapped in starttransition",
    "reorder variant feature flags",
    "remove duplicate test",
    "add `onresize` event to video elements",
    "add usesyncexternalstore to react-debug-tools",
    "wire up the native api for usesyncexternalstore",
    "remove state queue from usesyncexternalstore",
    "implement usesyncexternalstore in fiber",
    "only call originalpositionfor once",
    "update pull_request_template.md",
    "fix typo in reactupdatepriority-test.js",
    "build reactdomserver on codesandbox ci",
    "support eslint 8.x",
    "update pull_request_template.md",
    "typo fixed",
    "update pull_request_template.md",
    "support eslint 8.x",
    "fix typo in reactdomserverformatconfig.js",
    "initial shim of usesyncexternalstore",
    "react devtools 4.17.0 -> 4.18.0",
    "improve named hooks network caching",
    "added react native feature flags",
    "don't display hook index of usecontext",
    "add utils for perfomance marks",
    "set up use-sync-external-store package",
    "react devtools 4.16.0 -> 4.17.0",
    "automated devtools release process",
    "console logging for strictmode double rendering",
    "add maxyieldms feature flag in scheduler",
    "add feature flags for scheduler experiments",
    "yarn replace-fork should not silently error",
    "fix a few typos",
    "keep query params in extracted source map urls",
    "fix typo in preprocessdata.js",
    "add options for disabling some features",
    "set up test infra for dynamic scheduler flags",
    "replace \"source-map\" library with \"source-map-js\"",
    "add tests for isinputpending",
    "fix tooltip wheel event regression",
    "'occured' -> 'occurred' in comment",
    "inline snapshots",
    "add screenshots to scheduling profiler",
    "devtools 4.15.0 -> 4.16.0",
    "add network measures",
    "make parsehooknames a separate bundle",
    "fixed reactsharedinternals export in umd bundle",
    "check for continuous input events",
    "updated devtools changelog",
    "canvas views clip by default",
    "add script to generate devtools changelog text",
    "updated @reach packages to fix unmount bug",
    "devtools 4.14.0 -> 4.15.0",
    "devtools/function context change",
    "improve warnings and add unit tests",
    "scheduling profiler: add vertical scroll bar",
    "renamed a misnamed variable",
    "fix typo in parsehooknames.js",
    "misc ux and performance improvements",
    "added lane labels and durations to react measures",
    "re-add old fabric offscreen impl behind flag",
    "1` to offscreen view container",
    "typos fixed",
    "highlight updates with memoized components",
    "scheduling profiler",
    "disable sizebot on devtools rull request",
    "refactor imperative theme code",
    "add react component measures",
    "scheduling profiler ux changes",
    "optimized devtools extension images",
    "some remaining instances of master to main",
    "fix reparenting bug in legacy suspense mount",
    "optimize images yarn command",
    "added custom view cursors",
    "separate unit tests for reactfabrichostcomponent",
    "ux tweaks",
    "hide new/updated nodes in already hidden tree",
    "improve native events ui",
    "add native events to the scheduling profiler",
    "export getinspectordataforinstance api",
    "parse named source ast in a worker",
    "import scheduling profiler into devtools profiler",
    "legacyhidden should not toggle effects",
    "move offscreen logic from suspense fiber",
    "fix global reference to promise",
    "typo fix",
    "update test comments with explanations",
    "refactor \"disappear\" logic into its own traversal",
    "set icon on macos",
    "refactor \"reappear\" logic into its own traversal",
    "devtools 4.13.5 -> 4.14.0",
    "clean up flushsync flow types",
    "fix typo",
    "remove named hooks feature flag",
    "don't hide/unhide unless visibility changes",
    "allow user to enter commit number",
    "named hooks supports \"cheap-module-source-map\"",
    "cache local reference to global promise",
    "add comment support to `@gate` pragma",
    "run persistent tests in more configurations in ci",
    "allow components to render undefined",
    "adjust error stack columns numbers by 1",
    "update link to flow",
    "fix link to fbjs",
    "restore devtools console message",
    "batch updates, even in legacy roots",
    "check if already rendering before flushing",
    "use `act` in reactfabric tests",
    "inline discreteupdates",
    "add test for #21837",
    "revert \"use `act` in reactfabric tests \"",
    "update contributing.md",
    "update contributing.md",
    "added devtools contributing guide",
    "use `act` in reactfabric tests",
    "reverting recent flushsync changes",
    "delete duplicate doctype",
    "don't dehydrate hook source filenames",
    "support flow syntax",
    "replace unbatchedupdates with flushsync",
    "update contributing.md",
    "support named hooks for >1 module in a bundle",
    "replace flushdiscreteupdates with flushsync",
    "show hook names based on variable usage",
    "ignore build2/ when linting",
    "simplify `discreteupdates`",
    "delete batchedeventupdates",
    "update tests to fix warnings/errors",
    "add test for bypassing queuemicrotask",
    "always keep disabled logs in the second pass",
    "move error logging to update callback",
    "resolve to return value of scope function",
    "fix settings dialog scroll/size bug in firefox",
    "bypass microtask for \"default sync\" updates",
    "add tests for invokeguardedcallback",
    "delete test-utils implementation of `act`",
    "pass jest usestderr flag when debugging",
    "fix failing test",
    "remove unused variable",
    "remove internal `act` builds from public modules",
    "remove unstable_createroot from internal builds",
    "`act` should work without mock scheduler",
    "fix for failed suspense layout semantics",
    "throw when `act` is used in production",
    "fix fixture lockfile manually",
    "add missing package lock",
    "use npm lockfile for fixture",
    "true}) -> hydrateroot",
    "update apis",
    "don't use default args",
    "clean up partial renderer entry points",
    "set deletedtreecleanuplevel to 3",
    "remove invokeguardedcallback from commit phase",
    "wrap eventhandle-specific logic in a flag",
    "update react_18.md",
    "update react_18.md",
    "update react_18.md",
    "update react_18.md",
    "added react 18 issue template",
    "export react native `attributetype` types",
    "add concurrentroot property to reactnativetypes",
    "deprecate reactdom.render and reactdom.hydrate",
    "fabric get current event priority",
    "remove space from tag arguments",
    "allow alpha tags",
    "update next react version",
    "fix tag validation",
    "fix typo in comment",
    "fix typo in comment",
    "fix typo in comment",
    "expiration time -> lanes",
    "fix css",
    "tweak fixture",
    "always call flush if it exists",
    "add another fixture",
    "fix typo in bridge.js",
    "minor fixes for warning parity",
    "implement component stacks in dev for warnings",
    "support `@latest` in prepare-release-from-ci",
    "prepare semver  releases in ci",
    "use reactversions module as package allowlist",
    "add single source of truth for package versions",
    "fix reference to wrong variable",
    "add feature to trigger an error boundary",
    "fix <select> check of defaultvalue/value type",
    "delete an unused field",
    "resolve the true entry point during tests",
    "expose fizz in stable builds",
    "disable strict effects for legacy roots",
    "enabled profiling feature flags for oss release",
    "format error message",
    "turn on enablesyncdefaultupdates everywhere",
    "updated devtools bug workflow",
    "mount/unmount layout effects",
    "removed _debugid field from fiber - issue #21558",
    "fix fizz exported types",
    "oss feature flag updates",
    "devtools 4.13.4 -> 4.13.5",
    "fixed localhost url check",
    "support an element mounting before its owner",
    "update jest to v26",
    "add github action to check for bug repro",
    "add 4.10.4 to changelog",
    "add 4.13.4 changelog",
    "update devtools_bug_report.yml",
    "update devtools_bug_report.yml",
    "add key to inspected-element error boundary",
    "preparing devtools 4.13.2 -> 4.13.3 for release",
    "devtools 4.13.3 -> 4.13.4",
    "updated devtools changelog for 4.13.3 release",
    "reload all roots after fast refresh force remount",
    "clean up scheduler forks",
    "set allowconcurrentbydefault = true",
    "fixed version range npm syntax",
    "update devtools_bug_report.yml",
    "infer format from artifact filename",
    "update devtools_bug_report.yml",
    "update devtools_bug_report.yml",
    "devtools 4.13.1 -> 4.13.2",
    "update entry point exports",
    "renamed function in error log issue #21446",
    "prepare devtools 4.13.1 release",
    "version in nvmrc",
    "improve devtools bug template text",
    "add back root override for strict mode",
    "allow dangerouslysetinnerhtml in <option>",
    "add github api query to bug report template",
    "strictmode includes strict effects by default",
    "devtools store emits errors before throwing",
    "createroot api is no longer strict by default",
    "flushsync changes priority inside effect \"",
    "re-land \"delete lanepriority type \"",
    "fix legacy suspense false positive",
    "update time-slicing demo",
    "flushsync changes priority inside effect \"",
    "added test fixture for scheduling profiler",
    "add unstable_concurrentupdatesbydefault",
    "revert \"delete lanepriority type \"",
    "preparing devtools 4.12.4 -> 4.13.0 release",
    "updated devtools changelog for 4.10 releases",
    "remove unnecessary type cast",
    "devtools supports multiple modal dialogs at once",
    "add bridge protocol version backend/frontend",
    "fix export",
    "update supported devengines",
    "escape style values",
    "implement lazy components and nodes",
    "use tomatchinlinesnapshot for dehydrated values",
    "remove unstable scheduler/tracing api",
    "add fb specific streaming api and build",
    "delete unreferenced type",
    "don't flush sync at end of discreteupdates",
    "don't flush discrete at end of batchedupdates",
    "continuous updates should interrupt transitions",
    "remove `flushdiscreteupdates` from end of event",
    "fix sloppy factoring in `performsyncworkonroot`",
    "flip tuple order of usetransition",
    "do nothing except disable time slicing",
    "devtools version bump 4.12.3 -> 4.12.4",
    "wire up the fixture",
    "restore context after an error happens",
    "remove @octokit/rest dependency from devtools",
    "revert expiration for retry lanes",
    "add dynamic flags to react native",
    "fix classes",
    "devtools version bump 4.12.1 -> 4.12.2",
    "devtools version bump 4.12.2 -> 4.12.3",
    "devtools pre-filter gh issues by repo",
    "two more fixes",
    "random fixes",
    "devtools fork console patching logic",
    "fix devtools test target",
    "remove layoutstatic check from commit phase",
    "search for pre-existing gh issues",
    "gate a test",
    "implement hooks",
    "add unsupported portal/scope components",
    "devtools should use reconciler version",
    "fix reentrancy bug",
    "update code of conduct",
    "prevent reading canonical property of null",
    "remove obsolete sharedarraybuffer eslint config",
    "implement new context",
    "classes follow up",
    "implement useopaqueidentifier",
    "default to bleeding edge configuration",
    "don't rely on `finishedlanes` for passive effects",
    "fragments and iterable support",
    "support more empty types",
    "add post-commit hook",
    "make time-slicing opt-in",
    "remove textarea special case from child fiber",
    "remove unnecessary processupdatequeue",
    "fix typo in comment",
    "passive effect updates are never sync",
    "implement classes",
    "fix \"couldn't locate all inline snapshots\"",
    "delete unused ishost check",
    "prepare recursive loop for more types",
    "revert \"apply prettier \"",
    "usemodaldismisssignal bugfix",
    "revert \"remove redundant initial of isarray \"",
    "fix de-opt caused by out-of-bounds access",
    "apply prettier",
    "proposed new suspense layout effect semantics",
    "reland remove redundant initial of isarray",
    "remove redundant initial of isarray",
    "remove redundant initial of hasownproperty",
    "don't pass internals to callbacks",
    "don't warn for casing if it's a custom element",
    "remove my deadname from authors",
    "react-refresh@0.10.0",
    "support nesting of starttransition and flushsync",
    "support callthrough hocs",
    "remove checkreact",
    "log all errors to console.error by default",
    "add global onerror handler",
    "flush discrete passive effects before paint",
    "move not shared to client",
    "don't import star from reactdom",
    "remove redundant setupdatepriority call",
    "currenteventwiplanes",
    "rename suspendedwork to task",
    "use lane to track root callback priority",
    "use `act` in fuzz tester to flush expired work",
    "fix plurals",
    "delete enablediscreteeventflushingchange",
    "remove scheduler indirection",
    "delete lanepriority type",
    "add formatcontext and refactor work",
    "support special html/svg/mathml tags to suspend",
    "add aspectratio to the unitless list",
    "remove redundant if statement",
    "flushsync changes priority inside effect",
    "move sync task queue to its own module",
    "use highest priority lane to detect interruptions",
    "remove lanepriority from computeexpirationtime",
    "delete syncbatchedlane",
    "entangled expired lanes with synclane",
    "add separator comment between text nodes",
    "handle optional chained methods as dependency",
    "add pointerenter/leave priorities",
    "use eventpriority to track update priority",
    "make opaque eventpriority type a lane internally",
    "oops, it's 2021 already",
    "add react-reconciler/constants entry point",
    "move priorities to separate import to break cycle",
    "fail build on deep requires in npm packages",
    "remove already completed comment",
    "react 17.0.2 changelog",
    "fix a broken link",
    "remove discrete lanes and priorities",
    "replace some flushexpired callsites",
    "delete immediatequeuecallbacknode",
    "remove unstable_changedbits",
    "use synclane for discrete event hydration",
    "expose a method to abort a pending request",
    "fixed primitive hook badge colors for light theme",
    "expose maxboundarysize as an option",
    "land enablesyncmicrotasks",
    "touch instrumentation interface",
    "show which hooks  changed when profiling",
    "add commit and post-commit durations to ui",
    "speed up devtools local build script",
    "sync `reactnativetypes` from react native",
    "fix native event batching in concurrent mode",
    "clean up unused functions from ssr",
    "update react-reconciler readme",
    "basic fizz architecture",
    "stop tracking roots with pending discrete updates",
    "remove blocking mode",
    "unify inputdiscretelane with synclane",
    "cleanup tests using runwithpriority.",
    "land enablenativeeventpriorityinference",
    "remove decoupleupdatepriorityfromscheduler",
    "remove scheduler priority from hydration",
    "ensure experimental builds exists on windows",
    "trigger build",
    "land enablediscreteeventmicrotasks",
    "remove runwithpriority internally",
    "swap log with cbrt for commit bar height",
    "switch callsites over to update lane priority",
    "improve devtools profiler commit-selector ux",
    "reset `subtreeflags` in `resetworkinprogress`",
    "lazily propagate context changes",
    "move context comparison to consumer",
    "land enablesetimmediate feature flag",
    "update react native types",
    "fix react native flow types",
    "add unstable_strictmodelevel to test renderer",
    "typo fix for the word 'psuedo'",
    "schedule sync updates in microtask",
    "revert \"remove blocking mode and blocking root \"",
    "update scheduling profiler webpack config",
    "add suspenselist to react-is",
    "remove blocking mode and blocking root",
    "add lane labels to scheduling profiler marks",
    "add `supportsmicrotasks` to the host config",
    "bailout in sync task if work is not sync",
    "publish to release channels sequentially",
    "omit transitionhydrationlane from transitionlanes",
    "fix typo in comment for react-devtools-shared",
    "land enablenoninterruptingnormalpri",
    "use constant commit sha",
    "fix typo",
    "warn if static flag is accidentally cleared",
    "restore inspect-element bridge optimizations",
    "remove fakecallbacknode",
    "request to update email",
    "use a single lane per priority level",
    "make remaining empty lanes transition lanes",
    "ci job to check that forks are in sync",
    "support named export declaration",
    "parallelize flow in ci",
    "fix comments of markupdatelanefromfibertoroot",
    "move scheduler priority check into reactdom",
    "add more non-react events to the priority list",
    "lane enabletransitionentanglement flag",
    "apply #20778 to new fork, too",
    "default updates should not interrupt transitions",
    "don't shift interleaved updates to separate lane",
    "use lanes instead of priority event constants",
    "reduce some constant duplication",
    "assign different lanes to consecutive transitions",
    "decouple event priority list from event name list",
    "combine stable and experimental results",
    "fix wrong order of base, head arguments",
    "fix umd bundles by removing usage of global",
    "fix cron syntax",
    "fix codesandbox build command",
    "auto-publish prereleases every weekday",
    "autopublish prereleases using head of main branch",
    "update release documentation",
    "empty commit to replace \"broken\" head of main",
    "implement ci job that publishes prereleases",
    "remove the fundamental internals",
    "add silent to codesandbox config",
    "add command to publish preleases via ci",
    "fallback if github status is stuck as \"pending\"",
    "add --ci option to publish script",
    "update sizebot to new workflow",
    "add publish workflow, triggerable via api request",
    "delete consolidatebundlesizes script",
    "remove --build flag from release scripts",
    "fix release script --commit param",
    "some release script fixes",
    "land interleaved updates change in main fork",
    "add automatic retry to download script",
    "add `--commit` param to release scripts",
    "fix cache refresh bug that broke devtools",
    "queue discrete events in microtask",
    "add queue microtask to host configs",
    "entangle overlapping transitions per queue",
    "improve tests that use discrete events",
    "remove lazy invokation of segments",
    "unsuspend all lanes on update",
    "land rest of effects refactor in main fork",
    "flow ignore new build2 directory",
    "delete remaining references to effect list",
    "remove references to deletion flag",
    "avoid .valueof to close #20594",
    "convert snapshot phase to depth-first traversal",
    "use update lane priority in work loop",
    "make it easier to test many caches",
    "fix can't expand prop value in some scenario",
    "land #20595 and #20596 in main fork",
    "fix failures  when renaming across devices",
    "fix prod build in ci/codesandbox",
    "convert mutation phase to depth-first traversal",
    "update devtools to use getcachefortype api",
    "convert layout phase to depth-first traversal",
    "migrate remaining tests to combined workflow",
    "add rudimentary support for cache to devtools",
    "retry with fresh otp if publish fails",
    "detach deleted fiber's alternate, too",
    "react native fixes for new inline errors feature",
    "add flight packages to experimental allowlist",
    "add userefresh hook to react-debug-tools",
    "migrate build tests to combined workflow",
    "fix eslint crash on empty react effect hook",
    "build stable and experimental with same command",
    "deletion effects should fire parent -> child",
    "migrate prepare-release-from-ci to new workflow",
    "display shortcuts for prev/next search result",
    "expose dev-mode warnings in devtools ui",
    "hardcoded allowlist for publishing packages",
    "remove passivestatic optimization",
    "convert passive unmount phase to tree traversal",
    "don't clear static flags in resetworkinprogress",
    "convert passive mount phase to tree traversal",
    "defer more field detachments to passive phase",
    "don't clear other flags when adding deletion",
    "increase the clickable area of the prop value",
    "fix webpack watch mode issue",
    "support concatenated modules in webpack plugin",
    "use lazy reference for existing modules",
    "add passivestatic to trees with passive effects",
    "add back disableschedulertimeoutinworkloop flag",
    "suspenselist causes lost unmount",
    "make pg and fs server-only",
    "fix webpack plugin to use chunk groups",
    "turn on double effects for www test renderer",
    "rename the shared entry point",
    "put .server.js at the end of bundle filenames",
    "rename internal cache helpers",
    "add read-only fs methods",
    "double invoke effects in __dev__",
    "clear `deletions` in `detachfiber`",
    "fixed typo",
    "cache react-fetch results in the node version",
    "add rudimentary fs binding",
    "fix typo",
    "fix typo",
    "fix typo in react-reconciler docs",
    "fix module id deduplication",
    "react devtools 4.10.0 -> 4.10.1",
    "remove `catch` from scheduler build",
    "track deletions using an array on the parent",
    "track subtreeflags et al with bubbleproperties",
    "add placement bit without removing others",
    "tweaked devtools build command slightly",
    "react devtools 4.10.0 -> 4.10.1",
    "add more devtools tests for react.lazy",
    "fix flight prod fixture",
    "add rudimentary pg binding",
    "fork reactfiberlane",
    "minimal webpack plugin",
    "add getcachefortype to the dispatcher",
    "disallow *.server.js imports from any other files",
    "failing test for client reconciliation",
    "ignore node_modules when printing warnings",
    "add disablenativecomponentframes flag",
    "speed up local \"build-for-detools\" target",
    "fixed invalid devtools work tags",
    "add flight specific entry point for react package",
    "support named exports from client references",
    "exclude fixtures from flow config",
    "improve nested-update checks",
    "missing unmount after re-order",
    "remove return pointer mutation",
    "add separate childdeletion flag",
    "add node esm loader and register entrypoints",
    "add --reverse option to replace-fork script",
    "reset new fork to old fork",
    "autofix imports when running replace-fork",
    "properly reset profiler nested-update flag",
    "check for deletions in `hadnomutationseffects`",
    "add new effect fields to old fork, and vice versa",
    "pass extra cli args through to eslint",
    "add node esm build option",
    "scheduling profiler tweaks",
    "remove noinline directives from new commit phase",
    "support esm module loaders in flight fixture",
    "add warning if return pointer is inconsistent",
    "expand the fixture to use require.extensions",
    "dedupe module id generation",
    "simplify relay row protocol",
    "use-subscription@1.5.1",
    "widen peer dependency range of use-subscription",
    "perform hasownproperty check in relay flight",
    "remove css-sourcemap's when bundling for dist",
    "set return pointer when reusing current tree",
    "devtools 4.9.0 -> 4.10.0",
    "add \"nested-update\" phase to profiler api",
    "fix path for schedulerfeatureflags",
    "fix typo",
    "useimperativemethods to useimperativehandle",
    "revert unmounting error boundaries changes",
    "add workspaces hash to yarn cache key",
    "server + client components",
    "serialize pending server components by reference",
    "make devtools websocket retry delay configurable",
    "don't block devtools commit hook",
    "rename",
    "typo fix in comment",
    "add relay specific react native build of flight",
    "refactor schedulerhostconfigs",
    "remove blocks",
    "prevent inlining into recursive commit functions",
    "allow node 15.x",
    "traverse commit phase effects iteratively",
    "update changelog.md",
    "17.0.1",
    "remove usage of array#fill",
    "add react 17 changelog",
    "link to the blog post",
    "devtools fix props editing for host components",
    "use react-shallow-renderer@16.14.1 in yarn.lock",
    "include ref callbacks in oncommit duration",
    "improved profiler commit hooks test",
    "devtools 4.8.2 -> 4.9.0 bump",
    "fix crashes caused by rogue proxies",
    "use bitwise or to define flag masks",
    "add visibility flag for hiding/unhiding trees",
    "remove last schedulepassiveeffectcallback call",
    "remove set bookkeeping for root events",
    "remove passive flag from \"before mutation\" phase",
    "don't double-invoke effects in legacy roots",
    "update changelog for 16.14, 15.7, 0.14.10",
    "revise onbeforeblur propagation mechanics",
    "downgrade source-map-support for stack \"fix\"",
    "legacy jsx runtimes",
    "deprecate old test script commands",
    "fix bad null check in devtools highlight code",
    "add devtools forked feature flags",
    "update outdated links and fix two broken links",
    "don't warn for key, but error for ref",
    "enable eager listeners statically",
    "add runtime errors for non-serializable values",
    "treat <time> tag as a normal html tag.",
    "remove unnecessary error overriding in",
    "fix - prevent phishing attacks",
    "debug tracing tests for cpu bound suspense",
    "fix codestyle for typeof comparison",
    "remove reactjs.org version check \"cheat\"",
    "improve browser extension iframe support \"",
    "temporarily disable profiler commit hooks flag",
    "suspense for cpu-bound trees",
    "refactor layout effect methods",
    "remove disableschedulertimeoutinworkloop flag",
    "improve wording for inline devtools readme.md",
    "create synthetic events lazily",
    "remove array.from from hot path",
    "improve browser extension iframe support",
    "offscreen double invoke effects",
    "don't consumer iterators while inspecting",
    "profiler onrender only called when we do work",
    "fixed broken profiler test",
    "don't call oncommit et al if there are no effects",
    "improve browser extension iframe support \"",
    "enable source maps for devtools production builds",
    "improved devtools context test harness",
    "drop ie 11 support",
    "use single quotes in getcomponentname return",
    "don't trigger lazy in dev during element creation",
    "consolidate commit phase hook functions",
    "removed outdated comment about fb.me link",
    "fix `act` bundle size regression",
    "remove passive intervention flag",
    "moved resetchildlanes into complete work",
    "add scheduling profiler deployment ci job",
    "allow preparing rc from npm",
    "use passive flag to schedule onpostcommit",
    "improve devtools editing interface",
    "show symbols used as keys in state",
    "improve browser extension iframe support",
    "eslint-plugin-react-hooks@4.1.2",
    "updates mailmap entries",
    "make passiveness and priority non-configurable",
    "update changelog.md",
    "remove double space in test name",
    "don't visit passive effects during layout phase",
    "flush timers at end of scope",
    "eslint-plugin-react-hooks@4.1.1",
    "update changelog.md",
    "listen to onscroll during hydration",
    "run with ts parsers >= 2.x",
    "decouple public, internal act implementation",
    "set dispatcher for duration of performwork",
    "effect clean up when deleting suspended tree",
    "combine flags and subtreeflags types",
    "decrease expiration time of input updates",
    "rename effect fields",
    "add fast refresh",
    "add checkbox toggle for boolean values",
    "add \u2387 + arrow key navigation to devtools",
    "revert \"revert \"remove onscroll bubbling flag \" \"",
    "fix typo in comment",
    "redesign with devtools styling",
    "remove withsuspenseconfig",
    "add `starttransition` as a known stable method",
    "use gate pragma instead of if",
    "replace suspenseconfig object with an integer",
    "remove config argument from usetransition",
    "clean up timeoutms-related implementation details",
    "disable timeoutms argument",
    "add suspenselist to devtools",
    "enable eager listeners in open source",
    "lint rule to forbid access of cross-fork fields",
    "add react.starttransition",
    "remove remaining references to effect list",
    "tweaked landing page styles",
    "fix devtools crash when inspecting document.all",
    "fix movementx/y polyfill with capture events",
    "use global render timeout for cpu suspense",
    "revert \"remove onscroll bubbling flag \"",
    "unspecified error for ie11",
    "add flow to syntheticevent",
    "fix incorrect copy-paste in test",
    "import react concurrent mode profiler",
    "provide profiling bundle for react-reconciler",
    "remove unnecessary return statements",
    "property list values should show whitespace",
    "add missing param to safelycalldestroy",
    "open two same tabs on firefox",
    "change destroy to safelycalldestroy",
    "always skip unmounted/unmounting error boundaries",
    "append text string to <text> error message",
    "react cannot render in shadowroot",
    "eslint-plugin-react-hooks@4.1.0",
    "update changelog.md",
    "leak strict mode with umd builds",
    "remove `didtimeout` check from work loop",
    "remove wasteful checks from `shouldyield`",
    "move commit passive unmount/mount to commitwork",
    "report constant constructions",
    "refactor fb.me redirect link to reactjs.org/link",
    "parallelize jest in ci",
    "update outdated lockfile",
    "speed up yarn cache in circle",
    "fix emoji character displayed in chrome extension",
    "call posttask directly",
    "rename test files",
    "re-throw unhandled errors",
    "indent a command",
    "fix double-firing mouseenter",
    "remove unused argument",
    "fix command",
    "support inner component _debugowner in memo",
    "nesting fixture",
    "add feature flag for setting update lane priority",
    "re-add discrete flushing timestamp heuristic",
    "use rn fork in default branch of feature flags",
    "remove unused argument from call to jest method",
    "typo in react release scripts",
    "don't unmount siblings of deleted node",
    "unnecesary path on domeventproperties",
    "add static version of passive subtree tag",
    "turn off new component stacks for react native",
    "remove onscroll bubbling flag",
    "remove the deprecated react flare event system",
    "revert \"support untagged releases \"",
    "support untagged releases",
    "support untagged releases",
    "allow publishing untagged releases",
    "check passivestatic instead of passive",
    "check for passive effects on the root fiber",
    "move passive logic out of layout phase",
    "fix ongot/lostpointercapture events",
    "add posttask browser scheduler implementation",
    "remove event constants",
    "add regression tests for all events",
    "passive effects traversal",
    "event propagation test suite",
    "don't rely on `didtimeout` for syncbatched",
    "add schedulerhostconfig fork for post task",
    "add enterkeyhint",
    "remove `callbackid` field from fiberroot",
    "remove `timeout` option from `schedulecallback`",
    "bail-out of attaching non-delegated listeners",
    "delegated all capture events",
    "re-added toggle event to non-delegated events",
    "follow up fix to 19452",
    "update my mailmap entries",
    "don't emulate bubbling of the scroll event",
    "add invalid/close events to <dialog> element",
    "fix issue with capture phase non-bubbling events",
    "upgrade art fixtures to babel 7",
    "fix issue #19362 + test",
    "sync react native types",
    "remove syntheticevent subtypes",
    "fix scope issue",
    "revise comment + add non-bubbling event test",
    "generate rn renderers for stable builds",
    "regression test for media event bubbling",
    "move event things around",
    "track event times per lane on the root",
    "sync latest usefocus/usefocuswithin changes",
    "added the word \"events\" to clear ambiguousness.",
    "remove form event delegation flag",
    "use focusin/focusout for onfocus/onblur",
    "tidy up react scope api",
    "use jest-environment-jsdom-sixteen",
    "fix bug with enablelegacyfbsupport click handlers",
    "devtools 4.8.1 -> 4.8.2",
    "did-bailout flag",
    "disable devtools minification",
    "don't build shallow renderer umd bundles",
    "fix suspense-wrapping heuristic",
    "improve getid guard",
    "fix mistake in react devtools",
    "revert \"scheduling profiler updates \"",
    "fix createeventhandle bug with comment containers",
    "scheduling profiler updates",
    "use retrylanes instead of event time",
    "eslint-plugin-react-hooks@4.0.8",
    "eslint-plugin-react-hooks@4.0.7",
    "tweak wording",
    "react devtools 4.8.1",
    "bubble onsubmit/onreset behind a feature flag",
    "build react-dom/test-utils in codesandbox deploy",
    "revise usefocus/usefocuswithin",
    "make break-on-warn off by default",
    "updated devtools test snapshots",
    "extract some of the tidy up changes from 19278",
    "refactor algorithm for next lanes to work on",
    "fixed test script for devtools build config",
    "show hoc names in profiler",
    "devtools 4.7.0 -> 4.8.0",
    "updates electron version for react-devtools",
    "fix typo in overview doc for react-devtools",
    "move scope api ref resolution to mutation phase",
    "make on*capture events use capture phase",
    "add dedicated lanepriority for suspense retries",
    "update readme.md",
    "text improvement",
    "improve readability of isvalidelementtype",
    "eslint-plugin-react-hooks@4.0.6",
    "add console group methods to dev disabled groups",
    "use a custom jsdom fork",
    "add regression test for #19269",
    "handle optional member chains",
    "update useevent implementation",
    "refactor createeventhandle signature",
    "fix event replaying logic",
    "fix master tests",
    "refine event registration + event signatures",
    "fix flow from #19239",
    "add ssl support to react devtools standalone",
    "enable createeventhandle api for www test builds",
    "add some type detection",
    "handle test-cli failure case for ci",
    "remove event config",
    "remove testutils dependency on event registry",
    "make event plugin injection statically resolvable",
    "add flow to modernchangeeventplugin",
    "remove dead code from modern event system",
    "enable modern event system and delete dead code",
    "don't bailout after suspending in legacy mode",
    "move responder tests and remove dead code",
    "run reactbrowsereventemitter test on bundles",
    "fix development mode hang when iframe is removed",
    "remove react flare keyboard responder",
    "revert \"add regression test for #18497 \"",
    "eslint-plugin-react-hooks@4.0.5",
    "make link https",
    "add regression test for #18497",
    "move top_before_blur to bubble phase",
    "add new test cli",
    "remove unnecessary tag end from commitranked view",
    "fix react-runtime `main` field",
    "handling sparse array when no-inline callback",
    "legacy mode + devtools \"force fallback\"",
    "use notimestamp instead of -1",
    "clarifications",
    "fix spelling",
    "fix spelling errors and typos",
    "remove shoulddeprioritizesubtree from host config",
    "enable component stacks everywhere except rn",
    "land lanes implementation in old fork",
    "remove synamic modern event system flag for fb",
    "enable component stack locations in www",
    "infinite loop in beforeblur event",
    "build fb specific isomorphic bundles",
    "prettier wants me to change this",
    "add break-on-warn feature",
    "remove unnecessary throw catch",
    "remove www builds of fetch",
    "add lazy elements behind a flag",
    "add simple node build",
    "upgrade closure compiler",
    "revert autofix lint",
    "rename 17 to 18 in warnings",
    "disable devtools build job to unblock master",
    "lint classic www build",
    "remove regenerator from noop",
    "spawning hydration in response to idle update",
    "only prepare extra stack frames if needed",
    "eslint-plugin-react-hooks@4.0.4",
    "fix rollup validate script",
    "prefer recommended eslint configuration",
    "document `additionalhooks` option",
    "remove reactcomponenttreehook from internals",
    "remove unstable-fire from package.json",
    "cleaned up passive effects experimental flags",
    "eslint-plugin-react-hooks@4.0.3",
    "make legacyhidden match semantics of old fork",
    "react-refresh@0.8.3",
    "resolve an edge case where ref.node can be falsy",
    "warn if mutablesource snapshot is a function",
    "usemutablesource hydration support",
    "fix highlight updates canvas side problem",
    "improve error boundary",
    "add `unstable_isnewreconciler export to fb builds",
    "add unstable_isnewreconciler to dispatcher",
    "remove event pooling in the modern system",
    "don't count timed out  subtrees in base duration",
    "remove disablehiddenpropdeprioritization flag",
    "missing mode check in resetchildlanes",
    "mode that defers without hiding",
    "devtools editable props tweaks",
    "remove an unused issue_template.md",
    "devtools 4.6.0 -> 4.7.0",
    "add mit license to use-subscription package",
    "add component highlighting to profiler",
    "simplify logic for mutable workinprogresssources",
    "updated devtools changelog for upcoming changes",
    "add test for displayname on react.memo components",
    "update inaccurate mapchildren comment",
    "skip reading element for imported data",
    "add legacyhidden to server renderer",
    "improve hoc search ux",
    "disable <div hidden /> api in old fork, too",
    "add expando prop to disabledlog function",
    "fix usemutablesource tearing bug",
    "\"entangle\" instead of expiring",
    "eslint-plugin-react-hooks@4.0.2",
    "update changelog",
    "fix presslegacy preventdefault issue",
    "update eslint version to v7 \"",
    "fix profiler root change error",
    "usewithouteffectsuffix fix",
    "add experimental reactdom.createeventhandle",
    "add scaffolding for createeventhandle",
    "add missing changelog item",
    "add item to eslint hooks plugin changelog",
    "support eslint 7.x",
    "update eslint version to v7",
    "eslint-plugin-react-hooks@4.0.1",
    "revert \"hard code enablecomponentstacks in www \"",
    "revise ancestor logic",
    "show inspectedelement `key` in right pane",
    "don't cut off effects at end of list if hydrating",
    "hard code enablecomponentstacks in www",
    "detect and prevent render starvation, per lane",
    "disable profiler commit filtering",
    "fix bug in enterleave",
    "updated devtools unstable_ api references",
    "disable setstate before mount in legacy mode",
    "put render phase update change behind a flag",
    "follow redirect when downloading tarball",
    "remove remaining blocks",
    "drop the blocks",
    "fix enterleave plugin logic",
    "experimental test selector api",
    "fix blocks fixture",
    "ensure target ancestors are only host nodes",
    "add shell to fixture",
    "add unstable prefix to experimental apis",
    "improve dispatching queue",
    "fix stale data on updates",
    "misc updates",
    "allow optionalmemberexpression in deps",
    "remove old cm exports",
    "remove debugging invariant",
    "react-refresh@0.8.2",
    "build flight runtime for www",
    "add changelog for eslint-plugin-react-hooks",
    "eslint-plugin-react-hooks@4.0.0",
    "always insert registrations after var",
    "refine experimental scopes api",
    "rename flight to transport",
    "don't build react-data for www",
    "move legacy hidden api to new internal fiber type",
    "update bundle configs to not build some packages",
    "give unresolved lazy a name in component stack",
    "initial lanes implementation",
    "update react-refresh readme",
    "add preload to fetch",
    "use native fetch",
    "refactor elementlistenermap",
    "move hide/unhide logic to offscreen component",
    "always wrap suspense children in fragment",
    "allow node 14.x",
    "reschedule at same priority",
    "add offscreen component type",
    "initial implementation of cache and data/fetch",
    "wrap primary tree in offscreen fiber type",
    "add client fixture",
    "make expirationtime an opaque type",
    "register onmouseenter for portals",
    "clean up module",
    "remove unnecessary stack",
    "add suffix _timeout consistently in scheduler",
    "don't dedupe using the stack",
    "revert \"pressable click fix \"",
    "pin rnw to canary",
    "remove null sibling",
    "improved \"native\" component stacks",
    "avoid passing custom stacks to console.error",
    "upgrade fbjs-scripts",
    "pressable click fix",
    "fix selectionchange bug",
    "refine the heuristics around beforeblur/afterblur",
    "build react-dom/server in codesandbox ci",
    "revert \"revert focus event prs \"",
    "fix for #18657",
    "remove unstable-native-dependencies bundle",
    "revise isfiberinsidehiddenorremovedtree",
    "make flow work with your editor",
    "fix incorrect unmounted state update warning",
    "remove redundant expiration time comparisons",
    "dev command",
    "further cleanup to before/after blur",
    "revert focus event prs",
    "clean up modern plugins to remove dead code",
    "statically disable factory components for www",
    "revert legacy plugin modules",
    "run error replay test again new reconciler",
    "disableremoteplayback attribute for html5 videos",
    "update nvmrc to the same one used in ci",
    "fix typo in testflags",
    "fix wrong command in config.yml",
    "fix ci",
    "delete mutablesourcefirstpendingupdatetime",
    "add useevent interaction hook",
    "move beforeblur phase to prepareforcommit",
    "remove `.internal` from more test suites",
    "remove unnecessary variable comparation",
    "delete flushsuspensefallbacksintests flag",
    "fix www tests not running in prod",
    "migrate conditional tests to gate pragma",
    "fix \"missing flag\" error for non-boolean types",
    "@gate",
    "codemod it.experimental to gate pragma",
    "eslint rule to forbid cross fork imports",
    "overhauled release scripts and docs",
    "decouple expiration times and transition timeouts",
    "don't return from perform/completeunitofwork",
    "fork reactfiberexpirationtime",
    "build component stacks from native stack frames",
    "revert \"clear more fiber fields in detachfiber \"",
    "make enablelegacyfbsupport flag dynamic for www",
    "clear more fiber fields in detachfiber",
    "port error boundaries test to yieldvalue",
    "script for syncing changes between forks",
    "update stale.yml",
    "don't use closures in devtools injection",
    "split cross-package types from implementation",
    "point reactdomforked to the new implementation",
    "exclude forwardref and memo from stack frames",
    "move plugins into their own directory",
    "add `.old` prefix to reconciler modules",
    "add forked copies of reconciler modules",
    "refactor component stack traces",
    "improve detachfiber",
    "more robust fix for #18515",
    "change stalebot messages",
    "make uncontrolled -> controlled warning clearer",
    "add useopaqueidentifier hook",
    "cleanup plugins + break out update batching logic",
    "profiler tooltip shows self duration",
    "don't use checkproptypes for internals",
    "add keyboardevent.code to synthetic event",
    "consider `useref as ...` as constant",
    "strip tailing property in assignments",
    "add <progress> to dom fixtures",
    "refactor error dialog logging",
    "- highlight rendered by elements on hover.",
    "bugfix for new getsnapshot with mutation",
    "add webpack plugin build",
    "remove jsx plugin from react",
    "remove /dist/ umd builds",
    "update to jest 25",
    "remove testutils.simulatenative support",
    "deprecate testutils.simulatenative",
    "fix scope propagation issue",
    "enable new passive effect behavior for fb builds",
    "run more flags in variant tests",
    "revert \"fix email cursor jump \"",
    "cleanup getlistener and eventsystemflags",
    "don't close \"needs investigation\" issues",
    "remove a flag for style collision warning",
    "fixed race condition in release script",
    "don't read primarychild.childexpirationtime",
    "added meta property",
    "refactor enter/leave listener accumulation",
    "fix eslint rule crash",
    "enable prefer-const lint rules",
    "include displayname in warning",
    "fix email cursor jump",
    "remove concurrentmode and asyncmode symbols",
    "revert and add guard for null statenode",
    "reset statenode in resetworkinprogress",
    "disable module components dynamically for www",
    "enable new passive effect behavior for fb builds",
    "fix a warning typo",
    "add opt-in support for dangerous autofix",
    "remove disablemapsaschildren flag",
    "revert useevent prs",
    "remove user timings",
    "add getinspectordataforviewatpoint",
    "double-invoke render for every component",
    "reset lasteffect when resuming suspenselist",
    "https link to editorconfig.org",
    "delete leftover assignment from #18384",
    "enable on internal www and add inspection test",
    "devtools v4.5.0 -> 4.6.0",
    "remove \"es6-symbol\" package from devtools",
    "dropped updates inside a suspended tree",
    "eslint-plugin-react-hooks@3.0.0",
    "npm link more directly",
    "add support for experimental scopes api",
    "pass bundlerconfig through to relay integration",
    "refactor lazy components to use teh suspense",
    "formalize the wakeable and thenable types",
    "refactor react.children to reduce indirection",
    "rename internal fields",
    "fix a mistake in reactchildren refactor",
    "inlined devtools event emitter impl",
    "rename ci jobs after the command line equivalent",
    "add support for beforeblur/afterblur",
    "add server-runtime to create server blocks",
    "change .model getter to .readroot method",
    "stop syncing reacttypes to rn",
    "revert \"upgrade to jest 25 \"",
    "integrate blocks into flight",
    "remove error code step from publish script",
    "support custom types",
    "follow ups to bundler configs",
    "empty commit to fix master.",
    "add `eventtarget` support",
    "update package.jsons for 16.13.1 patch relase",
    "fix event replaying",
    "changelog for 16.13.1",
    "disallow hooks in class components",
    "revert accidental changes to package.json",
    "refine flow types",
    "refactor legacy fb support logic",
    "wire up bundler configs",
    "fixed inconcistency with surrounding punctuation",
    "add shortcut keys for tab switching",
    "fix umd builds",
    "don't use eventlistener fork in modern www builds",
    "refactor elementlistenermap for upgrading",
    "increase test coverage",
    "small tweaks and changes",
    "usedebugvalue with complex types",
    "add jsx-runtime and jsx-dev-runtime",
    "wire to event system to the hook",
    "replace passive effect context with boolean",
    "refine event system types + pass through priority",
    "remove un-used function arg",
    "run reactelementjsx-test against bundles",
    "move ms windows build to circleci",
    "revert \"move ms windows build to circleci \"",
    "add dom host event listener logic",
    "empty commit to fix ci on master",
    "address feedback for accumulatetwophaselisteners",
    "more scaffolding changes",
    "flow type reactdomcomponenttree",
    "remove manual feature flag overrides",
    "set up infra for react-reconciler fork",
    "refactor accumulatetwophaselisteners",
    "usemutablesource hook",
    "\"captured\" updates on legacy queue",
    "don't use spread in devtools injection",
    "revert \" add getinspectordataforviewatpoint \"",
    "add getinspectordataforviewatpoint",
    "enable enableprofilercommithooks flag for fb",
    "split streaming from relay implemenation",
    "reactdom.useevent add flag and entry point",
    "add more scaffolding for useevent hook",
    "fix flow type for anynativeevent",
    "fix listener upgrade bug",
    "add relay flight build",
    "refactor host config infra",
    "dropped effects in legacy mode suspense",
    "fixed broken anchor tag for patch release",
    "hard-code disablemodulepatterncomponents",
    "add test run that uses www feature flags",
    "add a flag to disable module pattern components",
    "break up require/import statements in strings",
    "honor displayname of context types",
    "export internal fb flag for testing",
    "honor displayname of context types \"",
    "support nested portal/root boundaries",
    "updated react native home url",
    "remove _ctor field from lazy components",
    "add support for internal fb primer",
    "honor displayname of context types",
    "use accumulatetwophasedispatchessingle directly",
    "fix instancecontainselem bug from typo",
    "devtools 4.4.0 -> 4.5.0",
    "updated react native website url",
    "fix flow types",
    "expired partial tree infinite loops",
    "add an early invariant to debug a mystery crash",
    "only use rollup's commonjs plugin for \"react-art\"",
    "improve findbytype error message",
    "add plugin handling and forked paths",
    "more event system cleanup and scaffolding",
    "fix bug with presslegacy blur",
    "fix typo in warning text",
    "add recommended config eslint rule",
    "enable and remove targetasinstance feature flag.",
    "refine isfibersuspenseandtimedout",
    "remove runtime dependency on prop-types",
    "change reactversion from cjs to es module",
    "move remaining things to named exports",
    "convert react native builds to named exports",
    "remove node shallow builds",
    "bust circle caches",
    "don't build shallow renderer for fb",
    "update version numbers for 16.13",
    "prettier",
    "remove unnecessary warnings",
    "replace reactshallowrenderer with a dependency",
    "fix changelog link",
    "run test-prod job for experimental builds",
    "changelog for 16.13.0",
    "remove unused flag",
    "rearranged some devtools components code",
    "added resize support for components panel.",
    "update reactdebughooks to handle composite hooks",
    "remove oss testing builds",
    "remove /testing entry point from 'react' package",
    "fixed a spelling mistake in a comment.",
    "fix cyclic caching for loops containing a\u2026",
    "export react as named exports instead of commonjs",
    "add @nolint to fb bundle headers",
    "ensure blur to window disengages press",
    "edge for microsoft edge dev tools extension",
    "change string refs in function component message",
    "move type domcontainer to hostconfig",
    "codemod to import * as react from \"react\";",
    "rename chunks api to blocks",
    "remove unused arguments in the reconciler",
    "`memo` drops lower pri updates on bail out",
    "warn for update on different component in render",
    "profiler tooltip tweaks",
    "don't build some packages for www",
    "remove flare bundles from build",
    "add container to event listener signature",
    "add no-restricted-globals to eslint config",
    "add fiber summary tooltip to devtools profiling",
    "added missing feature flag",
    "disable scheduler `timeout` w/ dynamic flag",
    "ensure onbeforeblur fires for hideinstance",
    "split recent passive effects changes into 2 flags",
    "further cleanup of plugin event system",
    "updated yarn lockfile",
    "fix prettier",
    "eslint-plugin-react-hooks@2.4.0",
    "add auto import to babel plugin",
    "delete nativecomponent and nativemethodsmixin",
    "refactor dom plugin system to single module",
    "add modern www build",
    "remove getishydrating",
    "remove \"unreleased\" section from changelog",
    "remove legacy www config from rollup build",
    "change build from babylon to babel",
    "stop exposing some internals on fb build",
    "tweak comment wording",
    "update reactfiberexpirationtime.js",
    "typo in test",
    "ignore react-native-web in flow checks",
    "dataforroots.set duplicate removal",
    "fix flow type for react native",
    "add version property to reactdom",
    "simplify continuous hydration targets",
    "typo fix",
    "add beforeremoveinstance method to reactnoop",
    "fix release scripts",
    "remove suspense priority warning",
    "add dom fixture for autofilled form state",
    "add devtools tests for copying complex values",
    "mimic browser's advancetime",
    "fix onmouseenter is fired on disabled buttons",
    "formatting fix  to build script",
    "make testing builds for react/reactdom",
    "update google-closure-compiler",
    "strictmode should call scu twice in dev",
    "expiring a partially completed tree",
    "expiring a partially completed tree \"",
    "fix jest diff call",
    "remove root.unmount callback from devtools code",
    "add missing event plugin priorities",
    "add semver dependency explicitly to devtools",
    "show first component stack in context warning",
    "add a note about expiring otp codes",
    "use next tag for canary releases in the doc",
    "update to flow 0.97",
    "upgrade to jest 25",
    "update various monorepo dependencies",
    "add react.createfactory deprecation warning",
    "remove reactinstancemap_do_not_use shim",
    "add disable <textarea/> children flag",
    "allow debug-test commands to run on windows",
    "update to latest release of babel",
    "remove renderphaseupdates map",
    "remove dynamic gks for selective/train",
    "update to flow-bin@0.89",
    "remove fb specific build",
    "add feature flag around react.createfactory",
    "fix devtools flow error for key-sort function",
    "add do_not_use to scope methods",
    "add support for node v13 for development",
    "update typescript package and jest preprocessor",
    "fix issue template for questions",
    "react-refresh@0.7.2",
    "fix typo in testcase description",
    "fix edge case with early function call",
    "update reactsuspenselist-test.internal.js",
    "update babel-eslint and eslint packages",
    "fix message typo in printoperationsarray function",
    "add github issue templates",
    "create security.md",
    "add configuration for the \"stale\" github app",
    "update flow to 0.84",
    "fixed box-sizing problem in test shell",
    "fix hover issues with portals",
    "improve how empty commits are filtered",
    "fixed padding problem in standalone shell",
    "remove tostring of dangerouslysetinnerhtml",
    "devtools 4.3.0 -> 4.4.0",
    "replaced unsafe hasownproperty calls",
    "build and store devtools artifacts in circle ci",
    "devtools profiler commit selector wraps around",
    "updated devtools pending changelog",
    "fix various typos",
    "display regexp values in props/state",
    "add unit tests to dom-event-testing-library",
    "allow partial matches for custom effect hooks",
    "add shift+enter to go to previous search result",
    "fix comments typos",
    "null statenode after unmount",
    "devtools v4.2.1 -> 4.3.0",
    "rename test + fix master",
    "create packages/dom-event-testing-library",
    "event testing library improvements",
    "devtools build script enhancements",
    "remove batchedupdates from responder lifecycles",
    "updated devtools changelog",
    "chunks api",
    "make hostcomponent inexact",
    "use zero-fill right shift instead of math.floor",
    "added more forwardref test cases for devtools",
    "move devtools ci job to experimental workflow",
    "build fb rn targets only in experimental mode",
    "devtools context menu",
    "fix missing stacks in www warnings",
    "react-refresh@0.7.1",
    "support injecting runtime after renderer executes",
    "revert \"remove renderphaseupdates map \"",
    "use matching test command for equivalence tests",
    "remove renderphaseupdates map",
    "remove lastnativeevent in favor of systemflags",
    "use console directly instead of warning modules",
    "add component stacks to  all warnings",
    "initialize update queue object on mount",
    "revert update queue refactor",
    "remove the condition argument from warning",
    "refactor update queues to fix rebasing bug",
    "remove focus/focuswithin root event types",
    "fix press/tap behavior for virtual middle clicks",
    "make serializable data  in react-devtools",
    "move flare event registration to commit phase",
    "don't group idle/offscreen work with other work",
    "revert rerender error check",
    "use fewer global variables in hooks",
    "remove case that only exists for createbatch",
    "adjust suspenselist cpu bound heuristic",
    "change devtools hook warning message",
    "fixed changelog formatting #17481",
    "devtools version bump 4.2.0 -> 4.2.1",
    "make all errors recoverable",
    "update release script url",
    "fix an infinite loop in an edge case",
    "refine virtual click detection for ff+jaws/nvda",
    "fix memory leak in event responder system",
    "update fixtures to use new apis",
    "pending state is always user-blocking",
    "add webpack as devdependency",
    "check forwardref callbacks",
    "forgot to mark test as experimental",
    "move flight dom to a webpack specific package",
    "fix unatached fiber bug",
    "focuswithin beforeblur propagation fix",
    "changelog for 16.12",
    "update version numbers for 16.12",
    "fix for intentional unmounts after an error",
    "enable event system before dispatching blur",
    "follow up active element blur logic",
    "refine custom active element blur logic",
    "if statement cleanup for null targets",
    "expost host instance to scope query function",
    "warn when doing createroot twice on the same node",
    "basic integration test",
    "split reactdom entry point",
    "add yarn build --unsafe-partial",
    "end-to-end fixture",
    "add handlesimulatechildblur upon dom node removal",
    "better compat with http.createserver",
    "remove `debugrenderphasesideeffects` flag",
    "hoist static deepdiffer options object",
    "basic streaming suspense support",
    "move around the server side a bit",
    "update deepdiffer usage in react native renderer",
    "add optional searchnodes to scope.queryallnodes",
    "devtools cleanup",
    "fix react-is memo and lazy type checks",
    "change unmount blur logic to a dedicated event",
    "add client infrastructure",
    "don't show empty  commits in profiler",
    "delete old raf implementation",
    "codemod tests to `it.experimental`",
    "add codesandbox ci config",
    "update .mailmap",
    "typo fix in comment",
    "add experimental flight infrastructure",
    "rename createsyncroot to createblockingroot",
    "fixed a typo in readme.md",
    "changelog for 16.11.0",
    "update local package versions for 16.10 release",
    "make events non-passive to allow preventdefault",
    "fixed a style bug in props editor",
    "`it.experimental`",
    "remove unstable_ prefix in various internal uses",
    "add experimental instructions to release readme",
    "suspenselist support in devtools",
    "don't build non-experimental www bundles",
    "move suspenselist to experimental package",
    "build script should default to experimental",
    "lint experimental build artifacts",
    "migrate usedeferredvalue and usetransition",
    "update rn typings for a shim",
    "store lasteffect before rendering",
    "fix focus-visible heuristic",
    "add onfocuswithin event to focuswithin responder",
    "remove prefixed concurrent apis from www build",
    "unstable_createroot -> createroot in test",
    "separate sizebot for experimental builds",
    "temporary patch www fork with prefixed apis",
    "modify babel react jsx duplicate children fix",
    "enable concurrent apis in all experimental forks",
    "avoid duplicate \"children\" key in props object",
    "modify scope query mechanism",
    "remove concurrent apis from stable",
    "set up experimental builds",
    "fix bugs with dropped promises",
    "pass prod error messages directly to constructor",
    "devtools test shell tweaks",
    "adds more experimental scope api methods",
    "remove unused export",
    "use microsecond precision",
    "refine a11y component flow types",
    "reactdom.unstable_schedulehydration",
    "remove fb builds of a11y components",
    "remove dormant createbatch experiment",
    "fix bug when dealing with unhandled dom nodes",
    "changelog for v16.10.2",
    "add focustable colspan support",
    "update local version numbers for 16.10.2 release",
    "devtools v4.1.3 -> v4.2.0",
    "added trace updates feature",
    "fixing grammatical errors in error message",
    "remove context.settimeout & context.cleartimeout",
    "upgrade to jest 24",
    "prioritize the last continuous target",
    "repurpose react a11y modules",
    "tap cancels on second pointerdown",
    "add allowmodifiers flag to focuslist + focustable",
    "remove iife wrappers from dev invariant checks",
    "fix mouseenter handlers fired twice",
    "react devtools v4.1.2 -> v.4.1.3",
    "updated devtools changelog",
    "changelog for v16.10.1",
    "devtools v4.1.1 -> v4.1.2",
    "update local version numbers for 16.10.1 release",
    "fixed typo in devtools changelog",
    "remove enableuserblockingevents flag",
    "changelog for 16.10",
    "update local version numbers for 16.10 release",
    "fix heading level in changelog",
    "add tab handling to focuslist",
    "fix virtual click heuristic",
    "updated comment message",
    "focustable tabscope handling+tabindex control",
    "expose ishydrating",
    "add hostcomponent type to reactnative",
    "devtools v4.1.0 -> v4.1.1",
    "fix false positive render phase update",
    "updated devtools changelog",
    "moving backend injection to the content script",
    "add wrapping support to focuslist/focustable",
    "include tag in begin/complete invariant",
    "these flags are hard coded in our internal config",
    "add more documentation for a11y components",
    "focustable key press bound propgataion",
    "add support for react scope symbol/number",
    "add portal propagation configuration",
    "selective hydration",
    "add initial docs explaining react scopes",
    "tabfocus -> focusmanager",
    "make focuslist bundle",
    "add focuslist component",
    "devtools changelog update",
    "warning system refactoring",
    "press with useref instead of usestate",
    "fix devtools v4.1 editable hook regression",
    "refactor a11y components more",
    "idle updates should not be blocked by hidden work",
    "event replaying",
    "inline renderroot and fix error handling bug",
    "prevent work loop from being inlined",
    "improve consistency of tap responder",
    "tweak focus table component",
    "fix typo in focustable",
    "exclude react-dom when flow checking other builds",
    "tap responder api changes",
    "react devtools version bump 4.0.6 -> 4.1.0",
    "do not null fiber.sibling in detachfiber",
    "always remount classes",
    "remove event object warnings",
    "remove welcome dialog",
    "fix for view config registrations",
    "optimize objectis",
    "updated pending changelog for devtools",
    "release script filters devtools npm pakcages",
    "fix bundle name",
    "add react-ui/accessibility to bundle build",
    "start time of delayed tasks",
    "focusgrid -> reactfocustable + tweaks and fixes",
    "add trusted types to react on client side",
    "clear more properties in detachfiber",
    "usepress from usekeyboard and usetap",
    "spelling is fundamental",
    "follow-up to initial trusted types support",
    "keyboard support for virtual clicks",
    "prevent event log from growing unbounded",
    "keyboard calls preventdefault on 'click' events",
    "re-enable risky work loop changes",
    "add experimental focusgrid api",
    "refactor tabfocuscontroller",
    "ensure we restore currentinstance + currenttimers",
    "added upcoming changes to devtools changelog",
    "moved backend injection to the content script",
    "more tab focus control handling",
    "put profiling feature behind flag",
    "use context.objectassign in tap responder",
    "moved inline comment.",
    "change `trackedtouchcount` console.error to warn",
    "lint fixes",
    "formatting changes",
    "added upcoming changes to devtools changelog",
    "legacy context",
    "remove ability to inject arbitrary scripts",
    "moved backend injection logic to content script",
    "moved backend injection logic to content script",
    "props editing interface tweaks",
    "moved injection logic to content script",
    "add maximumdistance prop",
    "re-arrange slightly to prevent refactor hazard",
    "handle suspenselistcomponent getting retried",
    "correct link for troubleshooting react-dev-tools",
    "mark root as already hydrated after committing",
    "react-refresh@0.4.2",
    "hash signatures",
    "fixed font family issue in ff.",
    "remove console.log from copywithset",
    "fix typo in commet",
    "add skipenvcheck option to babel plugin",
    "fix callback return types",
    "remove wrong copy-paste code in test",
    "let's schedule the passive effects even earlier",
    "react-refresh@0.4.1",
    "add freshruntime www bundle, remove eslint",
    "change order of events",
    "wnless -> unless",
    "fix a crash with implicit arrow return",
    "fix typos on react-devtools comments",
    "check for suspense boundary in a root container",
    "remove experimental scheduler flags",
    "fix istargetwithinnode type",
    "enable messageloop implementation by default",
    "updated flags from false to dicated on www",
    "use-subscription tearing fix",
    "refine executeusereventhandler",
    "various core tweaks for event responder system",
    "fix scope listener issue",
    "save profile now working in firefox",
    "refactor getcurrenttarget to getrespondernode",
    "adds preventkeys support to keyboard responder",
    "keyboard responder propagation handling",
    "updated pending changelog for devtools",
    "tap responder",
    "oncurrent - concurrent",
    "add more support for experimental react scope api",
    "adopt contributor covenant",
    "update nvmrc with latest lts",
    "split out mixed event responder tests",
    "use rendertostaticmarkup for tests",
    "add experimental react scope component api",
    "remove duplicate character in regex group",
    "don't ignore dependencies for render phase update",
    "rephrase comment",
    "add integrity field in yarn.lock",
    "add <thead>, <tfoot> to table > tr warning",
    "upgrade to danger 9",
    "fix link on error-codes/readme.md",
    "revert \"import react devtools v4\"",
    "removed an unnecessary/unused dt flow type",
    "updated dt regression fixture path",
    "import react devtools v4",
    "improve mock event object accuracy",
    "removed unused chrome flow types",
    "updated readme docs, example screenshots, etc",
    "suppress act/renderer warning for devtools tests",
    "removed forked devtools flow types",
    "added fb copyright header",
    "removed outdated snapshot",
    "ci runs devtools tests against built source",
    "support screen reader virtual clicks",
    "disabled devtools tests from yarn-build target",
    "fix console patching test by resetting modules",
    "fixed flushing problem with tests",
    "bvaughn/react-devtools-experimental",
    "react devtools changelog entry for 4.0.6",
    "added a null check around memoizedprops",
    "4.0.5 -> 4.0.6",
    "polyfill symbol usage",
    "profiler features",
    "rename hook exports",
    "revert \" forbid top-level use* calls \"",
    "fix middle-click for press",
    "revert \"revert \" forbid top-level use* calls \"\"",
    "flow fixes",
    "eslint-plugin-react-hooks@2.0.1",
    "fixed outdated extension popup wording",
    "rely on 'buttons' rather than 'button'",
    "moved devtools custom flow definitions",
    "clear canceled task node early",
    "bvaughn/react-devtools-experimental",
    "update changelog.md",
    "fix spelling in react-devtools changelog.md",
    "fix typo in chnagelog.md",
    "fixed invalid object-assign version",
    "forbid top-level use* calls",
    "improved github issue repro instructions prompt",
    "4.0.4 -> 4.0.5",
    "updated react devtools changelog for 4.0.5",
    "throw on unhandled ssr suspending",
    "alpha-sort props/state/context keys",
    "dom event testing library",
    "8097",
    "resolved yarn conflict for object-assign",
    "4.0.3 -> 4.0.4",
    "added devtools 4.0.4 changelog entry",
    "added support for unserializable types",
    "added 4.0.1, 4.0.2, and 4.0.3 changelog entries",
    "8097",
    "unserializable data type fix for standalone shell",
    "4.0.2 -> 4.0.3",
    ")",
    "support single-quote strings in style editor",
    "multi-renderer profiling improvements",
    "prettier",
    "add a note on 4.0.2",
    "4.0.1 -> 4.0.2",
    "removed some unnecessary manifest permissions",
    "4.0.0 -> 4.0.1",
    "add a note about restoring selection",
    "4.0.0-alpha.9 -> 4.0.0-alpha.10",
    "bumped all versions to 4.0.0",
    "added release date to devtools changelog",
    "improve test coverage",
    "updated all github links to point to react repo",
    "add devtools package placeholder package.json",
    "made some incremental progress on jest tests",
    "removed unused __test__ files",
    "add explicit mit license file",
    "revert \" profiling features \"",
    "patched up react-devtools-core webpack configs",
    "fixed web extensions",
    "removed  node->node-events mapping",
    "merged master",
    "rename legacy \"events\" package to \"legacy-events\"",
    "make tests compatible with jest 24",
    "add eslint-plugin-jest's valid-expect rule",
    "moved overview",
    "moved changelog",
    "prettier",
    "cleaned up some extnesions build script stuff",
    "profiling features",
    "fixed a bunch of lint issues",
    "misc flow and import fixes",
    "reorganized folders into packages/*",
    "prettier",
    "add test case for #16359",
    "moved dev shell into fixtures/devtools",
    "cleanup babel pr",
    "remove unused import",
    "dehydrated suspense boundaries in suspense list",
    "disable coverage",
    "reorganized fixtures",
    "fix typo in error code map",
    "initializing empty merge repo",
    "refactor partial hydration",
    "remove flag that reverts #15650",
    "reorganized things again into packages",
    "updated yarn.lock file",
    "merging devtools fork",
    "reset didreceiveupdate in beginwork",
    "fix keyboard responder test",
    "4.0.0-alpha.8 -> 4.0.0-alpha.9",
    "fixed raw-loader + jest problem",
    "temporarily remove wrapper function",
    "make schedulerminheap flow strict",
    "misc. profiler tweaks",
    "focus/focuswithin responders with fallbacks",
    "refactor unit tests for hover",
    "upgrade eslint so we can use jsx fragment syntax",
    "fix some missing assertions",
    "remove obsolete container element",
    "add use-subscription to rollup bundle config",
    "babel 7",
    "prepare use-subscription v1 for publishing",
    "changelog for 16.9",
    "support multiple renderers at the same time",
    "remove contextmenu logic from press",
    "store tasks on a min binary heap",
    "reset hydration state after reentering",
    "fix inconsistent spacing in a warning",
    "warn when using string refs",
    "readme typofix",
    "4.0.0-alpha.7 -> 4.0.0-alpha.8",
    "separate the focus/focuswithin unit tests",
    "add contextmenu responder",
    "fix hydration bug with nested suspense boundaries",
    "new npm package react-devtools-inline",
    "warn if you try to use act in prod",
    "remove outdated comment about gcc",
    "match hoc display names during search",
    "rendering tasks should not jump the queue",
    "uselistener -> useresponder",
    "updated flow type for devtools tab id",
    "fix priority of clean-up function on deletion",
    "reset renderstate when bailing out",
    "add a feature flag to disable legacy context",
    "add test of scheduler overhead",
    "element keys are selectable text",
    "updated overview doc",
    "tweaks to flare system design and api",
    "updated changelog based on dan's feedback",
    "added dynamic indentation to change log",
    "remove focusscope",
    "add missing check to unmocked scheduler warning",
    "added changelog",
    "add \"welcome to the new devtools\" notification",
    "wrap isthisrendereracting in dev check",
    "removed the profiler screenshot capture feature",
    "flush fallbacks in tests",
    "remove delay props from hover",
    "remove longpress from press responder",
    "remove delay props from press",
    "added missing flow header",
    "transfer refs when remounting",
    "yield many times per frame, no raf",
    "re-add try/catch inside agent's getidfornode",
    "allow inspecting elements within iframes",
    "tweak search behaviour",
    "fix ssr issue with serializing responders prop",
    "tweaked recent search changes",
    "check tag before calling hook effects",
    "flow type cleanup",
    "update use-subscription readme",
    "test browser implementation details",
    "prevent electron crash",
    "remove the old eventcomponent/eventtarget system",
    "4.0.0-alpha.3 -> 4.0.0-alpha.4",
    "flush work correctly without a mocked scheduler",
    "adds keyboard event responder",
    "remove references to eventcomponent",
    "support new flare hook, unstable_uselistener",
    "update legacy context warning message",
    "4.0.0-alpha.2 -> 4.0.0-alpha.3",
    "updated snapshot",
    "fix suspensecallback type warning, add a test",
    "misc improvements based on user feedback from tim",
    "edit suspense priority warning message",
    "4.0.0-alpha.1 -> 4.0.0-alpha.2",
    "removed accidental log statement",
    "add names to inline functions",
    "enable profiler+tracing for test renderer",
    "multiple rafs in same frame",
    "track unrecoverable errors",
    "fix keyboard interactions",
    "use ric to post first callback",
    "cancelling a continuation",
    "removed reference to setdefaultthemename method",
    "make console override detectable",
    "npm packages 4.0.0-alpha.0 -> 4.0.0-alpha.1",
    "improve bridge flow types",
    "adds experimental fundamental interface",
    "updating npm packages as 4.0.0-alpha.0",
    "redesign core event system",
    "make my code prettier",
    "tweaked modal font size style",
    "add focuswithin responder",
    "clean up nexteffect pointers",
    "detect react native v3 backend and show warning",
    "add input event responder surface",
    "move reactfibererrordialog rn fork into rn itself",
    "usesubscription hook",
    "patch console to append component stacks",
    "inject getcurrentfiber function to devtools",
    "fix to input a number value to props",
    "add tail=\"hidden\" option to suspenselist",
    "standalone npm packages and react native support",
    "remove react.error and react.warn",
    ".watchmanconfig must be valid json",
    "fix middle-click handling",
    "expose act sigil correctly for umd builds",
    "support inferring priority from stack",
    "press includes button type",
    "add dispatchcommand to react native renderers",
    "remove responder flags to simplify logic",
    "revise responder event types",
    "fix typos",
    "add currenttarget and unify rn and dom codepaths",
    "resoltion ->  resolution",
    "clear pressstart timeout on pointercancel",
    "remove capture phase flare events",
    "remove dead event target code",
    "createinitialstate -> getinitialstate",
    "cleanup reactfiberevents-test",
    "reset isthisrendereracting correctly",
    "remove unused react fire fork",
    "add more functionality to scroll event resonder",
    "clone a custom hook node before use",
    "allow nested `act`s from different renderers",
    "add tail=\"collapsed\" option to suspenselist",
    "do not block mouse presses on scroll",
    "add comment about 3rd party integrations",
    "flush sync bug",
    "re-label flare flag",
    "add hooks to event modules",
    "move click handling back into target phase",
    "mark reload-and-profile attach as configurable",
    "handle changes at module boundaries",
    "bring flare support to react native fabric",
    "remove event targets including touchhittarget",
    "fix press scroll cancellation handling",
    "slightly improve performance of hydration.",
    "fix error logging in getderivedstatefromprops",
    "suspenselist optimizations",
    "fix word async -> concurrent",
    "move all event responders to dom directory",
    "prefix mock scheduler apis with _unstable",
    "fix issues with touch + pointer interactions",
    "eslint-plugin-react-hooks@1.6.1",
    "add explicit support for eslint 6.0.0",
    "yield less if there's no pending input",
    "report refreshed families to the caller",
    "increase max frame length to 300",
    "retry failed roots on refresh",
    "fix navigator.isinputpending call",
    "don't fire missing act warnings for react-art",
    "requestpaint",
    "put ispendinginput behind a flag",
    "refinements to useevent hook",
    "clear down dependencies during detachfiber",
    "guard against statenode being null",
    "refine flow type annotations",
    "fix stale deactivation region state",
    "throw in prod and change annotation",
    "move createevent back to react object",
    "lazily initialize dependencies object",
    "make global names more obscure",
    "fix keyboard keyup regression",
    "add useevent hook implementation",
    "reset scope depth on synchronous errors",
    "add suspenselist component",
    "fix press retention state regression",
    "track mounted roots via devtools hook",
    "integrated timers",
    "updated @reach/tooltip to v0.2.2 for a bugfix",
    "rename createeventcomponent -> createevent",
    "add rn build step for reacttypes",
    "update event component displayname",
    "press events include defaultprevented",
    "don't try to convert absolute paths to relative",
    "added command to build chrome crx",
    "remove mention of prepack",
    "add disablecontextmenu to press",
    "fixed hydration for events meta data",
    "display unnamed custom hooks as 'anonymous'",
    "move unstable_createeventcomponent to reactdom",
    "tweaked overflow check",
    "hardened the hooks dehydration check",
    "tidied up a bit",
    "hooks hydrate/dehydrate",
    "remove outdated test renderer comments",
    "tidied up. added comments. renamed a few things.",
    "added props/state/context inspection to keyvalue",
    "ensure when-rendered content is never hidden",
    "react-fresh => react-refresh",
    "debounce inspect-element polling",
    "fix outdated test comments",
    "fix bad loading state not being delayed",
    "make transform resilient to plugin order",
    "refactor of press to fix various issues",
    "remove disableyielding feature flag",
    "updated hydration logic to handle custom objects",
    "fix fuzz test environment variable",
    "use style.setproperty to set display",
    "fix owner tree for legacy backend",
    "lintfix",
    "support toggling suspense from within owners list",
    "distinguish functions and classes",
    "state and context are on the public instance",
    "implement missing features",
    "removed console.log",
    "use !important to hide suspended nodes",
    "remember last preferences tab via local storage",
    "unsure root events are removed on contextmenu",
    "move press root event removal till click phase",
    "maintain rootid for lazily crawled trees",
    "ignore ssr mounts",
    "fixed minor border bug in profiling tab toolbar",
    "replace touch discrepancy errors to warnings",
    "make children selection lighter",
    "nit",
    "fixed regression fixtures",
    "added a test for added/removed props",
    "remove dead code",
    "added an explicit 'did not render' label",
    "tweaked a few inline comments",
    "fixed some minor css issues",
    "fix minor toolbar border misalignment",
    "added context support to change description",
    "fix lint",
    "fixes",
    "rewrite to make it sturdier",
    "capture hook signatures lazily on first render",
    "added hoc filter test",
    "initial change tracking implemented",
    "added hoc badges to jest store serialization",
    "fix es6 issues with ie11",
    "support classes by force-remounting them on edit",
    "changed react-window alias",
    "react-window sync flushes scroll updates",
    "removed __source info from production builds",
    "add basic scroll event responder module",
    "fix istouchevent",
    "a quick copy edit for an act message/comment",
    "tweaked manifest \"version_name\" logic",
    "small swipe/drag fixes",
    "vendored react-window",
    "eventpriority enum",
    "use circle ci api v2 to get artifacts job id",
    "fix nativeevent.x/y for older browsers",
    "add event position properties to hover responder",
    "add source location to debug logging info",
    "root fontsize",
    "updated release script to be workflow aware",
    "renamed <guideline> to <selectedtreehighlight>",
    "fix ispresswithinresponderregion logic",
    "add hoc component filter",
    "use jest-serializer-raw for react-fresh snapshots",
    "removed outdated comment and eslint rule ignore",
    "cap indentation increase at a max",
    "removed tree padding",
    "cache list rows by element id rather than index",
    "don't warn for flow type variables",
    "added hoc badge to owners list dropdown",
    "fixed box drawing chars comment",
    "tweaked guideline background color style",
    "fixed a typo in string truncation util",
    "added hoc badge to owners stack breadcrumbs",
    "added debounce and animation for resize",
    "tweaked a few styles",
    "refactored badges to share code and show +count",
    "lots of tweaks",
    "whoops i broke ci",
    "remove crawling for updates",
    "remove deprecated keypress event",
    "fix casing of shouldflushdiscreteupdates",
    "default to showing host nodes for legacy renderer",
    "revert \"re-added indent lines\"",
    "allow tab+alt on mac in focus responder",
    "nested discrete events across systems",
    "re-added indent lines",
    "switch to \"discrete\" and \"continuous\" terminology",
    "workphase -> executioncontext",
    "add some support for reordering",
    "show indent lines preference",
    "change suspending and restarting heuristics",
    "fixed bad bridge disconnections",
    "turn off pointer events for guidelines",
    "check window before using navigator",
    "fix sizebot",
    "lint rule for unminified errors",
    "clean up",
    "update name of ci job in sizebot",
    "don't extract errors in ci",
    "move fixtures test to its own ci job",
    "support legacy browser spacebar key value",
    "using the wrong renderer's act should warn",
    "generate signatures for hooks",
    "tweaks",
    "prettier",
    "pass tests and flow",
    "updated chrome installation",
    "fix double spaces.",
    "add batched mode variant to fuzz tester",
    "adds test for #15732.",
    "deeply prevent default on anchor elements",
    "more fixes for getabsoluteboundingclientrect",
    "remove sizebot race condition",
    "merged master",
    "merged master",
    "updated profiler overview",
    "cache inspected element data until it is updated",
    "reorganize inspected element state vars slightly",
    "typo in circleci config",
    "added a sanity test for bridge shutdown",
    "tweaked bridge shutdown sequence slightly",
    "tweaked event display name logic",
    "handle https git clone urls",
    "remove snapshot",
    "set up cron job to run fuzz tester",
    "update snapshot tests",
    "run prettier",
    "adds inspectable event components + props",
    "added profilercontext tests",
    "event component displayname is now mandatory",
    "tweak",
    "ensure dom inspection is flare compatible",
    "persist profiling data after navigation",
    "add tab id to tooltip",
    "initial babel plugin implementation",
    "remove redundant test run",
    "always run yarn after restoring modules cache",
    "fix flow",
    "update geteventcurrenttarget to use fiber tree",
    "parallelize circleci jobs using workflows",
    "bumped profiler exported data version",
    "profiler properly handles unmounted roots",
    "add datetime to the profiling export filename",
    "changed export code to  support larger exports",
    "cleaned up some tests",
    "flush only on exiting outermost act",
    "update invalid accessor warnings + add no-ops",
    "simplify dispatchevent discrete argument",
    "fix reactfibernewcontext spelling",
    "rename \"loading\" to \"busy\" in suspenseconfig api",
    "added root selector ui to profiler",
    "updated test snapshot",
    "upgraded to canary with priority level info",
    "fix missing return pointer assignment",
    "set up infra for runtime and babel plugin",
    "change flushdiscreteupdates invariant to warning",
    "update interactiveupdates flushing heuristics",
    "massively overhauled profiling data architecture",
    "inform devtools of commit priority level",
    "show commit priority levels in profiler ui",
    "support re-rendering lazy without losing state",
    "support lazy and add suspense tests",
    "don't traverse remounted trees",
    "set up initial scaffolding",
    "fixed snapshot diff",
    "add responder allowmultiplehostchildren flag",
    "fix <embed> not triggering onload",
    "bail out of updates in offscreen trees",
    "add withsuspenseconfig api",
    "always flushpassiveeffects before rendering",
    "use dynamic flag in test renderer in www",
    "improve scanning profiler chart for deep renders",
    "fix serial passive effects",
    "feature flag to revert #15650",
    "adds pointertype to focus events",
    "add test for nested avoided boundaries",
    "minor nits",
    "add reactdom.unstable_createsyncroot",
    "css tweaks",
    "invariant that throws when committing wrong tree",
    "remove <concurrentmode />",
    "add batched mode",
    "bumped profiler export version",
    "updates snapshots",
    "changes display of forwardref and memo components",
    "ensure preventdefault works for nested targets",
    "replaced adm-zip with node-archiver",
    "update test to fix ci",
    "remove scheduler from react package dependencies",
    "fork reactsharedinternals for umd builds",
    "added basic tests for inspectedelementcontext",
    "delete package-lock.json",
    "test utils actsuspense -> actasync",
    "added more tree context tests",
    "add follow up event unwind test",
    "pretty, witty, fine",
    "add key modifiers to press events",
    "rewrite test act helpers based on react/#15591",
    "reverting the rename",
    "added jest tests for ownerslistcontext",
    "fixed test describe name",
    "fetch owners list from renderer",
    "ensure we pop context for event system fibers",
    "added treecontext tests",
    "add more warnings for responder based events",
    "tweaked reamde",
    "added installation instructions to readme",
    "reduce code size of event modules",
    "press event properties",
    "updated lint ignore for new dev shell dist folder",
    "add suspense boundary context",
    "improve labels for times that round to 0.0ms",
    "add toggle-suspense button to all elements",
    "warn when suspending at wrong priority",
    "fixed invalid dom nesting warning",
    "upgrade @reach ui and remove tooltip fork",
    "fixed a deprecated prop warning from react-window",
    "added flow types to profiling test",
    "removed outdated todo comment",
    "updated snapshot data after reactdom batch fix",
    "prettier",
    "hardened tests to ensure expectations are flushed",
    "added profiling chart data tests",
    "add react.unstable_createeventcomponent",
    "added commit tree builder test",
    "fix interaction tracing for batched update mounts",
    "added export+import profiling data test coverage",
    "fix cancel events for press",
    "cancel onlongpress for large enough moves",
    "store profiler snapshot data by root",
    "only clear profiling snapshot on root-unmount",
    "renamed assertonemap -> assertemptymap",
    "experimenting with profiler tests",
    "support press reentry for pointer events",
    "fixed deploy script",
    "removed optional_chaining from flow config",
    "right-align flame graph children",
    "fixed broken path-selection after filter changes",
    "added badge for enabled filter count",
    "renamed filtertype -> componentfiltertype",
    "removed $flowfixme comments",
    "misc cleanup",
    "added some component filtering tests",
    "removed filterlist ui for now",
    "added filter ui",
    "remove istargetdirectlywithineventcomponent",
    "use webpackdevserver for local testing",
    "delete duplicate focus.js",
    "delete duplicate hover.js",
    "delete duplicate swipe.js",
    "delete duplicate drag.js",
    "delete duplicate press.js",
    "follow up to 15535",
    "use lowercase entry points for event modules",
    "inline calls to fabricuimanager in shared code",
    "add method for forcing a lower framerate",
    "add onfocusvisiblechange to focus",
    "add flow types for fiber",
    "there can only be one bridge, add in constructor",
    "focusscope tweaks and docs",
    "start using @babel/preset-env",
    "add test coverage for nested suspense",
    "assert empty maps when there are no roots",
    "core api documentation followup",
    "update topleveleventtypes.js",
    "core api documentation",
    "remove unneeded variable",
    "refactored owners list to use cached metadata",
    "fix press end event dispatching",
    "let -> const",
    "ensure event keys are unique + add validation",
    "transfer strings in a string table",
    "clarify encoding in overview",
    "remove unused types",
    "follow up fixes for focusscope + context changes",
    "allow to set tracked path multiple times",
    "mutate the children array",
    "prod command",
    "add test suite for accumulate function",
    "add `focusscope` surface",
    "add coverage for unused custom hook",
    "use a heuristic for locating roots",
    "allow views to be nested inside of text",
    "add --watch mode to \"yarn build\"",
    "typo fix",
    "various bug fixes",
    "fixed minor css overflow issue",
    "select parent node if selection is removed",
    "delete stale paths",
    "fix tests",
    "match fibers to saved selection as they mount",
    "add missing word to code comment for clarity",
    "persist and restore selection in agent",
    "adds context.istargetdirectlywithineventcomponent",
    "read index off the fiber",
    "fix priority inference of next level of work",
    "read renderer id from operations",
    "add event component mount phase callback",
    "measure callback timeout relative to current time",
    "use stricter equality check",
    "remove timeout from performance flamegraph",
    "add `rooteventtypes` support to event responders",
    "re-added the  selection message",
    "fixed flow error",
    "updated flow-bin  to attempt  to  fix the  error",
    "merged master",
    "locked down canary versions",
    "added @reach/tooltip",
    "fixed bug with cache invalidation",
    "correct permissions for firefox",
    "removed duplicate scheduler module",
    "refactored treecontext to use less memoization",
    "refactored treecontext to use less memoization",
    "initial implementation of disabled prop",
    "add a test for focusable descendants",
    "yarn deploy sets production node_env",
    "tidied up css variables",
    "renamed css var color-text-color to color-text",
    "use new @reach/tooltip",
    "replace weakset with return pointer check",
    "ignore leading edge of find-by-dom throttle",
    "fix scrolling to selected row in collapsed mode",
    "push operations directly to the array",
    "no need to reorder empty children either",
    "consolidate logic for press event component",
    "don't reorder a single child",
    "use passive events where possible",
    "nits",
    "prettier",
    "fixed an overview typo",
    "clear dom overlay on shutdown",
    "extract common helper functions",
    "filter out dehydrated suspense nodes",
    "consolidate logic of hover event component",
    "bvaughn/react-devtools-experimental",
    "add concurrent mode test",
    "add failing tests for suspense with same type",
    "harden assertions",
    "materialize typed array in one place",
    "hardened reorder child invariants",
    "don't recreate id arrays all the time",
    "revert accidental change",
    "fix more suspense traversal bugs",
    "added a new invariant to the store",
    "deploy production extension builds",
    "update setuptests.js",
    "fail tests on errors in renderer",
    "add failing concurrent mode stress tests",
    "move sync stress tests in their own file",
    "assign timeoutid to avoid multiple requests",
    "assert removal happens in the right order",
    "select tab when the mouse is pressed",
    "added legacy  tests",
    "initial support for v15+ via new legaacy renderer",
    "expanded the reorder tests slightly",
    "added more inline comments",
    "flow fix",
    "improve contrast for light mode",
    "fix nested hover components error",
    "throw if root node is collapsed",
    "make nested focus work as expected",
    "remove unnecessary condition",
    "remove unused lines",
    "move stress tests to their own file",
    "harden the tests and fix flow",
    "remove early returns from updatefiberrecursively",
    "add stress test for reordering",
    "split recordupdate into profiling and reorder",
    "cancel pending commit before starting on root",
    "flow and lint fix",
    "add suspense stress test",
    "don't materialize typed array until the transfer",
    "add production mode to dev shell",
    "use lru for encoded strings",
    "add a stress test for tree traversal",
    "tweaked an inline comment.",
    "fixed misplaced padding in tree",
    "tweaked .eslintignore and .gitignore",
    "prefer to keep the start anchor visible",
    "consistently scroll component name into view",
    "polish some mouse interactions",
    "act tests - reuse and properly unmount containers",
    "udpated firefox installation instructions",
    "redesign event responder propagation",
    "adjust highlighting on window resize",
    "added missing instruction to chrome install steps",
    "view dom button opens elements tab",
    "track search navigation in dom",
    "stop tracking bundle sizes",
    "auto-update chrome extension",
    "react-window 1.8.0",
    "moved __dev__ setup from setuptests to setupenv",
    "added devengines entry to package.json",
    "false flag",
    "circle ci config changes",
    "use smart scrolling",
    "added a simple suspense test",
    "cleaned up setup/polyfills",
    "named snapshots. tests use act abstraction.",
    "updated react test utils for newer version of act",
    "added separate mount+update tests",
    "added expand/collapse toggles to custom hooks",
    "add unmounting to focus",
    "hidden attribute to collapse props/hooks",
    "add hover onunmount support",
    "better message when ci for base commit is pending",
    "added multi-test setup logic",
    "remove \"listener\" from event objects",
    "replace old fiber scheduler with new one",
    "initial example test. will iterate from here.",
    "add git revision to extension manifests",
    "add git revision to build version",
    "add onhovermove support",
    "enable text to wrap within error boundary stacks",
    "fix path to results.json",
    "fix fiber info sidepanel not scrollable",
    "fix ci",
    "added errorboundary with github bug link",
    "press event fixes",
    "//github.com/gaearon/react-devtools-experimental",
    "adds `stoppropagation` by default to press",
    "ignore hover when navigating with keyboard",
    "add a missing dep",
    "preventdefault handling for anchors",
    "improve bridge batching logic",
    "fixed horizontal alignment for collapsable hooks",
    "editable name not text-selectable",
    "fixes a flow type merge conflict",
    "added new color-expand-collapse-toggle css var",
    "use button instead of div for a11y",
    "add onpressmove and pressretentionoffset to press",
    "left and right arrows only traverse parents",
    "update opener icon and remove negative margin",
    "fix flow type",
    "add collapsible icon for object and array types",
    "picking a dom node focuses the tree",
    "tweaked inactive css colors",
    "prevent default on all key navigations",
    "flow fix",
    "replaced nested ternary",
    "reverted misguided index/collapsed behavior",
    "update selected index after mutation",
    "added toggle button to tree > element views",
    "pressing next forces search to select",
    "use heuristic suggested by @sophiebits",
    "upgrade react-window to fix a scroll-to bug",
    "extract a variable",
    "hide toggle arrows in owners list mode",
    "add missing button titles",
    "move eventtypes to reacttypes",
    "put devtools in dev shell above the inspector",
    "track event time as the start time for suspense",
    "include full error messages in react native build",
    "format logelementtoconsole slightly",
    "measure calls will now call fabricuimanager",
    "send the bridge sync event lazily",
    "add check for inactive window on selected element",
    "disable text selection for ownersstack buttons",
    "make dom selection binding one-way",
    "use @reach menubutton for owner stack menu",
    "none to fix flicker on overlay \"tip\"",
    "remove unnecessary logic",
    "nits",
    "sync devtools elements and components tabs",
    "replaced agent setinterval with throttle+memoize",
    "don't re-measure owners stack sizes unnecessarily",
    "bvaughn/react-devtools-experimental",
    "updated flow-bin",
    "added  for itemdata",
    "fix missing key",
    "add a separate button for logging values",
    "make flow happy",
    "split inspectelementraw",
    "address review",
    "add a comment",
    "select dom nodes on hover",
    "rename \"owner stack\" label to \"rendered by\"",
    "preserve state when switching tabs",
    "fix spurious autoscroll",
    "fixed toggle flow prop types",
    "pass toggle label through",
    "cleaned up is-overflowing hook and dependencies",
    "remove tree focus ring",
    "removed some unnecessary functions",
    "cleaned up an old overlay helper function",
    "preserve selection on exiting owner mode",
    "fixed a typo in flamegraph duration label",
    "implemented new ownerstack ui enhancement",
    "address review",
    "add full touchhittarget hit slop  to reactdom",
    "show owner in dom highilght overlay",
    "add delay props to press module",
    "naming",
    "nit",
    "remove dead code",
    "fix profiler and nits",
    "rewrite the suspense logic",
    "expand the test fixture",
    "fix suspense fragment edge cases",
    "hard crash",
    "fix highlighting timed out suspense dom node",
    "fix double-adding fibers when traversing",
    "add delay props to hover event module",
    "nits",
    "allow to toggle suspense in components pane",
    "add error logs in __debug__",
    "add hover,focus,press docs to reamde",
    "suspending an expired update",
    "explicitly guard debug calls",
    "fixed owners header font family too",
    "stop mouseup propagation while inspecting",
    "don't crash for deeply nested hooks",
    "fix it all",
    "add size to owner stack items",
    "renamed treewrapper to innerelementtype",
    "add back regex support",
    "fix special cases",
    "keyboard press, types, tests",
    "prettier",
    "match search at word boundaries",
    "fix regex",
    "move selection when typing in search field",
    "make owner stack reachable by keyboard",
    "chagned owner div to be actual button",
    "allow devtools to toggle suspense fallbacks",
    "update gcc version",
    "//github.com/facebook/react/pull/15312/files",
    "store entire build directory as ci artifacts",
    "alternate fix for #14198",
    "fix a crash in suspense with finddomnode",
    "make tree reachable by focus",
    "fixed a name typo in a radio button",
    "add a space in <foo />",
    "writing unit tests in experimental event drag api",
    "fixed an arrow navigation bug",
    "revert fa317be",
    "add test for async event dispatching",
    "remove maxduration from tests",
    "elements -> components",
    "await act => ...)",
    "added missing flow annotation",
    "loosen eventtarget constraints and warnings",
    "elements -> components",
    "add tests for press responder event module",
    "rename press props in experimental event api",
    "inject early on when reloading-and-profiling",
    "added save profiling data button to profiler",
    "reactnative's ref.measurelayout now takes a ref",
    "disable export profiling data option in firefox.",
    "fix casing on store import",
    "import/export feature",
    "avoid flashing \"loading...\" in right pane",
    "delete suspense fixture",
    "improved profiler suspense boundary ui",
    "make setnativeprops a no-op with fabric renderer",
    "add additional event api responder surfaces",
    "fix press module in experimental event api",
    "disable js urls at build level for www",
    "changelog",
    "fix longpress in experimental press event module",
    "update versions for 16.8.6",
    "remove coverage badge from readme",
    "webpack config injects a __dev_ constant",
    "fix tracing fixture",
    "cleaned up edge cases around filtered commits",
    "fixed a tab restoration bug in browser extension",
    "cleaned up a no-selection state",
    "added interaction tracing test harness to shell",
    "moved some shared css vars into css",
    "removed some outdated todo comments",
    "show commit boxes in interaxctions sidebar",
    "warn about async infinite useeffect loop",
    "interaction chart with commit blocks rendering",
    "changelog",
    "release 16.8.5",
    "add 16.8.5 changelog",
    "eslint-plugin-react-hooks@1.6.0",
    "update changelog.md",
    "react.warn and react.error",
    "unstable_profiler -> profiler",
    "strengthen nested update counter test coverage",
    "fork reactfiberscheduler with feature flag",
    "fork performwork instead of using boolean flag",
    "reactfiberscheduler -> reactfiberscheduler.old",
    "validate useeffect without deps too",
    "added basic interactions view",
    "link to uselayouteffect gist in a warning",
    "added getinteractions message",
    "adds more scaffolding for experimental event api",
    "follow up to 15150",
    "deprecate module pattern  components",
    "added placeholder profiler sidebar views",
    "improve warning for invalid class contexttype",
    "adds react-events package for internal testing",
    "compile invariant directly to throw expressions",
    "innertagname -> innerelementtype",
    "warn for context.consumer with contexttype",
    "add more info to invalid hook call error message",
    "added some inline comments about portal props",
    "added a few inline comments",
    "experimenting with portals",
    "added \"profiler\" tab",
    "fixed mutation bug in committreebuilder",
    "first pass at flame graph chart",
    "implemented ranked chart",
    "reset commit tree cache between profiles",
    "added commit tree reconstruction",
    "add feature flag to disable yielding",
    "finished iterating on commit selector ui for now",
    "remove facts tracker",
    "use same example code for async effect warning",
    "change passive checker to use defineproperty",
    "don't suggest a function as its own dep",
    "naive pass at commit durationfiltering",
    "support react.memo in reactshallowrenderer",
    "eslint-plugin-react-hooks@1.5.1",
    "adds experimental event api scaffolding",
    "profiler css/layout tweaks",
    "plugged react-window into commit selector",
    "wording tweaks",
    "improve async useeffect warning",
    "added commit time filter",
    "render client-only content at normal priority",
    "urls in dom sinks",
    "run persistent mode tests in ci",
    "added snapshot selector placeholder ui",
    "tidied up profiler toolbar ui",
    "initial profiling shell added",
    "bvaughn/react-devtools-experimental",
    "updated profiling overview/proposal again",
    "fix import file name",
    "updated profiler overview",
    "refined overview a little more",
    "eslint-plugin-react-hooks@1.5.0",
    "run placeholder tests in persistent mode, too",
    "more concise messages",
    "add more hints to lint messages",
    "fix eslint rule crash",
    "added explicit profiler goals to overview",
    "import scheduler directly, not via host config",
    "disabled transferrables for now",
    "16.8.4 and changelog",
    "enforce deps array in usememo and usecallback",
    "update root package version while publishing",
    "warn on mount when deps are not an array",
    "fix heading in changelog",
    "prettier",
    "revert #14756 changes to reactfiberscheduler",
    "update overview.md",
    "reactnoop.yield -> scheduler.yieldvalue",
    "eslint-plugin-react-hooks@1.4.0",
    "merged master",
    "warn about dependencies outside of render scope",
    "deduplicate suggested dependencies",
    "avoid dynamic dispatch for scheduler calls",
    "support editable usestate hooks in devtools",
    "chlid -> child",
    "added intro to overview",
    "disable text selection in tree",
    "swap expect for expect",
    "added overview doc",
    "fixed a typo in overview",
    "left arrow selects parent in tree",
    "allow extraneous effect dependencies",
    "updated test code to include a deeply nested div",
    "allow omitting constant primitive deps",
    "add .vscode to .gitignore",
    "unify noop and test renderer assertion apis",
    "eslint-plugin-react-hooks@1.3.0",
    "add more cases to exhaustive-deps rule",
    "added copy props/state/hooks/context button",
    "updated deploy scripts and pre-release template",
    "fixed some small overflow/scrollbar issues",
    "improve pactch release process docs",
    "active and :focus styles for button+toggle",
    "fixed typo",
    "renamed overridehook -> overridehookstate",
    "fix sample eslint configuration",
    "pass didtimeout argument to callbacks",
    "implemented view-source button for dom extension",
    "added  deploy scripts for pre-release extensions",
    "yarn upgrade",
    "tweaked colors; esc key to undo edits",
    "tweaked colors based on andrew's feedback",
    "bvaughn/react-devtools-experimental",
    "release eslint-plugin-react-hooks@1.2.0",
    "renamed nativehookindex -> index",
    "updating copyright headers, dropping the year",
    "fix tracing fixture",
    "updated eslint hooks rule",
    "warn against assignments from inside hooks",
    "release 16.8.3",
    "added basic support for linux",
    "added support for editable hook values",
    "deleted empty app.css",
    "removed numeric key code",
    "deal with fallback content in partial hydration",
    "pass options to scrollintoview",
    "fix encoding of unicode keys greater than u+00ff",
    "support editable props, state, and context values",
    "added link to now.sh preview to readme",
    "fixed overlay position bug",
    "tab bar resizes properly for narrow screens",
    "implemented select-dom-element button",
    "release scripts documentation",
    "removed some stale todo comments",
    "inspectable complex hook values",
    "fixed a potential source of duplicate key",
    "tidied up flow types for bridge and store",
    "style, theme, and button css cleanup",
    "fixed edge-case display density bug",
    "release 16.8.2",
    "tweaked the owner stack exit icon",
    "include another change in 16.8.2",
    "changed dark theme to have more react blues",
    "include component stack in 'act' warning",
    "temporarily disabled settings panel",
    "fix typo in code comment",
    "add react 16.8.2 changelog",
    "added now config file for dev shell",
    "special case crossorigin for svg image elements",
    "fixed nan warning for pre-mount css prop read",
    "fix ignored sync work in passive effects",
    "misc cleanup and prep for dark mode css",
    "typo fix in comment",
    "fix hydration with createroot warning",
    "fix spelling mistakes",
    "fix crash unmounting an empty portal",
    "partial hydration",
    "cleaned up css vars and reduced font size a bit",
    "initial stab at 'view in dom' button",
    "removed non-functioning tree arrows",
    "added owner tree exploration view",
    "eslint-plugin-react-hooks v1.0.0",
    "added a clarifying comment to searchinput",
    "16.8.1 packages",
    "add 16.8.0 changelog and update some readmes",
    "reverted immutable element change",
    "add 16.8.1 changelog",
    "warn when using testutils.act in node",
    "fixed regexp parsing",
    "add 16.8.0 changelog and update some readmes",
    "scheduler.unstable_next",
    "16.8.0",
    "fix return result checking",
    "add 16.8.0 changelog and update some readmes",
    "added search support",
    "cleaned up property borders",
    "cleaned up style vars",
    "fixed regression in browser shell",
    "avoid importing scheduler directly",
    "added $r support",
    "added simple hooks support",
    "added better context support",
    "add missing 16.6.1 changelog entry",
    "update the version with hooks proposal in readme",
    "tweak invalid hook warning and error",
    "added stub search row",
    "typo in comment",
    "tidied up devtools frontend a little",
    "moved search icon into separate react component",
    "fixed small css bug",
    "adding tearing warning to store",
    "don't show roots in elements tree",
    "reload extension on navigate",
    "fixed an array type bug in store",
    "renamed app.js to app.js for consistency",
    "remove root from \"roots\" list on unmount",
    "tidying up",
    "improve reducer hook's lazy init api",
    "stashing partial windowing implementation",
    "added inline comments for types",
    "move hook mismatch warning to first mismatch site",
    "fixed text wrap bug in extension panel",
    "phased dispatcher",
    "spelling abitrarily -> arbitrarily",
    "change codeofconduct link",
    "state update bug in concurrent mode",
    "fix typo in code comment",
    "tweak context invariant message",
    "disallow reading context during usememo etc",
    "added initial chrome/firefox shells",
    "throttle bridge traffic for elements tree updates",
    "enable hooks!",
    "put dev-only code into dev blocks",
    "--save is no longer needed",
    "importing react for the first example.",
    "added prettier",
    "added a super basic readme",
    "initial commit",
    "add test coverage for readcontext on the server",
    "fix synchronous thenable rejection",
    "warn about incorrect use of useimperativehandle",
    "disallow reading context during usememo etc",
    "fix typo",
    "move lazy._result assignment",
    "warn about refs on lazy function components",
    "fix typo",
    "support sync thenables for lazy",
    "tidy up npm checkout process",
    "added flow type to keep hooks dispatchers in-sync",
    "add eslint rule playground",
    "warn when mixing createroot and old apis",
    "tweak to avoid property read",
    "small tweaks to ssr to match #14594",
    "add hooks support to reactshallowrenderer",
    "warn if number of hooks increases",
    "avoid new set for thenables",
    "support configurable labels for custom hooks",
    "fix typo",
    "make a fork for reactcurrentdispatcher",
    "separate object.is polyfill",
    "separate current owner and dispatcher",
    "inject reactcurrentdispatcher ref to devtools",
    "update reactupdatequeue.js",
    "update changelog for 16.7",
    "simplify wording of key warning",
    "react v16.7.0",
    "allow node 11 as devengine",
    "update reactfiberscheduler.js",
    "make scheduler debugging feature flag static",
    "inject overrideprops fn to devtools",
    "dangerfile exits early if build failed",
    "remove redundant argument of getplugins function",
    "tweaked wording for v8 \"performance cliff\" issue",
    "enable hooks in fabric",
    "differen -> different",
    "fix scheduler settimeout re-entrancy check",
    "prevent a v8 deopt when profiling",
    "automated fixture tests",
    "removed unnecessary externals from jest bundles",
    "fixed scheduler settimeout fallback",
    "remove usemutationeffect",
    "adding ismemo check to react-is package",
    "add initial build infrastructure",
    "add a null type test for memo",
    "make useeffect warning more verbose",
    "fix bug in clonehook",
    "errors not emitted in streams",
    "update fixtures/packaging/readme.md",
    "new server rendering infra",
    "add basic release script snapshot test",
    "publish a local release  to npm",
    "fix resolution of outer props with react.memo",
    "add more test coverage for nested memo",
    "use |0 to coerce to number",
    "here's -> here",
    "fix ssr usecallback in render phase",
    "warn about reassigning this.props",
    "reduce scheduler serialization overhead",
    "remove `import * as` pattern from the codebase",
    "remove window.postmessage fallback",
    "post to messagechannel instead of window",
    "add 16.6.3 changelog",
    "update error codes",
    "save ci-built node_modules as build artifacts",
    "add regression test for #14188",
    "simplememocomponent should warn if a ref is given",
    "simplify css shorthand property warning",
    "update readme",
    "renamed outdated schedule/tracing referecnes",
    "don't run danger on bad build",
    "fix typo",
    "eslint -> eslint",
    "improved suspense support in reactdomserver",
    "remove errant return assignment",
    "don't warn if an unmounted component is pinged",
    "fix typos",
    "suspense fuzz tester",
    "use entry in `yarn build ...` instead of label",
    "adding logger pri",
    "add fb build of eslint plugin",
    "fix comment typo",
    "add global to eslint plugin bundle config",
    "reuse deletions from primary tree",
    "don't delete children of suspended component",
    "make react-debug-tools a private package",
    "update bundle sizes for 16.6.1 release",
    "make react-debug-tools a private package",
    "updating changelog.md for 16.6.1 release",
    "updating yarn.lock file for 16.6.1 release",
    "update error codes for 16.6.1 release",
    "updating package versions for release 16.6.1",
    "fix unhiding in ie11",
    "remove unused simulated flag parameter",
    "\"functional component\" -> \"function component\"",
    "update changelog with unreleased features",
    "fix lazy with defaultprops",
    "check correct commit phase props in fuzz tester",
    "enable hooks in www test renderer, too",
    "enable hooks in www build",
    "implement {,un}hideinstance on rn renderer",
    "restore the hooks dispatcher after using ssr",
    "dce hooks code when flag is off",
    "update readme.md",
    "update the benchmark script",
    "fix crash during server render",
    "warn for bad useeffect return value",
    "warn for forwardref)",
    "tweak error message for missing fallback",
    "remove duplicate import declarations",
    "simplify imports in react reconciler",
    "add back proper asyncmode symbol, for back compat",
    "fix react-cache umd build",
    "don't lint against hooks after conditional throw",
    "flip expiration times",
    "rename reacthooks test suite",
    "swap order of function member in hook union types",
    "warn about variable number of dependencies",
    "remove dispatch callbacks",
    "prettier",
    "deadline object -> shouldyield",
    "add eslint rule for react hooks",
    "disable hook update callback",
    "skip updating effect tag when skipping effect",
    "add readcontext to reactpartialrendererhooks",
    "warn about usecontext",
    "make effects actually work with memo",
    "the lost effect, chapter 3",
    "warn for hook set-state on unmounted component",
    "memo supports hooks",
    "make sure deletions don't stop passive effects",
    "the lost effect, chapter 2",
    "add support for hooks to reactdomserver",
    "defer useeffect until after paint",
    "initial hooks implementation",
    "put hooks behind feature flag",
    "remove extraneous css selector",
    "fix typo",
    "updated comment for geteventmodifierstate",
    "it's concurrent",
    "enable stable concurrent apis flag for 16.7 alpha",
    "fix scheduler fixture",
    "update bundle sizes for 16.6.0 release",
    "updating package versions for release 16.6.0",
    "revert all package versions to 16.5.2 state",
    "update error codes for 16.6.0 release",
    "fix suspense fixture",
    "prettier",
    "add skipci flag to release script",
    "revert accidentally committed existence check",
    "remove `cache` as argument to `read`",
    "removed react-cache from the bundle list for now",
    "fix lint",
    "add flow types in geteventmodifierstate",
    "add flow types in reactcontrolledcomponent",
    "suspending a class outside concurrent mode",
    "fix markdown",
    "add flow types in getnodeforcharacteroffset",
    "fix babel-preset-fbjs configure link in comment",
    "remove unstable_ prefix from suspense",
    "fix failing async tests in node 10",
    "remove redundant word \"the\"",
    "add 16.6.0 changelog",
    "tweak changelog credits",
    "add `use strict` to .prettierrc.js",
    "add support for react.pure in reactdomserver",
    "pure -> memo",
    "allow arbitrary types to be wrapped in pure",
    "add readcontext to ssr",
    "revert \"react.pure automatically forwards ref\"",
    "ssr support for class contexttype",
    "lazy components must use react.lazy",
    "bugfix for #13886",
    "unfork lazy component branches",
    "centralize props memoization",
    "(",
    "remove render prop option from suspense",
    "fix lint",
    "rename priority levels",
    "call ensurehostcallbackisscheduled without args",
    "deprecate finddomnode in strictmode",
    "error gracefully for unsupported ssr features",
    "use react.lazy in suspense fixture",
    "facebook/react",
    "renamed 4 internal react modules",
    "renamed 4 internal react modules",
    "react.pure automatically forwards ref",
    "revert \"comment out temporarily\"",
    "updating dependencies for react-noop-renderer",
    "eagerly schedule raf at beginning of frame",
    "enable suspense + rename placeholder",
    "add a test documenting current behavior",
    "don\u2019t add onclick listener to react root",
    "wrap retrysuspendedroot using schedulertracing",
    "functional -> function component",
    "add envify transform to scheduler package",
    "fix - small misspelling",
    "comment out temporarily",
    "jest + test renderer helpers for concurrent mode",
    "remove unreachable code",
    "umd react-cache build",
    "fix simple-cache-provider import that i missed",
    "--save is no longer needed",
    "pure",
    "enable getderivedstatefromerror",
    "rename simple-cache-provider to react-cache",
    "revise `attributetype` react native flow type",
    "rename asyncmode -> concurrentmode",
    "added a purecomponent contexttype test",
    "interaction tracking ref-counting bug fixes",
    "remove redundant logic",
    "add closing parenthesis",
    "added another bullet to the changelog",
    "clarify comment",
    "remove some old files from stats",
    "rename 'schedule' header -> 'schedule '",
    "16.5.2 changelog",
    "rename schedule to scheduler",
    "update bundle sizes for 16.5.2 release",
    "update error codes for 16.5.2 release",
    "fix circular dependency in tracingsubscriptions",
    "revert \"do not bind topleveltype to dispatch\"",
    "kepp calling peformwork consistent",
    "fix misspelling",
    "updating package versions for release 16.5.2",
    "do not bind topleveltype to dispatch",
    "remove flow typings from schedule.js",
    "update error codes for 16.6.0-alpha.0 release",
    "update bundle sizes for 16.6.0-alpha.0 release",
    "updating dependencies for react-noop-renderer",
    "refactor schedule, remove react-isms",
    "fix some iframe edge cases",
    "add umd production+profiling entry points",
    "fix test comment typo",
    "update error codes for 16.5.1 release",
    "delete tapeventplugin",
    "add 16.5.1 changelog",
    "updating package versions for release 16.5.1",
    "rename \"tracking\" api to \"tracing\"",
    "run tests for fire feature flags",
    "\ud83d\udd25 stop syncing the value attribute on inputs",
    "update bundle sizes for 16.5.1 release",
    "fix ie version in comment",
    "fix warning without stack for ie9",
    "fix packaging fixtures",
    "switch to @sizebot token",
    "honor displayname set on forwardref if available",
    "hydration dom fixture",
    "enable no-use-before-define rule",
    "fix host bailout for the persistent mode",
    "fixed small changelog error",
    "break up reactdomserverintegrationform-test",
    "remove duplicate **when**",
    "use clearer wording",
    "updated 16.5 changelog",
    "update reactnativeviewconfigregistry flow types",
    "add 2fa otp code to npm dist-tag command too",
    "update bundle sizes for 16.5.0 release",
    "update error codes for 16.5.0 release",
    "updating package versions for release 16.5.0",
    "build script correctly bumps prerelease deps",
    "added a test for profiler onrender that throws",
    "updating yarn.lock file for 16.5.0 release",
    "update react-dom readme",
    "call profiler onrender after mutations",
    "add enablesuspenseserverrenderer feature flag",
    "tweak react-dom readme",
    "changelog for 16.5.0",
    "add test for fragement props",
    "change async fixtures to use schedule",
    "fix import of reactdom in server env",
    "fix test file name",
    "check document.documentmode once",
    "try/finally",
    "revert \"extract common logic\"",
    "add gridarea to unitless css properties",
    "document event bubble order",
    "fix test",
    "scheduler => schedule",
    "remove www scheduler fork",
    "extract common logic",
    "tweak readme and description",
    "rename \"react-scheduler\" package to \"schedule\"",
    "expose less internals for testutils",
    "ignore noscript content on the client",
    "tidied up scheduling umd api forwarding test",
    "rename reactdomfiber* to reactdom*",
    "fix a typo",
    "add regression test for #6119",
    "add a more precise regression test for #6219",
    "add a regression test for #4618",
    "interaction tracking follow up",
    "add ssr regression test for #6119",
    "fetch all tags in dom fixtures",
    "make regression test better",
    "fixed typo",
    "correct syntax in changelog",
    "added flow types to setinnerhtml",
    "sync react native flow changes",
    "update yarn.lock",
    "fix test to use asyncmode",
    "improve test harness of submit events",
    "rename lowestpendinginteractiveexpirationtime",
    "remove buggy unstable_deferredupdates",
    "fix warning message",
    "replace magic number 1 with element_node",
    "stringify <option> children",
    "remove ismounted false positive warning",
    "change www error shim api",
    "warn about unsafe towarndev nesting in tests",
    "bumped version to 16.4.3-alpha.0",
    "remove gettextcontentaccessor",
    "fix component name for react.lazy",
    "trap click events for portal root",
    "fix react.lazy",
    "tweak reacttypeofwork order",
    "do not tolowercase lists of lowercase words",
    "short circuit the logic for exporting a module",
    "add interaction-tracking/subscriptions",
    "remove addeventlistener check in iseventsupported",
    "refactor away some namespace imports",
    "interaction-tracking package",
    "resume onselect tracking after dragend",
    "don't pass instancehandle to clones",
    "update attribute table for master",
    "react.lazy",
    "fix wrong flow return type",
    "provide a better error message",
    "remove unused reactcall & reactreturn types",
    "de-duplicate commitupdatequeue effect commit",
    "accept promise as element type",
    "refactor reacterrorutils",
    "don't suppress jsdom error reporting in our tests",
    "improve bad ref invariant",
    "ability to access window.event in development",
    "fix typo in a comment",
    "ignore symbols and functions in select tag",
    "dom fixture updates",
    "fix passing symbols and functions to textarea",
    "fixtures nits",
    "remove 'flow-coverage-report' script.",
    "rename safevalue to tostringvalue",
    "fix fixture title",
    "improve soundness of reactdomfiberinput typings",
    "rely on bubbling for submit and reset events",
    "fix typo on inline comment",
    "fix typos detected by github.com/client9/misspell",
    "improve scry error message for bad first argument",
    "improve display of filenames in component stack",
    "make nicer stacks dev-only",
    "profiler actualduration bugfix",
    "remove unused dependencies from workspace root.",
    "update attribute table",
    "fix prettier \"no parser\" warning while building",
    "remove promise on checkmodule",
    "fix undefined variable on suspense fixture",
    "id -> name",
    "class -> classname",
    "add support for auxclick event",
    "add a regression test for #12200",
    "fix lint",
    "suspense fixture placeholder styling improvement",
    "fix ambiguity in doc comment for isvalidelement",
    "update fixture instructions",
    "add flowtype to function signature",
    "warn about rendering generators",
    "inject react-art renderer into react-devtools",
    "remove extraneous condition",
    "add a regression test for #11602",
    "fix prettier",
    "fix time slicing fixture",
    "sanitize unknown attribute names for ssr",
    "move async fixtures",
    "tweak other fixture instructions",
    "add 16.4.2 and other releases to changelog",
    "tweak fixture instructions",
    "refactor validatedomnesting a bit",
    "fix ssr crash on a hasownproperty attribute",
    "fix incorrect changelog entry for 16.3.3",
    "allow electrons <webview> tag",
    "add nodejs 10 to windows test",
    "add suspense fixtures for io and cpu demo",
    "remove 'warning' module from the js scheduler",
    "add @flow directive to finddomnode shim",
    "jest matchers for async tests",
    "fix warning extraction script",
    "update www warning shim",
    "include modes in the component stack",
    "move unstable_yield to main export",
    "update prettier",
    "remove unnecessary `typeof` checks",
    "fix matcher tests to be dev-only",
    "protect against passing component stack twice",
    "add component stacks to some warnings",
    "reorganize how shared internals are accessed",
    "remove event simulation of onchange events",
    "update comments",
    "correct type of `ref` in forwardref render",
    "deprecate test utils mock component follow up",
    "add support for re-entrant ssr stacks",
    "deprecate reacttestutils.mockcomponent",
    "update devengines to include nodejs 10.x",
    "add a test for ssr stack traces",
    "fix concatenation of null to a warning message",
    "configure react-test-renderer as a secondary",
    "refactor stack handling",
    "decrease nested update limit from 1000 to 50",
    "fix nested update bug",
    "reset profiler timer correctly after errors",
    "run server rendering test on bundles",
    "react.timeout -> react.placeholder",
    "updated url to code of conduct page",
    "prepare placeholders before timing out",
    "fix flow type that event target can be null",
    "update readme.md",
    "reorder sections",
    "more links",
    "just remove this sentence",
    "tweak links in readme",
    "add link to another article about react renderers",
    "fix readme typo",
    "update links",
    "fix crash during server render in react 16.4.1.",
    "adding check for mousemove",
    "eliminate unnecessary do-while loop in renderroot",
    "add a link to custom renderer intro article",
    "remove some redundant lines",
    "remove or inline some fbjs dependencies",
    "remove raf fork",
    "inline fbjs/lib/emptyobject",
    "update bundle sizes for 16.4.1 release",
    "remove transitive dependency on fbjs",
    "inline fbjs/lib/emptyfunction",
    "setjsresponder in fabric renderer",
    "update changelog for 16.4.1",
    "update error codes for 16.4.1 release",
    "remove fbjs dependency",
    "add unreleased changelog",
    "updating package versions for release 16.4.1",
    "updating yarn.lock file for 16.4.1 release",
    "scheduler depends on common packages",
    "fallback to event.srcelement for ie9",
    "remove old reference to inst._wrapperstate",
    "popping context is o in ssr",
    "fix an svg focusing crash in ie11",
    "don\u2019t error when returning an empty fragment",
    "added production profiling bundle type",
    "update custom renderer docs",
    "fix links of docs on the comment",
    "use --frozen-lockfile in appveyor",
    "5/n error handling in scheduler",
    "release script prompts for npm 2fa code",
    "set the correct initial value on input range",
    "fix for flow issues in simplecacheprovider",
    "expose unstable_interactiveupdates on reactdom",
    "use lru cache eviction",
    "update token",
    "extend input type check in selection capabilities",
    "disable flow on appveyor again",
    "forwardrefs supports proptypes",
    "upgrade to jest 23",
    "use --frozen-lockfile for yarn in ci build",
    "no longer expose reactnativecomponenttree",
    "2/n adding 'schedule' fixture",
    "update changelog for 16.4.0",
    "update error codes for 16.4.0 release",
    "update bundle sizes for 16.4.0 release",
    "updating package versions for release 16.4.0",
    "improve tests for 'schedule' module",
    "updating yarn.lock file for 16.4.0 release",
    "fix a typo",
    "add react.timeout to getcomponentname",
    "tweak the changelog",
    "add upcoming 16.4.0 changelog",
    "add legacy context api warning in strict mode",
    "add siblings timeout components test case",
    "fix double-firing submit events",
    "add a clear error when renderers clash in tests",
    "tests and fixes for 'timing out' behavior",
    "add netlify toml file",
    "update flow to 0.70",
    "false",
    "treat rollup \"warnings\" as errors",
    "update jest",
    "https in reactprodinvariant text",
    "try to reenable flow on windows ci",
    "temporarily disable flow on appveyor",
    "resolve host configs at build time",
    "fix sample command in scripts/bench/readme.md",
    "try to fix windows ci",
    "run flow for each renderer separately",
    "make react_profiler_type numeric value unique",
    "remove incorrect comment",
    "re-enable flow for reactfiber and fix flow issues",
    "run the ci script on windows",
    "wire up event emitters",
    "separate `yarn flow` and `yarn flow-ci`",
    "only measure \"base\" times within profilemode",
    "quick fix for reactscheduler type inconsistency",
    "delete react call/return experiment",
    "rename scheduler methods more accurately",
    "removed duplicate feature flag in test",
    "enable profiler timing for dom and rn dev bundles",
    "tweak comments",
    "add fb www build of simple-cache-provider",
    "support pointer events",
    "pass instance handle to all fabric clone methods",
    "try to fix flow issue on windows",
    "revert recent flow changes",
    "quick fix for minor typo in reactscheduler",
    "relax current renderer warning",
    "try to fix flow issue on windows",
    "try to fix flow issue on windows",
    "try to fix flow issue on windows",
    "try to fix flow circular dependency",
    "remove unused context param from `countchildren`",
    "fix type for reactnative.nativecomponent",
    "delete reactperf and reactdebugtool stubs",
    "update headers for react native shims",
    "move renderer host configs into separate modules",
    "add context provider/consumer to getcomponentname",
    "update lockfile",
    "use java version of google closure compiler",
    "fix a typo",
    "remove unused es3-specific packages - refs #12716",
    "update sizes",
    "record sizes",
    "support multiple callbacks in scheduler",
    "suspense",
    "rename internal property to fix react devtools",
    "add error when running jest directly",
    "remove es3-specific transforms",
    "fix a context propagation bug",
    "revert stray console.log",
    "update bundle sizes",
    "dedup conditional in reactscheduler",
    "//github.com/facebook/react/pull/12117",
    "exposed flushsync on the test renderer",
    "decouple update queue from fiber type",
    "validate props on context providers",
    "add server integration tests for new context",
    "initial commit",
    "update secret types",
    "update bundle sizes for 16.3.2 release",
    "remove duplicate code in test",
    "add 16.3.2 changelog",
    "update error codes for 16.3.2 release",
    "updating package versions for release 16.3.2",
    "updating yarn.lock file for 16.3.2 release",
    "fix documentation of the release process",
    "fix small typos in create-subscription readme",
    "update gcc",
    "minor fixes",
    "remove @providesmodule in www shims",
    "fixes language in error message.",
    "added umd build to test renderer package",
    "move view config registry to shims",
    "refactor findhostinstance and findnodehandle",
    "consolidate eventtypes registry with view configs",
    "remove reactnativepropregistry",
    "allocate unique reacttags for rn and fabric",
    "support findnodehandle in fabric",
    "removed duplicate typeof check",
    "remove flushsync from react native",
    "removed array.from usage",
    "clarify reactdom's case warning for html tags",
    "keep consistency in the comment",
    "move takesnapshot to rn",
    "preserve error codes for invariants on www",
    "move touchhistorymath to react native repo",
    "facebook.github.io/react -> reactjs.org",
    "must be *a* before placementandupdate",
    "changelog for 16.3.1",
    "add a build step to hoist warning conditions",
    "bug fix",
    "update bundle sizes for 16.3.1 release",
    "updating package versions for release 16.3.1",
    "updating yarn.lock file for 16.3.1 release",
    "make new warning less wordy",
    "improve not-yet-mounted setstate warning",
    "bumped create-subscription package version",
    "add missing changelog item",
    "remove @providesmodule in www bundles",
    "validate react.fragment props without map.",
    "fix method name in changelog",
    "move context api in changelog to \"react\" section",
    "fix links",
    "add react 16.3.0 changelog",
    "update bundle sizes for 16.3.0 release",
    "updating dependencies for react-noop-renderer",
    "unstable_createroot",
    "updating package versions for release 16.3.0",
    "disable createroot for open source builds",
    "add react.isvalidelementtype",
    "improve warning message for setstate-on-unmounted",
    "fix build script to handle react-is",
    "update bundle sizes for 16.3.0-rc.0 release",
    "fix typo in create-subscription readme",
    "caveat about async in create-subscription readme",
    "updating dependencies for react-noop-renderer",
    "updating package versions for release 16.3.0-rc.0",
    "remove dependency on react",
    "call getsnapshotbeforeupdate before mutation",
    "rename react-is import alias in fb bundles",
    "include react-is in fb build targets",
    "getsnapshotbeforeupdate",
    "don't pass a fiber to showerrordialog",
    "tweaks the build script",
    "adds semver to the package dev dependencies",
    "rename bits to unstable_observedbits",
    "update bundle sizes for 16.3.0-alpha.3 release",
    "updating dependencies for react-noop-renderer",
    "removed dev warnings from shallow renderer.",
    "use \"component\" as fallback name in more places",
    "add a fallback component name for warnings",
    "added badge for react documentation",
    "clean shell scripts",
    "removed documentation badge from readme.md",
    "fix falling in dev mode",
    "fix prettier",
    "register reactfabric to be callable module",
    "fix an infinite loop in new context",
    "support forwardref type of work in testrenderer",
    "fix typo in unexpected ref object warning",
    "unify context stack implementations",
    "removed an unnecessary wrapper object from state",
    "updated create-subscription description",
    "update bundle sizes for 16.3.0-alpha.2 release",
    "renamed createref .value attribute to .current",
    "react.forwardref implementation",
    "updating dependencies for react-noop-renderer",
    "update error codes for 16.3.0-alpha.2 release",
    "create-subscription",
    "do not clear errors after they are thrown",
    "added link to reactjs docs for test renderer",
    "fix comment type in reactelement",
    "ssr setstate in diff components don't mix",
    "revert \"temporarily disable danger in ci\"",
    "annotation typo",
    "temporarily disable danger in ci",
    "ignore rn events on unknown nodes",
    "add stack unwinding phase for handling errors",
    "format danger percents better",
    "update test renderer to support new types of work",
    "simple-cache-provider",
    "update bundle sizes for simple-cache-provider",
    "handle packages without dependencies",
    "update bundle sizes for 16.3.0-alpha.1 release",
    "updating dependencies for react-noop-renderer",
    "added reactfabric shim",
    "add react-is package",
    "update sizes",
    "move reactcontext source to react package",
    "interleaved context.provider bugfix",
    "fix build stats display",
    "fix finding fabric feature flags",
    "fix server render async mode",
    "fix server render strict mode",
    "adds createref as per rfc",
    "string ref warning shows name of ref",
    "clearer ssr error message 11902",
    "warn about string refs within strict mode trees",
    "expose persistent reconciler to custom renderers",
    "release script does a fresh yarn install of deps",
    "pre-release version fix",
    "fix fragment handling in totree",
    "update error codes for 16.3.0-alpha.0 release",
    "fix process.ci typo",
    "update bundle sizes for 16.3.0-alpha.0 release",
    "add react-lifecycles-compat and update tests",
    "updated create-react-class to 15.6.3",
    "switch to jsx api for context",
    "reactdom.flushcontrolled",
    "interactive updates",
    "updated reactfeatureflags shim",
    "handle nested fragments in totree",
    "debug render-phase side effects in \"strict\" mode",
    "new context api",
    "update debugrenderphasesideeffects behavior",
    "move a comment to its original location",
    "react lifecycles compat",
    "test that fabric renderer sends diffs",
    "temporarily disable danger",
    "add experimental fabric renderer",
    "fix copy paste error for file size comparison",
    "deprecate unsafe lifecycles",
    "added 9.x to node devengines",
    "plug ~100 test leaks",
    "add media events back to testutils.simulate",
    "remove unused expect beta dependency",
    "drop some top-level events from the list",
    "remove experimental rt/cs renderers",
    "minor typos fixed",
    "use prettier config api",
    "add test fixture for media event bubbling",
    "reconcile call component children with `current`",
    "deduplicate warning on invalid callback",
    "use 2 workers for all tests on ci",
    "flow-coverage-report",
    "sync scheduling by default, with an async opt-in",
    "enable coverage, set jest maxworkers to 2",
    "run \"yarn prettier\" on appveyor",
    "disable coverage again",
    "reduce the handletoplevel event code indirection",
    "support onload and onerror on <link>",
    "remove ie8 event.target polyfill via srcelement",
    "clarify reason for settextcontent helper",
    "removes legacy todos in createfactory methods",
    "remove extra loop",
    "update http to https in changelog.md",
    "pass host context to finalizeinitialchildren",
    "update to jest 22",
    "removed presto check",
    "update additional tests to use .towarndev matcher",
    "update additional tests to use .towarndev matcher",
    "reword issue template",
    "fix links in readme.md",
    "run some tests in node environment",
    "return event name from getvendorprefixedeventname",
    "fix writing stats to the file",
    "re\u00ebnable stats downloading",
    "this will fix ci, this time for real",
    "record sizes",
    "we can reenable this now",
    "temporarily disable downloading the results file",
    "fix a few more issues that should fix the ci",
    "we can add this back now",
    "temporarily remove a script section that crashes",
    "fix typos",
    "add nomodule boolean attribute",
    "update flow  and declare context type",
    "use binary numbers representation directly",
    "upload build stats to the server",
    "update results.json from master before the build",
    "fixed an issue #11853 - window.opera=null problem",
    "prevent beforeinputplugin from returning",
    "record sizes",
    "rudimentary tests for not covered entry points",
    "simplify syntheticevent declarations",
    "update rollup deps",
    "update changelog",
    "record sizes",
    "use different eslint config for es6 and es5",
    "fix wrong deduplication condition",
    "refactor dom attribute code",
    "refactor dom attribute code",
    "revert \"refactor dom attribute code \"",
    "move isattributenamesafe to domproperty",
    "add more coverage for custom elements",
    "remove ie8-specific focus polyfill",
    "add `yarn build --pretty`",
    "oops, fix ci",
    "validatedomnesting tests",
    "add a test-only transform to catch infinite loops",
    "oops",
    "mention how to use debuggers",
    "add `yarn debug-test`",
    "refactor the build scripts",
    "https fb.me links",
    "record sizes",
    "remove vars",
    "reactdom.createroot creates an async root",
    "remove the unused shim",
    "remove vars",
    "convert packages/react-dom/src/__tests__",
    "update the attribute table",
    "fix benchmark runner",
    "convert vars into let/const",
    "convert vars into let/const",
    "remove dead code from dompropertyoperations",
    "convert vars to let/const",
    "convert vars to let/const",
    "use defaultvalue instead of setattribute",
    "pin lighthouse at 2.0.0",
    "move html and svg configs into domproperty",
    "record sizes",
    "convert vars into let/const",
    "use static injection for reacterrorutils",
    "create tapeventplugin-test",
    "fix issues with the new fork plugin",
    "deprecate injecting custom event plugins",
    "unify the way we fork modules",
    "remove empty value for boolean attributes in ssr",
    "convert var to let/const",
    "convert var to let/const",
    "prevent infinite loop when ssr-rendering a portal",
    "record sizes",
    "fixes path in package.json build script",
    "convert var to let/const",
    "delete fiber test tracker",
    "disable flow on appveyor",
    "try to fix appveyor",
    "add more tasks to appveyor",
    "scripts/error-codes",
    "always set pendingprops to the next props",
    "fix ci fact uploading",
    "added reactfeatureflags shim for react native",
    "root.createbatch",
    "add 16.2.0 to changelog",
    "update bundle sizes for 16.2.0 release",
    "updating package versions for release 16.2.0",
    "fix for fiber root scheduling memory leak",
    "amend changelog",
    "remove unnecessary yarn download",
    "record sizes",
    "do not fail `yarn linc` for ignored file warning",
    "update readme urls to https",
    "lint untracked files with `yarn linc`",
    "remove accidentally duplicated tests",
    "use async/await in rollup scripts",
    "set fragment export flags to true",
    "enable bundle tests for react.fragment",
    "show nicer message on syntax errors",
    "upload build on the same node where it happens",
    "fix jest call in the release script",
    "don't reset error codes on ci build",
    "use only public api for changeeventplugin-test.js",
    "added verification check for misspelled proptypes",
    "forbid haste in jest",
    "change dev-only invariants to be warnings",
    "consolidate all symbols in a single file",
    "record sizes",
    "run 90% of tests on compiled bundles",
    "add `yarn test-prod` to pull request steps",
    "remove mentions of module map in jest config",
    "run jest tests with \"development\" environment",
    "run jest in production mode",
    "fixes typo in eslint script",
    "read debugrenderphasesideeffects from gk",
    "re-enable umd build for testutils",
    "format test fixtures",
    "upgrade rollup dependency",
    "improve formatting of errors when building",
    "added a .watchmanconfig file",
    "always reconcile against current children",
    "updating package versions for release 16.1.1",
    "add flow types for eventpluginhub",
    "amend changelog",
    "minor fixes to dom test fixtures",
    "update bundle sizes for 16.1.1 release",
    "updating changelog.md for 16.1.1 release",
    "unfreeze the react-dom/server interface",
    "support string values for capture attribute.",
    "update value tracking on cousin radios",
    "update flow and fix hydration types",
    "refactor some event tests",
    "fix lint",
    "add note about mistaken named / default export",
    "release script tweaks",
    "fix the release script",
    "fix accidental leftover requires",
    "add `code_of_conduct.md`",
    "update bundle sizes for 16.1.0 release",
    "enable createroot api in www",
    "updating package versions for release 16.1.0",
    "updating changelog.md for 16.1.0 release",
    "update bundle sizes for 16.1.0-rc release",
    "updating package versions for release 16.1.0-rc",
    "fixing typo on test",
    "consolidate build process with gcc",
    "release script follow-up",
    "correct link for \"your first pr\"",
    "update bundle sizes for 16.1.0-beta.1 release",
    "fix error reporting in release script",
    "update error codes for 16.1.0-beta.1 release",
    "add react-call-return to publish list",
    "fix react.createfactory crash",
    "warn when interrupting an in-progress tree",
    "amend changelog",
    "update prettier to 1.8.1",
    "add warning for componentdidreceiveprops",
    "correctly replace shims using relative requires",
    "minor typo",
    "amend changelog",
    "split static and dynamic www feature flags",
    "put perf integration behind a feature flag",
    "record sizes",
    "fix dead code elimination for feature flags",
    "use const/let in more places",
    "expose injectintodevtools to renderers",
    "use prettier api",
    "handle prettier error",
    "switch ordering of logical and",
    "use rollup legacy mode for www builds",
    "rewrite setinnerhtml tests to use public api.",
    "make linc script cross platform",
    "use named exports in more places",
    "tweak the bundle validation script",
    "update geteventkey tests to use public api",
    "validate built bundles exists",
    "update changelog",
    "add a way to suppress devtools logs and warnings",
    "refer people to \"good first issue\"",
    "record sizes and fix bundle lint",
    "update bundle sizes for 16.1.0-beta release",
    "update changelog",
    "fix typo",
    "add a link to rcr explanation",
    "update error codes for 16.1.0-beta release",
    "updating package versions for release 16.1.0-beta",
    "updating yarn.lock file for 16.1.0-beta release",
    "put createroot export under a feature flag",
    "remove unnecessary 'use strict' in the source",
    "record sizes",
    "record sizes",
    "update rollup",
    "undo fbjs/lib/eventlistener inlining",
    "fix lint issues",
    "validate built bundles with a few eslint rules",
    "always run react.fragment tests",
    "put react.fragment under a feature flag",
    "use warning over console.error direct call",
    "constructor error message",
    "convert the source to es modules",
    "fuzz test across multiple roots",
    "deduplicated many warnings",
    "reorder badges by colors",
    "add portal support to react.children calls",
    "removing dot to avoid redirect to facebook.com",
    "record sizes",
    "implement some stuff",
    "add fragment as a named export to react",
    "add a shim for react 16.0.0 future compatibility",
    "inline fbjs/lib/eventlistener dependency",
    "coverage works again",
    "flow-ify reactpartialrenderer",
    "documentation on readme",
    "maybe proactively redirect some doc site issues",
    "fix stray absolute imports",
    "add disclaimer",
    "add react-call-return package",
    "make yarn lock file current",
    "forbid adding new files with @providesmodule",
    "update jest and remove hacks",
    "remove task priority",
    "temporarily hide broken coverage reporting",
    "reorder imports",
    "expose tapeventplugin on the www bundle",
    "remove accidental art peerdep from react-art",
    "drop haste",
    "update ci environment",
    "expose react-art/{circle,rectange/wedge} on npm",
    "rename haste modules",
    "add item to changelog",
    "record sizes",
    "update changelog",
    "make \"art\" a dependency of \"react-art\"",
    "delete unused code in reactdomframescheduling",
    "move dom-specific event files to the right folder",
    "split performwork into renderroot and commitroot",
    "fix build/sync script for rn/cs/rt",
    "flatten everything",
    "remove outdated todo",
    "fix typos in comments",
    "move files in react package",
    "fix production crash",
    "flatten the shared/ folder",
    "add component stack to invalid style warnings",
    "reorganize code structure",
    "update contribution instructions",
    "only renderers should depend on reconciler code",
    "persistent updates",
    "delete unnecessary typing from the website",
    "use yarn workspaces",
    "use sigil instead of comparing basestate to null",
    "better fix for base state bug",
    "render-phase setstate bugfix",
    "add static injection for feature flags",
    "remove unnecessary comparison;",
    "update rolling changelog",
    "added component stack to contenteditable warning",
    "fix forceupdate in shallow test renderer",
    "remove unused bundle flag",
    "delete .netlify",
    "put nativecs bundles into their own directory",
    "record sizes",
    "don't mark portals for updates",
    "isportal is not referenced anywhere",
    "remove broken links from react art readme",
    "move flow environment into scripts/flow",
    "delete adler32 implementation",
    "drop name and commonerconfig from package.json",
    "simplify jest-specific tests",
    "release script",
    "tweaked wording of release script readme",
    "simplify jest config a little bit",
    "fix typos",
    "record sizes",
    "reactdom.createroot",
    "deterministic updates",
    "record sizes",
    "add to changelog",
    "fix dom fixture for 16.0.0",
    "move loop init variable assignment",
    "react reconciler package",
    "update changelog",
    "update changelog",
    "remove ie8 code",
    "keep autofocus attribute in the dom",
    "remove broken link from licence",
    "changelog",
    "record sizes",
    "update changelog",
    "support multiple `setstate` invocation",
    "fix form reset for uncontrolled select elements",
    "more predictable things",
    "add an item to changelog",
    "expiration times",
    "update rolling changelog",
    "add more items to the rolling changelog",
    "minor clean up",
    "fix syntheticevent constructor comments",
    "remove references to patents that crept in",
    "fixes example in web components docs",
    "correct logo url",
    "rewrite reactdomselection to use fewer ranges",
    "fix blog issues that resulted from migration",
    "delete documentation and website source",
    "fork react native render into an \"rt\" renderer",
    "add rss feed to website",
    "add cursor + logo",
    "only define myelement when needed",
    "fix all github issues and prs query params",
    "update conferences",
    "update button labels",
    "add test for mounting into a document fragment",
    "remove bundle-collapser browserify recommendation",
    "removed pooledclass",
    "update react summit nigeria title",
    "update jsfiddle templates for react 16",
    "add changelog entry",
    "fix rendering into shadow root",
    "fix 404 for warning urls",
    "whitelist <dialog> from unknown tag warning",
    "update the changelog",
    "add <svg tabindex> to the attribute table",
    "add note to changelog",
    "fix tabindex attribute for svg",
    "fix lint",
    "fix lint error in master",
    "handling events shows wrong 'current' highlight",
    "add legacy jsfiddle files",
    "clarify implementation of tick in lifecycle docs",
    "stop exposing domproperty for the www build",
    "clarify the irc channel confusion",
    "update sizes",
    "delete domproperty www shim",
    "combine rendered note section",
    "disambiguate #react and #reactjs irc channels",
    "tweak search style",
    "improve docs for select multiple",
    "fix layout footer in contribuiting pages.",
    "fix createportal link in api docs",
    "update web-component docs to current standard",
    "remove stack-only branches and types)",
    "don't submit empty values",
    "fix html file download link",
    "remove stack-only dev code",
    "update reference-readme to remove react.dom",
    "chore remove extra style tag curly braces",
    "darkened line-highlight to increase contrast",
    "fix note formatting",
    "url on ssr",
    "use es6 module instead of commonjs",
    "updated og-image location",
    "don't include warning in production",
    "removed typekit in favour of system fonts",
    "add changelog for unreleased commits",
    "tweaks to \"introducing jsx\"",
    "don't let umd create extraneous global variables",
    "readme.md instructions",
    "remove note about license for example",
    "fix anchor links in reference-react documentation",
    "installation tabs design",
    "a11y fixes",
    "gatsby markdown cleanup",
    "fix for createhtmldocument api specific to ie11",
    "remove allow transparency",
    "paragraph line-height / margin follow-up",
    "remove apostrophe",
    "add reacteurope 2018 conference",
    "split step 5 into 2 steps",
    "delete license-examples",
    "fix fragments docs example jsx typo",
    "add link to react community on hashnode",
    "minor update to portals docs \"child\" language",
    "unused files and tests)",
    "add new docs website",
    "remove unnecessary event whitelist in production",
    "remove ie8 property expansion workaround",
    "fix a few typos",
    "add a note about deprecating react-addons-perf",
    "fix typo on docs for react 16",
    "minor doc edit",
    "update authors for v16",
    "update docs for react 16",
    "fix portal link",
    "update portals documentation",
    "update name of property initializer proposal",
    "react.createportal is not a function",
    "fix react links on the website",
    "fix note formatting",
    "doc change for prevcontext removal in cdu",
    "doc updates for react 16 + blog post",
    "v16.0.0",
    "update changelog for react 16",
    "update error codes",
    "add changelog for 15.6.2",
    "add nate to authors on master",
    "add 15.6.2 blog post to master",
    "add reacttestrenderer documentations",
    "change license and remove references to patents",
    "version bumps to use mit license",
    "include tag name into the table snapshot",
    "update dom warning wording and link",
    "update license headers bsd+patents -> mit",
    "record sizes",
    "add a changelog for elements having the same key",
    "update changelog for unreleased 16.0 changes",
    "add react amsterdam 2018 conference",
    "small typo fixed",
    "remove view.proptypes rn deprecation workaround",
    "fix bug with totree on rendered array #10616",
    "record sizes",
    "16.0.0-rc.3",
    "fix fb isomorphic build",
    "update error codes",
    "update sizes",
    "update fbjs in lockfile",
    "fix context memory leak",
    "warn against custom non-lowercase attributes",
    "stop exposing shallow renderer from testutils",
    "remove undocumented testutils methods",
    "make reactdom.createportal official",
    "share object.assign polyfill between umd builds",
    "remove tostring-based minification check",
    "update sizes",
    "remove react proptypes references",
    "fix hint wording in tutorial.md",
    "fix test names in reactdomcomponent-test",
    "the order of withrouter and connect is reset",
    "adds missing else clause",
    "add react seoul 2017 to the conferences list",
    "more explicit class method for ref doc",
    "improve displayname documentation",
    "update sophie's name on various files",
    "reset effecttag to noeffect instead of nowork",
    "update my name in most places",
    "add react day berlin",
    "react native event type fixes",
    "update error codes and results.json",
    "dom attributes in react 16",
    "add comment for rendertostringimpl parameter",
    "16.0.0-rc.1",
    "update .mailmap",
    "remove \"const\" in uncompiled code",
    "add license headers on build bundles",
    "add agentconf 2018",
    "remove performwithpriority from scheduler",
    "generate markdown table from attribute fixture",
    "moar attribute tests",
    "fix minor typo in firefox name",
    "adding crowdin config file to master repo",
    "fix typo in script function name",
    "don't treat dashed svg tags as custom elements",
    "embed reactnative event types in javascript",
    "fix warning deduplication in attribute table",
    "changes to attribute whitelist logic",
    "track nested updates per root",
    "update sizes",
    "remove disablenewfiberfeatures flag",
    "track differences between dom and server renderer",
    "update issue template with proptypes package",
    "add --sync-www flag to build script",
    "lint command fails if there are any warnings",
    "update reference-events.md",
    "fixed lint error in reacterrorutils-test",
    "tweak attribute whitelist table",
    "disable hasownproperty test in attribute table",
    "updating param flow type definition",
    "more consistent hashing",
    "fixing incorrect documentation tags",
    "fix {false} test in attribute table",
    "add alphabetical and rev-alphabetical sorting",
    "upgrade flow-bin to 0.53.1",
    "remove umd builds from fixture directory",
    "add basic popover with additional information",
    "use development builds of react and reactdom",
    "delete vestigial cra files",
    "move attribite-behavior to fixtures",
    "use monospace font-family",
    "wrap string values in quotes",
    "removing unecessary assignment",
    "enable opt-in to async mode",
    "warn early for non-functional event listeners",
    "delete reactnativestack \ud83c\udf89 \ud83c\udf89 \ud83c\udf89",
    "add table of attribute behavior",
    "add renderer id to react-devtools injection",
    "revert \"remove old ie polyfill code\"",
    "add reactfoo 2017 to list of upcoming conferences",
    "custom attribute follow up",
    "use only public api in cssproperty-test",
    "warn when nesting 15 subtree inside 16",
    "don't warn about casing in ssr for non-html ns",
    "fixes #10443",
    "update version on dom fixtures",
    "set date to initial value when reset",
    "update flow to 0.52",
    "16 beta 5 version bump and results json",
    "fix bugs related to unmounting error boundaries",
    "enable new fiber reacttestrenderer api methods",
    "moved around package dependencies fixes #10335",
    "updated packages and results json for 16 beta 4",
    "support undefined progressedpriority",
    "update installation.md",
    "wop optimized this repository",
    "warn about unresolved function as a child",
    "add traversal for fiber test renderer",
    "log captured errors sooner",
    "compile spread to object.assign calls",
    "don't call componentdidupdate in shallow renderer",
    "move pooledclass to stack folder",
    "fiber debugger enhancements",
    "cross-origin error handling in dev",
    "fix lint error in dom fixtures",
    "remove old ie polyfill code",
    "use single entry point for ssr via browser field",
    "fix ci maybe",
    "wrap contents of if-dev condition in an iife",
    "remove an unnecessary __dev__ condition",
    "remove raf export from reactdomframescheduling",
    "upsell react devtools in 16",
    "fb bundles wrap warning calls in __dev__",
    "warn on missing set/map polyfills",
    "fix a typo",
    "fix error-codes not updating correctly",
    "grammar fixes for a code comment",
    "remove hydrate warning about empty container",
    "context improvements",
    "fix invariant parity for ssr",
    "make it more specific",
    "move shallowrenderer tests",
    "make unexpected console.warn calls fail tests",
    "test for specific ssr warning",
    "move line to within dev block",
    "remove trapbubbledeventslocal",
    "add babel plugin note to error boundaries post",
    "add date time test fixtures",
    "16.0.0-beta.2",
    "replace \"children \" with \"descendants\"",
    "reword further",
    "add smoke tests for styles",
    "fix process override in errorutils test",
    "link to react 16 beta",
    "fix reactpartialrenderer in production",
    "updated package versions and rollup results",
    "error handling in react 16",
    "updated error codes",
    "link warning to error boundary post",
    "add a disclaimer to internal invariants",
    "delete react-dom-factories package",
    "fix event name check to be more exact",
    "dedupe unknown tag name warning and ignore <time>",
    "update sizes",
    "remove feature test from invokeguardedcallbackdev",
    "handle nested errors across separate renderers",
    "fix failing prettier command",
    "support throwing null",
    "upgrade to flow v0.50.0",
    "reactdom.activeupdates",
    "react.unstable_asynccomponent",
    "remove record-tests step from contribution guides",
    "remove pooledclass from isomorphic build",
    "delete flattenchildren",
    "fix lint",
    "move dev only module requires into __dev__ blocks",
    "move input valuetracker to dom nodes",
    "fix scheduler control flow",
    "upgrade jest to 20.1.0-delta.1",
    "record sizes",
    "remove didcommit from scheduler",
    "simplify environment injections",
    "don't use stack-only helper in new ssr",
    "update conferences.md",
    "add react-dom-unstable-native-dependencies",
    "tweak deprecation messages to be less scary",
    "add missing space to key warning",
    "remove dependency to event system on the server",
    "reword duplicate key warning",
    "limit the number of nested synchronous updates",
    "run all fixtures through prettier",
    "fix uncontrolled radios",
    "add columns to isunitlessnumber list",
    "updated immutable data stuctures docs",
    "fix shallow renderer callbacks",
    "add react boston 2017 to upcoming conferences",
    "switch the order of lint and prettier",
    "fix the data-height of step 5 codepen embed",
    "enable the fuzz tester",
    "add reactnext 2017 to conference list",
    "fixing typo in reactdomcomponent test name",
    "fix the order of lint and prettier",
    "clear pending props when cloning from current",
    "remove ability to resume work",
    "update fuzz tester to not use animation priority",
    "warn for inline style mismatches",
    "small fixes",
    "tiny changes to tutorial",
    "don't build reactdomnodestream for fb",
    "removed reactmarkupchecksum from rendertostring",
    "fix mount and unmount warnings in fiber",
    "support comment node as a mount point",
    "update yarn.lock",
    "warn when the html mismatches in dev",
    "types fiber as an exact object type",
    "fix typo in reactfibertreereflection",
    "remove most comments from html generation output",
    "fix typo in reactdomfiberentry",
    "don't use the render callback with promises",
    "reactnativefibererrordialog mutates error message",
    "a11y] add accessibility docs",
    "remove travis badge from readme",
    "added info about streaming character encoding.",
    "remove \"unstable\" warning from reactdom",
    "remove more isomorphic www shims",
    "remove unused www shims",
    "remove stack-only www shim code",
    "update flow to 0.48",
    "excluding src/node_modules from .gitignore.",
    "fix to work fiber-debugger",
    "only check minprioritylevel after a commit",
    "remove animation priority",
    "create higher-order-components.md",
    "split out container methods in host config",
    "removes synthetic event forwarding module shims",
    "move out more reactdom fb shims",
    "prevents adding units to css custom properties",
    "add addon changes to 15.6.0 changelog",
    "wrap all non-umd dev bundles into a condition",
    "changelog for 15.6.1",
    "reword animation documentation deprecation",
    "use public api in tests wherever possible",
    "add future changelog for 15.6.0 addon release",
    "blog post for 15.6.0",
    "minor fixes to 15.6.0 changelog",
    "update changelog for 15.6",
    "add controllist to dom property whitelist",
    "remove addons path deleted in #9209",
    "initial commit",
    "don't build reactdomserverstack",
    "rn inspector guard against clicks outside of rn",
    "remove extra brace",
    "16.0.0-alpha.13",
    "fix doc styling and formatting issues",
    "return empty static markup for null components",
    "move past confs, add react conf brazil 2017",
    "remove alder32.js",
    "rebuild sizes",
    "remove usecreateelement flag",
    "delete .travis.yml",
    "stop building reacttestrendererstack",
    "add bailout effecttag for react devtools",
    "revert \"add react riot hackathon \"",
    "updated label in build-script",
    "delete reactartstack",
    "exclude stack from domserverstream",
    "add react riot hackathon",
    "update reference-react-component.md",
    "fix url to ng-animate",
    "tweak syntax in rollup build script",
    "remove commented out code",
    "remove reactcomponentexpect",
    "add pr #9302 to 15.6rc changelog",
    "disable tests of recovering from node.normalize",
    "fiber ssr tests",
    "fix ci",
    "clarifying how to apply aria-* attributes",
    "insert blockquote on prop value explanation.",
    "changed -> changes in changelog",
    "update webpack according to brand guidelines",
    "add npm 5 to devengines",
    "removed unnecessary rn fiber \"topsecret-\" prefix",
    "update to flow 0.47",
    "update changelog for unreleased 15.6 branch",
    "create `reactnativecomponent` abstract class",
    "rename javascript to javascript",
    "remove ensurescrollvaluemonitoring",
    "delete logtoplevelrenders flag and console timing",
    "inputs should not mutate value on type conversion",
    "don't build some stack bundles",
    "add bench remote repo to eslintignore",
    "ignore events on not-yet-mounted fibers",
    "add videos link to react europe 2017",
    "rename github to github",
    "add 'test utils' docs back to main navigation",
    "fix typo",
    "update numbers",
    "fix prettier",
    "extracterrors -> extract-errors",
    "don't strip error messages from builds",
    "prevent fiber from leaking into rn stack renderer",
    "bind handlechange instead of calling",
    "warn it only in dev",
    "reactnative flat renderer bundles",
    "hydration of previously rendered server markup",
    "improve low priority warning",
    "add #8575 to changelog for 15.6",
    "add reactiveconf",
    "move previous events to the end",
    "add test for key warning at top level",
    "expose reactfibertreereflection in fb build",
    "disable eslint's no-extend-native for two lines",
    "\"timeline\" => \"performance\"",
    "fix typo",
    "fix typo in benchmark docs",
    "add pr #9642 to 15.6 change log",
    "what's new in create react app",
    "initial stack-free ssr implementation",
    "remove invalid css from domfixtures",
    "run prettier on scripts/bench",
    "\"yarn prettier\" only checks changed files",
    "edit two errors in docs",
    "wrap fiber-only test in feature flag",
    "fix typo on tutorial.md.",
    "always pass error code to ci",
    "mention new fixes for addons in changelog",
    "tweak tutorial based on feedback",
    "updatequeue -> newupdatequeue",
    "add pr #8356 to the change log for v15.6",
    "update flow to 0.45",
    "sync rn downstream fix",
    "fix horizontal scrolling in docs",
    "fix sequencing in the tutorial",
    "fix mobile layout",
    "add pr #9584 to 15.6 change log",
    "fix a typo",
    "add react benchmarking infrastructure",
    "add dev mode note to installation doc",
    "use a more specific link",
    "add more info about building for production",
    "report version and bundle type to devtools",
    "16.0.0-alpha.12",
    "only perform class checks on initial mount",
    "remove unnecessary # in changelog",
    "move asyncupdates flag check to class-only path",
    "add missing passing test",
    "change warning casing",
    "make it easier to follow the instructions",
    "fix typos in changelog",
    "clarify where docs live",
    "update changelog for v15.5.1-15.5.4",
    "fix __proto__ bug in reactdomselect",
    "react.createelement syntax",
    "pre format only compile time errors",
    "fix unnecessary reactdom require",
    "includes -> indexof",
    "add guide on integrating with non-react code",
    "remove outdated troubleshooting section",
    "ssr fixture",
    "don't try to load asset manifest in dev mode",
    "fixed error formatting in live editor",
    "add reference to the hyperscript libraries",
    "updates yarn.lock",
    "improve component type check in getcomponentkey.",
    "use prop-types instead of prop-types factory",
    "load libraries from unpkg",
    "describe fixtures dir in the codebase overview",
    "rename react-dom to reactdom in facebook www",
    "adds indirect refs to docs",
    "prettier",
    "prettier",
    "reactartstack should use reactdom's reactupdates",
    "bumped version numbers and built 16.0.0-alpha.11",
    "move reactdomfactories into separate package",
    "don't build gh-pages branch on circleci",
    "ignoring files for vim users.",
    "bumped version numbers for alpha 10",
    "warn about infinity in style value",
    "add more details in jsx-in-depth.md",
    "use setproperty when setting style properties",
    "remove prev next links from add-ons documentation",
    "run prettier after update to 1.2 in master",
    "remove enableasyncsubtreeapi from host config",
    "use number type for bitfields",
    "rename contexttag -> internalcontexttag",
    "add contexttag field to fiber type",
    "add enableasyncsubtreeapi to host config",
    "run fiber test script",
    "run prettier",
    "fix master",
    "add component stack to invalid-object-child error",
    "inherit contexttag from the parent on creation",
    "shallow renderer and test utils bundles",
    "prettier 1.2",
    "reorganize the \"following along\" instructions",
    "minor tutorial nits",
    "fix duplicate sentence",
    "move cra build info under it's tab page",
    "es6, installation, and button closing tag",
    "minor tweaks to tutorial",
    "add missing tutorial sidebar links",
    "tweak tutorial structure",
    "fixed grammar",
    "fix ci failures in master",
    "warn for keys in fragments - third approach",
    "fix errors in react native children management",
    "uncomment invariant in uimanager mock",
    "sort out conferences by date",
    "impreove the react-component section of doc",
    "unique headings for linking purposes",
    "update jsx-in-depth.md",
    "switch installation to a tab when hash is present",
    "updated the good first bug section in readme",
    "update proptypes doc",
    "updated link for good first bug's in readme.md",
    "add warning if rendering and htmlunknownelement",
    "add tabs to installation page",
    "clarification of setstate behavior",
    "update typechecking-with-proptypes.md",
    "bumped versions for 16.0.0-alpha.9 and re-built",
    "createclass + proptypes + checkproptypes warnings",
    "use caret range in blog instructions",
    "fix minor typo in lifting-state-up.md",
    "convert createclass caller",
    "delete createclass",
    "react-create-class -> create-react-class",
    "update tests to use plain javascript classes",
    "run prettier",
    "add react-create-class integration tests",
    "fix ignore patterns in package.json",
    "delete examples dir from codebase overview",
    "blog post and changelog for 15.5.0",
    "change permissions of test_print_warnings",
    "16.0.0-alpha.8",
    "tweak rollup setup",
    "remove indirection in checking proptypes",
    "16.0.0-alpha.7",
    "all doc updates forv15.5",
    "it already exists in a folder",
    "fix glob ignore for build script",
    "run prettier",
    "fix art fixture",
    "exclude tests from warning print script",
    "fix warnings script to work on node 4",
    "fix the print warnings script",
    "adds support for labels on building bundles",
    "update build paths in docs",
    "update addons-two-way-binding-helpers.md",
    "update release manager with latest change",
    "remove mouseevent.button polyfill",
    "fix grammar typo in design principles docs",
    "remove examples/ folder",
    "deleting a specific style name float for ie8",
    "fix build",
    "port out bug fixes to reactartfiber",
    "remove scroll capture support warning",
    "disabling a no-unreachable lint error",
    "remove captured focus feature check",
    "update jsfiddle for issue template",
    "remove ie8-specific setinnerhtml behavior",
    "add dom fixture for unmasking passwords",
    "added semicolons to addons imports examples.",
    "use radio buttons for toggle",
    "add dom fixtures for disabled button click events",
    "allow returning null as host context",
    "remove ie8-specific changeeventplugin logic",
    "remove captured scroll feature check",
    "adding ssr test for form fields.",
    "fixed typo on implementation notes page",
    "ran yarn and fixed line-length lint issue",
    "updating packages for 16.0.0-alpha.6 release",
    "updated router import for example",
    "add dynamic injection to reacterrorutils",
    "fix up invariant import to be from fbjs/lib/",
    "conferences",
    "fix up flow syntax",
    "remove rethrowcaughterror injection",
    "add injection for error dialog",
    "fix reacterrorutils injection",
    "bumped react version to 16.0.0-alpha.5",
    "reactnative upstream sync",
    "re-add tests unintentionally deleted in #9209",
    "use single quotes, remove extra whitespace",
    "delete addons",
    "record fiber tests",
    "run `yarn prettier` to format code",
    "pass args as an array",
    "ci should fail if prettier wasn't run",
    "add prettier script",
    "add react rally to conferences list",
    "work around loose typing for fiber.updatequeue",
    "use explicit null checks in reactfiberupdatequeue",
    "fix lint rules",
    "non idempotent steps in prettier",
    "add ignore to multichild test",
    "update to prettier 0.22",
    "try 80-character line limit instead",
    "more options",
    "fix two bugs in version bump script",
    "add prettier option in scripts",
    "updated react native eu",
    "16.0.0-alpha.4",
    "switch umd build to use fiber",
    "remove ref usage in main markdown example",
    "use fiber by default",
    "run prettier",
    "remove unnecessary second getcomponentname",
    "reorder sections in alphabetical order",
    "use more widely supported emoji",
    "removed inline boolean checks for methods",
    "fiber dom async feature flag",
    "fix radio buttons using stale props in fiber",
    "fix redundant null type coercion",
    "performance measurements",
    "removed describe.only",
    "fixes tests so they correctly pass in fiber",
    "remove slicechildren",
    "remove reactstatesetters",
    "added brunch build tool to the docs",
    "removed comment",
    "removed double semicolon",
    "test that reacterrorutils module can be shimmed",
    "add script to print out a list of warnings",
    "add fixture components",
    "fix spacing in documentation",
    "fix usage of boolean constructor",
    "adding some server rendering unit tests.",
    "updated flow annotations",
    "add a step to the release process",
    "re-added missing files",
    "arechildrenoffscreen -> shoulddeprioritizesubtree",
    "add arechildrenoffscreen to host config",
    "pass type to arechildrenoffscreen, too",
    "add error for number constructor, too",
    "rename rule to no-primitive-constructors",
    "convert usage of string and boolean constructors",
    "square renders button, not div",
    "add test for no-primitive-constructors rule",
    "add caveat about symbols to string error message",
    "run test script",
    "enable react/jsx-space-before-closing rule",
    "updates test-failing and tests-passing",
    "pass component stack to error boundary handler",
    "move webcomponents.js polyfill to mocks",
    "invokeguardedcallback should work when nested",
    "updated chain react",
    "flatten text children before rendering",
    "invokeguardedcallback returns a thrown error",
    "remove invokeguardedcallbackprod",
    "track which lifecycle method we're in during dev",
    "warn about setstate inside getchildcontext",
    "warn about nested renders",
    "fix version",
    "16.0.0-alpha.3",
    "warn about setstate in render",
    "update tutorial.md",
    "prevent extensions to fiber in dev",
    "missing onload and onerror events on image tag",
    "removed unnecessary if",
    "change formatmessage parameter to getstack",
    "fix build config",
    "fix record-tests script",
    "remove warnonrepeat option",
    "remove reactproptypelocationnames module",
    "add proptypes.checkproptypes api",
    "reverted reactdomfeatureflags",
    "added a regression test for factory components",
    "addressed code in feedback",
    "fixed comment that was incorrect",
    "add test for hack to stop bubbling",
    "pass errorboundary to logcapturederror",
    "\"calcutor\" to \"calculator\"",
    "updated tests-failing and test-passing",
    "upgrade jest to v19",
    "update fiber debugger deps",
    "run test script",
    "add more details to the doc",
    "switch to shipping fiber in npm packages",
    "revert \"revert \"missing a space for error 125\"\"",
    "update thinking in react embed to match the link",
    "doc consistency tweaks",
    "revert \"missing a space for error 125\"",
    "ignore events on text nodes",
    "remove extra article from documentation",
    "fix misspellings in comments and tests",
    "move validation calls behind dev blocks",
    "missing a space for error 125",
    "check alternate in reacttreetraversal",
    "revert \"update react perf docs  and \"",
    "fix fiber devtools prod",
    "remove an unnecessary condition",
    "improved for a better understanding",
    "move reactelementtype to shared",
    "don't pass method names in production",
    "validate callbacks just before they are invoked",
    "only fix a small wrong key in example",
    "fixing grammatical error ...",
    "add totree method to stack and fiber testrenderer",
    "remove react.__spread",
    "fix a typo in design principles doc",
    "fix release guide again",
    "fix release guide",
    "use `t | null` instead of `?t` types",
    "update yarn lockfile with fresh deps",
    "16.0.0-alpha.2",
    "fixed lint warning in master",
    "move react native environment mocks to root",
    "fixed reactnativefiber event handling regression",
    "use separate feature flag for reacttestrenderer",
    "findnodehandle -> reactnative.findnodehandle",
    "warn if finddomnode is used inside render",
    "warn about ismounted inside render",
    "make stack error message more generic, too",
    "move dom dependent tests out of the shared folder",
    "don't test input value clean-up in fiber",
    "update react perf docs  and",
    "fix lint",
    "split into multiple invariants",
    "continue warning if a map is rendered as a child",
    "remove experimental support for maps as children",
    "inline internal error message",
    "replace `throw new error` with invariant module",
    "run test script",
    "add additional message to internal invariants",
    "get rid of dev only invariant",
    "inject devtools integration for rn fiber",
    "add note about refs on stateless components",
    "update higher-order-components.md",
    "add ontoggle event to details tag",
    "revert change to test",
    "warn when mounting into document.body",
    "update conferences.md",
    "move component base classes into a single file",
    "explain arbitrariness of ref name in callback",
    "fix indentation in tutorial",
    "update tutorial.md",
    "link to codepen editor rather than final result",
    "update tutorial.md",
    "lifting state up more legible",
    "fix formatting of invalid element invariant",
    "remove legacy react element warning",
    "add newline to warning",
    "run test script",
    "suppress lint warnings",
    "added undefined example",
    "add invariant",
    "don't crash fiber with old devtools",
    "fallback to owner of returnfiber",
    "fix incorrect markup for ie10",
    "#6049 add support for oncancel and onclose event",
    "throw on invalid object type children",
    "add process.cwd to the test process shim",
    "delete @nosideeffect annotation",
    "fix finddomnode algorithm",
    "allow object as textarea child",
    "fix lint",
    "update context example for react-router v4 beta",
    "declare __react_devtools_global_hook__ for flow",
    "support react devtools",
    "fix typo in eventpropagators.js",
    "add failing tests for coroutines",
    "reactelement is private to isomorphic react",
    "use react-standalone",
    "swap .child and .statenode in coroutines",
    "add missing \"as\"",
    "don't bail to .child of coroutines",
    "simplify coroutines by making yields stateless",
    "add test for mocked render functions",
    "remove outdated todo",
    "add test for iterables, too",
    "foreachaccumulated params",
    "remove unnecessary null",
    "component -> unknown",
    "host component children arrays",
    "add benchmarking tutorial",
    "webpack 2 is now stable",
    "fix flow",
    "update deprecation wording to be less aggressive",
    "improve tests",
    "use correct optional paramater jsdoc syntax",
    "add deprecation tests to fiber test tracker",
    "add test for deprecation warnings",
    "deprecate react.createmixin",
    "two minor changes from internal",
    "update conferences.md",
    "tweak rrm instructions to mention yarn instead",
    "update test setup windows compatible",
    "fix a typo",
    "clarify use of es6 idiom in forms doc",
    "match eslint's line length settings",
    "strip quotes from attributes with js code",
    "corrected a typo.",
    "compute the host diff during reconciliation",
    "add \"handling multiple inputs\" to forms doc",
    "ignore fixtures in flow and eslint",
    "i -> we",
    "use an easier word",
    "add flow reminder to pr template",
    "add docs for building with rollup",
    "fix hoc doc",
    "remove error ref to the 'render' function",
    "fix fiber/record-tests to work on windows",
    "fix to work fiber debugger with npm start",
    "fix rendering svg into non-react svg tree",
    "log all fiber errors w/ component stack",
    "update higher-order-components.md",
    "fix typo",
    "small reactproptypes refactor",
    "improve fiber debugger",
    "warn if undefined is passed to top-level render",
    "removed redundant gcc test",
    "run test script and fix regressions",
    "add test for state merging when scu is false",
    "fix failed tests on windows #8737",
    "move blog post  into docs article",
    "make test that forbids arrays stack-only",
    "move memoization to begin phase",
    "remove unnecessary warning for invalid node",
    "add error codes update to release process",
    "remove a duplicate test",
    "fix typo",
    "update handling-events.md",
    "bring up to date",
    "implement test renderer",
    "add spaces between web/react components",
    "revert commitinfo to avoid extra allocation",
    "remove callbacklist field from fiber",
    "replaced chalk.color.red with chalk.red",
    "fix single vs plural",
    "replace 'mix in' in purecomponent notes",
    "swap components",
    "16.0.0-alpha.0",
    "added more info about refs in the documentation",
    "warn for callback refs on functional components",
    "updating paths in packaging fixtures readme",
    "improve unmasked context caching",
    "write a release guide",
    "add missing period in shouldcomponentupdate doc",
    "fix typo rambda \u2192 ramda",
    "add missing entry for #7750 to 15.4.2 changelog",
    "added react london conference, march 28th",
    "stop bubbling priority on equal priority",
    "move build fixtures to fixtures/build",
    "update readme for dom fixtures",
    "add missing semicolon",
    "consolidate styles into single file",
    "remove trailing comma, causing crash in ie11",
    "fix some cors issues in ie",
    "remove extraneous binds from some fixtures",
    "patch in console for ie9",
    "address lint issues.",
    "test, not text. \ud83d\udd24",
    "move current fixtures into dom folder",
    "copy local build before starting",
    "remove babel include from react-loader",
    "remove duplicate fixture components",
    "display value for controlled select and textarea",
    "use create-react-app for fixtures application",
    "fix lint issues in react-loader",
    "add select, textarea, and range input fixtures",
    "update section on number inputs",
    "update input example readme",
    "add react options loader.",
    "make toggleable test cases",
    "properly slice out question mark in query string",
    "add basic testing page",
    "fix formatting",
    "point all webpack links to 1.x documentation",
    "add 15.4.2 changelog",
    "update rendering-elements.md",
    "no longer a wip, eh?",
    "updated hello world explanation message",
    "move new example changes to fixtures folder",
    "revert \"add es6-promisify\"",
    "remove unused import",
    "tweaks to npm-publish task",
    "abort if not on -stable branch",
    "add es6-promisify",
    "update version script to account for dep change",
    "create data/ folder instead of crashing",
    "update init command to use promise style",
    "rewrite stable-prs command",
    "create start-release command, create git utils",
    "use git helper for all git commands",
    "improve init & config loading experience",
    "add logging to execinrepo, dry-run option",
    "update milestone on prs",
    "move version reading up to app level",
    "fix typos",
    "add commands for npm access checking/granting",
    "lint",
    "initial import of react-release-manager",
    "npm-publish command",
    "replace starter kit with doc link",
    "fix amd and brunch issues",
    "update state-and-lifecycle.md",
    "fixed anchor links in animations section",
    "update blog post link",
    "add a note about componentwillreceiveprops",
    "renamed react.js conf to react conf",
    "add callback validation to fiber-based renderers",
    "use unbatchedupdates to opt-out of batching",
    "use fb style in doc",
    "fiber example typo",
    "update conferences.md",
    "update to codebase-overview.md",
    "no nested updates",
    "allow performwork to be called recursively",
    "wrap top-level mount and unmount in syncupdates",
    "disallow forced sync updates during begin phase",
    "changed webpack's hyperlink",
    "include owner in invalid element type invariant",
    "relax test about rendering top-level null",
    "validate that update callback is a function",
    "remove superfluous check in while loop",
    "update conditional-rendering.md",
    "don't call scu with null props",
    "fix reentrant mounting in synchronous mode",
    "upgrade jest apis to match www",
    "removed redundant calls to reactfiberstack.reset",
    "update to jest 18",
    "push class context providers even if they crash",
    "fix typo",
    "improve error messages for invalid element types",
    "move other branches out of the bail out",
    "move ishostcomponent branches out of bailout",
    "delete haspendingupdate",
    "move props equality check into each branch",
    "add bailout to hostroot",
    "always reset context before beginning new work",
    "remove enqueuecallback from updater api",
    "schedule state and callback in the same batch",
    "update flow to 0.37.0",
    "handle errors thrown when committing root",
    "delete fiveargumentpooler",
    "remove unmountcontainer",
    "use an updatequeue for top-level updates",
    "nesting validation warnings",
    "revert \" queue top-level updates\"",
    "remove unmountcontainer",
    "remove forceupdate effect",
    "use an updatequeue for top-level updates",
    "use warning instead of console.error",
    "update tests to not rely on key iteration order",
    "use 255 instead of infinity",
    "handle setstate inside an updater function",
    "add unstable_deferredupdates",
    "don't drop updates until they are committed",
    "apply pending updates in order of priority",
    "priority context during reconciliation",
    "replace .hasforceupdate with forceupdate effect",
    "schedule callback effects while merging updates",
    "separate priority for updates",
    "fix some of the warnings",
    "mockimpl -> mockimplementation",
    "prepare new composite child before removing old",
    "fix test renderer unmount",
    "pass type to the relevant host config methods",
    "disable coverage on prs on circle",
    "warn if upper-case tags are used",
    "remove array indirection in host context",
    "fix portal bugs",
    "fix casing typo in jsx-in-depth.md",
    "update example to use `this.state`",
    "update changelog.md",
    "reactdomfiber-test rename portal -> useportal",
    "add unit tests for event bubbling in portals",
    "consolidate workloop and deferredwork loop",
    "support svg",
    "fix indentation for lint",
    "add additional scheduling tests",
    "consolidate work loops",
    "error recovery should have task priority",
    "move commit phase outside of performunitofwork",
    "don't set innerhtml if content is empty",
    "imported new reactart fiber renderer",
    "support parallelism on circle",
    "clap: designers are friends, not fodder for jokes",
    "probably fix facts tracker",
    "updated tests-passing",
    "fix pull request detection on circle",
    "fixed linting error",
    "update facts-tracker for circle",
    "use portals to test batching across roots",
    "nits",
    "add circleci badge to the readme",
    "add failing event handler test",
    "fix lint",
    "only upload build if server exists",
    "add circle.yml / circleci support",
    "refs between fiber and stack",
    "update reference-react.md",
    "fix isfibermounted exports",
    "new error boundary semantics",
    "additional finddomnode tests",
    "update travis config for new token",
    "add test for unmount/remount in a single batch",
    "add return to render",
    "make bad element type message same as in stack",
    "fix insecure shell escaping in facts tracker",
    "fix reordering of bailed out children",
    "update tutorial.md",
    "add a document on higher-order components",
    "update release checklist",
    "fix context getting",
    "add test for updating parent state in cwrp",
    "remove output field from debugger",
    "record tests",
    "support iterables",
    "move setinnerhtml/settextcontent to shared",
    "use public api in react mount",
    "move tests out of the stack folder",
    "test",
    "do not forward stderr",
    "fix portal unmounting",
    "update flow to 0.36",
    "add a test for nested portals",
    "remove output field",
    "remove recursion from unmounting portals",
    "split initial children out of createinstance",
    "fix typo 'miss-configured' to 'misconfigured'",
    "remove dead link",
    "fix traversal up when unmounting",
    "finish reactgenericbatching",
    "lint",
    "re-record",
    "preserve scroll position when restoring focus",
    "remove config.beginupdate",
    "cleanup after #8353",
    "restore dom selection and suppress events",
    "fix queueing updates in cwm/cwrp when batching",
    "fix browser bundle for amd",
    "passing disabled events",
    "disable one irrelevant test for fiber",
    "fix finddomnode for empty children",
    "track inputs after setting its properties",
    "make server rendering tests pass",
    "nit in regexp",
    "add reactdomfiber.unstable_createportal",
    "rendersubtreeintocontainer",
    "stopgap fix for element disabling",
    "stop relying on variable hoisting",
    "fix object spread operator",
    "revert \"stop relying on variable hoisting\"",
    "lint",
    "fix link to `purecomponent` in docs",
    "make finddomnode generic",
    "change test assertion depending on a feature flag",
    "update react-without-es6.md",
    "update all jest packages to 17.x",
    "fix reactdomfiberselect to set the initial values",
    "add some flow types to inputvaluetracking",
    "minor changes, make it more verbose",
    "apply @spicyj's selecteventplugin fix",
    "handle controlled components in fiber",
    "give wrappers the raw props object",
    "improved sections of state and lifecycle docs",
    "add a sentence about readability back",
    "assert that this is a script tag",
    "nit",
    "nits",
    "stop using host parent/container internal objects",
    "wire up reactdomfibercomponent in reactdomfiber",
    "get rid of server side support for <option />",
    "consistent method vs function",
    "getcurrentownername",
    "lint issues",
    "no need for unmounting dom components",
    "manage children inside dom properties",
    "get rid of the previousstylecopy",
    "remove _domid",
    "remove child nodes flag",
    "rely on lazy listeners",
    "remove rootnodeid",
    "remove the notion of transactions",
    "remove instrumentation and nesting warning",
    "remove markup related paths",
    "stop tracking event listeners on dom nodes",
    "turn reactdomfibercomponent into a singleton",
    "fork reactdomcomponent and the wrappers to fiber",
    "update 2016-11-16-react-v15.4.0.md",
    "make numerical refs work in fiber",
    "add link to useful doc",
    "explain installation in more detail",
    "add missing labels to forms doc",
    "update installation instructions on the blog",
    "include the version number in the header",
    "tweak examples",
    "remove spread operator",
    "add fibers to reacttreetraversal",
    "add fibers to reactdomcomponenttree",
    "update changelog & readme for 15.4.0",
    "add 15.4.0 blog post",
    "update website for 15.4.0",
    "fix a line-length warning",
    "memoize merged child context when possible",
    "use empty object if context does not exist",
    "removes updatequeuenode.callbackwascalled",
    "update passing tests",
    "add explicit tests for intermediate components",
    "update reference-react-dom.md",
    "catch first error from setstate callbacks",
    "add a failing test for context when reusing work",
    "add a test for recursive context",
    "move context management into scheduler",
    "update passing tests",
    "minor style tweaks",
    "fix bad ops.length assignment in tests",
    "update reference-react-dom.md",
    "update passing tests",
    "catch first error from setstate updaters",
    "implement basic support for context",
    "change a test to be relevant in fiber",
    "change warnings to use expectdev",
    "minor style tweaks",
    "build infra for tracking dev-specific failures",
    "delete unnecessary brackets",
    "handles risky callbacks on setstate. fixes #8238",
    "add freenode #reactjs link to support.md",
    "handle nested controlled events",
    "refactor `precachechildnodes` slightly",
    "replaced old refs with new callback refs",
    "update refs-and-the-dom.md",
    "fix reactcomponentexpect",
    "fix reactcomponentexpect",
    "flow 0.34",
    "revert \"temporary compatibility fix\"",
    "make the shallow rendering example clearer",
    "correct a method param in implementation notes",
    "fix broken docs links",
    "#8021",
    "cleanup reacterrorutils",
    "forms breakup",
    "remove unnecessary finddomnode calls",
    "remove string ref from function component example",
    "revert normalized text node fix",
    "fixed batching reentrant controlled events",
    "fix error codes",
    "warn when shoulccomponentupdate returns undefined",
    "add react amsterdam 2017",
    "fix typos in shallow rendering documentation",
    "meant to commit these changes with #8206... oops.",
    "check for event listener in props instead of bank",
    "add a bunch of redirects",
    "rerun tests",
    "fix lint in reactupdates",
    "correctly render placeholder for textarea in ie11",
    "re-record tests",
    "run fiber tests just once on travis",
    "fix errors in reactnativemount",
    "call setstate callbacks enqueued in cwm",
    "fix method markdown highlight",
    "move setstate callback to right after didupdate",
    "complete es6 class related errors support",
    "remove unschedulework",
    "make error handling more resilient",
    "move safari onclick hack into reactdomcomponent",
    "schedule animation regardless of deferred work",
    "update passing tests",
    "add agent conference to conferences docs",
    "add tests for scheduling inside callbacks",
    "fix lint by removing unneeded type import",
    "updatequeue fixes",
    "es import -> require",
    "fix reconciling after null",
    "callback",
    "remove first-class function",
    "batchedupdates tests",
    "unstable_batchedupdates",
    "don't need defaultprioritycontext",
    "enqueue update and callback simultaneously",
    "batch nested updates when in sync mode",
    "add config to enable sync scheduling by default",
    "synchronous work",
    "fix the build",
    "add more tests for scheduling",
    "fix infinite loop in scheduler and add more tests",
    "add some scheduling tests",
    "update forms.md",
    "track passing/failing tests in fiber",
    "remove duplicated word in doc",
    "remove use of reactcomponentexpect in our tests",
    "add missing verb",
    "fix tests for fiber in reactelement-test",
    "miscellaneous fixes to get more tests passing",
    "get a few more fiber tests passing",
    "fix testutils.findallinrenderedtree",
    "update codebase-overview.md",
    "add support for node v7",
    "the issue with tests is solved now",
    "handle multiple errors in boundaries",
    "add tests verifying we don't swallow exceptions",
    "add more tests for error boundaries",
    "organize and add confs",
    "error boundaries",
    "updated tutorial.md",
    "update reference-react-component.md",
    "add react remote conf 2016.",
    "clarify how transition props work",
    "move more files into stack reconciler",
    "improve devtools image size for the tutorial",
    "update forms.md",
    "shares debugid information across modules",
    "forms update",
    "consistent codepen links in docs",
    "fix typo in reconciliation.md",
    "fix lint errors",
    "tweak forms",
    "docs update - additional",
    "update lists-and-keys.md",
    "added word break",
    "string refs and owner tracking",
    "use `const` instead of `var`",
    "purecomponent in fiber",
    "correct usage of formatname function in docs",
    "add tests for finddomnode on fragment and text",
    "reorganize files",
    "implement finddomnode for fiber",
    "implement ismounted for fiber",
    "add fiber debugger",
    "split defaultinjection into two files",
    "defaulteventpluginorder -> domeventpluginorder",
    "get rid of reactinjection",
    "remove deprecated function from tests",
    "add npm v4.0.0 support",
    "remove copypasta comment",
    "strip proptypes checkers in production build",
    "add types for reactfiber and reactchildfiber",
    "removed duplicated 'the'",
    "fix createclass reference",
    "add more highlighting to docs",
    "link to lifecycle methods from context doc",
    "update tutorial.md, taking turns",
    "update handling-events.md",
    "fix typos",
    "fix typo",
    "accept classname in reactdomfiber",
    "fix for typos",
    "fix illogical code in tutorial.md",
    "fix relative link in hello world",
    "replace vars with let and const",
    "correct order of params in documentation",
    "\"take part in\" is the correct saying",
    "fix typo in tutorial.md",
    "updated with new docs links",
    "fix typo in new tutorial code",
    "fix anchor link for displayname",
    "fix erroneous '}' in jsx examples",
    "convert the number component to listitem",
    "wrong library name reference in tutorial.md",
    "update components-and-props.md",
    "update react-without-jsx.md",
    "fix redirects",
    "minor doc tweaks",
    "quick fix to the return top level problem",
    "add unit tests for aborted life-cycles",
    "add unit tests for reactdomfiber",
    "don't schedule nowork as the next work",
    "add more life-cycles to fiber",
    "fix captured/bubbled in reactnativetreetraversal",
    "fix lint with yarn",
    "new documentation",
    "update flow and fix issues",
    "add a unit test for reacttopleveltext",
    "some setstate related issues",
    "fix haste header",
    "use memoizedstate in componentdidupdate",
    "no duck typing on the root",
    "fix grammatical error",
    "fix resuming bug",
    "resolve ref callbacks",
    "reset effect list when we recompute children",
    "call componentwillunmount during deletion phase",
    "deletion tracking",
    "fix multichild tests so they work with fiber",
    "fast path for create child",
    "add comment about bug in yields",
    "remove beginwork shortcut",
    "add @preventmunge directives to classes",
    "add fragment fiber type",
    "silence fiber warning when the feature flag is on",
    "append deletions to the effect list",
    "fiber child reconciliation",
    "move child updates to use the reconciled effects",
    "enable text updates in reactnoop",
    "add index field to each fiber",
    "add text node types",
    "don't track side-effects unless needed",
    "ignore root docs folder in flow config",
    "support passthrough updates for error boundaries",
    "add windows-specific instructions",
    "separate ruby and python instructions",
    "add 15.4.0 rc3 to downloads",
    "fix a typo in the doc",
    "fix whitespace in headers",
    "strip @providesmodule from output modules",
    "add link to gulpjs",
    "fix typo",
    "fix typo",
    "check in yarn.lock file",
    "fix typo in more-about-refs.md",
    "typo fixes in codebase-overview.md",
    "update codebase-overview.md",
    "update the homepage with es6",
    "fix npm package builds",
    "fix confusing variable names",
    "use npm-run-script in pull_request_template",
    "fix initial state example for recat.createclass",
    "update comment to refer to correct method name",
    "update 04-multiple-components.md",
    "simplify npm link script a little bit",
    "refactor shallowrenderer",
    "use es6 in language tooling doc",
    "fix minor typo in closing h1 tag",
    "make sure .createelement warns",
    "update remarkable to 1.7.1",
    "keyed fragment of addons ported to es6",
    "displaying data example.",
    "reusable components es6 update",
    "animation updated with es6 examples",
    "fix mistakes in the codebase overview",
    "update babel link",
    "fixes #7824",
    "typos fix",
    "add codebase overview",
    "our first 50,000 stars blogpost",
    "react dom invalid aria hook",
    "reduce confusion in testing documentation.",
    "fix total count in flow tracker",
    "tweak the contributing wording in readme",
    "introduce facts-tracker",
    "update 07-forms.ko-kr.md",
    "track fiber tests",
    "clarify manual proptype calls warning",
    "update website for 15.3.2",
    "update react rally 2016 videos link",
    "update broken jsfiddle in why react blog post",
    "update changelog & readme for 15.3.2",
    "fix links and ids for tips in docs",
    "russian translation for self-closing-tag of tips",
    "resolve flow errors with reacttestrenderer",
    "revert reactmultichild to plain object",
    "update ignores in flowconfig",
    "russian translation for inline styles of tips",
    "russian translation if-else in jsx of tips",
    "clean up reacttestrenderer",
    "check for truthiness of alternate",
    "animation priority work",
    "log the updatequeue in dumptree",
    "remove plain object warning",
    "unify branches in clonefiber",
    "use queue for pendingstate",
    "use reactinstancemap",
    "setstate for fiber",
    "fix statequeue typing",
    "replacestate",
    "forceupdate",
    "clean up",
    "update callbacks",
    "rename statequeue -> updatequeue",
    "clean up",
    "updater form of setstate",
    "progressed work",
    "drop separate findpendingwork phase",
    "drop childinprogress",
    "update 14-communicate-between-components.ko-kr.md",
    "implement createnodemock for reacttestrenderer",
    "fix benchmarks",
    "add russian translation for introduction of tips",
    "proper font-family for docs input fields",
    "jest@15.1.1",
    "fix flow errors in event plugins",
    "update owasp link in docs for dangerous innerhtml",
    "run codemod react-codemod/transforms/class again",
    "update 14-communicate-between-components.md",
    "adding the published reactrally videos section",
    "type reacthostoperationhistoryhook",
    "trim and inline reactinstancehandles",
    "flow type event plugins",
    "fix the html for package management",
    "remove unnecessary var declaration",
    "bool -> boolean",
    "don't bundle reactcomponenttreehook in production",
    "use compositetype in warning invariant for refs",
    "add unknown property warning for use of",
    "link to create react app",
    "i wrote it live!",
    "type reactcurrentowner",
    "convert callbackqueue to a class",
    "restore coverage in travis",
    "type reactref",
    "type eventpluginregistry",
    "translate doc 11-advanced-performance to chinese",
    "small flow fixes",
    "add events code walkthrough video link",
    "remove string.prototype.split polyfill warning",
    "update to jest 15",
    "improve error boundaries tests",
    "add 'as' keyword",
    "improve error boundaries tests",
    ")",
    "remove keymirror in topleveltypes",
    "remove keymirror in propagationphases",
    "remove non-standard 'icon' property",
    "s/npmcdn/unpkg/g",
    "cleanup reacterrorutils",
    "ignore bundle.js for examples",
    "changed to !document.documentmode",
    "type transaction",
    "type pooledclass",
    "type reactowner",
    "type reactmultichildupdatetypes",
    "remove keymirror in specpolicy",
    "remove keymirror in reactproptypelocations",
    "type reactperf",
    "type reactdebugtool",
    "type reactinvalidsetstatewarninghook",
    "remove keymirror in componentlifecycle",
    "type reactdebugtool",
    "`npm ls react` is a better advice",
    "type reactchildrenmutationwarninghook",
    "remove unneeded declare",
    "type reactcomponentenvironment",
    "fix lint errors",
    "type candefineproperty",
    "support error boundaries on reacttestrenderer",
    "type reactproptypelocationnames",
    "fix minor typo in readme.md",
    "type reacterrorutils",
    "add playsinline as an allowed html property",
    "type reactproptypelocations",
    "//bower.io/",
    "add missing keyup eventtype",
    "update flow to 0.31",
    "ensure lifecycle timers are stopped on errors",
    "type reactproptypessecret",
    "type reactcomponenttreehook",
    "type reactelementsymbol",
    "update website for 15.3.1",
    "update readme for 15.3.1",
    "update changelog for 15.3.1",
    ":tojson with empty top-level components",
    "upgrade to fbjs v0.8.4",
    "improve validatedomnesting message for whitespace",
    "avoid \"member not found\" error in ie",
    "update onlychild invariant message",
    "fix flow",
    "fix header link generation for non-english docs",
    "react.children.toarray changes keys",
    "fix for #7170",
    "update 09.2-package-management.md",
    "remove last use of mapobject",
    "fix typo in changelog",
    "improve dev performance in chrome",
    "consolidate hook events",
    "mock reactdom for fiber tests",
    "build react dom fiber package",
    "remove reactdominstrumentation",
    "fix unmounting performance regression in __dev__",
    "remove unused createhierarchyrenderer",
    "include react itself in the list of shims",
    "fix trailing build issues",
    "fix batchedupdates return value",
    "capitalize ajax",
    "fix link formatting on relay blog post",
    "introduce shouldcomponentupdate in fiber",
    "move wip fibers to childinprogress",
    "change a word in performance docs",
    "fix nowork bug",
    "add note about potential future bugs",
    "set pendingprops in clonefiber for symmetry",
    "move all imports to closures in fiber",
    "remove console.logs from fiber",
    "rudimentary class support",
    "relay blog post",
    "unmountcomponentatnode",
    "fix json in package.json",
    "specify \"files\" field for npm packages",
    "image",
    "use npmcdn",
    "add some semicolons for linting.",
    "avoid \"member not found exception\" in ie10",
    "temporary compatibility fix",
    "add permalink for newly translated page",
    "renamed modules",
    "renamed methods",
    "update readme for 15.3.0",
    "changelog for 15.3.0",
    "update website for 15.3.0",
    "add \u201cdon't call proptypes\u201d warning",
    "create 02-displaying-data.zh-tw.md",
    "distinguish nullable from optional object field",
    "add permalink to proptypes warning page",
    "fixed incorrect doc location",
    "reacttestrenderer package",
    "remove unused unmountidfromenvironment",
    "fix doc for react native mountcomponent",
    "added reactnl conference",
    "update docs zh cn",
    "switch travis ci to trusty beta",
    "fixed typo in post",
    "avoid validation warning when inputs change type",
    "add babel-plugin-transform-class-properties",
    "wording change in doc",
    "add blog post",
    "correct grammatical error",
    "mention actual prop type in element type checker",
    "upgraded babel-plugin-transform-class-properties",
    "improved warning in reactupdatequeue",
    "finish jekyll 3 upgrade",
    "host our own images for the blog, use https links",
    "upgrade to jekyll 3",
    "update readme for 15.2.1",
    "update website for 15.2.1",
    "changelog for 15.2.1",
    "fix testutils crash with node_env=production",
    "eagerly evaluate inline requires in jest",
    "add design principles to the docs",
    "fix #7099",
    "clarify the section about dogfooding",
    "add mixins property to context example",
    "minor tweaks to design principles",
    "follow up to 6972 - update docs code",
    "update 03-interactivity-and-dynamic-uis.md",
    "fix typos in \u201cmixins considered harmful\u201d",
    "reactdom",
    "add referrerpolicy to htmldompropertyconfig",
    "add a new blog post about mixins",
    "warn for using maps as children with owner info",
    "test renderer improvements",
    "remove uneccesary colon",
    "xlink attributes",
    "add link to video chat with @spicyj",
    "fixed all eslint warnings",
    "fix unmounting performance regression in v8",
    "reformat event names in media events section",
    "blog post for error codes",
    "remove duplicate line",
    "add react.purecomponent",
    "make reactperf.start work during reconciliation",
    "move error boundaries test into reconciler",
    "warn if proptype function is called manually",
    "lint, flow, and version-check",
    "fixed pr link",
    "disable debugtools in production",
    "mention @aweary\u2019s #6933 in 15.2.0 changelog",
    "inline dev-only requires",
    "add link to @troydemonbreun\u2019s contribution",
    "istextinputelement",
    "revise respondertouchhistorystore error handling",
    "import warnings that currently live in gists.",
    "remove unnecessary flow annotation",
    "fix flattenchildren type",
    "use hardcoded value for proptype secret",
    "removed transitionappeartimeout to remove warning",
    "add proptypes.symbol to reusable components doc",
    "changelog for 15.2.0",
    "nits",
    "unshare not actually shared files",
    "update website for 15.2.0",
    "group warnings for unknown dom properties",
    "apply side-effects to host containers",
    "rudimentary dom renderer with example",
    "update readme for 15.2.0",
    "fiber side-effects",
    "host environment side-effects",
    "remove unreachable code",
    "reuse work that was preempted if it was untouched",
    "feedback on style",
    "renamed fiber.parent -> fiber.return",
    "use a recursive algorithm for dumptree",
    "attack of the clones!",
    "don't block deep low pri updates when bailing out",
    "dumptree helper for debugging",
    "pass the priority level along to children",
    "bubble up pending work priority to the top level",
    "extract scheduler into its own module",
    "create hostcontainer component type",
    "reorganize the top level around a fiberroot",
    "test ability to abort work",
    "rename input -> props",
    "make \"unexpected batch number\" a warning",
    "clarify purpose of state property  in es6 classes",
    "add some typings to utils",
    "fix rendersubtreeintocontainer to update context",
    "add priority levels enum",
    "validate proptypes.oneof arguments early",
    "fix tests from #6158 to use jasmine 2",
    "copy type to nativeevent in simulate.<eventname>",
    "warn if the included mixin is undefined",
    "type deprecated",
    "resolve refs in the order of the children",
    "remove dead has_side_effects logic",
    "reword invariant message about empty tags",
    "fix webcomponent example issue #7056",
    "move reactstatesetters inside of addons/link",
    "update share button",
    "type keyescapeutils",
    "type adler32",
    "annotate accumulate and accumulateinto",
    "remove setprops and replaceprops from src",
    "remove injectmixin",
    "remove setprops and replaceprops from docs",
    "update babel-core to 5.8.34 in tutorial docs",
    "specify possible need for c++ compiler",
    "warn if people mutate children.",
    "update readme to latest react description",
    "add react amsterdam conference to the list",
    "update 10.4-test-utils.md",
    "update 03-interactivity-and-dynamic-uis.md",
    "wordsmith the homepage",
    "new marketing copy on homepage",
    "fix japanese/italian/korean tutorials",
    "pinned babylon version for eslint to work",
    "updte tutorial to ja-jp",
    "update 12-context.md",
    "remove setprops and replaceprops completely",
    "remove console.log from test",
    "fix ie11 placeholder textcontent value bug.",
    "warn if childcontexttype is defined on sfc",
    "fix #5839 add error event to source element",
    "simple updates using alternate fibers",
    "tweak reactperf warning message and code style",
    "fix autofocus for input and textarea",
    "rename unitofwork -> workinprogress",
    "minimize abuse of .alternate",
    "error decoder page",
    "added instruction for downloading babel-browser",
    "fix function declaration in if statement",
    "use remarkable instead of marked",
    "fix null node issue in reactcsstransitiongroup",
    "fallback to legacy set/get in old versions of ff",
    "remove flux from docs nav",
    "add a gulp script for extracting error codes",
    "add rudimentary test renderer",
    "simple test assertions",
    "remove getdomnode from docs",
    "transfer everything from element onto the fiber",
    "fix minor lint warnings",
    "less dependencies -> fewer dependencies",
    "fix style test for jasmine 2",
    "followup to 6896, add explanation of workaround.",
    "use existing layout for redirecting html-jsx",
    "add reactnext 2016 conference",
    "//github.com/reactjs/react-magic/issues/52",
    "switched to codemirror's jsx mode",
    "warn when element is missing in devtool",
    "added react europe 2015 videos",
    "correctly check that element and props are frozen",
    "child fiber",
    "added own property check when deleting listeners.",
    "coroutines",
    "short-circuit the check just for getters",
    "tweak whitespace",
    "update jasmine 2 pr with changes from master",
    "update jest bin command",
    "do not clone key and ref getters",
    "fix instrumentation in shallow rendering",
    "jest@12.1.1",
    "upgrade to jasmine 2",
    "upgrade to jest-cli@0.9 and use jasmine2",
    "reactclassequivalence",
    "clarify that string refs are considered legacy.",
    "add warning for unknown properties.",
    "remove unknown props in art",
    "fix componentwillunmount not counted by reactperf",
    "avoid directly calling hasownproperty",
    "fix art after native -> host rename",
    "add test to ensure 'undefined' children is used",
    "context docs updated with es6 examples",
    "point people to prod build in perf docs",
    "removed unnecessary null check",
    "add  react art tests",
    "extract the type checker into a separate module",
    "support onload event on link element",
    "move reactelementvalidator to __dev__ block",
    "update readme for 15.1.0",
    "update website for 15.1.0",
    "changelog for 15.1.0",
    "match jest.d.ts by regex",
    "update typescript",
    "add permalink",
    "minor comment typo",
    "update 03-interactivity-and-dynamic-uis.zh-cn.md",
    "update shallowcompare to accept nextcontext",
    "test that elements are tracked by tree devtool",
    "show component stack in proptypes warnings",
    "embed jsx filename paths relative to repo root",
    "refactor reactcomponenttreedevtool test",
    "make test utils format consistent",
    "print stack in devtool exception warning",
    "interleave trials in benchmark script",
    "make benchmark script work in react 15",
    "remove some dead code",
    "changed test",
    "add permalink",
    "add information on jsx element keys",
    "refer to correct example",
    "fix a memory leak in reactcomponenttreedevtool",
    "check for missing debugid in reactdebugtool",
    "fix a failing test and count ids from one",
    "rename host-y things to be \"host\" not \"native\"",
    "fix grammar on homepage",
    "consistent owner for stateless component",
    "fix minor capitalzation typo",
    "fix zh-tw permalink",
    "react fiber reconciler",
    "fix ru-ru doc page permalinks",
    "allow to ignore value attribute for option",
    "add basic issue and pr templates",
    "add a failing test case for #6742",
    "fix flow errors",
    "refine the translation of chapter 12-context",
    "get patch versions of flow",
    "basic ssr support for error boundaries",
    "disable coverage on travis",
    "move dev-only flags to only exist on composites",
    "update 03-interactivity-and-dynamic-uis.ru-ru.md",
    "remove @nolint",
    "fixed transform-react-jsx-source devdep",
    "setup grunt flow task and run on travis",
    "update 03-interactivity-and-dynamic-uis.ru-ru.md",
    "create 03-interactivity-and-dynamic-uis.ru-ru.md",
    "set up flow - yay!",
    "grunt jest tasks shouldn't use watchman",
    "ensure babelrc gets added to zipfile too",
    "fix broken link to typescript docs",
    "ignore lifecycle events outside batches",
    "fix displayname in reactperf.getinclusive output",
    "add getupdatecount to reactcomponenttreedevtool",
    "rename the new reactperfanalysis to reactperf",
    "use performancenow instead of performance.now",
    "add tests and fix wasted render calculation",
    "emit flush events on react native for reactperf",
    "make stats less noisy for top-level components",
    "fix incorrect onbegin/onend timer pair",
    "delete the old reactperf",
    "move reactios components to native subfolder",
    "update examples/basic-commonjs/package.json",
    "fixed minor typo",
    "grammar correction in reactdominput.js warning",
    "update 02-displaying-data.ru-ru",
    "update 02-displaying-data.ru-ru",
    "return early from enqueueputlistener for ssr",
    "ensure we're using latest object-assign",
    "don't warn when style value is '0'",
    "update readme for 15.0.2",
    "update website for 15.0.2",
    "changelog for 15.0.2",
    "update 02-displaying-data.ru-ru",
    "add links to docs for addons and top level api",
    "create 02-displaying-data.ru-ru.md",
    "remove errant console.log",
    "create 01-why-react.ru-ru.md",
    "allow custom elements extending native ones",
    "create 01-why-react.zh-tw.md",
    "fix bug with double updates in a single batch",
    "accept 6.x versions",
    "add note on how to submit a form",
    "add new reactperf",
    "ensure babelrc file gets packaged for starter kit",
    "document stateless components in formal types",
    "update jest\u2019s grunt task.",
    "update to jest 12. codemod to new jest apis.",
    "use spread instead of deprecated merge utility",
    "remove orderedmap and reactproptransferer",
    "adds reactrally & reactive 2016 + conf locations",
    "try enabling coverage again",
    "update tutorial - add link for starting server",
    "fixed a minor typo",
    "refactor how native container id is stored",
    "don't hold interaction handles for all touches",
    "remove iscomposite and hide toplevelwrapper",
    "add safeguards to reactcomponenttreedevtool",
    "delete reactnativeglobalinteractionhandler.js",
    "fix return type in onlychild's jsdoc",
    "batch event handling in react native",
    "fix mapfunction parameters in mapchildren's jsdoc",
    "track parentid for reactperf",
    "test reactcomponenttreedevtool specifically",
    "extract reactcomponenttreedevtool",
    "ref-09-webcomponents.zh-cn.md",
    "clean up package.json after #6338",
    "fix expect slipping into the non-test code",
    "clean up the devtool tree on server rendering",
    "no need for a special case here",
    "don't report children for empty and text nodes",
    "report dangerouslysetinnerhtml as no children",
    "handle updates to natives and composites",
    "revert \"add reactdebuginstancemap\"",
    "update devtools injection",
    "fix lint for moved reactnative",
    "remove reactdom.native shim",
    "ensure react-native-renderer package gets copied",
    "get rid of rootnodeids they're just tags now",
    "listeners are not attached by id in the api",
    "fix 0.15 compatibility",
    "add test and mocks",
    "add react native modules to module map + fix fbjs",
    "add object spread support to our babel config",
    "move react native platform files back",
    "mention enzyme on the test utils page.",
    "helper for escaping and unescpaing component keys",
    "minor fixes",
    "copy files from the react-native repo",
    "remove mention of deprecated reactlink add-on",
    "cleanup environments doc",
    "ignore dom writes outside the batch in reactperf",
    "added docs for environment integration.",
    "replaces array#map with array#foreach",
    "remove unused es6-symbol dependency",
    "follow style conventions",
    "move getnativeprops usage inline",
    "use the same changelog format as 15.0 post",
    "update react-linked-input",
    "fix extraneous markup in changelog",
    "actually bump version on website",
    "update website for 15.0.1",
    "15.0.1 blog post",
    "update changelog & readme for 15.0.1",
    "grammar fix for 15.0 blog post",
    "fix extra parens in changelog",
    "update changelog for v15",
    "make react.__spread warn",
    "add the missing download",
    "more specific typeof check for polyfilled symbol",
    "update readme for v15",
    "update acknowledgements for v15",
    "removed test support for medikoo/es6-symbol",
    "add react 15 post",
    "clarify data-reactid in v15 post",
    "update site for v15",
    "kill react.__spread",
    "fix \"vice versa\" in warning message",
    "fix briefly confusing typo",
    "fix tests for value change",
    "fix typo",
    "upgrade browserify",
    "upgrade fbjs",
    "remove jsx task & jsx-internal script",
    "update authors for v15",
    "update reactdomproduction-test.js",
    "add core-js and es6-symbol polyfill for tests",
    "rewrite issymbol to be simpler",
    "add a helper is-symbol function",
    "link to the meeting notes",
    "support for es6 polyfills",
    "add reactdebuginstancemap",
    "added symbol primative proptype.",
    "fixed paren balance in the doc",
    "link to \"no autobinding\" section for es6 classes.",
    "syntheticclipboardevent unit tests",
    "spy at warnings consistently inside test cases",
    "added tests for the new primative, symbol.",
    "update es6 class documentation with binding perf",
    "synthetickeyboardevent unit tests",
    "fix whitespace in 0.14.8 blog entry",
    "update examples for v15",
    "update readme and changelog for 0.14.8",
    "translate thinking-in-react.md to japanese",
    "don't wrap drag events in ie/edge in dev builds",
    "blog post for react 0.14.8",
    "add prs welcome badge",
    "updated react conf links",
    "add missing set -e to travis builds",
    "highlight 'not' word in example page.",
    "add warnings for onfocusin and onfocusout props",
    "use specific method names in error messages",
    "fix jump on the header",
    "free memory allocated by testelement after usage",
    "use loose-envify instead of envify",
    "geteventcharcode unit tests",
    "remove unused export from domchildrenoperations",
    "remove react/addons",
    "add missing semicolon in test-utils part of docs",
    "make reactperf measurements opaque",
    "add v15 rc2 download",
    "v15.0.0-rc.2",
    "add v15 rc2 blog post",
    "revert \"bug fix for issue 5202\"",
    "geteventkey unit tests",
    "add vector-effect to svg whitelist",
    "add focusable attribute to svg whitelist",
    "added several new unitless properties",
    "update zh-docs to v15-rc.1",
    "update 02-displaying-data.zh-cn.md",
    "update zh-docs to v15-rc.1",
    "fix lint warnings due to backouts",
    "use 0 instead of null in property config",
    "scrape mdn for latest svg",
    "consolidate svg config to avoid some duplication",
    "stop specifying must_use_attribute again",
    "add nodes to documentfragments before attaching",
    "fix markup.test is not a function",
    "added component name to css property warnings",
    "fix style= formatting in v15 rc blog post",
    "bug fix for issue 5202",
    "fix a mixin name in a blog post",
    "remove a couple old updates from blog post",
    "v15 rc1 starter kit",
    "v15.0.0-rc.1",
    "v15.0 rc1 blog post",
    "missed parentheses for matchmeida parameter",
    "introduce search",
    "update to jest 0.9.0.",
    "revert \"change release to multi task\"",
    "add benchling articles about perf to docs",
    "upgrade fbjs, fbjs-scripts",
    "update purerendermixin docs, adding es6 example",
    "keep position of \"edit on github\" link fixed",
    "fixed typo in reconciliation docs.",
    "warn about svg attributes once",
    "reset jest to use jasmine1 so tests pass again",
    "update lint config, dependencies, fix issues",
    "convert to .eslintrc.js",
    "remove dead code.",
    "don't add class=\"\" if we don't need to",
    "add redirect layout  and use it",
    "updated code fragment for correctness.",
    "update 10.2-form-input-binding-sugar.zh-cn.md",
    "fix rendertostaticmarkup invariant",
    "remove babel-browser link",
    "support standard \"cssfloat\" css property",
    "fix the lint issue introduced in #6129",
    "update to babel 6",
    "clarify error when passing class to render",
    "moved linkedinput from addons to packages.",
    "fix instance null when involve async destruction",
    "clarify a step in the quick start",
    "add suppresscontenteditablewarning",
    "fix inverted definition of controlled component",
    "add deprecation notice.",
    "remove unused enqueuesetprops methods",
    "replace the code sample in all the languages.",
    "clarify what the current version scheme is",
    "versioning blog post",
    "false, run travis",
    "add reactinstrumentation",
    "fix text component rendering with server markup",
    "hashrockets",
    "wrap insertbefore in windows 8 apps",
    "use consistent formatting for headers",
    "remove \"construct\" call except on composites",
    "fix merge conflict in #4940",
    "clearify callback text in the tutorial",
    "update comments for eventpluginhub.js",
    "don't wrap text in <span> elements",
    "fix #4963 - svg <use> swallows click events",
    "update to jest-cli 0.9.",
    "update jquery and marked versions in tutorial",
    "warns on access of `props.key` and `props.ref`",
    "remove check for _wrapperstate.pendingupdate.",
    "update documentation to stateless components",
    "fix typo in chinese tutorial",
    "add npm install instructions to readme",
    "update htmldompropertyconfig.js",
    "fix for issue/6027.",
    "add thanks for the react org",
    "enable module pattern.",
    "forgot to 'not' the pendingupdate condition.",
    "reformat script tags on download page",
    "automate sri hash generation with rake task",
    "remove react.addons.batchedupdates",
    "resolve default prop values in cloneelement",
    "update jsdelivr url",
    "do not get `process` object by using `require`",
    "use https protocol for jsdelivr.com url",
    "fix lint",
    "fix typo in blog",
    "bug on resolving default props",
    "get rid of 'should be 1' comment",
    "add note in \"fetching from the server\" section.",
    "use const instead of var",
    "update 12-context.md",
    "update website for 0.14.7",
    "update changelog.md and readme.md",
    "add a link to the list of supported events",
    "add empty dependencies for packages",
    "fix homepage urls in package.json files",
    "separation of concerns\"",
    "fix mistranslation \"never write to this.props.\"",
    "v0.15.0-alpha.1",
    "fixup missing semi-colon",
    "only add children when there are children",
    "overflow problem fixed",
    "only add slash if new child has key",
    "add semicolon for react-dom source files.",
    "clean up ununsed devdeps",
    "enable null return values in plain functions",
    "fix example from #5870 to avoid double rendering",
    "removed clonewithprops addon.",
    "add warning for nan in style object",
    "release syntheticevent.target on the destructor",
    "update zh-docs14.3 ,fixed confliction",
    "added linkedinput addon.",
    "small fixes to \"more about refs\"",
    "discontinuing ie 8 support in react dom",
    "fixup jsdoc for syntheticevent",
    "removed getdomnode from react classes.",
    "remove references to ie 8 in docs",
    "fixup style for long lines",
    "fixed typo in shouldcomponentupdate.png",
    "sort attrs in htmldompropertyconfig",
    "update thinking-in-react.zh-cn.md",
    "updated supported attrs",
    "remove unnecessary finddomnode from example",
    "bigger jsfiddle embeds",
    "update website for 0.14.6",
    "changelog & readme for v0.14.6",
    "upgrade to fbjs@^0.6.1",
    "fix typo in ref-08-reconciliation.md",
    "remove now-unused preparetomanagechildren",
    "update 10.4-test-utils.md",
    "website for 0.14.5",
    "readme for 0.14.5",
    "changelog for 0.14.5",
    "upgrade fbjs to 0.6 in npm package too",
    "0.14.4 blog post",
    "update website for 0.14.4",
    "update readme for 0.14.4",
    "changelog for 0.14.4",
    "upgrade fbjs to 0.6",
    "add shim files for rn in npm package",
    "use jsx in the new tests",
    "move the specific else if clause up",
    "set input .type before .value always",
    "remove extraneous comment",
    "pass svg attributes through",
    "document changes in #5714",
    "deleting some unecessary newline",
    "add another test for #5729",
    "remove now-unused instancesbyreactid in dominput",
    "update zh-docs",
    "clarify react class constructor comments",
    "fix typos in posts",
    "import respondereventplugin changes from rn",
    "update badges to include coverage",
    "remove fast_finish in travis.yml.",
    "coverage on its own",
    "remove coverage options from package.json",
    "fix misunderstanding in tutorial",
    "addjust travis for jest coverage",
    "split jest task into two",
    "update zh-docs with 7e2a7f0",
    "add coveralls.",
    "fixup other broken youtube-nocookie uses",
    "mention how to run specific tests in jest",
    "corrects grammatical errors",
    "fix a minor typo in contributing",
    "remove mention of grunt test --debug from readme",
    "fix typo",
    "fix typo",
    "remove smart quotes from code snippet",
    "improved react-addons-update tests",
    "fix minor typos in the blog post",
    "get rid of getnativenode",
    "don't build vendor files into build/modules",
    "error boundaries.",
    "initial outline for new devtools api",
    "moved unknown-prop warning into a devtool",
    "clarify dependency installation",
    "correct highlight in tutorial7.js snippet",
    "finalized wording",
    "fix few typos in react docs and comments",
    "fix wrong script name",
    "adding class->classname as a jsx gotcha",
    "urls",
    "remove @typechecks",
    "avoid negative lookahead in regular expression",
    "remove dead code",
    "diversity scholarship 2016",
    "change release to multi task",
    "made \"mixin\" lowercase",
    "fix single select incorrectly updating",
    "fix setstate in componentwillmount",
    "update ref-10-glossary.md",
    "log top-level renders with console.time",
    "update 08.1-more-about-refs.md",
    "add marked source in tutorial doc",
    "make createclass 10-15% faster on complex specs",
    "remove setprops and replaceprops.",
    "fix file reference typo in starter",
    "avoid mutating state in the example code",
    "add createclass stress test",
    "turn on usecreateelement by default",
    "kill global queue in reactmultichild",
    "single child",
    "add highlight to a line of code to tutorial20.js",
    "use null instead of '' in ternary expression",
    "clarify wording in the tutorial",
    "use id for todoapp example",
    "rest/spread properties may not be part of es7",
    "typo",
    "update website for 0.14.3",
    "removed unnecessary variables/assertions.",
    "update readme for 0.14.3",
    "add in missing closing </li> for docs template",
    "v0.14.3 blog post",
    "changelog for 0.14.3",
    "measure and analyze scripts",
    "use controlled components for tutorial",
    "support reversed for <ol>s",
    "followup to #5381",
    "remove legacy dom node/ref stuff.",
    "finish comment in reactdomcomponenttree",
    "fix typos and redundant words",
    "use updated korean translation",
    "properly fix korean docs",
    "revert class name manipulation doc to english",
    "remove rendundant 'the'; keep iff",
    "update deps",
    "warns when mutated props are passed.",
    "use ids in comments data",
    "added info  about react with webcomponents",
    "use comment nodes for empty components",
    "unmount children before unsetting dom node info",
    "allow nonce attribute",
    "add more documentation to context page",
    "handle multiple dom updates without interference",
    "fixed broken links in changelog",
    "reset state if comment submit fails",
    "fixed reacteurope date",
    "generate better readmes for addons npm packages",
    "make sure npm packages have repo and keywords set",
    "update error messages",
    "update eslint and eslint-plugin-react",
    "review fixes",
    "changelog for 0.14.2",
    "blog post for 0.14.2",
    "update readme for 0.14.2",
    "revert #4993 with an added test for refs",
    "update website for 0.14.2",
    "update korean translation to 84af306",
    "don't put ids in the dom in createelement mode",
    "add hooks back for devtools",
    "remove unused modules",
    "remove now-unused _rootnodeid from composites",
    "static children count for wasted time",
    "put/deletelistener take an instance, not an id",
    "propagate events based on component tree, not ids",
    "kill reactmount.getnode/getid/purgeid with fire",
    "pass native instances up until propagation",
    "reactdomcomponenttree",
    "add functions to find the instance given a node",
    "always do usecreateelement for updates",
    "make reactemptycomponent-test not swallow logs",
    "remove obsolete tests with new tree-walking",
    "warn on missing event handler properties",
    "test fixups after #4993",
    "update tooling integration for more babel 6",
    "update getting started for babel 6",
    "update getting-started.ko-kr.md",
    "properly break loop into 4096-char blocks",
    "maskedcontext should not be instantiated as null",
    "add node 5 to devengines",
    "add docs for babel 6",
    "add package.json for react-haste package",
    "make react a peerdep of react-dom",
    "correct babel 6 command line usage instructions.",
    "use path library to normalize filepath",
    "add integrity to html property config",
    "classes in the tests when can",
    "fix for typescript test on windows",
    "added a note about finding a good-first-bug",
    "fixed unclear wording in comment",
    "update deps",
    "fix shallow renderer with ref as function",
    "update jest.",
    "use a getter for candefineproperty check.",
    "update korean docs to 0.14",
    "bring over updates for 0.14.1 release",
    "'grunt lint' now works on windows",
    "codemod old apis away.",
    "update 02.1-jsx-in-depth.md",
    "add a simple initial-render benchmark test case",
    "make eqeqeq a failure",
    "fix for the issue #5189",
    "make sure top-level callback has correct context",
    "took keyof outside the function.",
    "mangle __html in prop validation.",
    "fix cycle in autofocusutils",
    "update 2015-05-01-graphql-introduction.md",
    "update 2015-05-01-graphql-introduction.md",
    "updated conference info",
    "create 01-why-react.de-de.md",
    "add react-dom.js to tutorials",
    "avoid lastprops lookup in initial render",
    "update readme's example",
    "two more fixes for document.createelement mode",
    "update addons paths in npm react readme",
    "use attributes to set .type",
    "insert nodes top-down in ie and edge",
    "lock eslint version",
    "fix lint for eslint 1.7",
    "add default attribute for use with track element",
    "fix wrong method name",
    "updating \"jsx gotchas\" docs for custom attributes",
    "update blog posts linking to react-codemod",
    "update tutorial.ja-jp.md",
    "remove react-codemod",
    "follow-ups to #5187",
    "small edit on reactiflux blog post",
    "upgrade dependency fbjs@0.4.0",
    "update chinese docs to 0.14",
    "reactiflux is moving to discord blog post",
    "\" from invariant error messages",
    "fix up stray markdown in blog post",
    "print number of matches",
    "fix buggy dom nesting warning for text components",
    "remove unnecessary indirection in events",
    "opt out of input events for ie 10 and 11",
    "fix indentation issues",
    "don't make authors links on all posts page",
    "fix blog post authors",
    "tweak wording when talking about props changing",
    "don't test frag cases in reactmultichildtext-test",
    "add feature test for document.createevent",
    "walk down internal tree to find dom node",
    "fix #1357. warn when appending \"px\" to strings.",
    "be more lenient with invalid nodes in the cache",
    "fetch node to unmount separately from unmounting",
    "add npm 3.x to devengines",
    "use 'document.createevent' not 'new event'",
    "mention codemods more prominently in release blog",
    "updated node version requirement in readme.md",
    "don't execute <script> tags w/ createelement mode",
    "documentation cleanup.",
    "removed eslint warning.",
    "use the right gulp executable on windows",
    "file cleanup.",
    "include react-dom",
    "update readme with for 0.14",
    "added react-dom to individual downloads",
    "thread native-parent pointers through everything",
    "make danger-test simpler and more robust",
    "add svg/mathml support for createelement mode",
    "document context",
    "parenttag -> current",
    "fix line highlights for linked-state-mixin",
    "sync up tutorial.zh-cn with en",
    "fix forms default value example",
    "warn when using a minified copy of dev react",
    "fixed punctuation",
    "added changelog for 0.14",
    "remove duplication in reactserverrendering",
    "grammar",
    "text fix in reactclass.js",
    "add docs for `react.children.toarray` in 0.14.0.",
    "don't use existing \"root\" id if non-root",
    "update downloads page for 0.14",
    "final docs update for 0.14",
    "update acknowledgements for 0.14",
    "write 0.14 blog post",
    "always use anonymous const in  reactproptypes.js",
    "update authors for 0.14",
    "copy 0.14 rc blog post to 0.14 blog post",
    "fix bower info in rc blog post",
    "updat docs for refs/finddomnode",
    "update some more docs for package split",
    "remove dependence on es5 shams per #4189",
    "revert \"remove dependence on es5 shams per #4189\"",
    "react->reactdom in src/",
    "react -> reactdom for render and finddomnode",
    "added warning for use of reactlink.",
    "don't blow up in key warning for undefined type",
    "make properties notation in docs consistent",
    "update to fbjs@0.3",
    "translate documentation to italian",
    "blog post for react render and top level api",
    "fix typo in videos.md",
    "add rudimentary jsc perf-counters runner",
    "isreactclass -> .prototype.isreactcomponent",
    "make scry* look through stateless components",
    "fix dev/prod mismatch in context === bailout",
    "enforce node_env=test",
    "don't throw for onclick={false} in initial render",
    "add missing comma  between proptypes and render",
    "rename type_symbol to react_element_type",
    "make new perf unit test pass",
    "correct the css example for 'appear' transition",
    "update commonjs example with build script",
    "fail jest tests on any un-spied warnings",
    "improve warning for old element objects",
    "0.13 to 0.14",
    "replace jsxtransformer with babel/browser",
    "remove mentions of react-tools/jsx command",
    "don't store <input> instance until mount-ready",
    "make the server required for the tutorial",
    "remove jsxtransformer from tutorial",
    "stop supporting our jsx compiler page",
    "text/jsx -> text/babel",
    "actually don't store <input> until mount-ready",
    "update and fix",
    "remove server rendering",
    "update basic-commonjs for new react, watchify",
    "update zh-cn docs",
    "fix transtion example with timeout prop",
    "//stackedit.io/",
    "use refs instead of finddomnode",
    "use reactdom for appropriate apis",
    "use babel",
    "assume es5 compatible browsers with console",
    "remove local 3rd party code, use cdn",
    "sync up zh-cn docs",
    "fix syntac error",
    "update zh-cn docs.",
    "typo existant to existent",
    "cleanup jest preprocessor, use cache key",
    "use main document for gettestdocument",
    "upgrade to node@4, jest@0.5",
    "improve traverseallchildren object error message",
    "improve error for style mutation",
    "updates printwasted",
    "add rdfa attributes not already covered",
    "remove syntheticevent.path",
    "update 03-interactivity-and-dynamic-uis.md",
    "add node bindings",
    "expose component instance in shallow rendering",
    "build reactdom browser builds into react-dom/dist",
    "update license to match react repo license",
    "don't install npm 3 on travis",
    "just ignore events on unmounted components",
    "make hardware-counter.cpp compile",
    "update zh-cn translation.",
    "add hardware-counter.cpp and deps from hhvm",
    "remove unused file",
    "clarifies \"fetching from the server\"",
    "support arrow functions as stateless components",
    "upgrade eslint to 1.4.1",
    "fix documentation errata",
    "check input and textarea proptypes only in dev",
    "fix syntax errors",
    "docs - typo in ref callback example",
    "make it easier to create an issue",
    "--no* options automatically set to false",
    "make \"component api\" more readable",
    "better simulate symbol-less environment",
    "update translation for jsx-in-depth-zh-cn",
    "community roundup #27 \u2013 relay edition",
    "add jsfiddle integration for babel",
    "adding support for css3 grid layout module.",
    "update japanese translation to 75fafe1",
    "add babel version to blog post",
    "0.14.0-rc1",
    "occured -> occurred",
    "stop building jsxtransformer",
    "don't copy jsxtransformer in grunt release",
    "update korean translation",
    "use a symbol to tag every reactelement",
    "0.14 rc blog post",
    "preserve dom node when updating empty component",
    "refactor empty component handling",
    "don't try to iterate over non-objects",
    "fix up style in #4719",
    "fix name prop-type on css transition group child",
    "fix typo combatibility => compatibility",
    "add react-dom to dist/ in npm package",
    "fix lint warning in react-dom codemod",
    "fix travis curl call",
    "upload new build files to build server",
    "add react-dom to bower when releasing",
    "fetch dom node lazily for updates",
    "actually build react-dom file with the build",
    "resolve eslint error",
    "updated svg attributes",
    "update wording and style for #2065",
    "add react-to-react-dom codemod",
    "update console messages regarding devtools",
    "avoid the phrase \"key property\"",
    "add insert_final_newline to editorconfig",
    "make reactelement really a plain object",
    "new devtools blog post",
    "react -> reactdom in test files",
    "use eslintrc from fbjs",
    "add warnings to react module",
    "make typescript test work with reactdom",
    "add linting pre-commit hook",
    "make react.children.map do one pass only",
    "upgrade to fbjs, fbjs-scripts @ 0.2",
    "update 02-displaying-data.ja-jp.md",
    "\"also lets pass\" -> \"also lets you pass\"",
    "reverse condition of a ternary for readability",
    "fix code style/grammar on synthetic event warning",
    "fix wrong name",
    "enable no-undef for eslint",
    "fix formatting in test utils docs",
    "make finddomnode error clearer",
    "clarify use of arrow functions",
    "update 04-multiple-components.md",
    "update 06-transferring-props.md",
    "update 02.3-jsx-gotchas.md",
    "update 10.1-animation.md",
    "update 08.1-more-about-refs.md",
    "update gruntfile.js",
    "remove redundancy regarding 'latest react news'",
    "fix typo",
    "fix repetition by editing second sentence",
    "allow `results` and `autosave` attributes",
    "capitalize babel",
    "update tooling docs to suggest babel",
    "add a simple production-mode sanity check test",
    "ensure ie8 style expansion list is up to date",
    "reactcsstransitiongroup timeouts",
    "apply css shorthand expansion to ie8 only",
    "spruce up refs docs",
    "clarify invocation order of componentdidmount",
    "check for compatible node,npm versions on install",
    "re-sort some constants",
    "hax to make jest fast",
    "use createelement instead of html generation",
    "remove _isreactelement",
    "initial commit actually applying",
    "added documentation about pooled events",
    "react-codemod-lint-fix",
    "translate ref-01-top-level-api.md to japanese",
    "support export default in the class codemod.",
    "updated event pooling note in docs",
    "updated the performance tools doc page.",
    "tiny code tweak in reactmultichild",
    "examples jquery-mobile thirdparty files move",
    "`summary`",
    "swap places of mounted and pending update checks",
    "reacteurope roundup blog post",
    "fix markdown conversion with marked",
    "update component api docs",
    "translate 01-introduction.md to japanese",
    "update devtools post to note beta 2",
    "translate 11-advanced-performance.md to japanese",
    "fix grammar in relay blog post",
    "fix typecheck",
    "remove accidental .only",
    "warn with two copies of react",
    "relay technical preview - blog post",
    "change tutorial.ja-jp.md to use marked",
    "simplify event dispatching",
    "add react.children.toarray",
    "move guards from auto binding to event dispatch",
    "upgrade eslint, fix code",
    "clean up files before automated codemod",
    "adding __self and __source special props",
    "minimal implementation of stateless components",
    "apply codemod for react -> reactdom split",
    "fixed consistency of behavior boolean properties",
    "deduplicate logic in reactelementvalidator",
    "disable event.path handling",
    "reactcomponentexpect fails silently",
    "update 2015-05-01-graphql-introduction.md",
    "fix missing change event target in old ie",
    "only set the owner during flattening",
    "revert change to docs/js/reactj.js",
    "remove fasttest task. fasttest is not fast",
    "add stop-opacity to unitless style properties",
    "fix lint",
    "set the owner during traverseallchildren",
    "use onselect fallback in ie",
    "added events documentation for <img> elements",
    "include haskell language",
    "add blog post about the new devtools beta",
    "0.14.0-beta3",
    "remove two ideas from why react to add clarity",
    "update addons.js",
    "update korean translation to e88c7bf",
    "listen to encrypted event, not onencrypted",
    "simplify react-codemod.",
    "update 02.1-jsx-in-depth.md",
    "move react-tools from root.",
    "0.14.0-beta2",
    "fixed global events  when event has path.",
    "update fbjs dependency",
    "fix a couple lint issues as a followup for #3761",
    "remove react-tools completely",
    "note that npm >= 2.0.0 is required for building",
    "translate 10.9-perf.md to japanese",
    "cleaned up a few names in the reconciler.",
    "update fbjs dependency",
    "build perf and test-utils addon npm packages",
    "translate 10.8-pure-render-mixin.md to japanese",
    "ensure tags are uppercase before comparing. #4388",
    "fix grammar",
    "fix gulp",
    "update korean translation to 991c437",
    "enable  global transforms with browserify",
    "replace grunt-jest with our own runner",
    "translate 10.7-update.md to japanese",
    "use fbjs package from npm, gulp",
    "lock typescript dep at 1.4",
    "translate 10.6-create-fragment.md to japanese",
    "fix jsx iife example",
    "remove markdown remnant & unnecessary whitespace",
    "enclose variables in back quote",
    "translate 10.5-clone-with-props.md to japanese",
    "rename reactdomclient to reactdom",
    "update korean translation to e928c65",
    "lock babel @ 5.6.x.",
    "improve reacttestutils.simulate documentation",
    "pull out tag end regex",
    "translate 10.4test-utils.md to japanese",
    "add period",
    "upgrade eslint",
    "counterexample -> antipattern",
    "add animationiterationcount in isunitlessnumber",
    "make component api docs clearer",
    "invert few if-else with negation for readability",
    "enable linting in src/tests, cleanup",
    "review changes",
    "split code block for readability",
    "make getting started a little less confusing",
    "always-multiline",
    "remove in-browser unit testing",
    "remove analyticseventplugin",
    "tweaks to new content in forms documentation",
    "use more specific ignore pattern for jest",
    "add more information about defaultvalue",
    "translate 10.1-animation.md to japanese",
    "enclose a name of library in back quote",
    "delete unnecessary control code.",
    "don't skip reconcilation if context differs",
    "add wrap attribute",
    "traverseallchildren code clarity",
    "change css to uppecase",
    "change http-equiv with charset",
    "translate 04-self-closing-tag.md to japanese",
    "translate 10-addons.md to japanese",
    "fix typo",
    "remove type=\"text/javascript\"",
    "fix typo",
    "s/currentpathelemenid/currentpathelementid",
    "change number of html{} to highlight correct line",
    "id not id",
    "translate 09.tooling-integration.md to japanese",
    "add meta tag in the header of html",
    "run eslint tests with jest",
    "use jest for eslint-rules",
    "use a test case that demonstrates the fix.",
    "reset module cache between tests",
    "fix some lint",
    "translate 08.1-more-about-refs.md to japanese",
    "enclose a name of function in back quote",
    "add comment to explain string concatenation",
    "fix typo on line 91 of tutorial.md",
    "add backticks to highlight comment.json file name",
    "enclose a value of variable in back quote",
    "suggest open index.html in browser regularly.",
    "enclose a value of variable in back quote",
    "clarify react.render note in documentation",
    "move \"refs to custom components...\" fixes #4305",
    "indicate file name requried for static file",
    "translate 07-forms.md to japanese",
    "fix typos",
    "update 2015-07-03-react-v0.14-beta-1.md",
    "semicolon cleanup",
    "add intellij idea project related ignores",
    "add inputmode to html dom property whitelist",
    "remove unnecessary semicolon;",
    "fix react-addons-update package name",
    "add setprops/replaceprops warning",
    "revert \"removed setprops and replaceprops \"",
    "removed most uses of setprops in unit tests",
    "beta1 blog post",
    "translate 06-transferring-props.md to japanese",
    "add missing semicolon",
    "finish addons packaging",
    "fix jest tests",
    "fixed header comment spacing.",
    "make events propagate through shadow doms.",
    "removed setprops and replaceprops",
    "translate 05-reusable-components.md to japanese",
    "removed redundant word",
    "typo fix",
    "update title",
    "used jsx",
    "lowercase index file",
    "fail tests on any un-spied warnings",
    "update react link",
    "translate 04-multiple-components.md to japanese",
    "stop building react-source gem",
    "translate 02.3-jsx-gotchas.md to japanese",
    "change 'javascript' to 'javascript'",
    "handleclick function",
    "more conservative dependency update.",
    "update script source",
    "update click message",
    "rename folder",
    "add new line at and of some files",
    "use react from bild",
    "click conter example",
    "update git ignore",
    "translate 02.2-jsx-spread.md to japanese",
    "translate 02.1-jsx-in-depth.ja-jp.md to japanese",
    "remove warnings in tests",
    "drop react-codemod.tgz from travis build",
    "fix travis artifact upload",
    "check entry type iterables",
    "set this.props on elements in prod mode",
    "allow iterables to pass node prop type check",
    "fix change event type",
    "\"overridden\" -> \"overwritten\"",
    "optimize spec",
    "wrap all top-level components for consistency",
    "prevent creating invalid closing tags",
    "remove constructandrendercomponent",
    "allow deeper trees",
    "dom components as refs",
    "translate 02-displaying-data.md to japanese",
    "show warning when componentdidunmount is defined",
    "freeze reactelement.props in dev mode",
    "build standalone react-addons packages",
    "fix typo in blog post",
    "don't try building a %s module.",
    "unit tests for unmounted setstate and ismounted",
    "guard against a null node",
    "lint fixes",
    "let updates be enqueued during render",
    "remove currentlyunmountingcomponent",
    "move current owner to isomorphic",
    "remove an unnecessary warning",
    "move npm packages into folder",
    "fix exceptions when running `grunt test --debug`",
    "inject the update queue into classes",
    "support svg image",
    "rewrite svg initialization in getmarkupwrap",
    "fix link of getting-started.ja-jp.md",
    "invert logic in findallinrenderedtreeinternal",
    "npm script to run lint only on changed files",
    "add iife example to jsx documentation",
    "move reacterrorutils out of vendor",
    "remove _setpropsinternal",
    "add support for appear and appear-active classes",
    "build react-dom package",
    "translate 01-why-react.md to japanese",
    "fix typos in reactserverrenderingtransaction.js",
    "corrected spelling",
    "add owner to void element children warning",
    "reduce hash lookups for dom properties",
    "remove extra period",
    "inline requires in gruntfile",
    "deprecate jstransform & react-tools",
    "move ismounted logic into the reactupdatequeue",
    "update jest to latest",
    "update korean transltaion to 4c778e2",
    "fix class tests",
    "ignore generated docs",
    "update code style",
    "update code style",
    "add xmlns to svg wrap",
    "fix code of getting-started-ja-jp",
    "optimize classname check",
    "memo: link to docs and not the blog post",
    "fix ie8",
    "fix japanese docs permalinks",
    "fix docblock of reactfragment",
    "fix addon name in npm readme",
    "memo: document changes for classes",
    "update docs to new method of accessing addons",
    "update eslint-related dependencies",
    "add note about react's onchange vs. dom's oninput",
    "only enqueue attachrefs if refs are present",
    "remove line length lint warning",
    "convert select/option to not use wrappers",
    "roll back to babel-eslint 3.1.9",
    "convert form, iframe, img to not use wrappers",
    "check warning/invariant calls have good messages",
    "convert reactdombutton",
    "attempt to simplify/fix warnandmonitorforkeyuse",
    "convert reactdomtextarea to not be a wrapper",
    "fix `npm run lint`",
    "fix wording of warning-and-invariant-args linter",
    "enable more eslint-plugin-react rules",
    "enable react/wrap-multilines eslint rule",
    "remove the codes relating to jshint",
    "add custom eslint rule for warning and invariant",
    "remove /*eslint-disable comma-dangle*/ comments",
    "always-multiline",
    "kill .type",
    "added 'is' attribute",
    "remove debug message",
    "removed reactcontext",
    "added missing doctype",
    "retain lines in babel under jest",
    "trivial mispelling in docs",
    "addition of troubleshooting section",
    "use babel-eslint and update eslint",
    "remove envify from the basic-commonjs example",
    "update korean transltaion to 58fb322",
    "enable linting for __tests__",
    "removed reactelement._context",
    "0.14.0-alpha3",
    "add capture to supported attributes",
    "fix proptypes.{oneof, oneoftype} validation",
    "assert instance type using internal constructor",
    "adding validation for array in reactproptypes.",
    "remove web worker test",
    "react native release process",
    "value for `transitionappear` must be boolean",
    "dedupe warnings in validatedomnesting",
    "update korean transltaion to 5bee4a5",
    "update website with 0.13.3 builds",
    "redirect thinking in react blog post to docs",
    "better invariant / warning replacement",
    "v0.13.3 blog post",
    "give authors links.",
    "changelog for 0.13.3",
    "readme for 0.13.3",
    "fix docs for #3690",
    "add shallow context pass test",
    "0.14.0-alpha2",
    "pass context to dom wrappers, use it in <option>",
    "fix 404 due to relative url",
    "clarify tutorial instructions",
    "remove unused variable",
    "add test for dom node as this.props.children",
    "revert \"add key warning to nested collections\"",
    "ignore third_party js in internal transform step",
    "update styling guide in contributing docs",
    "clarify wording in working with the browser",
    "update korean translation to 5275244",
    "change wording",
    "reorganize src files for isomorphic react package",
    "document boolean attributes in jsx",
    "followup to #3852, use https",
    "get html5 minlength working.",
    "add punctuation",
    "better warnings for nested proptypes",
    "update contributing.md",
    "split message for deep numeric key warning too",
    "deprecate reactjs google group",
    "change object typo to objects",
    "don't run non-existant fbtransform tests",
    "split out warning message for nested key warning",
    "clarify reactelement prop validation message",
    "remove moot `version` field",
    "set _reactchildkeysvalidated in dev mode only",
    "fix esprima-fb dependency",
    "0.14.0-alpha1",
    "move pre-compiled js files",
    "follow-up to follow-up to #3718",
    "preserve prototype with replacestate",
    "remove jslint comments",
    "reactmultichildtext-test.js fix __html typo",
    "add support for unitless tabsize/tab-size",
    "add a badge with latest npm package published",
    "followup to #3758 so we actually test things",
    "formatting of line 19 reactnativecomponent.js",
    "added support for namespace attributes",
    "follow-ups for #3718",
    "remove transforms from repo, react-tools",
    "use babel to build react",
    "ismounted should always return a boolean.",
    "remove es3ify",
    "jsdoc fixes",
    "update 2015-05-01-graphql-introduction.md",
    "better warning messages for deprecated methods",
    "fix a couple grammar issues in graphql blog post",
    "graphql introduction blog post",
    "check that react renders the menuitem closing tag",
    "update korean translation to 9484d0f",
    "batch updates within top-level unmount",
    "add more context to dom nesting warning",
    "add punctuation",
    "dry quadratic formula example",
    "fix infinite recursion in browsers with iterators",
    "use local `grunt` executable on travis",
    "fix differences a jquery cdn urls, fixes #3750.",
    "update 10.1-animation.md",
    "add forgotten clippath wrapper in getmarkupwrap",
    "add key warning to nested collections",
    "add missing super calls",
    "missing punctuations in comments.",
    "fixed formatting.",
    "treat boxordinalgroup and flexorder as unitless.",
    "tweak style mutation warning, remove test comment",
    "update clonewithprops documentation",
    "update translation to 0183f70",
    "relax dangerouslysetinnerhtml validation",
    "remove reactrafbatchingstrategy",
    "provide top level method for rendering subtree",
    "fix bad links in docs.  fixes #3654.",
    "update supported html attributes",
    "example is jsx not js.",
    "fix missing line highlight in tutorial",
    "readme for 0.13.2",
    "false' to $.ajax when fetching comments",
    "tweak wording in 0.13.2 blog post",
    "changelog for 0.13.2",
    "update website with 0.13.2 builds",
    "v0.13.2 blog post",
    "// to https:// where appropriate)",
    "update 2015-04-17-react-native-v0.4.md",
    "react native 0.4 blog post",
    "create 19-dangerously-set-inner-html.ko-kr.md",
    "update translation to 6a7a4fd",
    "remove withcontext from top-level api",
    "update index.html",
    "add warning for getdefaultprops on es6 classes",
    "\"advanced performance\" typo fix",
    "update code style",
    "use marked instead of showdown and escape html",
    "update uglify dependency",
    "don't thread index through traverseallchildren",
    "fixed typo",
    "update patent grant",
    "skip selecteventplugin extraction if no listeners",
    "translate tips 11 to korean",
    "update korean translation to 0185c68",
    "create 12-initial-ajax.ko-kr.md",
    "create 13-false-in-jsx.ko-kr.md",
    "updating `es5-shim` url",
    "add target option to npm readme",
    "clarify sentence",
    "check if type.prototype is object",
    "check if is undefined",
    "kill reactdonotbinddeprecated",
    "refer to cloneelement in mutation warning",
    "fix example jsx output",
    "fix typo",
    "add copyright headers to npm-react-codemod.",
    "document new es6module flag in react-tools readme",
    "update reactcompositecomponentnestedstate-test.js",
    "update reactdomiframe-test.js",
    "fix for style not always reset when set to null",
    "component.render method returns a reactelement.",
    "switch to parent-based context.  fixes #2112.",
    "mention flux in \u201ccommunicate between components\u201d",
    "fix server-side rendering of <select>",
    "kill reactputlistenerqueue",
    "fix type on renderintodocument",
    "update korean translation to d402bd3",
    "more uniform formating",
    "fixed typo / grammar docs",
    "remove some `getdomnode` from docs and examples",
    "remove last call to `getdomnode` in tests",
    "set up `style` mutation monitoring",
    "update shallowequal.js",
    "increase speed of shallowequal",
    "update shallowequal.js",
    "fix inverted feature test in .travis.yml",
    "use ie8 feature detect instead of try catch",
    "deal ie8 out of size error",
    "fix render order error in safari",
    "fix unused variable lint from #3552",
    "update comment",
    "fix small typo in 11-advanced-performance.md.",
    "import respondereventplugin from react-native",
    "remove caching from for loops",
    "sync transforms from internal",
    "english tweaks",
    "set git name and email for travis",
    "squelch git warning on travis",
    "autobuild website on travis from stable branch",
    "set name and email a different way",
    "add ie-specific 'unselectable' attribute",
    "roundup 26",
    "update tutorial.md",
    "keep docs/js/{react,jsxtransformer}.js in repo",
    "update readme.md",
    "update readme.md",
    "translate tip-18 to korean",
    "'new' note",
    "update korean translation to b3c75d8",
    "translate tip-16 to korean",
    "translate tip-17 to korean",
    "translate tips 05..10",
    "translate tip-14 to korean",
    "translate tips 01..04",
    "update index.html",
    "translate tip-15 to korean",
    "update to ed257cb",
    "swapping defaultchecked and defaultvalue",
    "remove unrelated doc line",
    "split up second sentence more",
    "tweak words on homepage",
    "add react native blog post",
    "disable numeric element types",
    "update site nav",
    "add missing semicolon",
    "tweak validation message, add html support",
    "update readme for npm-react-codemod",
    "add reactutils and array polyfills.",
    "add es6 class transform",
    "remove stray console.log comment",
    "validate only against problematic tag nesting",
    "add finddomnode transform",
    "add pure-render-mixin transform",
    "include latest version of jquery in tutorial",
    "add skeleton for react-codemod",
    "fix the locale id",
    "translate 2 docs into japanese",
    "npm without -g should never need sudo",
    "fix failing test",
    "reordered properties to maintain abc order",
    "remove classset/cx",
    "fix tests after merge",
    "use https, right width videos",
    "test from test:coverage.",
    "don't add 'px' to strokedashoffset css properties",
    "remove mention from docs",
    "update unprefixed css props doc",
    "do not render components to `document.body`",
    "minor fixes in package.json",
    "validate node nesting, take 3",
    "add missing semicolon",
    "fix doc comments and typos",
    "fix the closing html paragraph tag.",
    "building with relay blog post",
    "fix html to jsx converter to work with https",
    "more lint fixes",
    "kill react.initializetouchevents for good",
    "remove perf folder",
    "lint fixes",
    "use console.error to show stack trace in console",
    "don't use owner to determine statefulness",
    "0.13 blog post, starter kit",
    "update readme for 0.13.1",
    "changelog for 0.13.1",
    "fix grammer in comments",
    "add warning for getdomnode calls.",
    "add a note about react classe name convention",
    "fix purerender test to use providesmodule",
    "link to inserting raw html document",
    "move list of newline-eating tags to variable",
    "fix small typo",
    "fix up perf a bit better for 0.13",
    "update tests to use polyglot profile of html",
    "appease eslint",
    "update travisci to use exiting env var",
    "squash getdomnode warning from isdomcomponent",
    "fix for empty <select> elements with value",
    "getdomnode --> finddomnode",
    "fix grammar in warning message",
    "tobedomcomponentwithchildcount readability",
    "nominalized 'shallow copy'",
    "eslint ignores built files",
    "jsx_orphaned_brackets_transformer v1.0.1",
    "make invalid proptype warning clearer",
    "it\\ns -> its",
    "it's --> its",
    "revise korean translation - final",
    "fix module option parsing of jsx command",
    "add warnings if proptypes return functions",
    "translate 06 to korean",
    "translation of 05-reusable-components-ko-kr.md",
    "apply review",
    "translate 11 to korean",
    "update translation to 91b4564",
    "ref-08-reconciliation",
    "update translation to b95ad29",
    "translate 10.1 to korean",
    "translate 10.2 to korean",
    "translate 08.1 to korean",
    "translate 10.7 to korean",
    "translate 10.3 to korean",
    "translate conferences to korean",
    "translate 10.8 to korean",
    "translate 10.5 to korean",
    "translate 10.4 to korean",
    "translate 09 to korean",
    "translate 08 to korean",
    "update translation to 673874d",
    "fix links",
    "translate 02.2 to korean",
    "revise korean translations",
    "unify words",
    "update think-in-react.ko-kr",
    "translate 10 to korean",
    "translate 02.3 to korean",
    "update content",
    "translate 02.1 to korean",
    "update docs to v0.13.0-beta.2",
    "translate tutorial to korean",
    "translate ref 07 to korean",
    "translate ref 06 to korean",
    "translate ref 04 to korean",
    "translate 04 to korean",
    "translate 07 to korean",
    "translate flux-docs to korean",
    "translate 10.6-update.ko-kr.md",
    "translate ref 05 to korean",
    "create ref-09-glossary.ko-kr.md",
    "translate getting-started to korean",
    "create ref-01-top-level-api.ko-kr.md",
    "create ref-03-component-specs.ko-kr.md",
    "create ref-02-component-api.ko-kr.md",
    "translate thinking-in-react.ko",
    "translate complementary-tools",
    "fix some words, translate title",
    "translate 03 to korean",
    "translate videos.md",
    "translate examples.md",
    "add some important `getdomnode` tests back.",
    "add docs/docs 01",
    "fix comma splice and line length",
    "foo.getdomnode => react.finddomnode",
    "warn when rendering directly into document.body",
    "v0.13 starter kit",
    "update acknowledgements",
    "with the exception for -> with the exception of",
    "add deprecation note to blog post and changelog",
    "es6 class docs",
    "update authors for 0.13",
    "a couple small changes to the changelog for 0.13",
    "added docs about the ref-as-callback.",
    "changelog for 0.13",
    "update the examples for 0.13",
    "0.13 blog post",
    "react.cloneelement",
    "deprecate replaceprops",
    "update relevant urls to https",
    "add docs for createfragment",
    "fix perf displayname with es6 classes",
    "update to derequire@^2.0.0",
    "add oncontextmenu to events doc",
    "add documentation about jsx and displayname.",
    "update jstransform and esprima-fb dependencies",
    "fix documentation typo in reactcomponent",
    "check that console exists before warning",
    "add 'ing' to make \"opening\" and \"closing\" line up",
    "initialize dev variables in dev mode only",
    "update reactcomponentexpect.js",
    "use warning module instead of console.debug",
    "warn if ie8 is in compatibility mode",
    "bringing the code to one style.",
    "bail if either argument is falsey",
    "#3311",
    "update round-up 25",
    "v0.13 rc blog post",
    "facebook, not facebook",
    "there was a redundant word in the sentence",
    "update 2015-03-03-community-roundup-25.md",
    "v0.13.0-rc2 starter kit",
    "v0.13.0-rc2",
    "sync out another jsx transform test.",
    "update bower release task",
    "fix errors from new test",
    "update 2015-03-03-community-roundup-25.md",
    "update 2015-03-03-community-roundup-25.md",
    "community roundup #25 blog post",
    "always use a static message formats",
    "modified the todo example.",
    "reactfragment counts as a node without warning",
    "show line numbers in online jsx compiler",
    "remove unnecessary variable from test",
    "add cloneelement implementation",
    "add note about enter/leave bubbling",
    "xjs -> jsx",
    "fix coffeescript example",
    "add regression test for scry order",
    "avoid passing `this` of a static object",
    "fixed the url in community-roundup-5",
    "fixed the url in community-roundup-9",
    "added the key attribute into the todo example",
    "don't use undefined as parent name in key warning",
    "fix typo",
    "v0.13 rc blog post",
    "fix post code snippet display",
    "clarifies forceupdate method",
    "v0.13.0-rc1",
    "v0.13.0-rc1 starter kit",
    "add blog post about reactelement changes in 0.13",
    "make clonewithprops typechecks static-only",
    "revert \"revert #1536\"",
    "update dependencies",
    "add support for jstransform es6-call-spread",
    "css property",
    "expose --target flag on jsx executable",
    "make dev and production environment consistent",
    "add vendor/inline-source-map.js to package.json",
    "wider twitter timeline on support page",
    "cleanup quote style",
    "add relay blog post",
    "//github.com/facebook/react",
    "fix long lines in vendor/fbtransform/visitors",
    "lint vendor/*.js",
    "fix .eslintignore",
    "fixed mistake in jsdocs types for clonewithprops",
    "lint from root",
    "remove ballmer example",
    "fix a doc. clonewithprops clones a reactelement.",
    "put deprecation warning for classset",
    "lint vendor/fbtransform as well",
    "more warnings to reactfragment.create",
    "warn when using constructor function directly",
    "move option parsing into react-tools proper.",
    "remove lodash devdependency",
    "remove spaces from array brackets",
    "support unmounting in reactshallowrenderer",
    "modify sample css so that it works in safari",
    "remove spaces from object braces",
    "using https for embedded fiddles",
    "forgotten string",
    "make tutorial cdn urls use https",
    "warn if using maps as children",
    "fix reactmount._rendernewrootcomponent signature",
    "warn if accessing .type on a factory",
    "prevent nan props from triggering warnings",
    "clarify section on namespaced components",
    "s/upate/update",
    "lint whitespace",
    "reword section on react without jsx",
    "v0.13.0-beta.2",
    "lint whitespace , trailing comma",
    "remove references to vendor_deprecated",
    "dedupe owner-is-important warning.",
    "only monitor components that are likely stateful",
    "fix linting",
    "eslint",
    "update eslint rules",
    ".eslint in src is not necessary anymore",
    "bumps safe_yaml to 1.0.4  to fix bug",
    "fix license header to use bsd",
    "remove newline at beginning of file",
    "update image perf",
    "add space-before-blocks rules, fix code",
    "moar warnings with solid prefixes!",
    "add indent lint rule, fix code",
    "update to cla, contributing.md",
    "tweaks on advanced performance",
    "advanced performance doc",
    "fix microdata properties' commentaries",
    "mention of \"facebook.com\" was not a link",
    "dead code",
    "upgrade to newer eslint, use esprima-fb",
    "remove zerowidth space at the beginning of file",
    "make keyed object fragments an opaque type",
    "fix markdown parsing error",
    "add react.js conf keynote talk",
    "add note on classset deprecation",
    "remove more upstream modules that aren't used",
    "move keymirror to vendor to match internal move",
    "corrected pure-render-mixin documentation",
    "chinese docs typo",
    "sync up chinese docs links",
    "fix next page link typo",
    "fix typos",
    "update tutorial.md",
    "sync internal modules",
    "add autofocus to supported html attributes",
    "set state takes a function",
    "fix list formatting in glossary",
    "fix ismounted inside of render",
    "corrected documentation",
    "removes loose validation message",
    "hot fix cyclic dependency",
    "fix highlighting",
    "expose reactreconciler",
    "newlines handled incorrectly in innertext in ie8",
    "removing unnecessary returns",
    "document react.addons.testutils.iselement",
    "fix consistency of component api document",
    "use typescript compiler api directly",
    "set html dom property \"open\" to has_boolean_value",
    "remove extraneous comma in tutorial",
    "update copyright headers for 2015",
    "update thinking-in-react.md",
    "v0.13.0-beta.1",
    "update tutorial.md",
    "use persistmoduleregistrybetweenspecs",
    "run jest with grunt, add to travis",
    "mention shallow rendering's limitations",
    "dump the cache when depending on warning messages",
    "add documentation for shallow testing",
    "remove \"derequire\" from minified bundles",
    "update 02.1-jsx-in-depth.md",
    "update 04-multiple-components.md",
    "rewording for clarity",
    "use singleton lifecycle state",
    "rename reactcomponentbase -> reactcomponent",
    "don't validate proptypes in production",
    "batch updates in initial render",
    "fix broken jest test",
    "add tests to callbacks of the life cycles",
    "update to use spyon for console.warn #2749",
    "update warning calls to use %s #2870",
    "using %s in warning message",
    "better tests",
    "fixing lint failures",
    "renaming assertvalidstyle to warnvalidstyle",
    "add displayname to nested render warnings",
    "add meta matchers for testing tests",
    "add basic typescript class test",
    "moar tests",
    "update 06-transferring-props.md",
    "update .mailmap for me",
    "remove _pendingcontext",
    "pass context to the constructor",
    "remove react.createref api",
    "replace reactcomponentmixin with reactreconciler",
    "typo in first commit.",
    "add coffeescript class test",
    "switch first-class refs to use functions",
    "fix a couple small lint issues",
    "move ref code to reactcompositecomponent",
    "added fb.me url to error message.",
    "use current date in copyright footer",
    "add chinese translation of multiple-components",
    "add chinese translation of reusable-components",
    "correctly highlight changed line in tutorial.",
    "add `npm run build`",
    "fix inaccurate spec description",
    "throw for misue of localeventtrapmixin",
    "fix strict mode violoation in test",
    "repair reactdefaultperf",
    "update 02.1-jsx-in-depth.md",
    "fix lint",
    "fix es6class test so it runs in browsers",
    "correct typo",
    "add chinese translation to 7 more pages.",
    "v0.13.0-alpha.2",
    "update package deps",
    "don't bind callbacks to setstate, setprops etc.",
    "grammar/punctuation fixes",
    "fix lint on travis",
    "add eslint grunt task, fail travis for it",
    "fix consistent-returns",
    "introducing reactcomponentbase base class",
    "use eslint",
    "convert to single quotes",
    "the unique key warning should only happen in dev.",
    "update readme.md insert comma",
    "fix reasonable lines to 80",
    "fix majority of issues eslint found",
    "warn when mutating props on a reactelement",
    "talk about running a server in tutorial",
    "update 07-forms.md",
    "remove period from finddomnode test filename",
    "removed unknown tag warning/whitelist.",
    "remove legacyimmutableobject",
    "fix outdated copyright year",
    "code formatting fixes",
    "tip on integration with other libraries",
    "update ref-09-glossary.md",
    "syntheticevent.timestamp is a number, not a date",
    "wrap setinnerhtml in windows 8 apps",
    "update 02-displaying-data.md",
    "add late class validation warnings for statics",
    "update ref-01-top-level-api.md",
    "fixup jsdoc for finddomnode",
    "temporarily fix emptycomponents",
    "v0.13.0-alpha.1",
    "removed some duplicate tests",
    "check for linenumber support before using it",
    "update 14-communicate-between-components.md",
    "update 05-maximum-number-of-jsx-root-nodes.md",
    "diversity scholarship blog post",
    "fix version typo in grunt task",
    "fix conference year typo in blog post content",
    "separate createelement and jsx tests",
    "add placeholders for static prop type tests",
    "renamed classic/proptypes to classic/types",
    "0.12.2 starter kit",
    "v0.12.2 blog post",
    "readme + changelog for 0.12.2",
    "update docs for 0.12.2 changes",
    "revert \"monitoring code use of clonewithprops\"",
    "add event system doc chinese translation",
    "improve comment in example code",
    "added note for proper example display",
    "add forms doc chinese translation",
    "use containers on travisci",
    "include 0.12.1 starter kit",
    "update tutorial.md for grammatical changes",
    "fix lint",
    "remove deprecated methods since 0.12 shipped",
    "reactcomponent -> reactclass in a few places",
    "update npm dependencies",
    "delete extraneous period",
    "protect better against createelement",
    "changelog, readme updates for v0.12.1",
    "enable strip-types transform for internal code",
    "add chinese translation of jsx-gotchas",
    "combine beforeinput and composition event plugins",
    "update 02-displaying-data.md",
    "add chinese translation of js-spread",
    "update beforeinputeventplugin.js",
    "add chinese translation of jsx-in-depth",
    "add missing verb",
    "fix new lint errors",
    "add top-level api docs for react.createfactory.",
    "the same problem in issue #2648",
    "add type signature info to top-level api docs.",
    "update 10.6-update.md",
    "don't need must_use_attribute for margin",
    "support marginheight and marginwidth attributes",
    "use getselection in ie where available",
    "remove unused require from reactdom-test",
    "use string.charat for character by index lookup",
    "screencast interfacing react + backbone",
    "own our fiddles so we can update them more easily",
    "remove generic spread, object.assign  mentions",
    "clarify when state may duplicate props",
    "update ref-05-events.md",
    "fix addons documentation of development only part",
    "give context aware message if markup reuse fails",
    "fix typo in addons.update $splice command help",
    "handling events in capture phase",
    "adding link to wiki",
    "monitoring code use of clonewithprops",
    "update commonjs example for 0.12",
    "revert \"remove fbtransform/syntax.js\"",
    "fix lint warnings, style fixups",
    "remove fbtransform/syntax.js",
    "use jest for `npm test`",
    "reactcomponentexpect expects itself",
    "wrote community roundup #24",
    "finish renaming rendercomponent -> render",
    "react.js conf updates",
    "better wording thanks to @jwalke",
    "fix typo in comment of jquery-bootstrap example",
    "add additional field for art reconciler",
    "//phabricator.fb.com/d1695279",
    "mention that talks will be recorded",
    "update variable name and doc type to be accurate",
    "separate child reconciliation step from diffing",
    "add example for how to use `style` properly",
    "replace `mountdepth` with `istoplevel`",
    "update tutorial language to be more explicit.",
    "animation documentation for reacttransitiongroup",
    "stop mutating merged lifecycle results",
    "remove some invariants and deadcode",
    "preserve implicit method names",
    "permit th  attribute",
    "move componentenvironment out of reactcomponent",
    "fixed 'imports' to resolve merge conflict",
    "unused variables",
    "shallow rendering support",
    "update 10.4-test-utils.md",
    "move _pendingx into reactcompositecomponent",
    "add test for warning in reactelementvalidator",
    "drop reactowner.mixin",
    "drop this.props",
    "drop inaccessible methods",
    "remove transferpropsto",
    "don't mutate .props.style in reactdomcomponent",
    "fix up variable names and types to be correct",
    "inject browser mixin before full-page components",
    "fix problems with empty component id registration",
    "make reacttextcomponent properly injectable",
    "wrap every dom node in a composite component",
    "stop treating key={null} as an unspecified key",
    "warn when casing css vendor prefixes incorrectly",
    "update ref-09-glossary.md",
    "removing unecessary resize listener",
    "test that text spans aren't remounted needlessly",
    "there's no iscomponentoftype anymore",
    "fix odd formatting in reactdomcomponent-test",
    "add strokeopacity to unitless css properties",
    "separate react composite and class",
    "using semicolon instead of \"and\" conjunction",
    "initial implementation of new-style refs",
    "use adjective \"too\" instead of \"to\"",
    "add ssr at soundcloud talk",
    "fixing some newline-preserving issues",
    "remove conflict comment",
    "add 'use strict' to statisfy linter rules",
    "update react.rendertostring argument type in docs",
    "trailing commas break old ie versions",
    "remove unrelated comment",
    "fix typo in if/else jsx doc.",
    "fix out-of-scope var use.",
    "remove esprima-fb and use syntax from jstransform",
    "cleanup a couple unused variables",
    "react.rendercomponent --> react.render",
    "bring in jsfiddle integration script, add harmony",
    "update deprecated proptypes",
    "add comma for readability in tutorial",
    "drop internal uses of .type on the class",
    "followup fix for react.proptypes.node",
    "drop reactdom from internal dom extensions",
    "drop legacy factories around classes",
    "add 0.12 starter kit",
    "added comma to increase readability.",
    "update cdnjs link, include jsdelivr in readme",
    "0.12 changelog",
    "update version references in the readme",
    "0.12 blog post",
    "update authors & acknowledgements for 0.12",
    "correct changes from 0.12-stable merge",
    "react.js conf blog post",
    "update docs navigation",
    "more descriptor -> element renames",
    "updated docs for new jsx changes",
    "use --harmomy in docs examples for cleaner code",
    "update animation docs for createelement",
    "update jstransform version to ^7.0.0",
    "fixing touch/mouse issues with tapeventplugin",
    "moved key requirement note into 'getting started'",
    "move object.assign file to align with internal",
    "react.js conf blog post",
    "changing api documentation for jsx transformer",
    "remove obsolete jshint options",
    "glossary",
    "todomvc live demos have moved.",
    "update server servering example",
    "remove @jsx from examples",
    "react.rendercomponent -> react.render",
    "update properties/elements",
    "hide reactelement constructor",
    "project`.",
    "hide reactelement constructor",
    "fix typo in 0.12 rc blog post",
    "move class creation concerns to reactclass",
    "refactor composite component update flow",
    "add \\n after <textarea> to fix missing linebreaks",
    "added missing semicolon after statement.",
    "update travis-ci badge for 0.12-stable branch",
    "update docs to align with 0.12 better",
    "update licenses for docs and examples",
    "allow iterables in traverseallchildren",
    "support but warn on key={null}",
    "community round-up #23",
    "deprecate isvalidclass",
    "fix jsdoc tag in reactelement.js",
    "always return boolean from isnullcomponentid",
    "remove most of @jsx",
    "fix warning message for using react.dom.* as type",
    "avoid reading the scroll position twice",
    "update 09.1-animation.md",
    "0.12 rc1 release materials",
    "use hasownproperty checks in object.assign",
    "v0.12.0-rc1",
    "minor change to post",
    "highlighted changed lines in examples",
    "move react elements post to right place, fix typo",
    "0.11.2 release materials",
    "fix typo in blog post",
    "use of react.createfactory in example basic/",
    "hide object.assign polyfill behind a module",
    "browserify update",
    "update dependencies, removed unused ones",
    "update proptypes for reactelement & reactnode",
    "ship merge to npm",
    "use react.createelement in example in basic/",
    "use composition instead of mutable state",
    "react elements blog post",
    "update @emails in react-displayname-test",
    "var name",
    "bsd + patents",
    "don't look for docblock",
    "sync upstream modules",
    "react.rendercomponent -> react.render",
    "sanitize the string tag passed to dom components",
    "look for devtools global hook",
    "add form \"acceptcharset\" to htmldompropertyconfig",
    "codemod deprecated api usage away",
    "update reactserverrendering for the modern world",
    "drop the @jsx docblock from unit tests",
    "change note comment about namespaced components",
    "renamed reactdescriptor-test",
    "renamed descriptor -> element",
    "start warning when react.dom.x is passed into jsx",
    "don't use react.dom",
    "rename lower case variables in jsx to upper case",
    "update react jsx transforms",
    "use strings as the type for dom elements",
    "rename reactupdates.setimmediate to 'asap'",
    "use subitem in new nav generation",
    "add manifest to htmldompropertyconfig",
    "spelling fix",
    "point to flux site for flux docs",
    "add space after ellipses",
    "update getting-started.md",
    "remove superfluous classid from domattributenames",
    "update getting-started.md",
    "testing flux applications",
    "update flux-todo-list.md",
    "prefer window.getselection for ie",
    "fix typos",
    "reword component api intro",
    "move examples from the website to the wiki.",
    "fix inconsistency in mockcomponent argument name",
    "fix typo in documentation in flux todo list",
    "improved readability by removing semicolon",
    "add tip for the important jsx convention",
    "fix a comment typo",
    "clarify wording on sub-tree reconciliation",
    "add striptypes option to npm docs",
    "update 2014-09-12-community-round-up-22.md",
    "move onscroll warning test",
    "community roundup #22",
    "less -> fewer",
    "updated small change with zuggestions from @zpao",
    "ignore .module-cache from jest",
    "move ie8 onscroll check",
    "added extra explanation for require statements",
    "update ref-03-component-specs.md",
    "update 09.5-clone-with-props.md",
    "remove calls to `range.detach`",
    "`console.warn` when html-jsx-lib.js is loaded",
    "move htmltojsx.js to react-magic project.",
    "update bootstrap example to 3.2.0",
    "correct highlighted block",
    "update video.md with forward js 2014 talk",
    "add support for a --strip-types flag to bin/jsx",
    "update like button example verbiage",
    "fix check for commit ranges in racing prs.",
    "jsx spec blog post",
    "added the missing **",
    "ie8 does not have a setter for property \"enctype\"",
    "comment typo",
    "fix broken link in animation docs",
    "fix domproperty bitmask checking",
    "added production example",
    "add support for <dialog> tag's open attribute.",
    "svg logo",
    "add newline before jsx spread when appropriate",
    "include vendor/ when running jest tests",
    "enable es7 spread transform when using --harmony",
    "renamed input's state to `message`",
    "add version to legacy factory monitoring",
    "bumping version to help filtering.",
    "fix console warning in legacyimmutableobject",
    "improve debugging for methods using reactperf",
    "combine displayname using underscore",
    "bumping version to help filtering.",
    "use warning module",
    "start warning for jsx on plain functions",
    "make retina react logo work",
    "fix typo",
    "don't transfer props to mocked empty component",
    "fix nits",
    "remove redundant paragraph",
    "removed monitorcodeuse call",
    "update flux todomvc tutorial",
    "adding `e.preventdefault` to `handlesubmit`,",
    "use attribute for media, srcset and sizes",
    "use `accumulateinto` to save even more allocation",
    "add example to if else in jsx.",
    "indentation for eventhandlername",
    "make `npm run-script jest` available",
    "including missing validation check",
    "update object.assign polyfill",
    "add 2048-react to open-source demos",
    "sync out latest jsx transforms",
    "check if a function has a prototype first",
    "start warning when calling a legacy factory",
    "look on __reactboundcontext for displayname",
    "update 09.1-animation.md",
    "more info in monitorcodeuse call",
    "iterate over expectedfeatures correctly",
    "update vendored modules",
    "update 09.1-animation.md",
    "upgrade commoner",
    "remove doubled whitespace chars in jsdoc",
    "fix todostore syntax",
    "test for both true and false",
    "fixed style and comment nits",
    "don't force sourcemaps on for jsxtransformer apis",
    "re-add  with warning and monitorcodeuse",
    "update recast to 0.6, update constants.js",
    "deprecate 'return false' in event handlers",
    "jsxtransformer respects async attribute",
    "iscomponentoftype -> isdescriptoroftype",
    "move \"| react\" to end of og title",
    "move \"| react\" to end of page title",
    "move batchedupdated to react.addons",
    "abbreviated error message",
    "add classid property for <object/> tag",
    "update readme to use bundle exec *",
    "autogenerate acknowledgements",
    "set default layout for docs",
    "post for posts",
    "update bourbon files",
    "reorder _config for sanity",
    "minimal updates for jekyll 2.0",
    "add support for <dialog> tag.",
    "improve danger error message to not blame react",
    "fix typo",
    "copy edit",
    "<noscript /> -> null in todomvc-flux footer",
    "remove todomvc flux example",
    "clarify section introducing callbacks",
    "add createelement alias for createdescriptor",
    "clarify section introducing `props`",
    "fire onbeforeupdate for space on android",
    "remove quotes around the `value` attribute",
    "update ref-01-top-level-api.md",
    "close <section> tag in sample markup",
    "add parens to defeat asi in example",
    "english + casing + 02 -> 03",
    "slightly more considerate devtools warning",
    "wording tweaks to reconciliation docs",
    "update ref-08-reconciliation.md",
    "typo \"refere\" -> \"reference\"",
    "typo",
    "community roundup #21",
    "added note about setstate side-effects",
    "fix spurious )",
    "fix typo",
    "update contributing.md",
    "update background color for image",
    "flux blog post about dispatcher",
    "include image",
    "update 09.2-form-input-binding-sugar.md",
    "cssfloat is only accessible as stylefloat on ie8",
    "updating \"tutorial\" label as per suggestion",
    "rename \"ice lab studio\" to \"icelab\"",
    "fix small language nits",
    "update 2014-07-28-community-roundup-20.md",
    "wording tweaks to community roundup",
    "partially revert react.createdescriptor",
    "community round-up #20",
    "fix typo for 'fundations'",
    "clarify animating one or zero items in docs",
    "delete immutableobject-test.js",
    "reacttransitionchildmapping comment typo",
    "increase base font-weight",
    "use .bind when autobinding",
    "getmodifierstate should always return a boolean",
    "move react-source gem out of project root",
    "use setimmediate to defer value restoration",
    "add reactupdates.setimmediate for async callbacks",
    "simpler way to prevent flushing updates on server",
    "include object.assign polyfill",
    "remove _addpromise from dispatcher code example",
    "follow docs convention for notes",
    "jsxtransformer, stricter parsing of script type",
    "fix small issue in reactcontext comment",
    "add recent addons to addons.html; tweak wording",
    "reword sentence in reconciliation docs",
    "note how to access perf in docs",
    "fix browser-tranforms",
    "use object.assign in merge/mergeinto",
    "deprecate transferpropsto",
    "when proxying statics functions, copy properties",
    "don't initialize reconcile transaction on server",
    "drop transferpropsto usage in react core",
    "getmodifierstate is case sensitive",
    "update todo mvc example",
    "fix typo",
    "fix appearance of video thumbnail",
    "add react.children.count docs",
    "update authors/acknowledgements",
    "upgrade commoner dependency",
    "update 2014-07-17-react-v0.11.md",
    "performance boost in some cases",
    "release materials for 0.11",
    "add \"edit on github\" link on docs pages",
    "reorder reference pages",
    "add picture to xjs.knowntags",
    "add picture element and related attributes",
    "fix comma splice",
    "perf tools",
    "update videos.md",
    "when proxying statics functions, copy properties",
    "add note about higher/lower-level transition apis",
    "update videos.md",
    "update addons.update",
    "up-to-date react.children",
    "fix some translation bug",
    "0.11-rc blog post",
    "0.11.0-rc1",
    "make code in headers not giant",
    "consolas > courier new for monospace docs font",
    "fix typo-ed \"of\"",
    "document purerendermixin addon",
    "revert \"add helpful message about pooled classes\"",
    "simplify shouldcomponentupdate example",
    "rewrap tags/attributes lists",
    "better readme for react-tools",
    "update authors and acknowledgements again",
    "tweak wording a bit on `rendercomponent` note",
    "fix up getdefaultprops docs",
    "update authors",
    "update sourcemap to return .tojson output",
    "don't copy todomvc-flux into starter kit",
    "verb agreement grammar fix",
    "fix react-dislayname-test",
    "update acknowledgements page from authors",
    "add string.prototype.trim to polyfill check",
    "add possessive to fix grammar",
    "fetch data in componentdidmount instead",
    "added note about `rendercomponent` requirement",
    "update supported elements and properties",
    "update polyfills list in docs",
    "another way to fix the footer that is not shown",
    "fix sourcemaps in jsxtransformer for firefox",
    "add displayname to reacttransitiongroup + friends",
    "update authors for 0.11",
    "give useful error when using two copies of react",
    "update npm dependencies",
    "fix spelling/grammar in test comment",
    "fixing grunt jsx task in windows",
    "add the built source to npm package. see #1699",
    "abstracted out common code into `innertransform`",
    "update react-tools to support transform as object",
    "custom readme for react-tools",
    "clarify when getdefaultprops is called",
    "stop running so many things in travis",
    "add count method to reactchildren",
    "remove jest usage in reactdescriptortest",
    "fix link in community roundup #18",
    "support more properties for image maps",
    "cache node_modules on travis",
    "fix tutorial line highlights, revert ajax in cb",
    "cleanup reactchildren",
    "put tutorial up-to-date with the code",
    "add --harmony option to live jsx compiler page",
    "simplify composite lifecycle state",
    "wrapped line to 80 chars in reactproptypes sample",
    "fix code style in todomvc flux example",
    "fix to sample code for href in reactproptypes",
    "add simple react.createdescriptor hook",
    "update round-up #19 to include more credit",
    "spread attribute -> object.assign",
    "fix typo in blog post",
    "{blog] community round-up #19",
    "remove unused properties from reactmount",
    "2 docs fixes.",
    "simple custom 404 page.",
    "warn when using hyphenated style property names",
    "adds empty onchange handler to textarea test",
    "correctly trim strings for css properties",
    "render `null` returns noscript now",
    "remove timing metrics from transaction",
    "add helpful message about pooled classes",
    "fix example for animation",
    "expose react.addons.perf",
    "add 'patterncontentunits' to svg attributes.",
    "add support for patternunits attribute.",
    "add support for svg ellipse elements.",
    "sync out transform tests",
    "don't export  react in main.js",
    "make sure we throw when we get xml namespaces",
    "fugbix typo.",
    "missing semicolon in todostore.js",
    "clarify refs and setstate callback documentation",
    "added example of objectof usage in documentation.",
    "update many npm dependencies",
    "sync out camelize module",
    "fix tagtree.tv link",
    "remove unnecessary topleveltypes indirection",
    "remove bad perf metric",
    "fix 'this' in static methods",
    "create reacteventlistener",
    "revert #1536",
    "fix wording.",
    "point to rendercomponent over setprops",
    "typo",
    "$apply command for update",
    "fix proptypes test in ie10",
    "fix select switching to multiple in ie",
    "fix enterleaveeventplugin-test in ie10",
    "fix executionenvironment.canusedom for ie8.",
    "fix submit-button value test in ie10",
    "fix onload and onerror on images",
    "fix geteventmodifierstate, no allocations",
    "one-year anniversary post",
    "closurescript -> clojurescript",
    "update 2014-03-21-react-v0.10.md",
    "reference jest in testutils documentation.",
    "fix grammar",
    "fix tutorial to have exact translation of example",
    "sync upstream modules",
    "capitalize readme for consistency",
    "don't load todomvc-common/base.js",
    "attach empty onclick listener to each node",
    "ignore built todomvc-flux bundles",
    "fix typo in flux todomvc tutorial",
    "auto-bind before getdefaultprops",
    "run all tests, fix indentation",
    "configure todomvc-flux npm test to use jest",
    "handle classname properly on svg nodes",
    "remove spurios module ref",
    "fix doc typo and remove underscore from local var",
    "error in extractevents",
    "fix nested ul spacing.",
    "set executed after run",
    "add configuration for running tests with jest",
    "improve readability of multi-line nav items.",
    "better talk in russian",
    "add shims to examples",
    "make promise selection logic clearer",
    "switch style test to pass in jsdom",
    "add componentwillreceiveprops setstate test",
    "don't fail travis on sauce failures",
    "allow unmounting title tag",
    "asynchronously load scripts with jsx transformer.",
    "load scripts in parallel",
    "rebased on master",
    "mention proptypes in top-level api",
    "add sourcemap option to react-tools transform",
    "fixed spacing of invalid checksum warning",
    "added event parameter",
    "tweak getting started wording",
    "add harmony transform support in browser",
    "warn when shouldcomponentupdate returns undefined",
    "update simulate docs to reflect reality",
    "remove references to autoflow",
    "add hasownproperty checks where appropriate",
    "update jasmine link",
    "guard against contenteditable with children props",
    "batch subupdates caused by any state update",
    "remove filterattributes.js",
    "change harmony option to \"harmony=true\"",
    "depend on uglify-js, not uglifyjs",
    "update flux readme to point at website post/docs",
    "add missing emitchange to flux docs",
    "update flux-todo-list.md",
    "start flux video at 10m21s",
    "update flux tutorial link",
    "stylistic changes.",
    "move tagtree image to docs/",
    "fix minor typo",
    "codemod mockreturnvalue externally",
    "flux blog post and tutorial",
    "codemod mockdefaultreturnvalue",
    "adds svg pattern and mask components",
    "updated documentation.",
    "use camelcase and declare must_use_attribute.",
    "small style fixup",
    "title case on videos page",
    "fix moving from falsey child",
    "fixed incorrect usage of github api in example",
    "added support for itemscope, itemtype, itemprop.",
    "adds svg mask and pattern dom components",
    "embed video from f8",
    "move envify from peerdependencies to dependencies",
    "update dispatcher.js",
    "update dispatcher.js",
    "update dispatcher.js",
    "update dispatcher.js",
    "fix ascii-art arrow alignment",
    "typo",
    "add some backticks to flux docs",
    "additional flux documentation",
    "link to tagtree 'thinking in react' video",
    "don't double-escape style names",
    "add basic commonjs example with browserify",
    "fix some linty things",
    "don't escape slash; it's unnecessary",
    "actually fix transitioning to null",
    "fix changing to null child",
    "move tooling info to complementary tools wiki",
    "warn instead of throw for nested render calls",
    "fix perf suite broken by descriptor change",
    "fix transition end detection for android",
    "add tspan to jsx transform",
    "current set of must-have svg attributes / tag",
    "fix ie11 collapsed ranges in reactdomselection",
    "update build status svg badge",
    "update videos.md",
    "remove whitespace_transformer package",
    "unbreak server-side/web worker",
    "fix log spew from reactdominput test",
    "fix warnings in reactcomponentlifecycle test",
    "remove function wrappers in domselection",
    "split defaultdompropertyconfig",
    "upgrade jstransform to 4.0",
    "fix log spew from reactdomtextarea test",
    "fixed a bug in expectrenderedchildat",
    "fix warnings in clonewithprops test",
    "add typed reactlink to reactprops",
    "add react.batchedupdates to public api",
    "add clearer invariant in processupdates",
    "remove grunt-complexity",
    "rename \"booleanish\" to \"overloaded boolean\"",
    "match `settimeout` delay with documentation",
    "fix preposition capitalization",
    "fix proptype for travis",
    "guard top-level methods, not in every render call",
    "don't try to detach a detached node",
    "update refs example code to use onchange",
    "add docs for fasttest",
    "drastically improve test performance",
    "improve error for nested render calls",
    "make code spacing more consistent",
    "meta http-equiv attribute name",
    "consolidate innerhtml setting logic",
    "restore csstransitiongroup tests",
    "new proptype behavior",
    "add displayname to component spec functions",
    "update tutorial.md",
    "test for correct handling of \"download\" attribute",
    "support minimizable, non-boolean attributes",
    "test more falsey values",
    "combine valid value checks",
    "rename can_be_minimized to has_booleanish_value",
    "docs remove comment section",
    "add test for isvaliddescriptor",
    "add tests for oneoftype with shape",
    "rendering null/false and getdomnode.",
    "revamp and fix proptypes",
    "update invalid render error message",
    "separate performancenow into own project",
    "add start property that is used by the <ol> tag",
    "share reconcile transaction in batched updates",
    "update 05-reusable-components.md",
    "fix typo in 09.4-test-utils.md",
    "document multiple ways to insert comments in jsx",
    "let early returns do their thing",
    "warn better for key issues",
    "don't fail if target.ownerdocument is null",
    "normalize view and detail properties",
    "link to events from forms",
    "reactjs.net blog post",
    "ignore children with clashing keys",
    "don't forcibly wrap lines in git commit messages",
    "serve unminified react on docs site. fixes #1359",
    "fix appearance of code blocks in lists",
    "initial add",
    "add clearer invariants to composite spec mixing",
    "make mountready more reusable, reduce allocations",
    "remove erroneous line about static methods.",
    "add acknowledgement to christopher aue",
    "add callback to setprops docs",
    "simplify comment.",
    "remove tojson",
    "update mailmap post 0.10",
    "consistent use of self-closing tags in layout",
    "allow jasmine globals in *-test.js",
    "fix jshint warnings in grunt/",
    "facebook/react",
    "clone objects in immutable tests",
    "don't break on top-level non-numeric object keys",
    "add scrolling attribute for <iframe>",
    "add optional harmony support to browser transform",
    "fix minor typo in `update` `$push` directive",
    "formatting",
    "fix spelling of 'existence'",
    "the road to 1.0",
    "remove extraneous assert",
    "support `ms` vendor prefix when generating markup",
    "update contributing.md",
    "support opera <= 12",
    "clean up assertions on descriptors",
    "first phase to true descriptors",
    "add `reactcomponentwithpurerendermixin` to addons",
    "todomvc flux example",
    "repair spacebar textinput",
    "remove last uses of {' '} in docs and tests",
    "version bump for 0.11 development",
    "rename objmap to mapobject",
    "remove objmapkeyval",
    "textinputeventplugin, synthetictextinputevent",
    "only stop if the transition on this element ended",
    "0.10 release materials",
    "renamed update directives to commands",
    "update authors for 0.10",
    "add codewinds episode 4 w/pete hunt to videos",
    "fix a minor typo in the `update` docs",
    "0.10rc blog post",
    "upgrade browserify",
    "update version for 0.10rc",
    "re-enable moved root warning",
    "separate immutable project",
    "silence tests unsupported in phantomjs.",
    "logging use of objects as maps for children",
    "replace function expression with for loop",
    "sync latest immutable changes",
    "fix ref behavior for remounting",
    "true} to react-tools",
    "reassign variable of rendered component",
    "fix some invalid uses of instances",
    "change some translation words",
    "community round-up #18",
    "add translation for getting-started.md",
    "fix `(`",
    "make translation better",
    "update jasmine-support.js",
    "add chinese translation for 01-why-react.md",
    "add svg text-anchor attribute.",
    "normalize whitespace for transformed jsx code",
    "rayqian/react",
    "clone on mount",
    "remove shirtstarter as an example application.",
    "fix some translation error",
    "fix some translation error",
    "unbreak jsx comment comma fix",
    "remove unused variable",
    "reactdomcomponent optimization",
    "update 08-tooling-integration.md",
    "switched from browserify to pure-cjs bundler.",
    "bring back `grunt test --debug`",
    "add more words to downloads page",
    "fix removing dom property with mapped name",
    "avoid jsx in reactcsstransitiongroup code",
    "remove obsolete __version__ references",
    "allow falsy values in statics",
    "add immutable",
    "legacyimmutableobject module",
    "add srcset attribute",
    "add more owner context to monitoring",
    "sync more vendored modules",
    "add object.freeze to polyfill list",
    "unbreak refs",
    "remove custom attrs properly when setting to null",
    "reactrafbatchingstrategy",
    "add monitor module for logging instrumentation",
    "fix reactproptypestest",
    "temporarily disable warning",
    "fix ie8 disabled input throwing on focus",
    "fix",
    "add thinking in react to the official docs",
    "add missing backtick in complementary-tools.md",
    "fix docstring typo for pure render mixin",
    "updated react version 0.9.0",
    "add shirtstarter to examples of production apps.",
    "add polygon tag to transform",
    "omitclose for all void elements",
    "tweak proptypes examples for clarity in oneoftype",
    "update complementary-tools.md",
    "make <hasownproperty/> transform correctly",
    "community round-up # 17",
    "fix typo in community round-up #17",
    "add acknowledgements page",
    "update readme.md",
    "add update to react.addons",
    "update immutability helper",
    "consolidate the two examples sections",
    "remove todomvcs from examples/",
    "fix version in lifecycle argument note",
    "add update docs",
    ".datatransfer not .dragtransfer",
    "update react-router-component link",
    "update link for react-async",
    "add html5shiv to polyfill docs",
    "update docblock",
    "break more browser deps in core",
    "updated authors",
    "update changelog",
    "add support for `npm test`",
    "tweak tutorial wording to be more accurate",
    "update authors",
    "version bump to 0.10.0-alpha",
    "fix transaction test comments",
    "add context deprecation to changelog, reformat",
    "tweak object property warning.",
    "add descriptions to package.jsons",
    "update simulate docs and reorg a little bit",
    "react v0.9 blog post",
    "fix docs",
    "simulate synthetic events using reacttestutils",
    "clone docs",
    "rebuild simulators after injecting plugins",
    "complementary-tools repo owner changed",
    "add reacttestutils to addons",
    "docs fixes",
    "remove child factories",
    "don't break if no attribute value",
    "strip calls to warning in __dev__",
    "update envify to 1.2.0",
    "pool ancestors list so event system is reentrant",
    "add media element attributes",
    "update copyrights for 2014.",
    "add download and hreflang attributes",
    "update complementary-tools.md",
    "update complementary-tools.md",
    "prevent error thrown when removing event target",
    "add wingspan-forms to complimentary tools docs",
    "0.9.0-rc1",
    "rename dir to npm-jsx_whitespace_transformer",
    "make transitions example use csstransitiongroup",
    "fix docs for react.children.map, .foreach, .only.",
    "blog post for 0.9 release candidate",
    "expose clonewithprops on addons",
    "add csstransitiongroup to addons",
    "update complementary-tools.md",
    "make reactwebworker-test.js less flaky.",
    "fix typo in latest round-up",
    "run es3ify over unminified builds",
    "update copyright header in browserify config",
    "update authors for 0.9",
    "add community round-up #16",
    "fix comma splice",
    "update vendored modules, delete unused",
    "sync out transforms from fb internal",
    "include mixin keys whose values are falsy",
    "fix tests",
    "fix ie8 bug during unitless css props creation",
    "add simple docs on statics to reference section",
    "add object.keys to list of shims",
    "add missing commas in proptypes docs",
    "add docs for new prop types",
    "document newly added unitless css props in tips",
    "add properties that were in 0.8 too",
    "update supported attributes list",
    "add formnovalidate and novalidate too",
    "capitalize all nav titles for consistency",
    "avoid innertext for better newline behavior",
    "use graceful-fs to avoid emfile errors",
    "support transforming multiple files at once",
    "run over *.jsx as well",
    "updates to perf",
    "move jsx_whitespace_transform",
    "add onerror to reactdomimg to complement onload",
    "rename run to run.js to avoid not-found errors",
    "remove old whitespace doc warning",
    "don't warn about onchange for button inputs",
    "tweak whitespace readme to show other change",
    "measure root component render in reactdefaultperf",
    "assert that event listeners are real functions",
    "add seamless and sandbox properties for iframe",
    "rewrite reacttransitiongroup",
    "better inclusive measurements",
    "measure flush time",
    "change how reactdefaultperf is injected",
    "measure exclusive render time",
    "wasted time metrics",
    "new reactdefaultperf",
    "update videos.md",
    "log dom time",
    "disable guarding in reacterrorutils",
    "refactor reactmultichild to not throw errors too",
    "hide compiled js tab in jsx-compiler.html",
    "update complementary-tools.md",
    "reactinjection",
    "remove references to autoflow, error wrapper",
    "delete useless shit in reactmount",
    "add onreset event for forms",
    "update complementary-tools.md",
    "update complementary-tools.md",
    "add html5 srcdoc property for iframes",
    "small comment grammar fix in reactcomponent.js",
    "remove comma in comment",
    "fix comment",
    "remove react from react-tools package",
    "actually upload react.tgz to builds server",
    "update broken link in \"why react\" post",
    "cleanup jsx tasks",
    "fixed reference to unreachable url.",
    "build npm-react module, upload to builds page",
    "fixed missing lighted line",
    "domidoperations -> backendidoperations",
    "reflect rendercomponenttostring changes",
    "community round-up #15; center embedded tweets",
    "refactor updateoptions to take value",
    "center twitter embeds differently. again.",
    "don't use <center> for twitter embeds",
    "make uncontrolled select not set value on update",
    "skip assignment, just call updateoptions directly",
    "re-add strict warning to danger test",
    "fix version check test",
    "put reactwithaddons in browser/",
    "the great reorg of february 2014",
    "add canuseeventlisteners to executionenvironment.",
    "fix clonewithprops to allow overriding props",
    "react.children helpers",
    "remove unnecessary catch-clauses for try-finally",
    "set isintransaction to false even if close throws",
    "update docs for react.children",
    "more references",
    "update videos.md",
    "revert \"removed redundant uglification\"",
    "use strict in tests",
    "execution should be sync",
    "add missing 'use strict' to gettestdocument",
    "fix use strict warnings",
    "adding a link to react-router",
    "removed redundant uglification",
    "update example-apps.md",
    "add example apps page",
    "add a complementary tools page",
    "fix boolean attributes as per html5 spec",
    "switched from browserify to pure-cjs bundler.",
    "fix comma splice",
    "add link to meteor talk",
    "s/mock dom/virtual dom/",
    "update videos.md",
    "disable codemirror smart indentation",
    "add documentation about react.rendercomponent",
    "support `children` and `ref` for `clonewithprops`",
    "fix warning for numeric properties",
    "update 09.2-form-input-binding-sugar.md",
    "fix grammar mistake",
    "remove references to react-page",
    "fix docs typo",
    "add warning about object property order.",
    "warn for numeric object properties",
    "fix animation example code",
    "jsx whitespace codemod utility",
    "fix memory leak with rendercomponenttostring",
    "transfer the key prop in clonewithprops",
    "replace \"comments.json\" with this.props.url",
    "fix references to the old reactid syntax",
    "codemod for whitespace change",
    "don't reconcile children unneccessarily",
    "refactor transaction to not rethrow errors",
    "fix incorrect link",
    "fix typo",
    "fix comparison in _handlelinkedcheckchange",
    "fix typo in reactdominput-test",
    "update broken link in 'why react' article",
    "change linkedvaluemixin to a util class",
    "implement stricter whitespace rules",
    "normalize internal links in 'why react' article",
    "update proptypes documentation.",
    "perf test for the proptypes change.",
    "shortened generated \"data-reactid\"",
    "update other dependencies",
    "update browserify",
    "upgrade  grunt",
    "properly clear live editor on jsx compile failure",
    "simplify live editor execution logic",
    "normalize line endings",
    "docs add jsx->js tab to live editors",
    "clarify componentwillmount behavior",
    "fix changeeventplugin dependencies",
    "fix double-binding to submit event",
    "fix copying files to build/npm-react recursively",
    "document ismounted",
    "remove unused grunt jsx config options",
    "update homepage for new jsx/js editor",
    "docs fix back link in examples",
    "kill last remaining use of `$` in react",
    "introduce proptypes.shape",
    "fix \"uncontrolled components\" documentation",
    "fix lines longer than 80 chars",
    "add timezone to _config",
    "wrap _performcomponentupdate call in try/finally",
    "remove commented out ghbtns",
    "make findcomponentroot faster with more nodecache",
    "fix typo in docs.",
    "\"checkbox\" not \"checked\"",
    "add datatype to all $.ajax calls for consistency",
    "always call callback in component context",
    "improve \"can only mount when umounted\" message",
    "fix #845, trivial year change",
    "edit thinking-in-react",
    "fix proptypes.any.weak test",
    "add missing semicolon i missed in #865",
    "jquery mobile react example",
    "link to docs in unique key prop warning",
    "quieter devtools upsell",
    "better linkedvaluemixin warning",
    "css column-count property is unitless",
    "upsell dev tools",
    "add react.proptypes.any",
    "remove trailing whitespace",
    "fix enterleaveeventplugin test in jsdom",
    "fix undefined `ownerdocument` fatal in ie8",
    "rewrite mergekeysets to be o instead of o",
    "unitless css flex properties",
    "refactor unit test",
    "more unitless css properties",
    "css widows property is unitless",
    "remove callbackregistry",
    "fix cases where owner warning is shown",
    "add --harmony option to jsx.",
    "don't store mount image on component instance",
    "document return value of unmountcomponentatnode",
    "fix potential memory leak when unmounting",
    "don't tack on eventpluginhub globally",
    "fix url in displayname description",
    "revert textcontent",
    "remove two more react.min.js references",
    "add display name in more cases",
    "don't set max_line_length for *.md",
    "don't use the min build in getting started guide",
    "warn for common forms misuse",
    "check for selection on keyup instead of deferring",
    "make reacttransitiongroup work with a null child",
    "don't mutate passed-in props, take 2",
    "fix react tests",
    "set event type on enter/leave events",
    "fix bug in clonewithprops",
    "add support for onload event to <img />",
    "separate module for key normalization",
    "cleanup reacteventemitter variable naming",
    "silence console.error in reactdominput-test",
    "sync vendored modules from upstream",
    "add back license header to invariant",
    "benchmark runner",
    "add charcode/keycode/which to key event docs",
    "aphabetized and wrapped tags/attributes docs",
    "stop, defs, lineargradient, radialgradient",
    "updated docs with new svg elements",
    "throw error when setstate's arguments are bad",
    "document displayname",
    "add gulp-react to helpful oss projects",
    "set currenttarget on synthetic events",
    "listen to events on demand",
    "prefer textcontent to innertext",
    "remove mentions of browserify in examples",
    "fix typo",
    "mention react-art where we talk about svg",
    "further cleanup of iseventsupported",
    "support clipboarddata in ie",
    "add display names to controlled components",
    "support reacttestutils.mockcomponent.",
    "rework reactrootindex generation",
    "set target properties explicitly for enter/leave",
    "add svg polygon",
    "clonewithprops",
    "react chrome developer tools",
    "upgrade commoner build tool to v0.8.12.",
    "docs tips fix small typo and code",
    "remove sometimes-confusing console error",
    "don't get selection if no active element",
    "set line length to 80",
    "add source map support to browser transformer",
    "add info about dev vs. prod builds",
    "docs remove link to wiki page",
    "add onmouseover and onmouseout events",
    "upgrade codemirror and enable line wrapping",
    "community round-up #13",
    "docs tips small refactorings",
    "don't return null children from flattenchildren",
    "update parent/child communication tip",
    "make react website work in ie8",
    "docs tips expose component function",
    "live_editor.js using deprecated function",
    "ie8 style fixes",
    "move initial $.ajax out of getinitialstate",
    "switch to using uglifyify",
    "add a warning about the @jsx declaration",
    "minify both before and after browserify",
    "console.log -> console.error",
    "docs add warning to add jsx pragma",
    "escape component keys used in reactid",
    "added max line length = 80 for jshint",
    "polyfill/normalize autofocus across all browsers",
    "allow changing transitionleave from false to true",
    "fix params",
    "adjust params",
    "fix a typo in the working-with-the-browser docs",
    "use innerhtml not innertext in test",
    "extract out wrapuserprovidedkey for clarity",
    "make shouldupdatereactcomponent key logic clearer",
    "respect 'key' prop for object identity",
    "update readme.md",
    "language update as suggested by @petehunt",
    "add a talks section to the docs",
    "docs remove video at the bottom",
    "updating text as suggested by @petehunt",
    "adding note about onscroll on ie8",
    "removed unnecessary cleanup in iseventsupported",
    "typo",
    "community round-up #12",
    "fix html-jsx compiler",
    "document the diff algorithm",
    "upgrade envify dependency to v1.0.1.",
    "fix \"dynamic children\" example",
    "added property to non-standard attributes",
    "community round-up #14",
    "a new prop type for react components",
    "add `createmarkupforid`",
    "consolidate id attribute markup generation",
    "change my canonical e-mail address in .mailmap",
    "fix a perf issue of <select multiple />",
    "do not automatically select other options",
    "v0.8 blog post",
    "docs make all link start with /react/docs",
    "0.8 starter kit",
    "update materials for 0.8.0",
    "fix npm-react build task, add to release",
    "add starter-kit zip files to repo",
    "createhierarchyrenderer",
    "docs add input attrs for dom differences",
    "add newest starter-kit downloads to docs",
    "one liner",
    "docs section for non-dom attributes",
    "update readme for 0.5.2",
    "changes as requested",
    "update authors for 0.8",
    "changelog, blog post for 0.5.2, 0.4.2",
    "adding note about initializing state w/ props",
    "upgrade populist dependency to v0.1.6.",
    "upgrade recast dev dependency to v0.5.6.",
    "update npm-react readme to point to autoflow",
    "fix typo in comments",
    "test case for reacttextcomponent rootid escaping",
    "update npm-react error to point to autoflow",
    "fix typo",
    "fixes reacttextcomponent rootid unescapedness",
    "url -> url",
    "check src file for version-check task",
    "move version-check task into own file",
    "fix selecteventplugin",
    "add loop property",
    "use rest parameters whenever it makes sense.",
    "improving never seen error message",
    "fixing capitalization",
    "match -> test",
    "rename this tip to be less confusing",
    "update highlighted lines in tutorial",
    "clean trailing space and lint",
    "make travis quieter on irc",
    "fix lint error",
    "removed complexity report until it's fixed",
    "enable code coverage and code complexity reports",
    "fix lint",
    "move sauce labs config out of the gruntfile",
    "sets each ie separately for now",
    "pick all the nits!!!1!",
    "combine ios and ie matrix tests",
    "tests fail in safai now. unblocking for now.",
    "full` task tests in many browsers",
    "ios is failing again. will debug separately",
    "enable ie browser testing in travis",
    "secure tokens aren't available for pull requests",
    "run tests in old ios, but allow failures",
    "fix scrollleft/scrolltop warning in latest chrome",
    "simplify travis script",
    "fix botched rebase",
    "update react package readme",
    "update readme",
    "version bump, make tests work",
    "version bump to 0.8 to get on top of react.js",
    "rename to  with associated warnings",
    "rename to  with associated warnings",
    "(",
    "update npm-react-core package.json",
    "muffinification",
    "__dev__",
    "response to code review",
    "react-core npm module",
    "revert \"don't mutate passed-in props\"",
    "followup fix for lint",
    "filter out tests from complexity report",
    "new `grunt complexity` reporting task",
    "fixes test runner for ie8",
    "use depth  to check for root components",
    "corrections",
    "add more useful es6 transforms to jsx-internal.",
    "establish a convention for forcing jsx rebuilds.",
    "remove deprecation warning for react statics",
    "separate replacestate invariant violations",
    "add ontransitionenter and ontransitionleave",
    "s/jsxconfig/commonerconfig/g",
    "address pull request feedback.",
    "introduce 'statics' for class specification",
    "remove unused updatepropertiesbyid",
    "notify travis build results in irc channel",
    "update package devdependencies",
    "fix blog pagination",
    "add video at the bottom of the front page",
    "fix download links to addons builds",
    "remove unused event plugin registrationnameskeys",
    "fix lint warnings",
    "docs tips parent-child communication",
    "add missing license header",
    "tweaks to readme",
    "fix frontpage example to retain selection",
    "docs remove rootnode for componentdidmount/update",
    "run lint automatically on travis",
    "jsx & jsdom support",
    "docs add download links for react-with-addons",
    "add `oneoftype` to support union types",
    "less verbose reactproptypelocations logging",
    "changed key from math.random to todo.cid",
    "be resilient to fn.name not existing in ie",
    "ie support",
    "remove warning comment about `createhtmldocument`",
    "use an iframe to create a testdocument\u2026",
    "in prod, just return the original",
    "update commoner to 0.8.8 for windows support",
    "'getelementsbyclassname' doesn't exist in ie8",
    "allow running one spec/suite in the web interface",
    "remove reference to old browser logger",
    "minor spelling correction in docs",
    "move __owner__ off of props",
    "docs `select` `value` to control chosen option",
    "don't call utils.traverse in transform",
    "have faith in var hoisting",
    "ensure reactperf always uses a string as a url",
    "mock modules properly in test runner",
    "add nextcontext to componentwillreceiveprops",
    "fix context in callbacks",
    "order object properties consistently",
    "autobind -> autobinding",
    "don't mutate passed-in props",
    "put nav data in \"_data\"",
    "make reacteventtoplevelcallback-test pass",
    "fix pagination",
    "community round-up #11",
    "update jekyll to 1.3",
    "docs classset semicolons missing",
    "docs highlight classname and htmlfor transforms",
    "speed up server middleware slightly",
    "picked all the lint",
    "lines too long; reformatted",
    "require coverify",
    "ignore logs and testing stuff",
    "fixes the case when coverage isn't turned on",
    "withcodecoveragelogging task",
    "consoleloggermiddleware handles coverage logs",
    "enable coverage logging from the worker",
    "batch logs until the end unless ran with --debug",
    "simplified the sort function",
    "make doc headers clickable again",
    "coverage task",
    "propagate events to parent components when nested",
    "fixes browserify task transforms support",
    "better error message for rendercomponenttostring",
    "contexts",
    "utils.* is now used everywhere",
    "rename receiveprops to receivecomponent",
    "remove modules cache with grunt clean",
    "\"use strict\" in shouldupdatereactcomponent",
    "remove obsolete ie8 compatibility code",
    "cleanup lint warnings from recent testing changes",
    "handle undefined input to mergekeyset",
    "don't animate undefined children",
    "formatting and syntax on false in jsx tip",
    "update wording on ajax tip",
    "fix broken link, spacing on events tip",
    "fix broken link on controlled input tip",
    "fix broken link on componentwillreceiveprops tip",
    "children props tip tweak",
    "s/zuck/rogers/",
    "fix broken link, formatting on px style tip",
    "tweaks to if-else tip",
    "tweak for self closing tag tip",
    "remove unnecessary task config",
    "small cleanup to style tips",
    "fixes #513",
    "wait a little longer for the page to load",
    "sauce labs browser configs for running manually",
    "don't log your password to the console",
    "cleanup",
    "log individual test results when in --debug mode",
    "user json encoding for browser logger",
    "no need to pass jasmine through jsx",
    "remove old browser logger",
    "name local saucelabs tests too",
    "better error handling for jasmine task",
    "sped up the webdriver tests",
    "postdatatourl using ajax instead of dom",
    "ignore tunnel logs",
    "suppress encoding warning in firefox",
    "new saucelabs webdriver task",
    "fixup sauce-tunnel",
    "desiredcapabilities webdriver config",
    "new sauce-tunnel grunt task",
    "better comments for vendor/constants.js.",
    "fix failing tests",
    "added clearfix to blog content holder",
    "small cleanup to tips intro",
    "rename `nodecontains` to `containsnode`",
    "remove transaction from componentwillupdate",
    "add support for `oncontextmenu` in react.",
    "fixes the name of the component on documentation",
    "jsxtransformer now supports ie8",
    "update add-ons docs based on feedbacks",
    "fix wheeldelta misspelled",
    "make state immutable in tutorial",
    "make submit button default value appear correctly",
    "move docs tooling from jsx in depth",
    "allow directory browsing",
    "don't try to loadnpmtasks `grunt-cli`",
    "add logging to webdriver config",
    "start a local webdriver server before using it",
    "replace phantom-harness runner with webdriver",
    "making phantomjs version less specific",
    "make proptypes define_many_merged",
    "keep track of incomplete",
    "move browser test libs to lib folder",
    "wait for all results to finish sending",
    "not necessary anymore",
    "cleanup loadnpmtasks",
    "rename sauce-harness to index",
    "ignore generated file",
    "cleanup webdriver jasmine task",
    "community round-up #10",
    "cleanup",
    "removed compiled build files",
    "cleanup",
    "grunt task launch phantomjs as a webdriver server",
    "log using grunt",
    "remove saucelabs for now",
    "remove sauce labs stuff for now",
    "new webdriver-jasmine task and config",
    "safer bind",
    "upgraded sauce harness",
    "separate grunt task for saucelabs browser testing",
    "inserted iframes can be targeted after a delay",
    "move html reporter and its requirements",
    "browser support for jasmine-support",
    "ie8 support in jasmine-support",
    "don't double-log test results",
    "simple test result logger",
    "test runner requires es5-shim",
    "test server middleware for receiving test results",
    "upgrade to the latest version of jasmine",
    "correct saucelabs tokens",
    "disable testling",
    "saucelabs browser testing via travis",
    "absolute urls for less flakiness",
    "fixed paths for phantomjs",
    "format test results as tap",
    "enable testling-ci browser testing",
    "testing-ci can't handle spaces in filenames?",
    "make it easier to repro tests in the wild",
    "skip worker test unless the browser supports them",
    "serve worker.js from its actual relative path",
    "browser test runner",
    "generate the browser test list at built time",
    "xml->html, because people are fickle.",
    "include the built files for testling",
    "use smaller blog images and host directly",
    "add docs lowercase mention for data- and aria-",
    "include ownership in the ship of theseus",
    "fix list formatting",
    "rename",
    "rename",
    "make props/state section less intense",
    "blogify",
    "removing 'iseventsupported'",
    "removing unused useselect variable.",
    "remove jquery version number from tutorial docs",
    "simplify ajax options",
    "fix title case for docs tips everywhere",
    "script async and defer properties",
    "update tutorial to use classname",
    "get rid of composition",
    "fix reactdomselection for ie 11",
    "oxford comma",
    "chenglou/react into rm-wrapup",
    "remove examples/wrapup",
    "clarify when `getinitialstate` is called.",
    "add docs on `classset` add-on",
    "split add-ons into subsections",
    "less aggro",
    "better `getunboundedscrollposition` for windows",
    "switch utility function calls -> namespaced calls",
    "remove examples/wrapup",
    "reorder defaultdompropertyconfig",
    "forward compatibility w/ webkit & blink",
    "update nav config with new entry names/permalinks",
    "title case for entry titles; fix two entry names",
    "update everything for v0.5.1",
    "blog post for 0.5.1",
    "entry on `false` behavior",
    "better regex for filename",
    "fix 2 more entries",
    "new line at end of nac_docs; update to entry 4",
    "added function that write to the output html file",
    "ex for entry 7",
    "removed q&a format",
    "better grammar",
    "removed js for live edit",
    "removed cookbook prefix from filenames",
    "update cookbook nav",
    "one single child in ternary",
    "add lib integration entry; tweak 1 sentence",
    "ajax ex",
    "modify some wording",
    "shrink working on props in state entry",
    "tip format for intro",
    "props in `getinitialstate` as anti-pattern",
    "change some wording, add tip for events entry",
    "added grunt task for generating live samples js",
    "add event listeners cookbook entry",
    "all typos",
    "fix all links to point to /react as root",
    "entry on controlled input with `value` null",
    "add line-height to unitless css props",
    "new entry for ternary expression in jsx",
    "add tip format for comparison",
    "add tip style to style entry",
    "entry on returning only one node from `render`",
    "small typo and code tag is now js highlight",
    "new entry on self-closing tag",
    "typo",
    "move heading anchors 50px up to avoid nav bar",
    "fix reacttransitionevents detectevents",
    "remove outline",
    "use default value for undefined props",
    "fixed %d in invariant call",
    "changes based on feedback",
    "delete mutation events",
    "fix typo and logic bug in handleremove",
    "don't reset mousedown in focus handlers",
    "new marketing copy",
    "add clickable anchors to docs headers",
    "make selecteventplugin not throw for range inputs",
    "0.5.0 release",
    "fix live editor examples on home page.",
    "test`",
    "update browserify",
    "update docs with supported tags and attributes",
    "use getactiveelement module",
    "enable linting for bitwise operators",
    "updated authors for 0.5",
    "fix lint",
    "new addons docs",
    "make sure dom components work in jsdom",
    "be consistent with object naming in tests",
    "ensure attribute values are strings",
    "standardize prop -> dom attribute process",
    "#jsx => #jsx",
    "fix a broken link to jsx syntax in readme.",
    "forcibly wrap svg nodes with <svg> on creation",
    "better click behavior for ff",
    "remove dom mutation listeners",
    "sort properties alphabetically",
    "rx/ry for rounded corners",
    "check for null selection",
    "make transferpropsto message easier to debug",
    "svg properties -> attributes",
    "fix namestoplugins for gcc advanced mode",
    "make the injection of reactperf work",
    "set _renderedcomponent before it's fully mounted",
    "add `displayname` for dom components",
    "make sure addons builds are sent to build server",
    "sync getactiveelement module from fb.",
    "fix selecteventplugin",
    "make sure react-with-addons ends up in bower",
    "react.__internals",
    "speed key validation",
    "tweak verbiage about required polyfills",
    "move flattenchildren into multichild",
    "add transitiongroup example",
    "react-with-addons build",
    "add warning when using componentshouldupdate",
    "expose bound function, context and arguments",
    "add select event plugin",
    "renamed reactondomready module to reactmountready",
    "use nodecontains where appropriate.",
    "reactnativecomponent -> reactdomcomponent",
    "removed \"ajaxify\" from defaultdompropertyconfig",
    "add app id for comments moderation",
    "speed owner access",
    "community round-up #9",
    "sort batched updates by owner depth",
    "fix iseventsupported in recent versions of jsdom.",
    "actually make exec work",
    "add doc link to dom differences from jsx gotchas",
    "fix lint errors including use of `global`",
    "update readme.md",
    "add line-height to unitless css props, test cases",
    "fix server rendering",
    "remove animation \"example\"",
    "test that react loads properly in a web worker",
    "fix 404s to non-existent api docs",
    "fix reconciling when switching to/from innerhtml",
    "redirect docs/reference.html",
    "community round-up #8",
    "two-way binding for react",
    "fix use of 'window' in compositioneventplugin",
    "move composition event to plugin with polyfill",
    "add reactdomselection module",
    "give headers ids for easy linking",
    "fix typo in doc",
    "fix use of \"it's\" in docs",
    "correcting the markdown anchor",
    "add composition events to react.",
    "don't update the docs version by default",
    "fix proptypes documentation",
    "fix dom node warning",
    "flesh out reference documentation, more api info",
    "stop reactinputselection breaking in ie8",
    "fix lint errors in tests",
    "delete version.js",
    "ensure selection range exists",
    "update wording",
    "fix full-page rendering",
    "fix reactrenderdocument tests",
    "respect original spacing and newlines better",
    "add react.version",
    "stop transforming class -> classname",
    "fix radio input test in chrome",
    "warn for 'class' and 'for' property names",
    "authors",
    "add cut, copy, paste",
    "remove all uses of executionenvironment.global",
    "initial build of reacttransitiongroup",
    "move else if  into two statements",
    "fix bugs with css3 animation event in webkit",
    "supporting mounting into iframes",
    "cache length of nodelist when updating radios",
    "fix backbone todo example bugs.",
    "log unknown props only when we have a match",
    "add reacttransitiongroup to the build",
    "fix controlled radio button behavior",
    "remove reactchildren methods from react object",
    "warn about unknown property values",
    "use dumpcache rather than manual reset",
    "test cases covering rendering onto document",
    "sync csscore from upstream",
    "update wording",
    "fix formatting and test for correct error",
    "fix a few gc leaks in events system",
    "add reacttransitiongroup",
    "remove react.autobind for real",
    "add stack overflow link for doc support page.",
    "redirect /docs to the right page",
    "show how to add showdown.js",
    "expose the instance cache",
    "change vendored module isdomnode -> isnode",
    "small tweaks as reported in comments",
    "make reactdefaultperf work server-side",
    "make react batching strategy injectable",
    "update package dependencies",
    "sync objmap from upstream",
    "sync with tastejs todomvc",
    "react.isvalidclass",
    "allow getinitialstate for mixins",
    "add pagination to blog",
    "support props for <meta> elements.",
    "fix capitalization of tooling integration page",
    "add missing \"use strict\" statement to pass lint",
    "adding better test - moving execution env module.",
    "add rowspan dom property",
    "community round-up #7",
    "add src/ to files",
    "rendering of entire document using react.",
    "add cdnjs to docs. fixes #244",
    "fix header",
    "use script to find remaining 404s. fix them.",
    "fix broken tutorial link and change wording",
    "added pyreact blog post.",
    "typo fix",
    "fix behavior of reactdomselect",
    "make getchecked, getvalue, handlechange private",
    "allow dom nodes in immutableobject",
    "sync modules to vendor/core",
    "move utils out of react that aren't being used",
    "fix test case for rendering text node number 0",
    "extract out core reactemitter functionality.",
    "make .bind work on autobound methods",
    "upgrade phantomjs to 1.9.1-4",
    "hold phantomjs version at 1.9.0-1.",
    "separate new tests into respective file",
    "defaultvalue of 0 now displayed",
    "tests for displaying `defaultvalue` of 0",
    "support `autocapitalize` dom property",
    "community round-up #6",
    "get rid of remaining reactid references",
    "reactchildren",
    "change ref from reactid to reactinstancehandles",
    "fix github links in examples",
    "fix 404 in getting started",
    "updated changelog for 0.4.1",
    "fix incorrect port of standard python server",
    "blog post for v0.4.1",
    "react-rails blog post",
    "updated readme for 0.4.1",
    "use `createnodesfrommarkup`",
    "fix reconciling components to content",
    "batch child markup generation",
    "fix `danger` test failures.",
    "delete `throwif`",
    "typecheck immutableobject",
    "use `invariant` in `react/utils`",
    "use `invariant` in `orderedmap`",
    "remove circular dependencies in react core.",
    "community round-up #5",
    "fix jquery-bootstrap example bugs",
    "fix \"suppport\" type in docs",
    "fix clicks in mobile safari",
    "call callbacks from setstate in component context",
    "use the right home page for react-source gem",
    "fix orderedmap.",
    "fix typeerror in syntheticevent",
    "push builds from travis to remote host",
    "remove unused dependency on reactmount",
    "add comment explaining internalgetid",
    "upgrade example to 0.4",
    "rename removesiblings to removenextsiblings.",
    "one-character typo fix",
    "s/pased/passed",
    "fix typos",
    "s/distinciton/distinction",
    "don't call require.register.",
    "remove dead link",
    "put closing paren in correct place",
    "add iframe attributes to react",
    "avoid some innocuous test warnings.",
    "version bump for 0.5.0 development",
    "update dead jsx link to point to an extant page",
    "fix all errors and warnings on homepage",
    "todo fix",
    "jsx",
    "fix typo in blogpost",
    "update readme for 0.4.0",
    "textarea format",
    "typo in changelog, update blog leading sentence.",
    "remove react.autobind from examples",
    "re-order entries in changelog",
    "blog post for 0.4",
    "make sure jsx comments code is in block",
    "changelog for 0.4.0",
    "remove @benjamn's todo for testing",
    "prop validation + cleanup default props",
    "write default props section",
    "fix typo",
    "fix broken links",
    "remove likebutton from docs for now",
    "re-bold some text so it stands out better",
    "remove react.autobind from examples",
    "em dashes",
    "standardized markdown lists",
    "cleanup \"tooling integration\"",
    "cleanup \"reference\"",
    "cleanup \"more about refs\"",
    "cleanup \"working with the browser\"",
    "cleanup \"forms\"",
    "don't hard code react version anywhere",
    "cleanup \"displaying data\"",
    "add react.version",
    "cleanup \"reusable components\"",
    "cleanup \"jsx in depth\"",
    "remove numbers from urls.",
    "cleanup \"multiple components\"",
    "autogen the docs nav",
    "tweaked the intro page",
    "cleanup \"jsx gotchas\"",
    "cleanup \"interactivity and dynamic uis\"",
    "grammar error",
    "fix title casing and heading levels",
    "remove \"scaling up\"",
    "fix markup rendering in ie",
    "controlled <select> and <option> components",
    "new test case for `traversechildren`.",
    "refactor flattenchildren",
    "use `traversechildren` to perform `mapchildren`",
    "sync vendor modules from fb.",
    "enable module.exports mocking in react-test.js.",
    "call require.register in every mockable module.",
    "tweak the source",
    "normalize defaultdompropertyconfig",
    "update license",
    "switch to guides",
    "put it all together",
    "cleanup some files, move tutorial",
    "scaling up fix",
    "fix markup bugs",
    "revert \"update license\"",
    "delete old docs",
    "move docs around, add likebutton",
    "add more examples",
    "update and move tutorial",
    "fix comma",
    "update 08-working-with-your-environment.md",
    "fix some links",
    "update 03-interactivity-and-dynamic-uis.md",
    "reorg",
    "add working with your environment section",
    "update 02.2-jsx-gotchas.md",
    "update 01-motivation.md",
    "antipatterns",
    "jsx gotchas, reference",
    "update 02.1-jsx-in-depth.md",
    "@vjeux comments",
    "more jsx handholding",
    "more scaling up",
    "another comment",
    "more state machiens",
    "further improvements",
    "even better toc",
    "link to blog",
    "more toc",
    "some style changes",
    "add table of contents info",
    "make less facebooky",
    "add more jsx docs rather than linking",
    "start on section 04",
    "add seconds 02.1 and 03",
    "first two sections of newdocs",
    "\"use strict\" for `reactdonotbinddeprecated`",
    "cleanup console.* uses",
    "remove references to react.autobind",
    "add `exports` to globals for jshint",
    "props in v0.4",
    "rename `props` to `proptypes`",
    "stop unnecessary purging of node cache",
    "delete `settextnodevalueatindexbyparentid`",
    "reduce lookup for missing lifecycle methods",
    "short-circuit `updatepropertybyid`",
    "more autobind warnings and invariants",
    "upgrade other dependencies",
    "fix clowny validation code",
    "upgrade browserify.",
    "add support for missing html elements",
    "add __benchmarks__ to .gitignore",
    "add some missing attributes",
    "sync jsx tags from upstream",
    "remove the check for console.warn",
    "allow nested reactupdates",
    "emphasis on single child.",
    "tweaks to make the closure parser happy",
    "camelcase and must_use_attribute",
    "community round-up #4",
    "add datetime to the list of known attributes",
    "add `hidden` attribute to dom properties.",
    "update docs",
    "add finally block for clearing reactupdates state",
    "inject `reactdominput`",
    "faster listener deletion",
    "remove autobinding warning",
    "add blockquote tag",
    "introduce a supported way to slice children",
    "update syntax.md",
    "fix changeeventplugin for ie8 and ie9",
    "autobind by default",
    "add figure and figcaption elements to react.dom",
    "batch together calls to setstate, setprops, etc",
    "//github.com/spicyj/react into spicyj-no-content",
    "use proper names for scroll metric properties",
    "revert flattening of children",
    "implement `reactdomtextarea`",
    "clean up unused variables for lint",
    "improve `findcomponentroot` error message",
    "delete files that accidentally got merged in",
    ".reactroot -> .r",
    "throw on missing elements",
    "remove content property",
    "fix composition level of components w/o owners",
    "add link roundup",
    "fix `findcomponentroot` w/ unidentified nodes",
    "add support for empty xjs expressions",
    "//github.com/spicyj/react",
    "add @jsx common parser issues in the docs",
    "community roundup #3",
    "//github.com/isaacs/npm/issues/2907",
    "change reactid.attr_name to \"data-reactid\"",
    "refactor of changeeventplugin",
    "fix `onchange` for file input",
    "remove deleted files again",
    "cache default props",
    "make `@typechecks` static-only",
    "remove reactdomnodecache and getdomnodeid.",
    "enforce nodecache validity",
    "check that `container` is a valid dom element",
    "restore @spicyj's lifecycle tests",
    "rename `browserenv` to `viewportmetrics`",
    "use `@return`, not `@returns`",
    "dynamic input component",
    "remove react.autobind entirely",
    "fix bad caching in reactid.getid",
    "require statement nits",
    "clean up naming",
    "use react.autobind by default.",
    "add unit test to prevent regression",
    "fix ismounted for composite components",
    "fix a bunch of problems with implicit autobinding",
    "allow accessing siblings by ref",
    "community roundup #2",
    "add `reactcomponentexpect#tobecomponentoftype`",
    "cleanup lint warnings",
    "bring in facebook's requestanimationframe module",
    "remove textcontent tests; they break in phantomjs",
    "remove second argument to invariant",
    "don't update value or textcontent unnecessarily",
    "blogpost & changelog for v0.3.3",
    "use github tarball link for esprima dependency",
    "fix dangerouslysetinnerhtml",
    "use absolute urls for fb comments box",
    "better warnings for missing keys on arrays",
    "don't transfer `children` in `transferpropsto`",
    "rename woodchipper-related stuff.",
    "remove reactkeys",
    "ignore .module-cache directories",
    "fix most lint warnings/errors",
    "add missing license header",
    "fixing known keying problems",
    "add back `domcharacterdatamodified`",
    "add missing license header.",
    "use synthetic events",
    "fix `eventpluginregistry` unit tests in github",
    "remove trailing whitespace",
    "* tasks instead of exec.",
    "use node cache in reactcomponent",
    "react onlychild utility.",
    "update jsx-is-not-html.md",
    "improve jsxtransformer",
    "link to my own blog",
    "minor grammar.",
    "minor typo.",
    "update tutorial.md",
    "markdown syntax",
    "adds optional callback to `setstate`",
    "updated docs and check for truthiness",
    "don't return .id on random objects",
    "fix `eventpluginregistry` unit tests",
    "fix textchange event enqueueing",
    "unbreaking falsy check on style values",
    "unnecessary `this._rootnodeid` invariant",
    "fix tht typos",
    "remove `isstatic`",
    "remove unnecessary dom mutations",
    "cleanup `style` prop reconciliation",
    "add `reactcomponent#ismounted`",
    "don't let textarea value change via textcontent",
    "add html5 drag/drop events to react",
    "adding jsx pitfalls section in the docs",
    "create `eventpluginregistry`",
    "exposing reactprops as react.props",
    "facebook comments integration on docs and blog",
    "community round-up blog post",
    "fixed width/height on react logo",
    "don't set value if it'll be a noop",
    "set textarea value when changing content",
    "refactor based on review feedback",
    "missing semicolon",
    "fix nit and comment",
    "fix relative require copy pasta",
    "internalpropnames isn't necessary, so remove it",
    "remove unused require",
    "correctly remove attributes when deleting props",
    "upgrade commoner and recast to latest versions.",
    "rename \"delegate\" to \"synthetic\"",
    "use `isancestoridof` in `reactinstancehandles`",
    "removed unused variable",
    "input + ie shim",
    "reduce `reactinstancehandles` api surface area",
    "check canusedom before calling iseventsupported",
    "bugfixes to key assignment",
    "fix typo in orderedmap",
    "delegate event classes",
    "stabilize minimal server rendering api",
    "fix event normalization in ie<9",
    "run inner componentdidmount method first",
    "fix typechecks for isrenderedbyreact",
    "remove react.createcomponentrenderer",
    "add missing license headers",
    "replace `persistentcloneof` with `persist`",
    "rename `reactevent` to `reacteventemitter`",
    "remove clowny diff.diff",
    "improve browser support for `wheel` event",
    "add license headers to new files",
    "add @typechecks to `callbackregistry`",
    "add typecheck, cleanup",
    "don't use automockoff",
    "remove deprecated component.update",
    "simplify event core",
    "fix listener cleanup on unmount",
    "cleanup `reactcurrentowner` on fatal",
    "only allow `forceupdate` on mounted components",
    "re-add invariant",
    "rename `domutils` to `dom`",
    "style prop improvements",
    "always reassign _key for every pass",
    "revert `object.create` in normalizedeventlistener",
    "add `getdefaultprops`",
    "use key=\"foo\" for all components",
    "mapchildren",
    "flatten children a single level",
    "add `reactprops.func`",
    "using markdown instead of html",
    "integrate twitter in the support page",
    "update 2013-06-05-why-react.md",
    "rename and fix typo",
    "revert \"simulate input event\" for now",
    "fix broken link in why react post",
    "update 2013-06-04-why-react.md",
    "make unmountandreleasereactrootnode not throw",
    "bring in the last few edits",
    "update date",
    "edits from the committee",
    "update links in readme to 0.3.2",
    "\"nuts and bolts\" isn't hyphenated",
    "another pass over \"why react\".",
    "revise \"why react\" content.",
    "improve blog setup",
    "highlight additional change in tutorial12.js",
    "pass title through xml_escape",
    "use date_to_xmlschema in feed.xml",
    "@jeffreylin",
    "break lines",
    "@vjeux @benjamn",
    "add rss feed.xml for blog posts",
    "add why-react",
    "run each test in an <iframe>.",
    "silence tests unsupported in phantomjs.",
    "expose test modules for requirement.",
    "polyfill function.prototype.bind during tests.",
    "add todomvc features",
    "fix bug in todomvc",
    "initial version of the blog",
    "adding a left menu navigation",
    "fix live_editor.js usage of class=",
    "add jsfiddle to the getting started section",
    "consistently use autobind on homepage examples",
    "add a base link without jsx",
    "v0.3.2",
    "reactdom->react.dom",
    "add attributes used in input",
    "simulate input event instead of relying on native",
    "ship cjs modules instead of browserified build",
    "adding \\n at the end of the files",
    "test` for verifying npm package functionality.",
    "add `return false;` to onsubmit handlers",
    "change todomvc to not modify state in place",
    "removed duplicate object type check",
    "only re-write docs _config on version bumps",
    "update examples to use oninput instead of onkeyup",
    "add new oninput event",
    "wording tweaks",
    "@yungsters",
    "update stale event docs in tutorial",
    "bla",
    "oops",
    "fixes",
    "return of mixin docs",
    "add localstorage, oops",
    "facebook/react",
    "autobind, onsubmit",
    "fixing bug in jsx transformer",
    "ignore \"docs/js/jsx-compiler.js\" from git.",
    "update bower install command",
    "remove unused const",
    "add a jsx compiler tool.",
    "revise 'live_editor.js' using jsx.",
    "revise marketing copy around jsx.",
    "prominently display travis build status.",
    "highlighting the correct line",
    "make it a little less cynical",
    "add a link to my tutorial repo",
    "sync more with backbone",
    "docs updates per community response",
    "move backbone integration into its own mixin",
    "make more idiomatic",
    "fix backbone todomvc example",
    "fix react-tools module",
    "more backbone fixes",
    "fix minor typo error",
    "enable travis-ci",
    "add google analytics.",
    "missed a link in readme.md",
    "update contributing.md",
    "fix links in root readme.md",
    "clean up formatting on /api.html",
    "improve \"event handling\" documentation.",
    "fix couple minor typos/spelling",
    "fix button links on bottom of home",
    "fix live editor on mobile devices",
    "fix some urls",
    "update release task to keep correct filename case",
    "initial public release"
  ],
  "non_verbs": [
    "dont generate sourcemaps for browser_script bundles",
    "respect .prettierignore when resolving js files via glob",
    "usedeferredvalue has higher priority than partial hydration",
    "usedeferredvalue should skip initialvalue if it suspends",
    "don't pop the replay stack if we've already rendered past an element",
    "dont pause initial inspectelement call when user switches tabs",
    "reset error component stack and fix error messages",
    "don't double replay elements when it's the postpone point",
    "selective hydration triggers false update loop error",
    "don't check for dispatch property when determining if hook is stateful",
    "client render the nearest child or parent suspense boundary if replay errors or is aborted",
    "don't bail out of flushing if we still have pending root tasks",
    "unregister dynamically injected content scripts instead of filtering",
    "don't modify keypath until right before recursive rendernode call",
    "more stable element updates polling to avoid timed out errors",
    "`<img>` inside `<picture>` should not preload during ssr",
    "refactor public interface and internal hostdispatcher implementation",
    "stylesheet suspends indefinitely when part of error boundary ui during initial hydration",
    "when src or srcset is a data uri we should not preload the image",
    "export dynamic disableschedulertimeoutinworkloop flag in www",
    "null check memoized props before trying to call hasownproperty",
    "when selecting a package variant from an export map we should favor n\u2026",
    "cleanup unused unstable_starttransition, unstable_usetransition, unstable_usedeferredvalue exports from fb packages",
    "createserverreference should export $$form_action on the server",
    "only skip past the end boundary if there is a newline character",
    "backend injection logic not working for undocked devtools window",
    "synchronously flush the transition lane scheduled in a popstate event",
    "post-process build files for react native to add generated signature and @nolint",
    "diff properties in the commit phase instead of generating an update payload",
    "don't update textarea defaultvalue and input checked unnecessarily",
    "refactor dom bindings completely off of domproperty meta programming",
    "refactor dom special cases per tags including controlled fields",
    "refactor reactdomcomponent to use flatter property operations",
    "clean interface for public instances between react and react native",
    "don't \"fix up\" mismatched text content with suppressedhydrationwarning",
    "remote `.internal` override from untrusted url tests",
    "- do not hoist elements with `itemprop` & hydrate more tolerantly in hoist contexts",
    "schedulermock.unstable_yieldvalue -> schedulermock.log",
    "refactor <style> resource implementation to group on flush",
    "proxy requests through the global server instead of directly",
    "selective hydration causing incorrect thenable type passed to devtools",
    "yarn flow dom does not exist, so console should suggest yarn flow dom-node",
    "don't retry flushactwork if flushuntilnextpaint threw",
    "bypass packages that are already published when confirmed by users",
    "don't warn about concurrently rendering contexts if we finished rendering",
    "fork fizz instruction set for inline script and external runtime",
    "synchronous ping during render phase sometimes unwinds the stack, leading to crash",
    "properly track `useid` use in strictmode in development",
    "eagerly initialize an mutable object for instance.refs",
    "do not unmount layout effects if ancestor offscreen is hidden",
    "refactor ishostresourcetype to not receive the context from reconciler and not leak types",
    "do not unmount layout effects on initial offscreen mount",
    "when float is enabled only push title and script as a single unit",
    "don't check for node_env==='test' because it never is",
    "don't use the flight terminology in public error messages",
    "onmarkerincomplete - tracing marker/suspense boundary deletions",
    "don't fire passive effects during initial mount of a hidden offscreen tree",
    "`react-dom@experimental` instead of `react-dom@experimenal`",
    "don't call transition callbacks if no transition name specified",
    "refactor incompletetransitions field from root fiber memoized state to fiberroot",
    "`now` isn't part of the react-reconciler config anymore",
    "only polyfill requestanimationframe when necessary",
    "explicitly set `highwatermark` to 0 for `readablestream`",
    "outer boundary should not report errors from an inner boundary",
    "only treat updates to lazy as a new mount in legacy mode",
    "do not replay erroring beginwork with invokeguardedcallback when suspended or previously errored",
    "land enableclientrenderfallbackonhydrationmismatch",
    "temporarily feature flag numeric fallback for symbols",
    "land enableclientrenderfallbackontextmismatch flag",
    "don't stringify objects for console log second render",
    "in legacy mode, call suspended tree's unmount effects when it is deleted",
    "point usesubscription to usesyncexternalstore shim",
    "don't recreate the same fallback on the client if hydrating suspends",
    "inline devtools test snapshots and cleaned up tests",
    "profiler should only report stateful hooks that change between renders",
    "release script prompts to stop running dev scripts",
    "don't hide console error|warn in inspectedelement-test",
    "better handle undefined error stacks in devtools error boundary",
    "gate unstable_expectedloadtime on enablecpususpense",
    "ontransitioncomplete and ontransitionstart implmentation",
    "fallback to client render if server rendered extra nodes",
    "devtools should not crawl unmounted subtrees when profiling starts",
    "don't inject timeline hooks unless react supports profiling",
    "@license header in react 18 bundles contains vundefined",
    "stylex plug-in for resolving atomic styles to values for props.xstyle",
    "test showing that a mismatch at the root recovers with client render but shows loading state",
    "flag for client render fallback behavior on hydration mismatch",
    "devtools should properly report re-renders due to context changes",
    "devtools supports env-injected version for better internal bug reports",
    "scheduling profiler does not warn about long transitions",
    "clear extra nodes if there's a hydration mismatch within a suspense boundary",
    "devtools prepare release script resets patch version when bumping minor",
    "only show devtools warning about unrecognized build in chrome",
    "surface backend errors during inspection in the frontend ui",
    "sync hydrate discrete events in capture phase and dont replay discrete events",
    "extension reports logged events when feature flag is enabled",
    "packages/react/src/reactlazy ---> changing -1 to unintialized",
    "scheduling profiler marks should include thrown errors",
    "scheduling profiler marks should include thrown errors",
    "hook names are correctly extracted when parsing nested hook calls",
    "new devtools test for named hooks verifying case when hooks are used indirectly",
    "display as link if value is in specified protocols",
    "don't add aborted segments to the completedsegments list",
    "clear named hooks suspense and ast cache after a fast refresh",
    "flush legacy sync passive effects at beginning of event",
    "guard against reused fibers in react native commands",
    "devtools show error icon when hook name parsing fails",
    "don't load source files contaning only unnamed hooks",
    "reactdebughooks optionally includes filename, and line/column numbers",
    "maxyieldinterval should not compare with currenttime directly in scheduler-shouldyieldtohost",
    "next/experimental release versions include commit date",
    "devtools can inspect proxies that return broken iterator functions",
    "errors thrown by store can be dismissed in boundary",
    "re-land \"use highest priority lane to detect interruptions \"\"",
    "devtools should iterate over siblings during mount",
    "only hide outermost host nodes when offscreen is hidden",
    "also turn off enablesyncdefaultupdates in rn test renderer",
    "update devtools error strings to support github fuzzy search",
    "always insert a dummy node with an id into fallbacks",
    "reconciler should inject its own version into devtools hook",
    "track which fibers scheduled the current render work",
    "devtools shows which fibers scheduled the current update",
    "don't double invoke getderivedstatefromprops for module pattern",
    "don't lower case html tags in comparison for built-ins",
    "don't use nested objects to \"namespace\" namespace constants",
    "don't delete trailing mismatches during hydration at the root",
    "store commit durations on hostroot for devtools access",
    "document prerequisites for download-experimental-build",
    "update devtools-extensions build script to reflect changes in local b\u2026",
    "fabric-compatible implementation of `jsreponder` feature",
    "patch console methods even when only show-inline-warnings/errors enabled",
    "don't run effects if a render phase update results in unchanged deps",
    "error for deferred value and transition in server components",
    "`$r` should contain `hooks` property when it is forwardref or memo component",
    "store interleaved updates on separate queue until end of render",
    "always rethrow original error when we replay errors",
    "basic scan of the file system to find client modules",
    "error when the number of parameters to a query changes",
    "typo in react-devtools/readme.md websocked -> websocket",
    "profiler onnestedupdatescheduled accepts id as first param",
    "overly eager update-notifier usage in react-devtools",
    "reactis.isvalidelementtype unit test extended with purecomponent case",
    "separate syntheticevent constructors to prevent deopts",
    "extract and test scroll state from horizontal pan and zoom view",
    "visually distinguish user timing marks from react events",
    "permanently removed component stacks from scheduling profiler data",
    "onfocus/onblur/onbeforeinput have a matching event type",
    "statically enable enablefilteremptystringattributesdom",
    "isfbbundle should be true if it's fb for www or fb for rn",
    "sync scheduling profiler marks and debug tracing to new reconciler fork",
    "reference not add to dependencies if only its type is used as typeof arg",
    "consistently treat optional chaining as regular chaining",
    "fork legacy-events folder into react-dom and react-native",
    "shutdown devtools bridge synchronously when unmounting",
    "lint bundles using the bundle config instead of scanning for files",
    "clear fiber.sibling field when clearing nexteffect",
    "don't cut off the tail of a suspenselist if hydrating",
    "don't \"schedule\" discrete work if we're scheduling sync work",
    "consistent usecallback implementation in reactdomserver",
    "root api should clear non-empty roots before mounting",
    "temporarily remove debugtracing from the new reconciler",
    "bubble errors if processing the error itself errors",
    "port more tests to the scheduler.unstable_yieldvalue pattern and drop internal.js",
    "export unstable_useevent for www fb reactdom builds",
    "clear finished discrete updates during commit phase",
    "fix \"cannot read property 'memoizedstate' of null\"",
    "lazily parse models and allow any value to suspend",
    "do not warn when a controlled input has `oninput` handler.",
    "cleanup previous shims directories before re-copying",
    "do not unhide a suspended tree without finishing the suspended update",
    "don't show destroy function state update warning when updating ancestors",
    "fix string ref cannot be auto converted warning for react.jsxdev",
    "don't support older isomorphic react with newer renderers",
    "don't fire the render phase update warning for class lifecycles",
    "encode server rendered host components as array tuples",
    "code mod import * as react from 'react' in react-window",
    "runallpassiveeffectdestroysbeforecreates's feature flag description typo fixed",
    "don't warn about unmounted updates if pending passive unmount",
    "update rollup version to 1.19.4 and fix breaking changes",
    "further pre-requisite changes to plugin event system",
    "do not export passivebrowsereventssupported from focus responder",
    "refactor commitplacement to recursively insert nodes",
    "fix cannot read property 'sub' of undefined when navigating to plain-text pages",
    "//github.com/gasimgasimzada/react into gasimgasimzada-scope-devtools-styles",
    "scope dev tools wildcard styles within devtools css class",
    "partial fix devtools profiler ''could not find node\u2026'' error",
    "hosttext needs to copy over from current if it is unchanged in persistent  mode",
    "refactor event priority handling to its own module",
    "additional test infra changes for toerrordev rename",
    "mock touchend events should use empty array for 'touches'",
    "passive effects triggered by synchronous renders in a multi-root app",
    "don't treat the last row in hidden as deleted if already mounted",
    "only call profiler onrender when a descendant had work",
    "client render suspense content if there's no boundary match",
    "postmessage target origin needs to be '*' for local files",
    "devtools shows unsupported renderer version dialog",
    "//github.com/onionymous/react into onionymous-tt-compat",
    "support for adding props | improved state/props value editing",
    "don't invoke listeners on parent of dehydrated event target",
    "babel transform jsx to react.jsx/react.jsxdev plugin",
    "only warn in case the fourth argument is a function",
    "profiler bugfix for filtering out all commits after selecting a fiber",
    "print-warnings script should ignore devtools packages",
    "partial support for react.lazy in server renderer.",
    "mark spawned work for client-rendered suspense boundary",
    "release script supports publishing a subset of packages",
    "root styles aren't  applied when settingscontext mounts",
    "refactor inspect/select logic so that $r contains hooks data",
    "suspense priority warning firing when not supposed to",
    "don't let a devtools or react internal error interfere with logging.",
    "npm package versions 4.0.0-alpha.5 -> 4.0.0-alpha.6",
    "effects should never have higher than normal priority",
    "npm package versions 4.0.0-alpha.4 -> 4.0.0-alpha.5",
    "don't hyphenate custom css properties for reactdomserver",
    "slight tweak to avoid setting an invalid numeric value in props editor",
    "//github.com/koba04/react-devtools-experimental into koba04-fix-input-number-in-props",
    "cleanup legacy backend event listener if modern backend is detected",
    "only warn on unacted effects for strict / non sync modes",
    "followup to #15763, fix failing test in reactdomtracing-test",
    "don't consider require-like calls to be likely hocs",
    "//github.com/justingrant/react-devtools-experimental into justingrant-when-render-hidden",
    "initial support for hydration added to both renderer interfaces.",
    "interaction tracing works across hidden and ssr hydration boundaries",
    "don't send htmlelements through the bridge when inspecting componetns",
    "only show \"rendered at\" if selected fiber committed at least once",
    "backend notifies the frontend of storage api support. frontend disables e.g. reload-and-profile based on this.",
    "only shrink indentation. don't increase it again. this avoids 'jumping'.",
    "initial poc for compressing horizontal offset for wide/deep trees",
    "babel plugin now handles hocs + add integration tests",
    "don't serialize inspected elements either unless they have re-rendered since last inspected.",
    "istargetwithineventresponderscope on unmounted event components",
    "`act` - s / flushpassiveeffects / scheduler.unstable_flushwithoutyielding",
    "cleanup profile export/import data types, add export/import test",
    "//github.com/submetu/react-devtools-experimental into submetu-enhancement/display-change",
    "don't consider \"never\" expiration as part of most recent event time",
    "dim owners that have been filtered from the tree in rendered-by list",
    "custom filters are applied by default after extension reload",
    "//github.com/sompylasar/react-devtools-experimental into sompylasar-232-clear-profiling-data-for-unmounted-root",
    "//github.com/sompylasar/react-devtools-experimental into sompylasar-165-add-flow-types-for-fiber",
    "filter changes are applied to the renderer without reloading",
    "initial pass at adding filter-by-type flow types and support to renderer",
    "clear profiling data for root when the root is unmounted",
    "fix typo `recursivelyiniitliazetree` -> `recursivelyinitializetree`",
    "responder event types should not re-register on eventcomponent update",
    "minor code structure adjustments to the bundles.js file",
    "disablepictureinpicture attribute for html5 videos",
    "don't schedule an update with react unless the curent element was invalidated",
    "naive suspense implementation for selected element panel",
    "readme update types and remove stoppropagation prop",
    "toggle method no longer emits 'mutated' event unless it mutated the store",
    "node scripts should fail if not node_env specified",
    "don't select search result unless user does something",
    "when resetting suspense children, use the fallback child set if needed",
    "temporarily disabled hooks lint failure for tree useeffect",
    "don't reset selected item on search mismatch or exit",
    "//github.com/gaearon/react-devtools-experimental into gaearon-smart-scroll",
    "don't drill into owners list if no owner metadata is available",
    "double clicking on a name toggles expanded state in keyvalue",
    "//github.com/lucasecdb/react-devtools-experimental into lucasecdb-collapse-props",
    "//github.com/lucasecdb/react-devtools-experimental into lucasecdb-inactive-window",
    "newly selected components always auto-expand their ancestors",
    "tree arrow navigation respects event.defaultprevented",
    "refactor eventcomponent logic + add onownershipchange callback",
    "don't change browser selection unless react selection changed",
    "//github.com/gaearon/react-devtools-experimental into gaearon-inspect-log",
    "owners stack modal behaves and looks more like a modal",
    "profiler shows commit times and durations for selected fiber",
    "//github.com/hristo-kanchev/react-devtools-experimental into hristo-kanchev-owner-stack-enhancement",
    "continuously update tree selection in dom inspection mode",
    "support eventcomponent onunmount responder callback",
    "sync selected profiler node back to the components tab",
    "don't move selection unless search text increased length",
    "refactor responder modules for lifecycle inclusion",
    "//github.com/gaearon/react-devtools-experimental into gaearon-larger-items",
    "//github.com/gaearon/react-devtools-experimental into gaearon-fix-nested-hooks",
    "//github.com/gaearon/react-devtools-experimental into gaearon-a11y-tree",
    "//github.com/gaearon/react-devtools-experimental into gaearon-tab-owner",
    "mark react-events as private so we publish script skips it for now",
    "experiemental event api - wrap async dispatched events",
    "store screenshots after each commit when profiling",
    "refactor event object creation for the experimental event api",
    "show is-recording indicator earlier after a reload-and-profile",
    "misc cleanup of comments and localstorage key names",
    "access iframe contentwindow instead of contentdocument",
    "test that we don't suspend when disabling yielding",
    "unmount and remount when main url changes to avoid staleness problems",
    "eager bailout optimization should always compare to latest reducer",
    "don't set the first option as selected in select tag with `size` attribute",
    "fixes #19 - break the text into next line for long props",
    "test suspended children are hidden before layout in persistent mode",
    "udpated param name in injected renderer overridehookstate type",
    "maybe fixed checkbox alignment issue dan reported?",
    "//github.com/jessidhia/react-devtools-experimental into jessidhia-scroll-into-view",
    "release script clarifies which test fixture failed",
    "node engine updated to version 7 because of object.entries",
    "don't discard render phase state updates with the eager reducer optimization",
    "just use codepoints as it'll be copied into an uint32array anyway",
    "statically enable suspense/partial hydration flag in www",
    "initial pass at adding settings panel to browser extension",
    "queue/rerender on dispatched action after render component with hooks",
    "backwards compat fix for reactcurrentdispatcher on older react versions",
    "strip react elements from serialized data (and display <name/> instead",
    "initial pass at properties panel. lots of todos remaining.",
    "misc updates to better handle tearing and add some future todos",
    "double-render function components with hooks in dev in strictmode",
    "don't bother comparing constructor when deps are not provided",
    "usedebugvalue should throw if used in a class component",
    "testrenderer tojson should not expose the array wrapper suspense uses for hidden trees",
    "don't prompt to tag or create github release for canary releases",
    "release script auto-determine the latest canary build if none specified",
    "clear fields on unmount of fiber to avoid memory leak",
    "clear memoizedstate on unmount of fiber to avoid memory leak",
    "refactor eslint configuration to enable better ide integration",
    "invalid actualduration+treebaseduration for hidden+suspended trees",
    "release script supports interleaved stable and alpha releases",
    "tag memocomponent with performedwork effecttag for devtools profiler",
    "don't rely on jest fake timers scheduling real timers",
    "clear effect tags from a fiber that suspends in non-concurrent mode",
    "\"functional component\" -> \"function component\" in hooks error messages",
    "reactfibernewcontext import maxsigned31bitint twice",
    "always bail out timed out children even if they receive an update",
    "class component can suspend without losing state outside concurrent mode",
    "suspense component does not capture if `fallback` is not defined",
    "replacement of old links, by the new ones of the documentation.",
    "strict mode and default mode should have same suspense semantics",
    "always warn about legacy context within strictmode tree",
    "support class component static contexttype attribute",
    "priority levels, continuations, and wrapped callbacks",
    "release script updates private package dependencies also",
    "manually update schedule dep in react-native-renderer",
    "when a root expires, flush all expired work in a single batch",
    "profiler integration with interaction-tracking package",
    "don't diff memoized host components in completion phase",
    "do not reconcile children that are iterable functions",
    "don't stop context traversal at matching consumers",
    "don't search beyond sync roots for highest priority work",
    "minimally support iframes  in selection event handling",
    "more helpful message when passing an element to createelement",
    "format messages in unexpected console.error test failure",
    "test renderer flushall method verifies an array of expected yields",
    "fix - issue #12765 / the checked attribute is not initially set on the input",
    "automatically profile roots when devtools is present",
    "do not add additional work to a batch that is already rendering",
    "always batch updates of like priority within the same event",
    "synchronously restart when an error is thrown during async rendering",
    "4/n allow splitting out `schedule` in fb-www, prepare to fix polyfill issue internally",
    "do not assign node.value on input creation if no change will occur",
    "3/n use a linked list instead of map and queue for callback storage",
    "record \"actual\" times for all fibers within a profiler tree",
    "testrenderer warns if flushthrough is passed the wrong params",
    "temporary fix for grabbing wrong raf polyfill in reactscheduler",
    "getpeerglobals should check bundletype instead of moduletype",
    "high pri - ensure we call timed out callbacks in schedule",
    "do not fire getderivedstatefromprops unless props or state have changed",
    "mark react native and fabric renderers as @generated",
    "minor fix params description for addpercent function",
    "setstate returning null and undefined is no-op on the shallowrenderer",
    "don't bail on new context provider if a legacy provider rendered above",
    "forwardref components should not re-render on deep setstate",
    "strictmode should not warn about polyfilled getsnapshotbeforeupdate",
    "don't git commit noop-renderer unless package deps change",
    "fork react native renderer into fb and oss bundles",
    "createreactnativecomponentclass needs to be commonjs",
    "don't render bitmask-bailing consumers even if there's a deeper matching child",
    "getderivedstatefrom{props,catch} should update updatequeue.basestate",
    "extract throw to separate function so performunitofwork does not deopt",
    "setstate in componentdidmount should flush synchronously even with createbatch",
    "don't bail out on referential equality of consumer's props.children function",
    "workaround jest-diff single line string limitation",
    "subscriptions shouldn't call setstate after unmount even for promises",
    "resumemountclasscomponent should check for mount lifecycles, not update",
    "don't expose reactglobalsharedstate on react native renderer",
    "fixes bug when initial mount of a host component is `hidden`",
    "createresource returns an object with methods instead of a read function",
    "context providers and consumers should bailout on already finished work",
    "additional release script options for publishing canary versions",
    "nativemethodsmixin dev-only methods should not warn",
    "interactive updates shouldn't flush until the end of the outermost batch",
    "toplevelupdatewarnings is only for dev mode hence not necessary to have extra dev mode check.",
    "shallowrenderer should filter context by contexttypes",
    "issue 11768 - error rendering inputs in separate window using portals in ie11",
    "towarnindev matcher; throw on unexpected console.error",
    "deduplication of warn when selected is set on <option>",
    "blacklist spyon. add explicit spyonprod and spyondevandprod",
    "refactor synthetickeyboardevent tests to only use the public api",
    "bug fix - setstate callback called before component state is updated in reactshallowrenderer",
    "support call and return components in react.children calls",
    "updates at the same priority should not interrupt current render",
    "new feature flags to help detect unexpected lifecycle side effects",
    "don't emit autofocus={false} attribute on the server",
    "nextflushedroot should always be set when performing work",
    "refactor syntheticclipboardevent tests to only use the public api",
    "release script follow-up work after 16.1.0-beta release",
    "auto-install  release script yarn deps before running",
    "reference yarn instead of npm in dom fixtures readme",
    "release script no longer auto-updates peerdependencies react version",
    "rollup script can now extract error codes and build in a single pass",
    "group event code together and forbid cross-client/server imports",
    "sync setstates inside willupdate and didupdate should flush at same time",
    "don't set empty placeholder to work around ie11 bug",
    "deduplication of warning messages in nested updates",
    "clear previous children when svg node doesn't have innerhtml",
    "adjacent text nodes in ssr should have comments between them despite components",
    "live code editor ignores tab key for improved a11y",
    "only run custom element fixture in browsers that support it",
    "issue 10986.  buttons in live code sections have bad styling",
    "//facebook.github.io/react/\" -> \"https://reactjs.org/\"",
    "flow should ignore node_modules/create-react-class",
    "markdown fixs on \"dom attributes in react 16\" post",
    "reactnativebridgeeventplugin supports lazily-registered event types",
    "default to first non-disabled option for select elements",
    "refactor ensureupdatequeues to avoid returning a tuple",
    "rn  avoids the overhead of bridge calls if there's no update.",
    "better messaging for componentdidcatch cross-origin errors",
    "don't suggest downloading react devtools inside chrome extension",
    "shallow renderer passes context to componentwillreceiveprops",
    "fix rendertostring fails with array type children when react-dom/server render",
    "don't add dangling commas to functions for packaging fixtures",
    "in ssr, store elements of composites on the stack for warnings",
    "refactor debug frames to enable renderers to provide custom logic",
    "uhhhh remove the extra space i literally just added",
    "don't increase priority when cloning current children",
    "down-prioritize children of `hidden` host components",
    "pin prettier to a specific version so that it produces the same output on dev machines and ci.",
    "//github.com/facebook/react/pull/10024#discussion_r123649131 , reactdomserver is an object, not a class.",
    "task work inside batched updates is always sync, even for initial mounts",
    "reactnoop.flush methods return an array of yielded values",
    "fuzz tester that simulates sierpinski triangle demo",
    "don't hydrate any properties other than event listeners and text content",
    "shouldsettextcontent accepts type parameter in addition to props",
    "don't expose internal instance to react native inspector",
    "strip comments from umd_prod and node_prod builds, not fb_prod",
    "don't recreate instance when resuming a class component's initial mount",
    "don't prevent extensions on fiber if using bad map polyfill",
    "docs better indicate that state updaters shallowly merge with state",
    "fiber reactdom shouldn't throw on import in node environment if it's unused",
    "completely remove object.prototype.hasownproperty.call",
    "updates how-to-contribute.md to use jsfiddle referenced in submit git issue template",
    "warning added if defaultprops were defined as an instance property",
    "reactdom.unstable_asyncrender creates an async-by-default tree",
    "instance.unstable_asyncupdates = true creates an async subtree",
    "installation] fix tabs responsive layout - resubmit",
    "only attempt to clear measures if we created the measure",
    "refractor docs to indicate that state set to props in constructor will not recieve the updated props",
    "//github.com/facebook/react/pull/9264#discussion_r108974871 . thanks, @spicyj!",
    "//github.com/giamir/react into giamir-add_toggle_to_fiber_triangle_demo",
    "reactelementvalidator uses temporary reactnative view proptypes getter",
    "exit with failing code if prettier throws to ensure ci is blocked",
    "don't count skipped tests when calculating fiber facts",
    "don't reset the return fiber after cloning the child fibers, as we already do that while cloning.",
    "don't schedule class fibers without relevant lifecycles for commit",
    "refactor of reactcomponenttreehook to isolate dev methods",
    "wip - not sure how to get the flow type working properly",
    "test that hidden subtrees render/update synchronously",
    "providesmodule -> explicit requires for cross-package dependencies",
    "new eslint rule that warns against boolean and string constructors",
    "refactors/removes stack dependent tests to work with fiber",
    "test that checkproptypes does not throw or return a value",
    "mountclassinstance now re-assigns instance.refs to emptyobject",
    "test should ensure that update is applied before corresponding render",
    "should be able to setstate inside cwrp before assigning to this.state",
    "only expose fiberroot at the top level instead of a fiber",
    "don't swap the trees until after the first pass of the commit phase,",
    "don't visit siblings of the coroutine when looking for yields",
    "support for reactfeatureflags.logtoplevelrenders timing",
    "polyfill requestidlecallback when native is not available",
    "stack and fiber warn about missing getchildcontext method",
    "top-level render only accepts a react element if feature flag is on",
    "in dev, allow treat auto-mocked render methods as if they return null",
    "dont recreate maked context unless unmasked context changes",
    "\"don't mutate the original component\" example and description mismatch",
    "higher-order components docs withsubscription example fix",
    "should not re-render as the result of a null state update",
    "should not re-render as the result of a null state update",
    "syncupdates prevents synchronous priority from being downgraded to task",
    "if an error is thrown and there's no nextunitofwork, it's fatal error",
    "renderers can schedule commit-time effects for initial mount",
    "'npm init' needed before installing react via npm.",
    "jest preprocessor better aware of error-codes/codes.json wrt caching",
    "reactfiberstack cursor values are no longer corrupted on pop",
    "generic type added to stackcursor. default emptyobject replaced with null.",
    "bailoutonlowpriority correct pushes context for classcomponents to mirror complete phase context pop",
    "don't drop updates from queue when calling replacestate",
    "don't warn about class component usage of getinitialstate if state is also set",
    "don't rely on commit phase effect to clear updates",
    "only do runtime validation of tag names when createelement is not used",
    "errors thrown when detaching a ref should not interrupt unmount",
    "don't check for a pendingcommit on every iteration",
    "error boundaries can only capture errors once per batch",
    "do not reset innerhtml for elements with null children",
    "fix finddomnode and findallinrenderedfibertreeinternal",
    "clear existing text content before inserting children",
    "don't test for comments in empty components for fiber",
    "record tests and fix browsereventemitter test to not crash jest",
    "don't pass the fiber around instead use the dom node",
    "we only need the root attribute for warnings and server-side rendering",
    "clarity on constructor of board object for tutorial.md",
    "updates from inside componentdidmount/update should have task priority.",
    "don't need to keep track of rootswithuncaughterrors",
    "\"task\" priority for error boundaries and batched updates",
    "at the end of a batch, perform any sync work that was scheduled",
    "unstable_batchedupdates should return value of callback",
    "updates should use the same priority context as top-level render",
    "in the community support doc, i noticed that the react facebook",
    "refactor respondereventplugin to not rely on _rootnodeid",
    "don't call componentdidupdate if shouldcomponentupdate returns false",
    "clear effecttag and return pointers after side-effects",
    "docs replace reference to 'getinitialstate' with 'state' instance property in \"thinking in react\"",
    "fire componentdidmount/componentdidupdate life-cycles",
    "always override priority level when visiting children",
    "russian translation for style props value px of tips",
    "russian translation for max. numbers of jsx root nodes",
    "don't mutate current tree before work is committed.",
    "beforeinput is fired with a wrong text at a wrong time on ie",
    "re-position comments to account for code sample width",
    "don't define key or ref dummy props if none were provided",
    "when a reconciliation gets down prioritized, reuse children",
    "don't reset next work pointer for lower priority work",
    "\"transient dependencies\" -> \"transitive dependencies\"",
    "do not render `name` attribute on input if it is not supplied. closes #7198.",
    "don't detach value from defaultvalue for submit/reset inputs",
    "schedule side-effects to parents before their children",
    "dependency injection in the begin/complete/commit phases",
    "automatically downgrade an update to a hidden node",
    "webcomponents should use attachedcallback instead of createdcallback.",
    "settextcontent should attempt to set textnode nodevalue where possible",
    "don't count the time inside flushes towards lifecycle hooks",
    "properly set value and defaultvalue for input and textarea",
    "interactivity and dynamic uis docs page updated with es6 example",
    "fire unknown prop warning when rendering client side.",
    "track source more generically in reactcomponenttreedevtool",
    "domlazytree, populate <object> before insertion into dom",
    "reacttextcomponent was renamed reactdomtextcomponent a while ago",
    "mute devtool events for toplevelwrapper and empty components",
    "componentwillunmount should only ever be invoked once",
    "reactcomponenttreedevtool should ignore toplevelwrapper",
    "properly handling invalid scryrendereddomcomponentswithclass args",
    "devtools should be able to clean up the tree on client rendering",
    "don't try to get the target node for responder if there is no listener",
    "only fire input value change events when the value changes",
    "disabled inputs should not respond to clicks in ie",
    "`\"0\"` can be the only valid unitless number string",
    "correctly select options when nested inside an optgroup",
    "document legacyness of the return value of reactdom.render",
    "document that stateless functional components can return null in v15",
    "test for polyfilled symbol and non-symbol elements",
    "elements from functional components in testutils should have no owner",
    "test to verify finddomnode does not throw in willmount",
    "key/ref warnings incorrectly throw on dom elements",
    "don't interpret reserved props as attributes for svg elements",
    "errors in componentwillunmount should be caught by error boundary on initial render.",
    "error boundries should not unmount composite components which were not mounted.",
    "unnecessary type comparisons have been changed to value comparison",
    "fixes #5959 - jquery-bootstrap example uses  which does not exist",
    "fixes highlight issue for code blocks with overflow",
    "small copy changes to testutils and perf summaries",
    "blog post explains to verify prop mutations in componentwillreceiveprops",
    "year-agnostic copyright message, like react native uses, to prevent the need for yearly changes.",
    "a couple small style fixups that were missed in recent prs",
    "autocorrect and autocapitalize should not be property",
    "don't use `key` when defined on string, number prototypes",
    "basic-commonjs, basic-jsx-external and basic-jsx-precompile",
    "reactshallowrenderer.render returns the rendered output",
    "more consistent error message for findrendereddomcomponentwithx",
    "reactdomcomponent should throw error when provided children for void elements",
    "clear transition timeouts when component unmounts. fixes #4876",
    "should not coerce children prop on custom elements to a string.  fixes #5088",
    "simple fix to prevent overwriting of mutated props",
    "don't set dom props when switching between unset/undefined/null",
    "5013 added necessary code for firing warning if value is null",
    "correctly handle 0 in csstransitiongroup timeout props",
    "- added tests to compare testing of components using different types of element creation",
    "consistently use `calls.args` instead of `argsforcall` for jasmine spies",
    "consistently use `calls.length` instead of `callcount` for jasmine spies, take ii",
    "- bring back jsx compiler styling still being used on html jsx page",
    "don't break on svg tags in scryrendereddomcomponentswithclass",
    "cache native node on native components, return it when unmounting",
    "reactmount now never expects invalid nodes in its cache",
    "don't blow up on missing _store in element validation",
    "attachref to a stateless component warns instead of throwing #4939",
    "don't use magic browser event dispatching for simulated events",
    "composite component throws on attaching ref to stateless component #4939",
    "don't build up mount-ready queue for server side rendering",
    "don't crash in event handling when mixing react copies",
    "do not codemod classes with invalid fields, fixes #4628",
    "better error for invalid element when shallow rendering",
    "don't use owner to determine if the auto-bailout should be used",
    "explicitly call out code of conduct in contributing",
    "only perform expensive checks in __dev__, clean up after inserted iframe",
    "should generate simple markup for attribute with `>` symbol",
    "properly handle rendering into document when comparing markup",
    "don't bail out of reconsiliation if context changes.",
    "s/parse/parser in jstransform deprecation blog post",
    "always tolowercase when comparing nodename or tagname",
    "inline createfullpagecomponent in reactdomcomponent",
    "process childcontexttypes via internal constructor",
    "<option> added children flatten, & warn if invalid",
    ":unmountchildren was missing an object.hasownproperty check",
    "shallow render components that define contexttypes",
    "should call new and old constructor with arguments",
    "fixes for several failing tests in firefox and safari",
    "only run src/ and vendor/fbtransform/ tests in jest",
    "class transform doesn\u2019t need an alias for `module.exports = react.createclass` any longer.",
    "minor space change to be in line with coding style everywhere else",
    "reactdomcomponent should warn when provided children for void elements",
    "do not show empty \"docs-prevnext\" div on single page",
    "only call put/deletelistener with truthy listeners",
    "support rendering to null in shallowcomponentrenderer",
    "consistently use `calls.length` instead of `callcount` for jasmine spies",
    "chinese docs typesetting beautification & relate links",
    "document checkbox using click handlers for change events",
    "always trigger an update when a callback is enqueued.",
    "documents that jsx tool is transforming files with .js extension  by default",
    "documents that `classset` concatenates its arguments",
    "only purgeid on reactdomcomponent and reactdomtextcomponent unmount",
    "we don't currently have a way to trace the origin of a mixin",
    "document justification for dangerouslysetinnerhtml, fixes #2256",
    "temporarily comment out bundle-collapser for jsxtransformer",
    "new class instantiation and initialization process",
    "friends don't let friends look foolish on the internet",
    "don't warn about plain classes when in mocked components",
    "context warning should fire on update, not just initial mount.",
    "codemod \"use strict\" to 'use strict' for better linting",
    "minor updates to finddomnode, as per additional post-commit cr feedback.",
    "in `transferring props` guide, `manual transfer` section will lead an error",
    "new carousel link, spelled react-prism correctly, and removed the whale-speak.",
    "update striptypes transform to use fixed up jstransform transform",
    "error when unmountcomponentatnode receives non-node",
    "fixes reactdefaultperf.getmeasurementssummarymap format style",
    "un-mixin reactbrowsercomponentmixin from reacttextcomponent",
    "don't wrap values with reacttextcomponent in traverseallchildren",
    "reactmount calls a legacy factory use createdescriptor instead",
    "more informative error message for mergeobjectswithnoduplicatekeys",
    "v0.11.1 release materials, update to 0.11.0 release materials",
    "has_side_effects properties must compare as property type",
    "don't call window.getselection when it isn't defined.",
    "getmodifierstate incorrectly exposed as syntheticmouseevent.geteventmodifierstate",
    "refactor transformasobject to transformwithdetails",
    "also list <form> in error message as possible culprit",
    "be more specific with createclass, rendercomponent",
    "preemptively error when required es5 shim/shams are not available",
    "test innertext/textcontent on document.documentelement instead",
    "don't let new keys on `style` from `transferpropsto` override old ones",
    "better error message for react eventplugin order check",
    "batch updates caused by handlers in multiple roots",
    "entry on this.props.children and tweak component ref entry",
    "assertvalidprops for updating dom components through rendercomponent",
    "don't try to use object.prototype methods as transfer strategies in reactproptransferer.mergeprops",
    "more actionable error message for <tbody> and nested <p>",
    "commonjs builder config to grunt style for easier handling and readability.",
    "refactor rendering to string without checksum & react id",
    "better name for server-side rendering without react id & checksum",
    "document optional param for rendercomponenttostring",
    "incorrect include in css transition group example?",
    "addition of 'this.context' component breaking change",
    "simpler reacttestutils.simulateeventondomcomponent",
    "un-revert textcontent, support multi-line strings in modern browsers",
    "refactor reactdefaultperf and add dom operation tracing",
    "don't attach to document in reacttestutils.renderintodocument.",
    "more optimizations and fix for jsxtransformer build",
    ".gitattributes to ensure lf line endings when we should",
    "document proptypes.renderable and proptypes.component",
    "better error message for mergehelpers and setstate",
    "spy on purgeid instead of unmountidfromenvironment",
    "don't add displayname in transform if already defined",
    "more tests for 77697f26e32e1625397e6cdcb0defe0a746b7230",
    "docs better error display for live editor and jsx compiler",
    "error message for using refs outside of render is difficult to understand",
    "transferpropsto should never transfer the key property",
    "simple html to jsx converter, built during hackathon 40 at facebook.",
    "tutorial template markup needs a reference to jquery for the ajax calls",
    "nodes that have had their child removed already, but then get given a new one no longer bug-out.",
    "space optimizations for reactmount.findcomponentroot.",
    "polyfill and normalize html5 \"key\", deprecates which and keycode",
    "don't use .returnvalue if .defaultprevented exists",
    "explicitly require the assert module in vendor/constants.js.",
    "clear error message when rendering a nonvalid component",
    "//github.com/mcsheffrey/react into feat-documentation-cookbook",
    "minor spelling change on the \"controlled input null value\" cookbook entry",
    "entry on willreceiveprops not triggered on mounting",
    "style prop value shorthand, children prop manip warning",
    "svg attributes properly cased when assigned by react",
    "- removed creation of the id within the tooling integration doc",
    "hard code version instead of doing constant replacement",
    "don't trigger mouse events on native button elements that are disabled",
    "explicit and implicit keys need separate namespaces",
    "refactor reactcomponent to have no dependency on the dom.",
    "cleanup 2nd param to reacteventemitter.ensurelistening",
    "do not export load in jsxtransformer unless in a browser environment",
    "don't set dom attributes to `\"undefined\"` on update",
    "after each test, remove any stray nodes added to the document.",
    "store dirtymocks array globally so it can survive dumpcache.",
    "reorg docs, write a lot of content, import a lot of stuff from dex",
    "don't ignore children of non-ancestor id nodes in findcomponentroot.",
    "don't require `tmp` module unless we're going to use it.",
    "injectable domproperty configs, and add back id attribute",
    "don't keep the html escaped id internally, only in html generation",
    "don't pass a null context to function.prototype.call.",
    "the compare_size cache gets wiped out with `grunt clean`",
    "cache modules for jsx grunt tasks in react-tools/.module-cache."
  ],
  "non_imperatives": [
    "bound server references should be able to be bound again",
    "fixes incorrect boolean logic around loading states for stylesheets",
    "aborting with a postpone instance as a reason should postpone remaining holes",
    "refactored messaging logic across different parts of the extension",
    "added a workaround for proxy content script injection in firefox",
    "-added a delete all filters action and added title to the add filter a\u2026",
    "devtools source field disappears after component remount",
    "refactored devtools browser extension scripts to improve port management and service worker lifetime",
    "split responsestate/resources into renderstate/resumablestate",
    "hoisted elements no longer emit before `<html>` in legacy apis such as `rendertostring`",
    "updating forking implementation to match against more general fork implementations",
    "fixed incorrect condition calculation for @reactversion annotation",
    "fixed jest configuration not to skip too many devtools tests",
    "preinitialized stylesheets should support integrity option",
    "updated copyright text to copyright  meta platforms, inc. and its \u2026",
    "fixed duplicated backend activation with multiple renderers",
    "switching checked to null should leave the current value",
    "fallback to importing the whole module instead of encoding every name",
    "implements wiring for flight to have it's own \"hostconfig\"",
    "gated test for dropped transport of undefined object values",
    "setting transition pending flag shouldn't be part of a surrounding transition",
    "extracted definition and access to public instances to a separate module in fabric",
    "fixed incorrect value returned as public instance from reconciler",
    "removed unused imperative events implementation from react native renderer",
    "fixed incorrect import in `react-server-dom-webpack`",
    "scaffolding for react-dom/unstable_external-server-runtime",
    "added the word 'own' to the readme file for design consistency",
    "added a comma to understand better the readme file for the contributor and the viewer.",
    "suspending inside a hidden tree should not cause fallbacks to appear",
    "fixed possible undefined error in treecontext reducer",
    "added unit tests in the reactart, increasing the code coverage",
    "refactored how react/devtools log timeline performance data",
    "re-added deleted files array to react-devtools package.json",
    "cleaned up remaining \"scheduling profiler\" references in devtools",
    "renamed packages/react-devtools-scheduling-profiler to packages/react-devtools-timeline",
    "enabled scheduling profiler marks for react native fb target",
    "test that discrete events that aren't hydratable do not propagate",
    "pipetonodewritable.startwriting -> rendertopipeablestream.pipe",
    "fixed potential cache miss when insepcting elements",
    "enabled enableprofilerchangedhookindices feature flag for all builds",
    "updated the utfdecodestring method to avoid call stack exceeded error",
    "fixed issue for better bundles,chunks and workers name in devtools-extensions.",
    "replaced network.onrequestfinished caching with network.gethar",
    "moved named hooks code  from react-devtools-extensions to react-devtools-shared",
    "added performance timings to devtools named hooks parsing",
    "replaced weakmap with lru for inspected element cache",
    "renames master to main in fixtures/flight webpack config file",
    "using array destructuring without assigning first variable does not error",
    "fixed components tree indentation bug for chrome extension",
    "added scheduling profiler notes and videos to the devtools changelog",
    "added taneliang and kartikcho to scheduling profiler credits",
    "updated source map extension format + more precise types",
    "added testing instructions to devtools contributing guide",
    "removed an accidental console.log from devtools source code",
    "updated scripts and config to replace \"master\" with \"main\" branch",
    "devtools bugfix for usestate with hasownproperty key",
    "added react entry-points change to devtools changelog",
    "fixed another symbol concatenation issue with devtools format util",
    "tweaked devtools error template title to match issue form template",
    "updated release scripts to work around github / circle ci integration problems",
    "added new github issue form for react devtools bug reports",
    "devtools refactor profiler commit tree reconstruction to be iterative",
    "removed  tracing fixture test from relesae scripts",
    "updated devtools to replace fburl.com link with fb.me link",
    "devtools console patching should handle symbols without erroring",
    "fixed bug in react-detools-inline frontend init method",
    "fixed broken feature flag import for dt inline package",
    "bumped devtools chrome and firefox versions in babel config",
    "cleaned up unused passiveunmountpendingdev dev flag",
    "devtools flushes updated passive warning/error info after delay",
    "split getcomponentname into getcomponentnamefromfiber and getcomponentnamefromtype",
    "refactored recursive strict effects method to be iterative",
    "clone json obj in react native flight client host config parser",
    "clone json obj in relay flight client host config parser",
    "improved dev experience when devtools hook is disabled",
    "fixed unfound node error when suspense is filtered",
    "devtools always overrides the dispatcher when shallow rendering",
    "handled a missing suspense fiber when suspense is filtered on the profiler",
    "updated overview.md to the new infos required when adding a new leaf node to the tree",
    "updating the informations needed when adding a root node to a tree in react-devtools overview doc",
    "removed skip-error-boundaries modifications from old fork",
    "fixes eslint warning when node type is chainexpression",
    "proxied methods should be safely dehydrated for display",
    "added warning to <context.provider> in case no value prop is provided",
    "fixed test script handling of unknown/additional args",
    "re-enabled debugtracing feature for old reconciler fork",
    "updates the devtools test script to make it easier to test other urls.",
    "re-enabled debugtracing feature for old reconciler fork",
    "added matching for nullish coalescing and optional chaining of dependencies, relates to #18985",
    "scaffolding react-fetch + first pass at node implementation",
    "added clear message for functional component starting with lowercase",
    "devtools temporarily disable preparestacktrace before creating custom component stacks",
    "improved profiler tooltip confusing/misleading wording",
    "moved passive effects flag to be beside execution context",
    "implemented profiler oncommit and onpostcommit hooks",
    "updated changelog to remove passive effects change from 16.13 release.",
    "added $flowfixme to devtools shell for module we flow-ignore",
    "updated release script documentation and command names",
    "removed root api callback params and added warnings",
    "removed 'reactinternal' reference in devtools overlay highlighter",
    "re-enabled devtools context menu option in firefox to inspect function prop source",
    "updated devtools changelog to add pending release details",
    "renamed \"reactdom-fb\" imports to \"reactdom\" in www shims",
    "renamed \"backend.js\" to \"react_devtools_backend.js\"",
    "updated devtools changelog to add pending release details",
    "fixed circleci devtools build artifact tar internal structure",
    "added missing guard to devtools for objects with null proto",
    "devtools renable copy attr context menu for firefox",
    "added missing flow type coverage to devtools context menu",
    "improved selection and toggling for props/hooks/state",
    "improved inspected element props with inline previews",
    "findhostinstance_deprecated returns react.elementref<hostcomponent<mixed>>",
    "fixed a bug with illegal invocation for trusted types",
    "replaced === check with object.is to support values like nan",
    "added react devtools v4.1.0 release date to changelog",
    "added string type check for object name prop in getdisplayname function",
    "removed dt inject script since it's no longer being used",
    "removed done, added some comments explaining the change",
    "updated extensions build-from-source instructions in readme",
    "updated devtools extension build script to work when run remotely",
    "fixed a styleeditor variable resolution regression",
    "fixed remaining devtools broken tests by fixing a hydration/spread bug",
    "trying to run tests against pre-build react-dom and react-test-renderers",
    "updated devtools test setup to no longer mock test renerer",
    "configured ci to run devtools tests. updated other test configs not to include devtools tests.",
    "merged changes from 4.0.5 -> 4.0.6 from devtools fork",
    "renamed devtools jest config to be more concistent with others",
    "dispatching events should not work until hydration commits",
    "merged changes from 4.0.0 -> 4.0.5 from devtools fork",
    "updated devtools chanloge to add an unreleased change",
    "added explicit  label next to empty arrays and objects",
    "improved editing props demo experience for todo list",
    "added set+map to dev shell, even though we don't support deep inspecting them yet",
    "refactored to remove need for new webnavigation permission",
    "changed version name string to show version and date. moved commit number into description string.",
    "added overview.md and updated changelog to point to it",
    "added changelog and readmes for devtools v4 npm packages",
    "added better error reporting for print-warnings errors",
    "iterated on webpack configs until i got the inline and shell packages seemingly working",
    "fixed crash when referencing arguments in arrow functions.",
    "moved shell fixture into packages/react-devtools-shell",
    "reorganized to avoid merge conflicts with react repo folder structure",
    "fixed a selection-sync edge case for elements/components tabs",
    "fixed a couple of edge case styling and layout issues i noticed while testing the inline target",
    "adds support for hydrating host components with listeners",
    "added not about sync/batched root api being required",
    "added changelog entries for hoc badges and no in-line props",
    "reverted a webpack config change that broke browser extension styles",
    "adds uselistener implementation to reactdebughooks",
    "reverted style-prop hiding change because it caused a regression in the browser extension",
    "fixed a module resolution issue and a syntax error from a bad merge",
    "tweaked modal title to better fit without wrapping",
    "hardened logic around when and how to patch console methods",
    "changed chrome manifest version from 4.0.0.0 to 4.0.0",
    "updated the hydration test harness to cover a bit more",
    "updated react version check to account for older  versions",
    "moved logic to only send updated filters across bridge to the store",
    "removed settings panel in favor of new shared settings modal",
    "added flow type coverage for all eventemitter subclasses",
    "fixed an increment bug in sidebar for fiber-commits",
    "added context changes to sidebar; fixed a initial-mount detection bug",
    "updated reload-and-profile temp key to use sessiostorage instead of localstorage",
    "fixed an overflow bug. added mode-specific css style for firefox.",
    "decreased contrast of hoc badges in selected props panel",
    "simplified background highlight style now that corner radius has been removed from selected highlight",
    "cleaned up how we measure children and adjust indentation size",
    "removed debounce+animation from indentation adjustment",
    "added selected and hovered guidelines to components tree",
    "backed out bridge shutdown refactor as it seems to have introduced bugs",
    "parallelizes the build script across multiple processes",
    "adds oncontextmenu and fixes some contextmenu related issues",
    "added  and view-source support for memo components",
    "added another  test; refactored getchildren slightly",
    "decreased contrast of disabled button icons to look more obviously disabled",
    "added section about inspecting element to overview",
    "moved profiling-supported subscription into profilercontext",
    "improved visual style of profiling-disabled button",
    "fixed a missing remove-event-listener in profilerstore",
    "tweaked did-not-render text color to be slightly dimmer",
    "fixed a state cleanup issue if profiler data is cleared",
    "updated event subscriptions and getters to use new profilerstore",
    "moved profiling data to profilercontext to fix re-import bug",
    "added export to web shell and removed 'downloads' api permission",
    "renamed store importedprofilingdata -> profilingdata",
    "moved priority level constants into rendeer interface",
    "changed \"unknown\" fallback displayname to \"anonymous\". added memo/forwardref labels to profiler charts.",
    "moved calculation of self duration to the backend/renderer",
    "fixed build chrome not working on windows due to rm command not existing",
    "fixed owners stack direction and added current element to stack",
    "fixed a profiler memoization bug and improved test coverage",
    "updated profiling chart tests to cover components with duration=0",
    "updates snapshots and removes extra formatting from formattime",
    "uses formduration and formtime to format times that are 0 into something more readable",
    "added remaining profiling tests. one currently fails because of a bug with act and interaction tracing",
    "added a second profiling test  and fixed some module reset prolems",
    "cleaned up tests a bit. profiling test uses mock timers now.",
    "removed findcurrentfiberusingslowpath in favor of findcurrentfiberusingslowpathbyid",
    "fixed bug in store.getindexofelementid that caused roots with multiple top-level children to return an incorrect item index",
    "updated flamechart to support multiple nodes at root",
    "fixed a path selection bug when filter pereferences are updated",
    "refactored filter preferences a bit more to be stored in the store",
    "added filter preference types and plugged into renderer partly. lots of work to do still.",
    "reorganized types shared between backend and frontend slightly.",
    "rearranged settings ui in prep for custom filter controls",
    "fixed potential interaction tracing leak in suspense thennable memoization",
    "changed owners back button label to say 'up to <...>'",
    "moved owners list calculations into the store and added tests",
    "added 'back to owner' button when owners stack is collapsed",
    "reverted optimization to avoid re-sending inspected fiber unless it committed",
    "reverted optimization to avoid re-sending inspected fiber unless it committed",
    "fixed suspense fallback issue by moving inspection message side effect before suspending render",
    "changed polling approach. fixed remove event typo.",
    "tried to implement two setstate pattern, but it does not feel right",
    "adding polling and initial stab at not serializing duplicate inspected element props",
    "refactored insepected element cache to use the context api",
    "fixed focus styles for ownersstack dropdown toggle button",
    "tweaked hover and focus colors. temporarily disabled tooltip.",
    "tweaking focus/active colors and only showing focus rect on tab",
    "changed style and position of search-for-element button to more closely matchin chrome",
    "increased contrast for selected+inactive background color",
    "renamed tree_operation_reset_children -> tree_operation_reorder_children",
    "fixed bug in reset-children to properly calculate new root weight",
    "fixed a suspense toggling bug that incorrectly impacted tree weight",
    "fixed a bug with re-ordering of children within a collapsed node",
    "fixed some edge cases with collapsed by default. still some bugs existing.",
    "fixed an edge case profiling bug where the number of commits was wrong",
    "changed highlight-on-search behavior to use treecontext",
    "moved a few vars inside of the setuptest beforeeach block",
    "added expand/collapse tests; chronologically ordered snapshots",
    "added  indicator to store snapshot reprensentation",
    "removed unnecessary configurable bridge batch duration",
    "refactored keyvalue toggle so columns with toggles align better below those without",
    "moved blur/focus up to the autosizer wrapper and removed an effect+ref",
    "reverted some unnecessary changes to treecontext after dan's pr 101 was merged",
    "renamed _numelements attribute based on pr feedback",
    "added istoggled boolean to tree nodes and toggleiscollapsed method to store",
    "selected search result auto-opens collapsed nodes when necessary.",
    "left/right arrow toggles node collapsed state as well",
    "tweaked owners stack css to fix another overflow issue",
    "fixed tree minwidth initial case to fill 100% width",
    "fixed owner stack size calculation bug that sometimes caused bad overflow",
    "added  fork of @reach/portal to unblock ownersstack menubutton pr",
    "updated ownersstack css to properly override react styles",
    "fixed an unpleasant interaction with owners modal \"...\" button",
    "added export-log icon. removed unnecessary variable assignment.",
    "removed unnecessary layout effect in favor of a setstate",
    "replaced some passive effects with layout effects to avoid flash of overflowed owners",
    "replaced \"colon\" icon with more standard 3-dot \"more\"",
    "improved keyboard navigation for tabs, interactions, and fiber-commits",
    "removed unneeded min-height. using throttle for resize function.",
    "moved getelementdimensions back into overlay component",
    "improved keyboard ux and focus ui for tree and ownersstack",
    "renamed innerelementtype -> innerelementtype to avoid confusing hooks lint rule",
    "added truncation ui indicator for hooks. addressed lint rule violations.",
    "hardened background script against potential errors",
    "added option to disable screenshot capturing while profiling",
    "renamed globalhook content script references to injectglobalhook to avoid confusion",
    "fixed editing props for memo and forwardref components",
    "adds displayname to eventcomponent and eventtarget",
    "fixed some missing operations that could happen after reload-and-profile",
    "added export and clear buttons for profiler, cleaned up record toggle",
    "added initial support for eventcomponent/eventtarget",
    "enabled warnaboutdeprecatedlifecycles flag by default",
    "adds react event component and react event target support to ssr renderer",
    "implemented reload-and-profile. also fixed an couple of minor profiling bugs along the way",
    "adds experimental event component responder surfaces",
    "added arrow key navigation for commits and interactions",
    "clicking commits and interactions link to each other",
    "added suspense to todo list and added interactions to 'commit info' panel",
    "fixed a bug where treebasedurations were undefined for fibers that were unmounted during profiling",
    "fixed keyboard/mouse events inside of extension by using ref.ownerdocument",
    "added profiling-not-supported message for browser extension",
    "tweaked profiling did-not-render color to be dimmer",
    "refactored portaling and fixed disconnected css vars",
    "added ranked chart data generation; fixed some logic errors in backend tree base duration tracking",
    "iterating on profiling tab suspense. stashing changes but planning to refactor immediately.",
    "refactored profiler tree to better work with suspense",
    "moved some things from profilercontext reducer into  store",
    "added initial suspense cache and loaded commit metadata",
    "added planned profiler architecture to overview doc to share with others",
    "changed profilersummary messages to be lazy as well",
    "fixed selecterd element background color being cut-off when tree scrolls",
    "removed unnecessary relative position style from element css",
    "updated to account for facebook/react/pull/14906/commits/cdd9ba4",
    "removed an unnecessary entry from add-root operation array",
    "changed select-on-click to select-on-mouse-down and fixed a scrollintoview problem",
    "fixed incompatibility between react-debug-tools and usecontext",
    "re-added transferrables  and guard against a tree mutation race",
    "split large inspectedelementtree file into separate component-files",
    "updated editable hooks ui and added limited undo feature",
    "fixed null input value. tweaked usereducer test harness.",
    "updated flow-bin from 91 -> 93 and removed unnecessary fixmes",
    "adding reactnative.setnativeprops that takes a ref",
    "adding setnativeprops tests for nativemethodsmixin",
    "installed eslint-plugin-react-hooks@next and added to eslint config",
    "fixed broken 'shutdown' event that lead to cpu problems when reloading devtools",
    "fixed edge case mutation bugs in selected element and tree context",
    "reduced tree padding  slightly to make larger trees easier to inspect",
    "re-added \"settings\" panel to browser extension and  fixed a lot of sources of error",
    "split demo app into multiple roots and fixed a multi-root bug",
    "added new tabs ui and theme/display-density preferences",
    "combined search and selection contexts to avoid complicated dependencies",
    "replaced searchcontext usestates with usereducer and fixed an edge-case search bug",
    "tweaked publish canary message to show newly published version",
    "tweaked owners breadcrumb style to batter match tree colors",
    "refactored tree, search, selection, and owners contexts",
    "added properties panel and selected element context",
    "fixed potential race cases in bridge/store/backend initialization",
    "tweaked error message to provide more helpful info if shown",
    "refactored bridge to support transferrables  and added transferable param to postmessage for op codes",
    "replaced node objects with typed array of tree operations; windowing works in small test harness",
    "removed throttling. it's too error prone because of mutations . we'll optimize later by using the effects list for updates.",
    "removed fabric-specific feature flag files and updated rollup to use the  react native flag files.",
    "added errorboundary tests for useeffect and uselayouteffect",
    "updated version incrementing suggestion in release script based on team discussion",
    "updating package versions for release 16.6.0-alpha.8af6728",
    "removed extra typeof checks for contexttype.unstable_read",
    "updating package versions for release 16.6.0-alpha.0",
    "added react-dom/profiling entry point to npm package",
    "fixed schedule/tracking require for www sync script",
    "renamed schedule umd forwarding methods to stay in-sync with secret_internals change",
    "added jest test to verify umd api-forwarding for scheduling package",
    "removed unused state argument in unsubscribe method of <subscription />",
    "fixed a typo in commentout in reactfiberunwindwork.js",
    "suspending inside a constructor outside of strict mode",
    "added ssr/hydration tests for modes, forwardref, and profiler",
    "renamed selfbasetime/treebasetime fiber attributes to selfbaseduration/treebaseduration",
    "suspending outside of strict trees and async trees",
    "setting a flag, so that the first movement will have the correct value",
    "fixes children when using dangerouslysetinnerhtml in a selected <option>",
    "adding movementx and movementy to synthenticmouseevent fixes #6723",
    "suspended high pri work forces lower priority work to expire early",
    "fixed an issue with nested contexts unwinding when server rendering. issue #12984",
    "adds reactscheduler red->green unit test for bug fixed in #12834",
    "split reactnoop into normal and persistent exports",
    "fixed debug performance labels for new component types",
    "updated react-is readme to show new isvalidelementtype",
    "added dev warning if getsnapshotbeforeupdate is defined as a static method",
    "updating package versions for release 16.3.0-alpha.3",
    "expanded dev-only warnings for gdsfp and legacy lifecycles",
    "replaced object building loop with object.assign function",
    "fixed a batched-state update bug with getderivedstatefromprops",
    "updating package versions for release 16.3.0-alpha.2",
    "updating yarn.lock file for 16.3.0-alpha.2 release",
    "forked reactnativeinjection for fabric and avoid rcteventemitter setup in fabric",
    "ignored fiber tags which shows unknow in performance tabs",
    "updating package versions for release 16.3.0-alpha.1",
    "fixed descrepancy between host and class component refs",
    "changed cwm/cwrp/cwu deprecations to low-pri warnings",
    "updating package versions for release 16.3.0-alpha.0",
    "exposes the host container to prepareforcommit and resetaftercommit",
    "improved towarndev matcher to avoid swallowing errors",
    "adds danger and a rule showing build size differences",
    "changed {} in pck.json and split them with && in fixtures",
    "updated misleading error message in production environment when adding ref to a functional component",
    "fixed potential false-positive in towarndev matcher",
    "enables ctrl + enter for keypress event on browsers other than firefox",
    "updated towarndev matcher so that reactfiberscheduler won't suppress its errors",
    "adds module and bundle type metadata to the rollup results json",
    "adds deprecation warning for reactdom.unstable_createportal",
    "changed the way we double-invoke cwm lifecycle hook",
    "rewrote reactincrementalperf-test using only public api.",
    "switching the name property preserves radio selection",
    "migrating to const/let and object spread in more places",
    "reading package.json safely in the build script by ignoring the system files. #11544",
    "updating package versions for release 16.1.0-beta.1",
    "fixed invalid prop types error message to be more specific",
    "added mit license badge along with other existing badges.",
    "changed the error message displayed when a select element has props.multiple set to true and value set to null",
    "added naive scheduledeferredcallback implementation for rn",
    "added unit test that would have caught the recent error code transform regression",
    "removed useless typechecking, because this file have`t flow comment",
    "removed test utils dependency on test renderer from bundle config",
    "split host config out into a mutable or immutable mode",
    "added check to deduplicate function type warning calls on each compon\u2026",
    "refactored installation page to no longer use tabs",
    "fixing how to contribute beginner friendly issues github link",
    "added unstable_batchedupdates as breaking change to v16 post",
    "updated createtextinstance to create the text node on correct document",
    "adding the correct argument name to documentation tag",
    "removed reactnativefeatureflag shim from rn bundle",
    "added unit tests for creating an element with a ref in a constructor. only set reactcurrentowner.current in dev mode when the component has no constructor.",
    "added \"advanced guides\" page about cross-origin errros",
    "built 16.0.0 beta 3. updated versions, results.json, and error codes",
    "wraps two warnings that should be removed from prod",
    "split markup generation from dom property management",
    "replaced \"unstable_handleerror\" with \"componentdidcatch\"",
    "adding missing assertion to reactdomcomponent-test",
    "failed error boundaries are a special case of resuming work",
    "adding react alicante 2017 to upcoming conferences",
    "fix <input type=\"number\" /> value '.98' should not be equal to '0.98'.",
    "fixed arity issues in advance of flow strict checking being enabled",
    "adds getname to base component, to be used by rn inspector",
    "corrected a stubbed modules problem for rn fiber bundle",
    "adds a reactnativeinspector api to reactnativerenderer",
    "warning message updated if defaultprops were defined as an instance property",
    "added stack renderer to react-test-renderer bundle temporarily",
    "updated proptypes test to work with newer prop-types version",
    "adds css grid properties to list of unitless numbers",
    "fixing the instantiation of customized builtin elements",
    "updated recommended links for installation in readme",
    "amended implementation-notes.md with link to dan abramov's post describing difference between react components, elements, and instances",
    "fixes the eager react-dom replacement on the rollup plugin",
    "synced reactnativefiber bugfix for leaf-node children",
    "fixes circleci/upload_build.sh paths for dist files",
    "moved the jsdoc for invokeguardedcallback to correct position",
    "added explicit null return to completeunitofwork to resolve flow error",
    "deleted a specific code for ie8 - document.selection",
    "added dev condition around getdeclarationerroraddendum contents",
    "adding fix to eventpropagators that was accidentally omitted from pr #9219",
    "added jest-cli to the package.json for the fiber record-tests script.",
    "added missing @flow annotation to reactnativefeatureflags file",
    "adding new ssr tests for context, refs, and reviving markup.",
    "updated reactnative findnodehandle to handle number case",
    "removed optimization for events without target in reactnativeeventemitter",
    "upgraded flow dev dependency to 41 for 'implements' support",
    "moved non dev methods to a new file called reactfibercomponenttreehook.js",
    "added guards in place to prevent mixed prod+dev errors from occuring",
    "fixed flow issues and bug resulting in failing tests",
    "reverted the getchildcontext warning from showing on functional components in fiber",
    "reverts previous changes to inlining requires and fixes test suite instead",
    "improved stack/fiber type-check to avoid false negative match when inst._rootnodeid is 0",
    "adds childcontexttypes warnings for functional components",
    "moved require to inline calls to get around referential mismatch",
    "hardened validatecallback to better handle null values",
    "rendering into an empty react-rendered element should not warn",
    "got rid of linting errors on windows machines and a number of linting warnings.",
    "bumping package.json versions from 16.0.0-alpha.0 to 16.0.0-alpha.1",
    "tweaked captured error log slightly based on feedback",
    "updating thinking in react doc to replace refs with event handlers",
    "replaced an update effect\u00a0in complete phase with a ref effect",
    "added memoization test for interrupted low-priority renders",
    "improved error message wording for missing getchildcontext method",
    "fixed stray text appearing on top of the navbar at small screen sizes",
    "improved flowtypes in response to code review feedback",
    "removed exact object type for stackcursor flow type",
    "combined unwindcontext and unwindhostcontext into unwindcontexts",
    "tightened up fiber | null type in reactfiberstack to always require fiber",
    "added reactfiberstack shared by reactfibercontext and reactfiberhostcontext",
    "added new fiber-based renderer for native dubbed reactnativefiber",
    "renamed initializejavascriptappengine mock to initializecore.",
    "renamed initializejavascriptappengine to initializecore",
    "added additional test case for reactfiberbeginwork reset-text",
    "split mountcomponent into create and set initial properties",
    "improved some sections of the introducing jsx docs",
    "finddomnode when a component is not yet mounted or unmounted",
    "injected host component classes are not being considered by the reconciler",
    "removing parent/child references in props section of tutorial",
    "changed reactchildrenmutationwarninghook to object.freeze",
    "guarded ensurescrollvaluemonitoring against some malicious script on the internet overriding native document.createevent",
    "adds minor additions clarifying questions i had reading intro tutorial",
    "codemodded tests from createclass to es2015 classes",
    "added more specific warning for using ondblclick instead of ondoubleclick",
    "fixed an invalid escape char in attribute name regexp",
    "added tests for repeated calls to reactperf.start/stop",
    "fixed removing attributes during custom element update. fixes #6747",
    "added isprofiling to reactdebugtool and isrunning to perftools",
    "switching between null and a native should not be counted as a waste",
    "re-added support for attaching events to document fragments",
    "added new documentation showing use of a custom validator for arrayof or objectof, specifically how the method signature for such a validator differs from the customprop validator method signature. made minor edits to error message for customprop example to match error messages found in src.",
    "removed script security attributes, since fb.me isn't setting the proper headers.",
    "added border-image-outset css property to unitless properties",
    "fixed some linting warnings and some mis-spacing in syntheticevent warnings.",
    "using object.is implementation when compare values inside react.proptypes.oneof",
    "added icon for external links in docs nav and unlinked complementary tools and examples in favor of this icon",
    "added support for synthetic animation/transition events.",
    "included sri hashes for fb.me links on download page",
    "added additional detail to \"props-in-getinitialstate\" anti-pattern doc",
    "updated reactcompositecomponent to trigger componentwillreceiveprops when either props or context change. fixes issue #5756",
    "removed note explaining why the logic is there, since the justification is now different.",
    "capitalizes first letter of first word in the step 1 instruction",
    "added post about components, elements, and instances",
    "fixed docs on reactelement that were out of sync with code",
    "added post about upgrading your code to avoid ismounted",
    "helps avoid a common issue when following tutorial",
    "added nuance about identifiers used in custom elements",
    "adding documentation pages for shallowcompare addon",
    "removed unnecessary whitespace before closing bracket",
    "updates the warning that is displayed when `setstate` is called",
    "adding validation for arrayof and objectof in reactproptypes",
    "corrected highlighted line in tutorial example in tutorial7.js",
    "added selection and composition events to reference page",
    "wrapping statelesscomponent ref warning in __dev__ block",
    "added documentation for stateless components, condensed the two pages about refs into a single page.",
    "added a note about needing document globally available",
    "updated stateless ref warning message with more info",
    "making sure reactdomserver always uses serverreactrootindex, even on an environment that can use dom",
    "renamed componentinstance to publiccomponentinstance",
    "extracted \"safe taint\" in docs/homepage to align with best practice #4212",
    "resolves issue #4168, style prop error now names react class that erroring element is a child of.",
    "added warning when calling methods on a released event.",
    "added note about multiple reacts, since this error commonly implies that.",
    "added suggested comment to get file to pass es-lint",
    "removed dangling comma that messes up loading in ie8",
    "removed `npm run jest` script.  users can use `npm test` instead.",
    "improved performance for our adler32 implementation",
    "removed flattened children object for initial render.  fixes #4405",
    "fixed basic-jsx example, which got clobbered during a prior bug investigation",
    "fixed grammar in cla section of contribution guide",
    "fixed confusing use of the word/name  in documentation",
    "added warning for mispelling of componentwillreceiveprops and updated tests",
    "reversed line 54  in reactupdatequeue.js and added it to the line above",
    "added component displayname to warning message in reactupdatequeue.js",
    "added challenge, keyparams and keytype on <keygen>",
    "fixed failing unit tests in browsers that don't support webcomponents",
    "replaced call to deprected .getdomnode with react.finddomnode.",
    "added animate initial mounting section to animation docs",
    "updated some typos, grammers, and made sentences sound better",
    "removed redundant grave accent character from component api docs",
    "fixed jsfiddles broken from https conversion.  fixes 3735",
    "added support for svg clippath element and clip-path attribute",
    "added unit test to verify that context treats the component doing a render as the parent.",
    "suggested edit adds clarity regarding when 'shouldcomponentupdate' is triggered and what the 're-rendering' process entails.",
    "fixed link to displayname component spec from jsx in depth article",
    "added support for the 'low', 'high', and 'optimum' attributes that the <meter> tag requires.",
    "adding docs for componentwillappear and componentdidappear",
    "added webcomponents.js and a simple unit test verifying a document fragment as a valid react container.",
    "translated docs/docs/02-displaying-data.md into korean",
    "fixed shallowequal implementation to handle the case when inputs are not objects.",
    "added docs about the first-parameter-is-function version of setstate.",
    "updated docs examples/recommendations to use finddomnode instead of getdomnode",
    "changed the url of the video in community-round-up-4",
    "added the immutability talk to the react.js conf update.",
    "added special edition round-up for react.js conf 2015",
    "fixed copyright year for three files and react.js licence to bsd-license.",
    "split escapetextforbrowser into escapetextcontentforbrowser and quoteattributevalueforbrowser",
    "added itemref and itemid for complete microdata support.",
    "added jsx_orphaned_brackets_transformer for breaking jsx parser change",
    "changed itemid to itemid and added clarity to the comments of where it is specified.",
    "expecting transform not to throw.  removed meaningless comment.",
    "changed unit to pixels due to inconsitent font-size rendering of code elements.",
    "fixed linewrap issue on markdown output css.  fixes #2986",
    "updated tutorial to be more clear about the dependence on the --harmony flag.",
    "adds a composite component for an iframe to handle load events",
    "suggesting the use of immutable js for comparisons",
    "added jasmine matcher that expects calls to console.warn.",
    "added finddomnode, as we move toward deprecating getdomnode",
    "fixed reacttestutils scry for textcomponents.  fixes issue #2654.",
    "added checks for incorrect usage of innerhtml. fixes #1370",
    "replaced document.createelement with reacttestutils.renderintodocument where container was not subsequently utilized.",
    "removed context paremeter to rendertostring/rendertostaticmarkup.",
    "added warning if owner-based and parent-based contexts differ.",
    "adding \"appear\" phase to reacttransitiongroup and reactcsstransitiongroup.",
    "extending period in which click events are ignored",
    "extracts getmeasurementssummarymap from reactdefaultperf.printwasted",
    "corrected highlighted/updated line in tutorial example",
    "changed type info. added descriptor to descriptions",
    "cancelling travis build on commits with docs updates only.",
    "simplified and improved test-cases for reactmultichildtext-test",
    "adding a note just below the jquery inclusion in the tutorial to inform that jquery is not mandatory.",
    "using the markdown's quote syntax and explaining why use include jquery",
    "adding \"tutorial\" label to flux todo list nav item",
    "preparing to move defaultprops resolution and type validation to the descriptor",
    "removes value from rendered attributes of textarea",
    "added 'objectof' proptype validator to iterate on object literals and",
    "updated the ajax to tip to also mention that you need to check",
    "fixed a couple of issues with link to tagtree.tv video",
    "added dx and dy for laying out text with relative offsets",
    "renamed commojs task to bundle, added failing build if bundler failed.",
    "renamed `browserify` tasks/configs to `cjs`, updated pure-cjs to 1.9.0 for better build speed.",
    "included link to react devtools in tooling-integration. fixes #791",
    "adding current page's url for inline code and code improvement",
    "updating error message to also show part of the code, making it easier to find the error",
    "adds the filename to jsxtransform error message, making it easier to debug jsx syntax errors.",
    "adding 'scope' to list of standard html attributes in react",
    "updated getmarkupwrap.js to include the new svg elements",
    "adding warning about the lack of support for onscroll on ie8",
    "making 'native dom' nodes more explicit in documentation",
    "updated the animation-fix to account for transitionenter being false.",
    "fixes an issue where the list of files to test isn't complete",
    "renamed cookbook references to tips. reworded intro",
    "prevents header anchors from interfering with clickable content.",
    "removed grunt task for building live edits and removed js link conditional at bottom of layout since we're no longer conditionally loading live edit js for cookbook pages",
    "removed .js extension from cookbook introduction description",
    "removing the grunt task generated live edit js files since we're holding off on the inline edit feature for now",
    "added seperate cookbook layout , added next/prev yaml meta to each cookbook entry until i can find a way of generating them dynamically",
    "added backgroundimage example to \"inline styles\" cookbook entry",
    "added docs for react cookbook section introduction and inline styles react recipe",
    "moved cookbook recipes into separate directory. updated nav_docs to loop through cookbook yaml. added cookbook directory to js/ to add live editing of code samples",
    "fixed broken link on community round-up #9 blog post",
    "benchmarking tool for react application performance",
    "changing back to 'give it five minutes', tweak that sentence",
    "changed json data in the tutorial to use double quotes for strings.",
    "removing invariant warning about updating owner state",
    "adding instructions for chrome. (no server needed! just execute a single command",
    "introducing a submit button in the tutorial's comment form"
  ],
  "large_diffs": [
    "guard against unmounted components when accessing public instances on fabric",
    "add a feature flag to enable expiration of retry lanes",
    "carry forward bootstrap config to resume if postponing in the shell",
    "update stack diffing algorithm in describenativecomponentframe",
    "generate sourcemaps for production build artifacts",
    "implement `onheaders` and `headerslengthhint` options",
    "expose `encodereply` from reactflightdomclientedge",
    "add optional initialvalue argument to usedeferredvalue",
    "fix children rendering in custom elements with `enablecustomelementpropertysupport`",
    "move reactcurrentdispatcher back to shared internals",
    "warn if optimistic state is updated outside of a transition",
    "add feature flag to use microtasks in the react native fabric renderer",
    "enforce that the \"react-server\" build of \"react\" is used",
    "dedupe suspense boundaries when it has already been found earlier",
    "stop flowing and then abort if a stream is cancelled",
    "use murmurhash3 when native hashing function is not available",
    "hash the component key path for more compact output",
    "show disclaimer when page doesnt run react and refactor react polling logic",
    "encode lazy node slots properly in key path and resumable paths",
    "track the key path difference between right before the first array",
    "include `preloadmodule` and `preinitmodule` on `react-dom/server-rendering-stub`",
    "split createrequest into createrequest, createprerenderrequest and resumerequest",
    "provide property descriptors for client references",
    "migrate from using setinterval for polling if react is loaded",
    "handle tab navigation events before react is loaded",
    "handle ports disconnection, instead of frequent reconnection",
    "useformstate's permalink option changes form target",
    "set priority on taskcontroller instead of on posttask/yield",
    "allow element updates polling only if bridge is alive",
    "resolve browser via env variables based on build rather than user agent",
    "add `importmap` option to fizz and static server renderers",
    "fix srcset and sizes handling for suspensey img preloads",
    "remove unused/redundant variables from scheduler implementation",
    "fix crash when suspending in shell during useses re-render",
    "rename suspenselist export to unstable_suspenselist",
    "add unstable_batchedupdates to server-rendering-stub",
    "detect and warn about native async function components in development",
    "detect infinite update loops caused by render phase updates",
    "add serialization of typed arrays / arraybuffer / dataview",
    "instrument the promise for async module instead of using a module cache",
    "detect infinite update loops caused by render phase updates \"",
    "fix disablestrictpassiveeffect not working under suspense",
    "check if fiber is unmounted before trying to highlight",
    "add a temporary internal option to disable double useeffect in legacy strict mode",
    "support imagesrcset and imagesizes for `reactdom.preload`",
    "ensure updates are applied when diffincommitphase is on",
    "add crossorigin support for preloading bootstrap scripts and bootstrap modules",
    "add support for 'crossorigin' attribute on bootstrapscripts and bootstrapmodules",
    "stop automatically preloading scripts that are not script resources",
    "expose getinspectordataforinstance in rendererconfig",
    "support fetchpriority on `reactdom.preload` and `reactdom.preinit`",
    "stop preloading stylesheets that are not stylesheet resources",
    "retain scripts on `clearcontainer` and `clearsingleton`",
    "compare name when hydrating hidden fields to filter out extra form action fields",
    "update preload links to support nonce and fetchpriority",
    "reuse request so that a reabablestream body does not become disturbed",
    "allow an action provide a custom set of props to use for progressive enhancement",
    "add nonce support to bootstrap scripts and external runtime",
    "restore server controlled form fields to whatever they should be",
    "insert temporary input node to polyfill submitter argument in formdata",
    "change dom hostcontext to number instead of string",
    "enable float methods to be called outside of render",
    "remove named hooks & profiler changed hook indices feature flags",
    "use backend manager to support multiple backends in extension",
    "add a way to create server reference proxies on the client",
    "remove revertremovalofsiblingprerendering killswitch",
    "use already extracted values instead of reading off props for controlled components",
    "move validation of text nesting into reactdomcomponent",
    "rename hostconfig files to fiberconfig to clarify they are configs fo\u2026",
    "normalize reactflightserverconfig and related files",
    "move shared types & constants to consolidated locations",
    "move didschedulelegacyupdate to ensurerootisscheduled",
    "remove findinstanceblockingevent unused parameters",
    "implement public instances for text nodes in fabric",
    "put common aliases in map/set instead of switch over strings",
    "generate safe javascript url instead of throwing with disablejavascripturls is on",
    "clean up enablecapturephaseselectivehydrationwithoutdiscreteeventreplay",
    "update usememocache test to confirm that cache persists across errors",
    "limit the meaning of \"custom element\" to not include `is`",
    "remove unused feature flag disableschedulertimeoutbasedonreactexpirationtime",
    "implement waitforcommittobeready for stylesheet resources",
    "remove reactfabricpublicinstance and used definition from reactnativeprivateinterface",
    "remove extra render pass when reverting to client render",
    "check if suspensey instance resolves in immediate task",
    "avoid meta programming to initialize functions in module scope",
    "remove featureflags fork for `react-dom/unstable_testing`",
    "convert more scheduler.unstable_flushall in tests to new test utils",
    "split out serverreferencemetadata into id and bound arguments",
    "restore definition of nativemethods as an object for react native",
    "upgrade electron to latest version & security improvements",
    "remove timers from reactdomsuspenseplaceholder tests",
    "implement a faster hydration match for hoistable elements",
    "move suspended render logic to ensurerootisscheduled",
    "extract duplicated methods in fabric and the legacy renderer to a shared module",
    "simplify webpack references by encoding file path + export name as single id",
    "implement preconnect and prefetchdns float methods",
    "move flight fixture to use middleware instead of webdevserver",
    "copy from build to node_modules instead of linking to builds",
    "split out edge and node implementations of the flight client",
    "move mutation/persistence fork inline into the functions",
    "update rollup and related plugins to their most recent versions",
    "create a bunch of custom webpack vs unbundled node bundles",
    "enable passing server references from server to client",
    "implement unstable_getboundingclientrect in rn fabric refs",
    "replace devtools `semver` usages with `compare-versions` for smaller bundle size",
    "revert \"move the webpack manifest config to one level deeper \"",
    "update flight fixture to \"use client\" instead of .client.js",
    "move the webpack manifest config to one level deeper",
    "rename \"dom\" fork to \"dom-node\" and \"bun\" fork to \"dom-bun\"",
    "support highlights for react native apps in dev tools",
    "improve error messages when access client references",
    "remove feature flags warnaboutdefaultpropsonfunctioncomponents and warnaboutstringrefs",
    "remove unused values from reactfeatureflags.www-dynamic",
    "remove old feature flag warnaboutdeprecatedlifecycles",
    "transform updates to support flow this annotation syntax",
    "unify `use` and `renderdidsuspenddelayifpossible` implementations",
    "revert values in reactfiberflags to keep consistency for devtools",
    "add github action to commit build artifacts for facebook",
    "add option to send instructions as data attributes",
    "enable warning for defaultprops on function components for everyone",
    "turn on key spread warning in jsx-runtime for everyone",
    "remove recoverable error when a sync update flows into a dehydrated boundary",
    "turn on string ref deprecation warning for everybody",
    "fix usesyncexternalstore dropped update when state is dispatched in render phase",
    "move fizz external runtime implementation to react-dom-bindings",
    "make host context use null as empty and only error in dev",
    "handle resource resource creation inside svg context",
    "extract logic for detecting bad fallback to helper",
    "split suspended work loop logic into separate functions",
    "detect and warn if use is wrapped with try/catch block",
    "remove old react-fetch, react-fs and react-pg libraries",
    "try assigning fetch to globalthis if global assignment fails",
    "fix coordination of resource identity and hydration",
    "update cache and use to the canary aka next channel",
    "use asynclocalstorage to extend the scope of the cache to micro tasks",
    "add warnings for non-resources rendered outside body or head",
    "lint for presence of useevent functions in dependency lists",
    "rename react-server-dom-webpack entry points to /client and /server",
    "add option to load fizz runtime from external file",
    "improve error messages when invalid object is passed to client/host components",
    "allow async functions to be used in server components",
    "update safe-string-coercion to handle additions of string literals",
    "make rulesofhooks-test more consistent with exhaustivedeps-test",
    "move react-dom implementation files to react-dom-bindings",
    "implement error digests for flight runtime and expose errorinfo in getderivedstatefromerror",
    "implement flightclient in terms of thenable/promises instead of throwing promises",
    "unwind the current workinprogress if it's suspended",
    "prevent infinite re-renders in strictmode + offscreen",
    "handle info, group, and groupcollapsed in strict mode logging",
    "rename local_storage_should_patch_console_key to local_storage_should_append_component_stack_key",
    "remove reactfiberflags mountlayoutdev and mountpassivedev",
    "support subresource integrity for bootstrapscripts and bootstrapmodules",
    "make preamble and postamble types explicit and fix typo",
    "implement basic stylesheet resources for react-dom",
    "remove argument committedlanes from reappearlayouteffects and recursivelytraversereappearlayouteffects",
    "remove rootcontainerinstance from unnecessary places",
    "add logs for profiler tab switch & settings change",
    "remove forwardref/memo from display name if `displayname` is set",
    "throw custom error instead of relying on runtime error",
    "improve coverage of currentdispatcher.current setter",
    "use recursion to traverse during \"reappear layout\" phase",
    "use recursion to traverse during \"disappear layout\" phase",
    "use recursion to traverse during passive unmount phase",
    "rename transitioncallbacks to unstable_transitioncallbacks",
    "use recursion to traverse during passive mount phase",
    "mount/unmount passive effects when offscreen visibility changes",
    "enable `enableprofilercomponenttree` flag for all builds",
    "defer setstate callbacks until component is visible",
    "fix devtools perf issue when unmounting large react subtrees",
    "revert \"revert  refactor transition tracing root code\"",
    "fix hydration warning suppression in text comparisons",
    "add entry points for \"static\" server rendering passes",
    "revert \"land enableclientrenderfallbackontextmismatch\"",
    "move rendertostring tests out of the streamable api tests",
    "update error transform to allow excluding errors inside subexpressions like ternaries",
    "add --replacebuild option to older react builds download script",
    "add a module map option to the webpack flight client",
    "add circleci chron job for devtools regression tests",
    "match preact behavior for boolean props on custom elements",
    "fix ignored setstate in safari when iframe is touched",
    "ignore tests without reactversion pragma if react_version specified",
    "fix formatwithstyles not styling the results if the first argument is an object + added unit tests",
    "add pragma to only run tests if version requirement satisfied",
    "improve devtools ui when inspecting a user component that throws an error",
    "remove enablepersistentoffscreenhostcontainer flag",
    "suppress hydration warnings when a preceding sibling suspends",
    "revert \"clean up selective hydration / event replay flag \"",
    "escape bootstrapscriptcontent for javascript embedding into html",
    "fix race condition between interleaved and non-interleaved updates",
    "add transition to offscreenstate and pendingsuspenseboundaries to rootstate",
    "fix infinite update loop that happens when an unmemoized value is passed to usedeferredvalue",
    "replace zero with nolanes for consistency in fiberlane",
    "combine deletion phase into single recursive function",
    "move reportuncaughterrorindev to capturecommitphaseerror",
    "move ad hoc flag checks into main switch statement",
    "update types for inputcontinuouslane and defaultlane",
    "fix false positive lint error with large number of branches",
    "fix suppresshydrationwarning not working in production",
    "wrap uncaught error from rendering user's component",
    "attach devtools tree keyboard events to the tree container",
    "add details in readmes for react-devtools local developement",
    "allow updating dehydrated root at lower priority without forcing client render",
    "fix inspecting an element in a nested renderer bug",
    "disable unsupported bridge protocol version dialog and add workaround for old protocol operations format",
    "match select value against primitives to string but not undefined",
    "allow updates at lower pri without forcing client render",
    "update test to reset modules instead of using private state",
    "rename node ssr callbacks to onshellready/onallready and other fixes",
    "reassign src from props not the dom element src property",
    "add more warnings for second argument to root.render.",
    "update error message for suspending at sync priority",
    "remove hacky stream.locked check, declare as byte stream instead",
    "add back skipunmountedboundaries flag only for www",
    "fix getsnapshot warning when a selector returns nan",
    "remove dependency on offscreen fiber updatequeue for react cache",
    "disallow comments as dom containers for createroot",
    "remove public export for unstable-shared-subset.js",
    "switch to client rendering if root receives update",
    "exclude react-dom/unstable_testing entry point from stable releases",
    "react native raw event eventemitter - intended for app-specific perf listeners and debugging",
    "add back warning with component stack on hydration mismatch",
    "add onrecoverableerror option to hydrateroot, createroot",
    "fix context providers in ssr when handling multiple requests",
    "filter out deleted components that are added to the updaters list",
    "add jest snapshot serializer for number formatting",
    "fix production-only updatesyncexternalstore crash when doing setstate in render",
    "fix context propagation for offscreen/fallback trees",
    "enable scheduling profiler flag in react-dom/testing builds",
    "allow functions to be passed to custom element setters",
    "fix setstate ignored in safari when iframe is added to dom in the same commit",
    "use reactdom test selector api in devtools e2e tests",
    "advocate for strictmode usage within components tree",
    "update reactflightwebpackplugin to be compatiable with webpack v5",
    "update deprecated features in eslint configuration files.",
    "ensure devtools e2e test use a compatible react-is version",
    "remove unused react-internal/invariant-args eslint rule.",
    "move unstable_schedulehydration to reactdomhydrationroot",
    "throw on hydration mismatch and force client rendering if boundary hasn't suspended within concurrent root",
    "rename  \"scheduling profiler\" references to \"timeline\"",
    "display root type for root updates in \"what caused this update?\"",
    "follow-up improvements to error code extraction infra",
    "expand act warning to cover all apis that might schedule react work",
    "revert logic for checking for duplicate installations of devtools",
    "relax constraint on passing extensionid for backend init",
    "support nonce option to be passed to inline scripts",
    "add option to inject bootstrapping script tags after the shell is injected",
    "support disabling spurious act warnings with a global environment flag",
    "replace global `jest` heuristic with `is_react_act_environment`",
    "show warning in ui when duplicate installations of devtools extension are detected",
    "update test and stack frame code to support newer v8 stack formats",
    "allow to use the profiler when no client is connected in standalone devtools",
    "update fiber logic in backend renderer to match implementation in react",
    "prevent errors/crashing when multiple installs of devtools are present",
    "show different error boundary ui for timeouts than normal errors",
    "add new jest --compact-console flag for devtools tests",
    "call get snapshot in usesyncexternalstore server shim",
    "pass in destination lazily to startflowing instead of in createrequest",
    "add initial apis for logging instrumentation events under feature flag",
    "update error message to include uselayouteffect or useeffect on bad e\u2026",
    "test bad useeffect return value with noop-renderer",
    "prevent infinite update loop caused by a synchronous update in a passive effect",
    "add warning and test for usesyncexternalstore when getsnapshot isn't cached",
    "adjust consolemanagedbydevtoolsduringstrictmode feature flag",
    "add consolemanagedbydevtoolsduringstrictmode feature flag in react reconciler",
    "add consolemanagedbydevtoolsduringstrictmode feature flag in devtools #22215",
    "throw error in console without interfering with logs",
    "add more detailed error handling if profiling data does not have any react marks",
    "reset cached indices in store after elements reordered",
    "update error indices when elements are added/removed",
    "support object destructuring pattern without runtime errors",
    "revert \"show a soft error when a text string or number is supplied as a child to non text wrappers \"",
    "show a soft error when a text string or number is supplied as a child to non text wrappers",
    "remove the warning for setstate on unmounted components",
    "access metadata in source maps correctly accounting for different formats",
    "show a soft error when a text string or number is supplied as a child to non text wrappers",
    "support extended source maps with named hooks information",
    "tidy up early bailout logic at start of begin phase",
    "display warnings in tooltips for native events that render sync updates",
    "fix `reactfabrichostcomponent` methods if detached",
    "use container node to toggle the visibility of offscreen and suspense trees",
    "restore execution context after retryaftererror completed",
    "ignore multiple sourcemappingurls for external source maps",
    "capture suspense boundaries with undefined fallbacks",
    "reset inspected element cache in the event of an error",
    "hook names cache no longer loses entries between selection",
    "update named hooks match to use column number also",
    "log and show error overlay for commit phase errors",
    "use the server src files as entry points for the builds/tests",
    "add a doctype to the stream if the <html> tag is rendered",
    "implement legacy rendertostring and rendertonodestream on top of fizz",
    "fix issue with undefined lazy imports by refactoring lazy initialization order",
    "convert es6/typescript/coffeescript tests to createroot + act",
    "disable deferrenderphaseupdatetonextbatch by default",
    "enable the updater-tracking feature flag in more builds",
    "define global __www__ = true flag during www tests",
    "revert force deep re-mount when fast refresh detected",
    "fix edge-case fast refresh bug that caused fibers with warnings/errors to be untracked prematurely",
    "improve error boundary in inspected elements panel",
    "account for another devtools + fast refresh edge case",
    "remove data-reactroot from server rendering and hydration heuristic",
    "prevent already-committed setstate callback from firing again during a rebase",
    "enable setjsresponder/setisjsresponder for react native fabric",
    "convert emulated-fizz partialhydration tests to fizz tests",
    "make some tests more resilient to implementation details",
    "allow complex objects as children of option only if value is provided",
    "unify react.memo and react.forwardref display name logic",
    "re-land \"support nesting of starttransition and flushsync  \"",
    "re-land \"flush discrete passive effects before paint \"",
    "re-land \"clean up host pointers in level 2 of clean-up flag \"",
    "revert \"clean up host pointers in level 2 of clean-up flag \"",
    "revert \"use highest priority lane to detect interruptions \"",
    "revert \"support nesting of starttransition and flushsync  \"",
    "revert \"flush discrete passive effects before paint \"",
    "switch the isprimaryrender flag based on the stream config",
    "let value override defaultvalue if both are specified",
    "use performconcurrentworkonroot for \"sync default\"",
    "revert \"emit reactroot attribute on the first element we discover \"",
    "emit reactroot attribute on the first element we discover",
    "add createbridge and createstore exports to react-devtools-inline",
    "prepare devtools changelog and versions for 4.11.0 release",
    "use js stack to track hidden/unhidden subtree state",
    "include actual type of `profiler#id` on type mismatch",
    "use js stack to track hidden/unhidden subtree state\"",
    "use js stack to track hidden/unhidden subtree state",
    "implement all the dom attributes and special cases",
    "clean up host pointers in level 2 of clean-up flag",
    "remove lanepriority from getbumpedlaneforhydration",
    "add feature flag for more aggressive memory clean-up of deleted fiber trees",
    "expose callbacks in options for when various stages of the content is done",
    "use identifierprefix to avoid conflicts within the same response",
    "expose a method to explicitly start writing to a node stream",
    "assign an id to the first dom element in a fallback or insert a dummy",
    "destroy the stream with an error if the root throws",
    "allow the streaming config to decide how to precompute or compute chunks",
    "revert 'fabric-compatible implementation of  feature' and have fabric noop when setjsresponder is called for now",
    "move dom/native format configs to their respective packages",
    "ensure sync-xhr is allowed before reload and profile",
    "remove devtools dependency on scheduler runwithpriority",
    "use update lane priority to set pending updates on roots",
    "add strictmode level prop and createroot unstable_strictmodelevel option",
    "remove scheduler sampling profiler shared array buffer",
    "disable  scheduler sampling profiler for oss builds",
    "use setimmediate when available over messagechannel",
    "infer the current event priority from the native event",
    "add tests for non-react discrete events flushing in a microtask",
    "align event group constant naming with lane naming",
    "use strictmode double render to detect render phase mutation",
    "improve react error message when mutable sources are mutated during render",
    "implement `sendaccessibilityevent` in rn renderer that proxies between fabric/non-fabric",
    "make it easier to write tests for inspected elements",
    "improve error boundary handling for unmounted subtrees",
    "re-add \"strict effects mode\" for legacy roots only",
    "schedule passive phase whenever there's a deletion",
    "remove custom error message from hook access error",
    "convert reactsuspensewithnooprenderer tests to use built-in cache",
    "update package.json versions as part of build step",
    "add built-in suspense cache with support for invalidation",
    "prevent non-server imports of aliased server entrypoints",
    "rename react-transport-... packages to react-server-...",
    "use assets api + writetodisk instead of directly writing to disk",
    "reconcile element types of lazy component yielding the same type",
    "warn if commit phase error thrown in detached tree",
    "add best-effort documentation for third-party renderers",
    "remove cycle between reactfiberhooks and reactinternaltypes",
    "add profiler callback when nested updates are scheduled",
    "encode throwing server components as lazy throwing references",
    "add version of scheduler that only swaps messagechannel for posttask",
    "encode symbols as special rows that can be referenced by models \u2026",
    "allow values to be encoded by \"reference\" to a value rather than the value itself",
    "add support for module references in transport protocol",
    "fix error loading source maps for devtools extension",
    "warn about reading or writing mutable values during render",
    "handle restricted browser pages properly like new tab page, extensions page etc",
    "fix missing context to componentdidmount when double-invoking lifecycles",
    "enable building of devtools and scheduling profiler in ci",
    "consider components in jsx as missing dependencies in @typescript-eslint/parser@4.x",
    "move preprocessing to web worker and add loading indicator",
    "add feature flag to disable scheduler timeout in work loop",
    "add failing test for passive effect cleanup functions and memoized components",
    "fix instances of function declaration after return",
    "support babel's envname option in react refresh plugin",
    "revert \"append text string to <text> error message \"",
    "support more element types and hooks for server and hybrid components",
    "attach listeners eagerly to roots and portal containers",
    "remove usage of possiblyweakset from createeventhandle",
    "add a test for non-passive event handlers for events affected by the browsers' intervention",
    "keep ontouchstart, ontouchmove, and onwheel passive",
    "upgrade all @babel/* packages to fix devtools builds on newer node versions",
    "improve error boundary handling for unmounted subtrees",
    "add reactversion to schedulingprofiler render scheduled marks",
    "register more node types that are used later as jsxidentifiers",
    "fix runtime error that happens if a passive destroy function throws within an unmounted tree",
    "get current time from performance.now in non-dom environments",
    "warn about undefined return value for memo and forwardref",
    "revert \"statically enable enablefilteremptystringattributesdom \"",
    "disable onscroll bubbling statically except for www",
    "use feature flags for react native in the test renderer",
    "add \"unstable_\" prefix to experimental mutable source apis",
    "move persistent mode optimization away from firsteffect",
    "remove capturephaseevents and separate events by bubbling",
    "set current update lane priority for user blocking events",
    "revert \"revert \"fix createeventhandle bug with comment containers \" \"",
    "revert \"fix createeventhandle bug with comment containers \"",
    "fix devtools handling of empty suspense tag for legacy renderer versions",
    "fix a bug causing a too coarse dependency suggestion",
    "use lanes to check if a render is a suspense retry",
    "add user timing marks for scheduling profiler tool",
    "fix state leaking when a function component throws on server render",
    "decouple update priority tracking from scheduler package",
    "fix exhaustivedeps eslint rule throwing with optional chaining",
    "make event config an implementation detail of each plugin",
    "fix responder logic in reactdomserverselectivehydration-test",
    "add regression tests where sync render causes later concurrent render to expire soon",
    "support optional chaining when accessing prototype method inside usecallback and usememo #19061",
    "revert \"re-enabled debugtracing feature for old reconciler fork \"",
    "revert \"fix mistyped script arbitrary code execution vulnerability \"",
    "delete entries without build output from package.json and the build directory",
    "add support to `exhaustive-deps` rule for any hook ending with `effect` \"",
    "add root and renderer version to inspected props panel",
    "transfer actualduration only once for suspenselist",
    "enable electron interactions on linux & auto copy script tags",
    "expose legacyhidden type and disable <div hidden /> api in new fork",
    "allow to continue dragging when leaving profiler picker",
    "add new ids for each each server renderer instance and prefixes to distinguish between each server render",
    "disable webpack setimmediate polyfill for devtools",
    "warn if calling setstate outside of render but before commit",
    "wrap suspenseinstanceretry callback so scheduler waits for it",
    "prevent stale legacy root from clearing a container",
    "add support to `exhaustive-deps` rule for any hook ending with `effect`",
    "allow flushsync to noop in life cycles but with a warning",
    "extend ishook to recognize those under pascalcase's namespace",
    "disable preparestacktrace while we're generating stacks",
    "fix mistyped script arbitrary code execution vulnerability",
    "remove reactdom.useevent and associated types+tests",
    "skip dangerouslysetinnerhtml hydration warning if it's undefined",
    "unify flare focuswithin responder with usefocuswithin",
    "create copy of legacy event plugins for modern system",
    "add experimental debugtracing logger for internal use",
    "switch between \"rendered at\" renders using keyboard arrow keys",
    "fix component stacks for ie and native classes in safari",
    "fix fiber memory leak with runallpassiveeffectdestroysbeforecreates",
    "revert \"revert \"refactor commitplacement to recursively insert nodes \" \"",
    "disable console.logs in the second render pass of dev mode double render",
    "fix bailout broken in lazy components due to default props resolving",
    "render phase update causes remaining updates in same component to be dropped",
    "filter certain dom attributes  if value is empty string",
    "revert \"refactor commitplacement to recursively insert nodes \"",
    "enable new passive effect behavior for fb builds \"",
    "refine flags and handling of enablelegacyfbsupport",
    "use closure compiler to compile to es5 instead of babel",
    "remove state update warning for passive effect cleanup functions",
    "move accumulateeventtargetlisteners to its own module/function",
    "check deps when callback body is outside the hook call, too",
    "flip the arguments of blocks and make the query optional",
    "move bundler configs to use suspense instead of returning thenable",
    "move some files out of /shared and rename to upper case",
    "improve error message for cross-functional component updates",
    "warn against state updates from useeffect destroy functions",
    "make it possible to have lazy initialized and lazy loaded blocks",
    "check in a forked version of object-assign only for umd builds",
    "convert the rest of react-dom and react-test-renderer to named exports",
    "feature flag for react.jsx` \"spreading a key to jsx\" warning",
    "migrate focus/blur to call textinputstate with the host component",
    "add modern event system flag + rename legacy plugin module",
    "re-throw errors thrown by the renderer at the root in the complete phase",
    "update issue templates to directly link to relevant sources",
    "react developer tools extension for microsoft edge",
    "update eslint rule exhaustive deps to use new suggestions feature",
    "flush all passive destroy fns before calling create fns",
    "re-enable shorthand css property collision warning",
    "add feature flag for removing children map support",
    "flush `useeffect` clean up functions in the passive effects phase",
    "add reactdom.unstable_rendersubtreeintocontainer warning flag",
    "fix event replaying in flare by eagerly adding active listeners",
    "ensure createroot warning parity with reactdom.render",
    "remove unused modules from legacy event responders",
    "add warning when owner and self are different for string refs",
    "add unstable_rendersubtreeintocontainer and unstable_createportal feature flags",
    "remove deprecated scope apis + update focus components/docs",
    "add better test coverage for hooks in devtools profiler's change-detection",
    "remove special casing of tostring values when enabletrustedtypesintegration",
    "revert \"revert \"dispatch commands to both uimanagers from both renderers \" \"",
    "improve function props display for inspected elements",
    "disable \"copy to clipboard\" and \"go to definition\" context menu options for firefox addon",
    "add a regression test for switching from fragment to a component",
    "favor fallthrough switch instead of case statements for work tags",
    "rename flare apis to deprecated and remove from rn",
    "fix test_build_devtools ci job to run test-build-devtools",
    "remove responder root event types + revert commit phase change",
    "rename towarndev -> toerrordev, tolowprioritywarndev -> towarndev",
    "show component location for selected element in bottom/right of props panel",
    "upgrade passive event listeners to active listeners",
    "replace `wrap-warning-with-env-check` with an eslint plugin",
    "remove dependency on local git checkout from build process",
    "rename flare listeners prop to deprecated_flarelisteners",
    "add featureflag to dispatch events with instance currenttarget",
    "add options to configure refreshsig and refreshreg identifiers",
    "change legacy-events plugin nativeeventtarget to allow null",
    "add featureflag to dispatch events with instance targets",
    "prevent duplicate onpress firing for keyboard enter",
    "fix devtools displaying anonymous for memo of ref-forwarding components",
    "revert \"dispatch commands to both uimanagers from both renderers \"",
    "add findhostinstance_deprecated to the react native renderer",
    "dispatch commands to both uimanagers from both renderers",
    "rename findhostinstance_deprecated to findhostinstance_deprecated",
    "add guard to handle modified react elements with non-string keys",
    "read current time without marking event start time",
    "allow event.preventdefault on legacypress responder",
    "change retry priority to \"never\" for dehydrated boundaries",
    "update release scripts to support experimental releases",
    "add getinstancefromnode support to testhostrenderer",
    "stop warning about setnativeprops being deprecated",
    "revert \"update hideorunhideallchildren to hide portals that aren't wrapped in a host component \"",
    "update hideorunhideallchildren to hide portals that aren't wrapped in a host component",
    "move eventsystemflags to last argument in event plugin extractors",
    "increase priority for non-synchronous discrete events and retries",
    "update useeditablevalue hook to sync external value changes",
    "improve errors for invalid viewconfig getter functions",
    "add no-op stoppropagation + preventdefault to press",
    "revert change to backend injection method from pr #16752",
    "rename experimental react-ui => react-interactions",
    "add preventdefault+stoppropagation to keyboard + update focus components",
    "prevent firefox marking required textareas invalid",
    "move experimental event+a11y work to react-ui package",
    "support disabling interaction tracing for suspense promises",
    "revert \"re-arrange slightly to prevent refactor hazard \"",
    "add tabfocuscontainer and tabbablescope ui components",
    "remove stoppropagation  + use document for delegation",
    "schedule passive callbacks before layout effects are invoked",
    "ensure updateeventlisteners updates in commit phase",
    "remove emoji prefix from firefox extension tab labels",
    "fix message loop behavior when host callback is cancelled",
    "rework the responder dispatching/batching mechanism",
    "add \"hydrationoptions\" behind the enablesuspensecallback flag",
    "display hook values for components that only use context",
    "attempt hydration at a higher pri first if props/context changes",
    "make component stack last argument for deprecation warnings",
    "remove \"waiting for async callback\" user timing measurement",
    "use a different link in the unsafe_ component warnings",
    "ensure fundamental flags are added to more locations",
    "warn when rendering tests in concurrent/batched mode without a mocked scheduler",
    "re-enable \"view source\" button for standalone shell",
    "warn when using defaultprops on function components",
    "add guard to ensure profiler onrender prop is function before calling",
    "add suspensecallback feature for runtime tracing of loading states",
    "disable view-source button in standalone mode if no project roots are provided",
    "hide \"style\" prop if we are showing the style editor",
    "ensure flare components are no-ops for testrenderer",
    "flush work on exiting outermost act, with nested acts from different renderers",
    "update suspense priority warning to include component that triggered update",
    "ensure mouse events can use target to validate press",
    "unify deprecated/unsafe lifecycle warnings, pass tests",
    "add warning when single item or nested arrays are used with suspenselist",
    "switch from currenttarget model to respondertarget model",
    "ensure press event hook does not execute side-effects",
    "warn if passive effects get queued outside of an act call.",
    "use function expression for custom hook signature argument",
    "expire rendering the tail of suspenselist after a timeout",
    "add forwards and backwards options to suspenselist",
    "use continuation pattern for posting host callback",
    "construct error at invariant call site for clearer stack traces",
    "rename findhostnodesforhotupdate to findhostinstancesforhotupdate",
    "remove stoplocalpropagation option + modify responder ownership",
    "listen to document.body + add stoppropagation to press",
    "improve runtime performance of hit target intersection",
    "wrap all calls to localstorage/sessionstorage to avoid potential runtime errors",
    "remove eventtypes from reactnativebridgeeventplugin",
    "add support for events that are both user-blocking and continuous",
    "ignore keyboard interactions on text input children",
    "reset max indentation when entering/exiting the owner tree",
    "rewrite haste imports in rn shims and add .fb.js extension",
    "remove unnecessary code for host text as we skip it anyway",
    "remove hover guideline in favor of showing guidelines for every nesting level",
    "rename reactfiberscheduler -> reactfiberworkloop and extract throwexception from unwind",
    "update profiling-supported status each time roots change",
    "use path-based imports instead of haste for the rn renderer",
    "ensure getabsoluteboundingclientrect aligns with offsetparent",
    "use @reach tooltips for tabbar, cleanup supports-profiling subscription",
    "update sizebot to match name of circleci build job",
    "account for fixed elements in getabsoluteboundingclientrect",
    "ensure calculateresponderregion accounts for page offset",
    "ensure getfocusableelementsinscope handles suspended trees",
    "normalize event timestamp property to be in event system",
    "ensure touch events are properly handled for pagex and pagey",
    "update to react canary release for interaction tracing bugfix",
    "show import error dialog if profiling data import fails",
    "ensure touchhittarget element is server side rendered with hit slop",
    "prevent filter preference changes while profiling is active",
    "add support for hide-by-name and hide-by-path component filter regexps",
    "fix profiling screenshots data structure to map rootid to commitindex",
    "improve flow coverage by reducing typecasts through `any`",
    "use `capture` for all event listeners using experimental responder system",
    "fix for 'attempting to use a disconnected port object'",
    "rename profiler types to disambiguate which is frontend and backend",
    "fix bug where press root events were not being cleared",
    "support highlighting of all dom elements of fragments, not just first",
    "implement getpathforelement to serialize the selected path",
    "differentiate between no-change and no-element-found when inspecting element",
    "rework the propagation system for event components",
    "traverse the previous current tree when switching from primary to fallback",
    "include rooteventtypes in domeventrespondersystem stoppropagation tests",
    "support configurable node/tree collapsed by default behavior",
    "fix the remaining issue when primary child is null",
    "enable part of suspense test that was failing before",
    "propagate the need to reset children to closest visible fiber",
    "add package commands for creating dev builds for easier debugging",
    "chrome build+deploy script auto-increment a prerelease version",
    "ignore device buttons that aren't for primary interactions",
    "use circle ci to run lint, prettier, flow, and tests",
    "remove touchhittarget ssr logic to prevent issues with mouse events",
    "apply the just noticeable difference to suspense timeouts",
    "add targets and responder utility method for finding targets",
    "add tests to paper renderer for measure, measurelayout",
    "use focus state from elements tree instead of ownerdocument",
    "remember max tree width as new nested items are rendered",
    "measure expiration times relative to module initialization",
    "move eventcomponent state creation to complete phase + tests",
    "provide new jsx transform target for reactjs/rfcs#107",
    "update the commit tree to assume operations do not repeat",
    "throttle screenshots to reduce impact on performance.",
    "rewrite reactfiberscheduler for better integration with scheduler package",
    "add press event prop types and fix a check in safari",
    "warn on nested eventtragets in experimental event api",
    "fix host context issues around eventcomponents and eventtargets",
    "rename hover props in experimental event api and write unit tests",
    "fix circular module imports causing file size increase",
    "add part of the event responder system for experimental event api",
    "warn about setstate directly in dep-less useeffect",
    "add internal logic for listening to event responders",
    "implement setstate for hooks and remount on type change",
    "add infrastructure for passive/non-passive event support for future api exploration",
    "fix shallow renderer not allowing hooks in forwardref render functions",
    "improve hydration fixture, support older versions of react",
    "tweak setstate updater message and add useeffect warning",
    "suggest moving inside a hook or usecallback when bare function is a dependency",
    "re-organized views slightly in preparation for profiler ui",
    "treat functions that don't capture anything as static",
    "suggest to destructure props when they are only used as members",
    "add placeholders to clarify between empty string, null, and undefined",
    "replace test renderer's fake scheduler implementation with mock build",
    "replace noop's fake scheduler implementation with mock scheduler build",
    "add new mock build of scheduler with flush, yield api",
    "deprecate ref.setnativeprops in favor of reactnative.setnativeprops",
    "remove reactnoop.flushdeferredpri and flushunitsofwork",
    "fix umd builds by re-exporting the scheduler priorities",
    "fix warning message for new setnativeprops method. on -> with",
    "use the canonical nativetag for fabric's setnativeprops",
    "fix hooks warnings identified by prerelease version of react-hooks eslint plugin",
    "add eslint-plugin-react-hooks/exhaustive-deps rule to check stale closure dependencies",
    "prompt to include umd build artifact links in github release",
    "fix react-dom/server context leaks when render stream destroyed early",
    "revert \" queue/rerender on dispatched action after render component with hooks \"",
    "remove false positive warning and add todos about `current` being non-null",
    "fix useimperativehandle to have no deps by default",
    "read-only elements in map, added revision to guard against tearing",
    "expose `testutils.act` for batching actions in tests",
    "use samevalue instead of === to check for dispatchaction equivalence",
    "restrict effect return type to a function or nothing",
    "warn when second argument is passed to usecallback",
    "fix issue with multiple code branches in hooks linter",
    "make all readcontext and hook-in-a-hook checks dev-only",
    "revert \"revert \"double-render function components with hooks in dev in strictmode\" \"",
    "add unit tests for concurrent mode event dispatching",
    "warn when returning different hooks on subsequent renders",
    "revert \"double-render function components with hooks in dev in strictmode\"",
    "revert \"disallow reading context during usememo etc\"",
    "mention forwardref in <fn ref={...} /> errors and warnings",
    "add directory details to the package.json of all packages",
    "warn when second callback is passed to setstate/dispatch in hooks",
    "prune npm metadata fields from packages before re-publishing",
    "rename release script fixture test scheduler->tracing",
    "use public context.report interface in eslint rules",
    "allow usereducer to bail out of rendering by returning previous state",
    "throw an error when using hooks inside usememo/usestate/usereducer, or .memo's comparator",
    "fix shallow renderer set instance state after gdsfp before calling scu",
    "react-debug-tools accepts currentdispatcher ref as param",
    "rename useimperativemethods -> useimperativehandle",
    "create separate schedulerfeatureflags instead of using reactfeatureflags",
    "memoize promise listeners to prevent exponential growth",
    "enable hooks by default for fb react native renderer",
    "add support for suspense & lazy to the react-is package",
    "implement pauseexecution, continueexecution, dumpqueue for scheduler",
    "validate proptypes for lazy and memo and warn about invalid patterns",
    "add progress bars to longer running async release tasks",
    "wrap shorthand css property collision warning in feature flag",
    "add a checkbox to fixtures ui to choose react production build",
    "warn about conflicting style values during updates",
    "use unique thread id for each partial render to access context",
    "show deprecated context object warnings usage in reactdom server",
    "recover from errors with a boundary in completion phase",
    "add dev-only checks for assumption about instance properties",
    "avoid double commit by re-rendering immediately and reusing primary children",
    "rename inputsareequal to arehookinputsequal & move it to shared",
    "add debug tools package for introspection of hooks",
    "test usecontext in pure, forwardref, and purecomponent",
    "add \"unstable_\" prefix to react-cache and jest-react",
    "try rendering again if a timed out tree receives an update",
    "react.lazy constructor must return result of a dynamic import",
    "remove unstable_read in favor of direct dispatcher call",
    "deprecate context object as a consumer and add a warning message",
    "hide timed-out children instead of deleting them so their state is preserved",
    "fix false positive context warning when using an old react",
    "fix user timing oddities with suspense, pure, and lazy",
    "update error codes for 16.6.0-alpha.8af6728 release",
    "update bundle sizes for 16.6.0-alpha.8af6728 release",
    "restart from root if promise pings before end of render phase",
    "improve naive fallback version used in non-dom environments",
    "revert \"update bundle sizes for 16.6.0-alpha.0 release\"",
    "revert \"updating package versions for release 16.6.0-alpha.0\"",
    "fix updatewrapper causing re-render textarea, even though their data",
    "enhance dev warnings for forwardref render function",
    "allow reading default feature flags from bundle tests",
    "improve dx when combining react-dom/profiling and schedule/tracking",
    "remove injectcomponenttree from unstable-native-dependencies, add eventpluginhub",
    "drop the year from facebook copyright headers and the license file.",
    "make ie 11 not complain about non-crucial style attribute hydration mismatch",
    "rename reacttypeofwork to reactworktags, reacttypeofsideeffect to reactsideeffecttags",
    "add warning to prevent setting this.state to this.props referentially",
    "revert \"rely on bubbling for submit and reset events \"",
    "warn about reactdom.createportal usage within reacttestrenderer",
    "fix incorrect legacy context for factory components",
    "remove helper object from fallbackcompositionstate",
    "avoid setting empty value on reset & submit inputs",
    "warn when \"false\" or \"true\" is the value of a boolean dom prop",
    "allow the user to opt out of seeing \"the above error...\" addendum",
    "provide component reference in reactdomfibertextarea warnings",
    "fix hydration of non-string dangeroussetinnerhtml.__html",
    "make sure that `select` has `multiple` attribute set to appropriate state before appending options",
    "enhance get derived state from props state warning - #12670",
    "replace console.error with a throw in settimeout as last resort exception logging",
    "fix a crash when using dynamic children in <option> tag",
    "remove unnecessary branching from updatecontextprovider",
    "handle errors thrown in gdsfp of a module-style context provider",
    "optimize readcontext for subsequent reads of all bits",
    "add more flexibility in testing errors in begin/complete phases",
    "api for reading context from within any render phase function",
    "fix unwinding starting with a wrong fiber on error in the complete phase",
    "fail tests if towarndev does not wrap warnings in array",
    "remove the use of proxies for synthetic events in dev",
    "fix \u201cno onchange handler\u201d warning to fire on falsy values  too",
    "fix a portal unmounting crash for renderers with distinct instance and container",
    "change warning to automatically inject the stack, and add warningwithoutstack as opt-out",
    "enforce presence or absence of component stack in tests",
    "use reactdebugcurrentframe.getstackaddendum in element validator",
    "remove ad-hoc forks of getcomponentname and fix it",
    "add dev warning if forwardref function doesn't use the ref param",
    "create a new featureflags file for test renderer on www",
    "run react-dom ssr import test in jsdom-less environment",
    "fix referenceerror when requestanimationframe isn't defined",
    "add profile bundles for www+dom and fbsource+rn/rf",
    "fall back to 'settimeout' when 'requestanimationframe' is not called",
    "extract fabric event handlers from canonical props",
    "retry on error if there's lower priority pending work",
    "use native event dispatching instead of simulate or simulatenative",
    "allow multiple root children in test renderer traversal api",
    "call gdsfp with the right state in react-test-render",
    "remove feature flag around 'getderivedstatefromprops' bug fix",
    "fix react-dom referenceerror requestanimationframe in non-browser env",
    "rename variables to remove references to 'global' global",
    "add functional components warning about legacy context api",
    "fix a regression that caused us to listen to extra events at the top",
    "pass \"start time\" and \"commit time\" to profiler callback",
    "try another approach at fixing windows flow issues",
    "skip special nodes when reading testinstance.parent",
    "use hostcontext to warn about invalid view/text nesting",
    "use global state for `hasforceupdate` instead of persisting to queue",
    "use browser event names for top-level event types in react dom",
    "put recent change to getderivedstatefromprops behind a feature flag",
    "support sharing context objects between concurrent renderers",
    "add profiler component for collecting new render timing info",
    "make react.forwardref components discoverable by testrenderer traversal",
    "remove the 'alwaysuserequestidlecallbackpolyfill' feature flag",
    "remove unstable_batchedupdates and unmountcomponentatnodeandremovecontainer from fabric",
    "unfork invariant and instead use it from reactprodinvariant",
    "expose component stack from reacttag to react native renderer",
    "fix context stack misalignment caused by error replay",
    "prefix _context property on returned reactcontext from createcontext - it's private",
    "fix dev performance regression by avoiding object.assign on fibers",
    "update user timing to record when we are about to commit",
    "update user timing to record the timeout deadline with 'waiting' events",
    "fix bug when fatal error is thrown as a result of `batch.commit`",
    "add unstable apis for async rendering to test renderer",
    "warn about non-static getderivedstatefromprops/catch",
    "fix now-missing errorinfo argument to componentdidcatch",
    "use custom requestidlecallback even when native one exists",
    "prefix internal context properties with underscore",
    "finalize children after we've actually inserted them",
    "add test exercising public api to test beforeinputeventplugin + fallbackcompositionstate",
    "use the pr's mergebase for a branch in the dangerfile",
    "disable for...of by default, rewrite cases where it matters",
    "revert deprecation warnings for custom event plugin injection",
    "invoke both legacy and unsafe_ lifecycles when both are present",
    "replace unstable_asynccomponent with unstable_asyncmode",
    "coalesce lifecycle deprecation warnings until the commit phase",
    "improve towarndev matcher dx for unexpected warnings",
    "opt into unsafe lifecycle warnings without async tree",
    "warn if unsafe lifecycle methods are found in an async subtree",
    "highlight production bundles in bold in the danger integration comment",
    "upgrade to eslint 4.1 and add no-focused-tests rule",
    "add warning in server renderer if class doesn't extend react.component",
    "move npm output from build/packages/* to build/node_modules/*",
    "call and return components should use reactelement",
    "remove an extra allocation for open source bundles",
    "revert \"remove empty value for boolean attributes in ssr \"",
    "fix autofocus for hydration content when it is mismatched",
    "issue #11257 - change build process to include npm pack and unpacking",
    "ensure value and defaultvalue do not assign functions and symbols",
    "add a test for bad map polyfill, and work around rollup bug",
    "add explicit warning assertions to reactdominput-test",
    "rewrite selecteventplugin-test to test behavior using public api",
    "replace reactfibererrorlogger injection with static forks",
    "throw if `document` is missing by the time invokeguardedcallbackdev runs",
    "rewrite reacttreetraversal-test.js using public apis",
    "move reactfibertreereflection to react-reconciler/reflection",
    "migrate to circleci2.0 and add appveyor for master-only branch",
    "add bundle linting and tests to the release script",
    "replace inputvaluetracking-test with public api tests",
    "drop .textcontent ie8 polyfill and rewrite escaping tests against public api",
    "remove global mocks by adding support for \"suppressreacterrorlogging\" property",
    "rewrite syntheticevent tests using public apis only",
    "rewrite reactdomcomponenttree-test to test behavior using public api",
    "update scripts/eslint.js sharing code with linc.js;",
    "use requestidlecallback timeout to force expiration",
    "rewrite syntheticwheelevent-test depending on internal api",
    "measure time between scheduling an async callback and flushing it",
    "use only public api for reactdomeventlistener-test.js",
    "remove support for passing badly typed elements to shallow renderer",
    "fix to reset the forceupdate flag after the update",
    "use only public api for enterleaveeventplugin tests",
    "depend on prop-types/checkproptypes, not prop-types itself",
    "warn if class has a render method but doesn't extend react.component",
    "pass `pendingprops` as argument in `createworkinprogress`",
    "rewrite reactdominput-test depending on internal api",
    "use simple invariant in case of missing error codes",
    "include component stack in more places, including ssr",
    "update build scripts to put rn-rt files in the right places",
    "fix obscure error message when passing an invalid style value for ssr",
    "remove priority coalescing and prioritylevel module",
    "fix incorrect calculation of onmouseenter/leave component path",
    "ignore ssr warning using explicit suppresshydrationwarning option",
    "add production bundles for test and shallow renderers",
    "ignore cr/lf differences when warning about markup mismatch",
    "replace hyperlink tag with button tag in tic-tac-toe tutorial and update related references in the tutorial document",
    "add titles and labels to iframes and images on community pages",
    "ensure all external links have consistent behavior",
    "fix \"null\" instead of the component stack in a warning",
    "remove usage of reactdomfeatureflags.usefiber, assuming true",
    "fix false positive hydration warning for svg attributes",
    "pull in react-art/lib/{circle,rectangle,wedge}.art",
    "add missing dependencies in `art` fixture, update `yarn.lock`",
    "defer reading native view config from uimanager until view is used",
    "add ability to \"complete\" rows and store state in localstorage",
    "read svg properties instead of attributes where applicable",
    "use proper svg tags for all svg attributes and read using a special function",
    "add missing single-word attributes to property warning list",
    "reset instance vars before calling commit phase lifecycles",
    "add invariant check for composite components to event simulation test utils",
    "write badly cased attributes. remove most of whitelist.",
    "throw error to warn of mistaken loading of prod + dev react bundles",
    "add explicit invariant when reactdom is loaded w/o react",
    "use the virtual target for change events to avoid restoring controlled state on the real target",
    "fix for #10388. renames rendertostream to rendertonodestream.",
    "wrap warning calls in a dev check for rn_* builds too",
    "make createfiber use a constructor object rather than an object literal object",
    "use closure compiler for umd/node bundles instead of uglify",
    "add test for duplicate events with nested dispatch",
    "implement event-specific pooling for syntheticevent",
    "rewrite dompropertyoperations-test in terms of public api",
    "add documentation about <script crossorigin> for react cdn usage",
    "add reactdom.hydrate as explicit ssr hydration api",
    "fix ssr integration test swallowing lack of expected error",
    "remove error event listener eagerly instead of using depth count",
    "regenerate error codes and update bundle size stats",
    "update pre-release instructions for generating error-codes",
    "fix false \"unknown property\" warnings for events in ssr",
    "add warning for rendering into container that was updated manually",
    "configure jest with stack and fiber as separate projects",
    "fix crash on master introduced during the radio bugfix",
    "move augmentclass definition above syntheticevent proxy replacement",
    "improve error message thrown in fiber with multiple copies of react",
    "change the argument passed to callbackqueue.getpooled",
    "remove conditional __dev__ wrapper from rn bundles",
    "ignore incremental tests that assert on work reuse",
    "add test to ensure extra zeros are covered by tests",
    "add reactdomnodestream, adding streaming rendering.",
    "fix componentwillunmount test case in ismounted tests",
    "use keyboardevent.char in the fallback logic if available",
    "streamline fiber/stack testing and bundling setup a little bit",
    "add support for implicitly mocked components using reactserverrenderer",
    "inline some internals, reduce shared/ utilities between isomorphic and renderers",
    "remove preparenewchildrenbeforeunmountinstack flag",
    "add check for string and null 'rootelement' in reactdomfiber",
    "fix a bug with memoizedstate affecting react devtools",
    "avoid adding trailing semicolons to inline styles.",
    "fix reactfiberreconciler annotation to include `pi`",
    "remove createclass, proptypes, dom factories, and createmixin from react object",
    "remove build time extracterrors message when error codes can't be found",
    "downgrade deprecation warnings from errors to warnings",
    "move some tests from failing to passing except dev",
    "add package builds for new server renderer and enable tests",
    "fix to call deferred callbackqueue even if updates are aborted",
    "move assertvalidprops into shared/utils since it will be used by the \u2026",
    "rename reacteventlistener to reactdomeventlistener",
    "move small utility modules out of reactdom?component",
    "remove injectreactdomeventlistener from reactbrowsereventemitter",
    "fix return value of reactdomfiber.unmountcomponentatnode",
    "remove loose check on non-number controlled inputs. fix trailing dot issue.",
    "add 'unreleased' incremental change log for v15.6.0",
    "allow assigning to this.state inside componentwillmount, with a warning",
    "fix confusing description for the <script>...</script> usage",
    "consolidate events between eventconstants and browsereventemitter",
    "stop passing prevcontext param to componentdidupdate",
    "warn in dev if shouldcomponentupdate is defined on purecomponent",
    "fix subtree tests so that async component is not top-level",
    "change unstable_asyncupdates from an instance to a static property",
    "remove unstable_asyncrender api in favor of always using a wrapper",
    "use different default priority depending on the asyncupdate context flag",
    "lift state up - updating the documentation to mention that onclick is a synthetic event handler",
    "add accessibility to tabs in installation documentation",
    "make nodetype into constant for readability and reuse",
    "add component stack to uncontrolled-to-controlled warning",
    "add component stack to reactcontrolledvalueproptypes",
    "warn once when attempting to access react.createclass",
    "fix reactartstack bundles to not include dom stack inside",
    "replace shims with explicit react access from the renderers for shared global state",
    "update example snippet in old 'react.addons' doc page",
    "make reactdebugcurrentframe shared state between core and renderers",
    "convert current build system to rollup and adopt flat bundles",
    "remove viewport metrics, other pagex/pagey behaviors",
    "show more meanignful stack trace for reactnative errors",
    "move takesnapshot from uimanager to reactnative renderer",
    "add a button to switch from fiber with time-slicing to fiber without it",
    "fix chrome number input backspace and invalid input issue",
    "add more ssr unit tests for elements and children.",
    "add unit tests for props to attribute mapping in ssr.",
    "add prettier instructions to pr template and contribution guide",
    "ignore event listener extraction on numeric text components",
    "remove _reseteventplugins, use jest.resetmoduleregistry",
    "remove eventpluginregistry.getpluginmoduleforevent",
    "add async/await to unit tests; modify server rendering tests to use async/await.",
    "fix string casting and remove flow suppression comments",
    "update lifting state up not to mix up dom value with component state",
    "replace the header_links plugin with client-side generated anchors.",
    "check if we're in sync mode before deprioritizing hidden subtrees",
    "use invokeguardedcallback in place of fiber try-catch blocks",
    "consolidate reactcurrentfiber and reactdebuglifecycle",
    "use reactdebuglifecycle to track if we're inside getchildcontext",
    "wrap checkproptypes in dev conditional so it's stripped out in prod",
    "remove closure in checkreacttypespec by tracking stack info globally",
    "invert dependency between checkproptypes and checkreacttypespec",
    "fix bugs that occur when event responder unmounts during a touch event sequence",
    "add deprecation warning for assigning to this.state inside cwrp",
    "update to babel-plugin-transform-es2015-block-scoping 6.23",
    "use ismounted instead of instance map to check if mounted",
    "warn about calling setstate on an unmounted component",
    "re-add the warning if proptype function is called manually",
    "ensure first error is thrown if hostroot catches two errors in commit phase",
    "warn if unmounting a tree that was rendered by a different copy of react",
    "fix messages so that they use the same template as stack",
    "reassign process.env.node_env instead of shimming process",
    "use multiple checks instead of forking the entire function",
    "make disablenewfiberfeatures = true the default when runnings tests",
    "add a link to \"state updates are merged\" in the forms doc",
    "read \"current\" props from the node instead of the fiber",
    "preserve license headers from dependencies in minified build",
    "dedupe missing getchildcontext warning by component name",
    "disallow fiber-only render return types when feature flag is on",
    "confirm that a shallow bailout does not drop work in the child",
    "fix to render falsy value as dangerouslysetinnerhtml",
    "reset invalid updatequeue fields when cloning from current",
    "dedupe warnings about refs on functional components",
    "move build fixtures to fixtures/packaging, updated paths",
    "add component stack to invalid element type warning",
    "remove primitive dom fixture readmes for some test cases",
    "remove fixture react build files from git tracking",
    "update refs even if shouldcomponentupdate returns false",
    "prepareforcommit returns info object to be passed resetaftercommit",
    "avoid popping hosts that do not provide unique contexts",
    "call refs and lifecycles on indeterminate components",
    "compare memoized props in functional component branch",
    "move all the begin work stuff into their own helper functions",
    "add test for errors in host config while working on failed root",
    "handle case where host environment throws when working on failed root",
    "remove confusing for-loop in favor of a helper function",
    "clean up some style nits and other code detritus in the update queue",
    "move priority context change to findnextunitofwork",
    "add fast path for appending updates to the end of the queue",
    "use lastprogressedupdate pointer instead of firstpendingupdate",
    "give setstate callbacks componentwillupdate semantics",
    "add rootcontainerinstance param to createtextinstance.",
    "extract commit phase passes into separate functions",
    "remove trycomponentdidmount/update in favor of commit phase try block",
    "add test for componentdidupdate with a bailout in the middle",
    "remove forwarding from tree traversal in eventpluginutils",
    "get the \"current\" fiber from each node along the path",
    "rename hostcontainer => hostroot, portal => hostportal",
    "add tests for recovery from errors thrown in the reconciler",
    "fix fiber feature flag for reactdomproduction-test",
    "handle bailed out hosttext update and multichildtext test",
    "use latest instance when restoring controlled state",
    "use a closure to bind argument to callback in reacterrorutils",
    "update root children using the appendchild/insertbefore/removechild methods",
    "change the behavior to always fail childcontexttypes if there is a method",
    "preserve the original object when using replacestate",
    "implement the same search strategy in reacttestutils as finddomnode",
    "utilize the backtracking during events to figure out if a fiber was unmounted",
    "drop \"previous style\" copy from stack to bring it inline with fiber",
    "update the internal fiber on the dom node to always be the current",
    "include reactdebugtool from inside __dev__ to save 1.5kb",
    "allow eventlistener to traverse up the tree until it hits the root",
    "move all dev *hook tests and componenttreetestutils to expectdev",
    "pass props explicitly instead of getting them off currentelement",
    "pass the tag explicitly instead of reading it from the internal instance",
    "add some flow and get rid of the typecheck annotations",
    "upgrade eslint and dependencies, fix new lint errors, switch travis to yarn",
    "extract event listener from memoizedprops on fiber instances",
    "reapply check for event listener in props instead of bank",
    "add test cases for context below and above setstate",
    "move context handling back into begin and complete phases",
    "disable memoized props bailout when context might have changed",
    "use reactdom.unstable_batchedupdates in fiber tests",
    "use _hostcontainerinfo to track test renderer options",
    "revert \"check for event listener in props instead of bank \"",
    "ensure that we're listening to all onchange dependencies for controlled inputs",
    "use explicit pass for restoring controlled state instead of asap",
    "hide detailed failure output in scripts/fiber/record-tests",
    "track if selecteventplugin is attached on a per document basis",
    "attempt to fix reactdomtextcomponent test in fiber",
    "create a separate test file for incremental error handling",
    "handle the radio button case completely in the asap case",
    "remove pendingupdate optimization in reactdomselect",
    "kill reactlink, linkedstatemixin, valuelink and checkedlink",
    "add a failing test for multiple independent boundaries",
    "create reactgenericbatching injection wrapper around batchedupdates",
    "add top level render callbacks into reactdomfiber and reactnoop",
    "delete child when the key lines up but the type doesn't",
    "handle unmounted and not-yet-inserted subtrees in ismounted",
    "respect state set in componentwillmount on resuming",
    "remove references to createclass in createelement docs",
    "fallback to current props if memoizedprops is null",
    "break out some class component logic into separate module",
    "invoke all null ref calls before any new ref calls",
    "tag the fiber with the kind of side-effect that was applied to it",
    "fix uncontrolled input decimal point \"chopping\" on number inputs, and validation warnings on email inputs",
    "declare type var higher up in mountcomponent in reactdomcomponent for reuse",
    "add warning for shady-dom use with rendered react components in dev",
    "add implementation notes and amend codebase overview",
    "fix umd bundles, making safe to use as required modules",
    "note that getinitialstate is not used in es6 classes in docs",
    "move how to contribute to documentation and update it",
    "simplify event phases. use explicitly 'captured' and 'bubbled'.",
    "restructure clone child fiber a bit to make it clearer",
    "pass current instead of picking it up from alternate",
    "move priority reset to the end and search pending work in work tree",
    "revert \"add unknown property warning for use of `autofocus`\"",
    "move mouse event disabling on interactive elements to simpleeventplugin. related perf tweak to click handlers.",
    "generate simpleeventplugin data structures at runtime",
    "add line breaks to examples on 10.1-animation docs per",
    "warn if input changes controlledness - also for null",
    "remove the mixin layer of indirection on reactcompositecomponent",
    "remove the mixin layer of indirection on reactmultichild",
    "show react events in the timeline when reactperf is active",
    "warn if using react.unmountcomponentatnode on a different react instance's tree.",
    "fix slow performance of proptypes.oneoftype on misses",
    "avoid indexof during unmounting a root in the hook",
    "avoid object iteration when creating dom factories",
    "use es6 map in reactcomponenttreehook if available",
    "require the isomorphic react instead of internals from renderers",
    "use aliasify everywhere instead of browserify-global-shim",
    "build renderers into their individual npm packages",
    "remove unnecessary indirection and events from the hooks",
    "prevent performance regression in dev due to warning arguments",
    "fix memory leak in reactchildrenmutationwarninghook for ssr",
    "bundle dom renderers into their individual umd bundles",
    "reuse the correct child and side-effects when reusing partial work",
    "reuse old props for the update if there are no new props",
    "fix <input> with type date/time/etc. issue on mobile browsers",
    "prevent spamming warnings related to performance measurement code",
    "update benchmarks to be more realistic polymorphically",
    "inject default batching after pending transactions",
    "pass shouldhavedebugid flag to instantiatecomponent",
    "remove danger.dangerouslyrendermarkup as it is dead code",
    "trigger a proper no-op warning for async state changes on server",
    "resume work deep in a bailed out child immediately in same pri",
    "move null-input-value-prop warning into devtool, add stack trace",
    "revert \"remove setprops and replaceprops completely\"",
    "fix controlled/uncontrolled validation for radio+checkbox inputs",
    "fix #6950, work around ie missing innerhtml on svg nodes",
    "add reactprodinvariant and corresponding babel rewrite pass",
    "warn that reactperf does not work in the production build",
    "revert \"warn that reactperf does not work in the production build \"",
    "warn that reactperf does not work in the production build",
    "add <any> type args for reactelement,class,component",
    "replace the implementation of escapetextcontentforbrowser with escape-html",
    "remove css px warning, stop appending px to strings",
    "use the tag instead of stage field for coroutine stages",
    "inline expectations in tests as they are used once",
    "infer displayname in more cases for props.ref/key warning",
    "ignore specifically react warning getter in reactelement",
    "move tests concerned with cloning into reactelementclone-test",
    "add a test verifying undefined key and ref are ignored",
    "remove prop types checking in reactcompositecomponent",
    "add component stack info to key validation warnings",
    "move instrumentation to renderers/shared. closes #6797",
    "make sure element is reported correctly by tree devtool",
    "revert \"don't wrap drag events in ie/edge in dev builds\"",
    "show source line number on unknown property warning",
    "remove some mocks that are already packaged by initializejavascriptappengine",
    "add test logic to make sure that events get tested when rendering on top of server-generated markup.",
    "get rid of transformmatrix/decomposematrix special case",
    "make reactcomponenttreedevtool work with react native",
    "add reactnativeoperationhistorydevtool to track native operations",
    "move panresponder back to react-native repo temporarily.",
    "add tests for reactdebugtool and reactdomdebugtool",
    "assert that unmounted instances are in the tree until purged",
    "stop exposing reactcomponenttreedevtool internal tree directly",
    "enforce that info about children is available by the time onsetchildren fires",
    "add an initial implementation of reactdebugtool events",
    "build up a native component cache for event dispatching",
    "update reactnativedomidoperations to deal with a single parent node",
    "strip isomorphic stuff from the reactnative module",
    "build an dedicated npm package for react-native-renderer",
    "remove duplicates and move files out of native/vendor",
    "create section on using react with package managers.",
    "set value using attribute only on initial option render",
    "update supported attrs, clarified what supported elements actually means",
    "make sure simulated events don't warn when providing extra event properties",
    "use object.assign directly and inject object-assign at compile",
    "document how to avoid wrapper in reacttransitiongroup",
    "warn if props obj passed into createelement / cloneelement inherits from anything other than object",
    "add more information to 'input elements must be either controlled or uncontrolled' warning",
    "make browserify-specific modules to remove dom dependencies from npm package",
    "make setstate callback error message more descriptive",
    "add bad callback invariants to reactdom.render calls",
    "change message format to be more consistent with other errors",
    "strip complex values from reactperf.printdom output",
    "rename reactperf methods to match the upcoming reactperf revamp",
    "skip all special props when setting attributes on web components",
    "remove attributes already specified in the html config",
    "revert \"merge pull request #5714 from gaearon/passthrough-svg-attributes\"",
    "revert \"merge pull request #6184 from gaearon/fix-svg-warning\"",
    "revert \"merge pull request #6164 from gaearon/fix-svg\"",
    "fix reactmarkupchecksum.addchecksumtomarkup adds checksum to comments",
    "update to set value property with empty string; add test; update reactdomcomponent test",
    "fix #6114 - calling setstate inside getchildcontext should warn",
    "copy and paste no-jsx note from top of file to places where it's used",
    "add a warning for adding some properties in the syntheticevent object if proxy is supported",
    "warn when accessing or setting properties on released syntheticevents",
    "create ms-unsafe functions in one place, simplifies code.",
    "improve definition of the controlled and uncontrolled input.",
    "warn when an input switches between controlled and uncontrolled",
    "warn when both value and defaultvalue or both check and defaultchecked props are specified on input, textarea, or select elements",
    "use removeattribute to forcefully remove properties from the dom, drop must_use_attribute and manage all regular properties as attributes instead",
    "revert \"merge pull request #5689 from jimfb/cleanup-5151\"",
    "move nodes around by reference instead of by index",
    "move svg attribute deprecation warnings into a devtool",
    "use duck typing instead of allocating event objects",
    "clean up caller sites of instantiatereactcomponent",
    "increase severity of setprops and replaceprops deprecations, since their removal is now imminent.",
    "rename minlength to minlength in the tags and attributes documentation page",
    "make sure react-dom-server is shipped in release process",
    "allow all characters  specified in xml specs. fixes #2329",
    "ensure license and patents files are packaged for npm",
    "remove eslint-disable when possible and update eslint version",
    "use incrementing numerical ids to identify dom components",
    "stop relying on hierarchical ids in reactdefaultperf",
    "turn reactinstancehandles-test into reactdomtreetraversal-test",
    "make reactdomcomponent-test pass with usecreateelement",
    "add additional secret property and build for react-dom-server",
    "show a friendly error when using testutils.simulate with shallow rendering",
    "revert \"overwriting of mutated props in constructor\"",
    "remove `generatefrommetadata` and `getmetadata` usage.",
    "update syntax in older relay blog post that may be causing confusion",
    "add support for \"invalid\" event within form elements",
    "stop generating gh-pages during release, update message",
    "adjust babel release to match the babel.js changelog",
    "extract defineproperty feature testing to one file",
    "rewrite reactinstancehandles-test to be less brittle",
    "use returned native node for composite type-change",
    "revert \"revert \"remove dependence on es5 shams per #4189\"\"",
    "perform transaction around shallow render to run lifecycle methods",
    "add unit test to ensure dom mutations are instrumented",
    "make reacttestutils.scryrenderedcomponentwithclass find multiple classes",
    "add trailing commas to react-codemod output by default.",
    "use a generator to assign complete author data before generating site",
    "make \"component specs and lifecycle\" more readable",
    "move headers to shared location, use grunt templates",
    "move version to standalone module in preparation for reuse",
    "require instantiable components to extend react.component",
    "update docs to match standard html attribute support",
    "warn when passing invalid containers to render and unmountcomponentatnode",
    "update warning messages to use reactdom and reactdomserver as appropriate",
    "add destructors to pooled classes in reactchildren",
    "make definitions more readable & optional params more obvious",
    "make createfragment return an array, disallow objects as children",
    "report the actual type when proptypes.instanceof fails",
    "add property key names + type of value to fragment warning",
    "add mediaevent handlers for video/audio components",
    "allow classes created with react.createclass to opt out of autobinding",
    "fix switching between dangerouslysetinnerhtml and children",
    "translate 10.2-form-input-binding-sugar.md to japanese",
    "remove controll character from 07-forms.ja-jp.md, 10-addons.ja-jp.md and 10-addons.ja-jp.md",
    "add runtime deprecation warning for clonewithprops",
    "handle escaping when comparing server/client markup",
    "translate 08-working-with-the-browser.md to japanese",
    "fix event target for input change events.  fixes #4288",
    "translate 03-interactivity-and-dynamic-uis.md to japanese",
    "add legacy methods to dom components for compatibility",
    "update warn message and move it to the error-catching block",
    "use hack to support ismounted without stateful module",
    "allow callbacks to be enqueued during componentwillmount",
    "use a custom batching strategy for server rendering",
    "improve error message when mounting non-string/function elements",
    "disallow passing a dom component to reactcomponentexpect",
    "wrap calls to deprecated functions with a warning.",
    "disallow passing a dom component to findallinrenderedtree",
    "update script sources to be even with the example file in reactjs/react-tutorial repo ... apply to japanese and korean translation",
    "make setstate in render a warning, not an invariant",
    "ignore whitelisted attributes for native custom elements that use the is attribute.",
    "warn when accessing .props, .setprops on dom components",
    "load custom eslint rules as plugin, w/o --rulesdir",
    "support arbitrary attributes on elements with dashes in the tag name.",
    "make dom wrapper component using lower-level primitives",
    "revert links to non-https fiddles back to http in old blog posts",
    "replace vendor/constants recast transform with babel",
    "create addons directory that loads from lib. closes #3780",
    "fix line highlighting in code blocks due to addition of extra example code",
    "revert \"warn when multiple instances of react are loaded on the same page\"",
    "warn when multiple instances of react are loaded on the same page",
    "fix respondereventplugin to work in core react again",
    "use setstate transaction for transitiongroup instead of extra property",
    "fix immutability helper to check hasownproperty safely",
    "display error when trying to create an element of type boolean. fixes #3478",
    "fix the context handling when updating a rendered component.",
    "put comma after any non-comments, non-whitespace in jsxespression",
    "move getreactrootelementincontainer to reactmount.js",
    "use full chain of member expressions when generating display names.",
    "include the owner name when warning about createelement.",
    "use a polyglot html-safe method of escaping leading newline in rawtext elements",
    "generate xml-compatible tags and boolean attributes",
    "fix jsx_orphaned_brackets_transformer using jstransformer with an older esprima version",
    "add deprecation note for deprecated component apis",
    "add shallowcompare module and use it in purerendermixin + tests",
    "use same pathways for browser transforms as we use in react-tools",
    "replace ballmer peak example with quadratic formula",
    "wrap jquery mobile example's components with react.createfactory to fix on v0.13.0. fixes #2880",
    "avoid reading the property if hasownproperty is false",
    "warn if getdomnode or ismounted is accessed in render",
    "make simulate.mouseenter/leave use direct dispatch",
    "remove space before round brace in function expressions",
    "rename `id` suffix to `id` to apply naming conventions",
    "warn when calling setstate & other methods at wrong time",
    "flip console.warn to use warning module so users can intercept all warnings by shimming the warning module.",
    "drop processattributenameandprefix and invalid attribute name escaping",
    "fix warning messages wording and access of displayname",
    "try/catch property deprecation warnings to support ie8",
    "warn if mounting into node with dirty rendered markup",
    "add detectable prefix to reactelement proptype warning.",
    "pull in 0.13 beta blog post from 0.12-stable branch",
    "extract setstate, setprops etc into reactupdatequeue",
    "provide warning when using styles containing a semicolon",
    "move proptype validation to element instead of class.",
    "move component class instantiation into reactcompositecomponent",
    "add warning when accessing .type on a component class",
    "revert \"merge pull request #2814 from jsfb/testutils-consolemock\"",
    "eliminate context warnings when component isn't reading the conflicting context variable.",
    "warn when defined methods are used in plain js classes",
    "find cases where shouldupdatereactcomponent is determined by the owner.",
    "add tobetextcomponentwithvalue to reactcomponentexpect",
    "sync up previous chinese documents and several minor updates on formats.",
    "add chinese translation of interactivity-and-dynamic-uis",
    "move reactclass, reactelement and reactproptypes into \"traditional\"",
    "warn if context values differ, related to issue #2112",
    "move mountcomponentintonode and setprops out of reactcomponent",
    "ensure that all internal instances have consistent properties",
    "fix reacttransitiongroup behavior when removing several children at once",
    "drop the _owner and _lifecycle field on internal instances",
    "move logic for `null` to instantiatereactcomponent",
    "fix some minor typos in doc comments / code comments.",
    "use double quote for transformed `displayname` and `data-*`",
    "reactdomselect makeover, fix edge-case inconsistencies and remove state",
    "use dump cache and remove factory from reactelement-test",
    "replace transferpropsto with transferring props patterns",
    "update react.dom -> react.createelement through docs",
    "introduce react class as an alias for composite component",
    "inject the runtime to a global instead of exposing internals",
    "use object.assign instead of merge, mergeinto, mixinto and copyproperties",
    "add a section at 'jsx-in-depth' talking about namespaced components",
    "drop usage of plain functions to create descriptors",
    "make createdescriptor return a descriptor for components",
    "throw an error when functions on `statics` clash due to duplicate keys",
    "use jekyll-redirect-from instead of our other redirect method",
    "improve normalization of charcode, fix ff not reporting enter",
    "move key/ref off props and prepare for new descriptor factories",
    "move defaultprops resolution to the descriptor factory",
    "add translation for 02-displaying-data.md and change next link in 01-why-react.zh-cn.md",
    "add docblocks and consistent styling to jsxtransformer",
    "remove mention of envify since it is listed in package.json",
    "give context for owners of compenent instantiations with proptype errors",
    "add support to jsx transform for <hyphenated-tags>",
    "fix reactemptycomponent disappearing and throwing in ie8",
    "update findcomponentroot and processupdates warnings for svg",
    "apply component and mixins specs deterministically",
    "remove event listeners from native dom wrapper components",
    "update todomvc dispatcher to match docs, add appdispatcher test",
    "update flux dispatcher.dispatch and waitfor examples",
    "make perf show all exclusive time, not just render time.",
    "revert \"move defaultprops resolution and type validation to the descriptor\"",
    "move defaultprops resolution and type validation to the descriptor",
    "clean up flux documentation and add more info about managing dependencies between stores",
    "normalize and polyfill keyboardevent further, also mouseevent+touchevent",
    "update jsfiddles in thinking-in-react to remove onsubmit from forms",
    "make custom proptypes return error rather than whatever",
    "allow `false` as an acceptable renderable type value",
    "make proptype.object pass for date and regexp instances",
    "carry ajax error checking from step #13 forward to other ajax steps",
    "make rendering to null work and make it injectable",
    "move complementary tools to wiki for easier management.",
    "revert \"merge pull request #1234 from rreverser/pure-cjs\"",
    "move ui-thread-only browser modules to browser/ui/",
    "allow rendering markup string without checksum and react id",
    "ensure classname={false} turns into string 'false'",
    "add reactcsstransitiongroup to addons and document it",
    "pull in syranides jsx whitespace codemod transform fixes",
    "add lineclamp, vendor prefixes to cssproperty.isunitlessnumber",
    "add warnings when accessing properties/methods on unmounted components",
    "ensure a pooled class releases back into the pool an instance of that class",
    "build react-tools package on build, upload to builds site",
    "add proptypes.arrayof and clean up reactproptypes.js",
    "revert \"switched from browserify to pure-cjs bundler.\"",
    "revert \"more optimizations and fix for jsxtransformer build\"",
    "support two-way binding for checkboxes in linkedvaluemixin via 'checkedlink' property",
    "add invariant if both checkedlink and valuelink are provided",
    "change reactproptypes invariant's to console.warn.",
    "throw when using component/component class as mixin",
    "use fallback data for composition events if necessary",
    "allow null return values for functions to-be-merged.",
    "add proptypes.component to demand a single react component.",
    "use proper window object for iframe in enter/leave",
    "fix some odd spacing inconsistencies in reactrenderdocument-test.",
    "forbid full-page rendering without server rendering",
    "throw when unmounting <html>, <head>, <title> or <body>",
    "fix wheelevent incorrectly inverting sign of deltay",
    "add syntheticdragevent with \"datatransfer\" property",
    "add invariant to check getinitialstate return value. fixes #397",
    "use feature detection and more robust recovering of whitespace for innerhtml in ie8",
    "fix merging `proptypes`, `contexttypes`, and `childcontexttypes`",
    "move npm-react-core to npm-react, fix tasks accordingly",
    "add has_positive_numeric_value to domproperty and normalize behavior of null values",
    "remove support for putting mixins, proptypes, etc. in 'statics'",
    "remove deprecated react.unmountandreleasereactrootnode",
    "validate proptypes, contexttypes, childcontexttypes",
    "use this.getdomnode instead of last argument of componentdidmount",
    "use this.getdomnode instead of last argument of componentdidupdate",
    "rewrite vendor/constants.js to use require.traverse.",
    "improve error logging for event handlers of react components.",
    "move merge utility functions from utils to vendor/core",
    "remove cb prefix from cookbook entries since they're already in /cookbook/ directory",
    "remove entry 13 jquery animation; react has animation",
    "fix permalink, temporarily remove script field of jekyll",
    "fix unmounting components mounted into doc element",
    "throw when calling transferpropsto on a component you don't own",
    "copy the nodecontains module from static_upstream.",
    "rename unmountandreleasereactrootnode -> unmountcomponentatnode",
    "make constant propagation smarter about pruning if statements.",
    "fix input/textarea `value` of number 0 and `false`",
    "stop using comments as boundary markers in dangerouslyrendermarkup.",
    "simplify bin/jsx to perform just the jsx transform.",
    "avoid unnecessary array allocations in dangerouslyrendermarkup.",
    "make mounting on the root of the page work correctly",
    "improve error behavior of danger.dangerouslyrendermarkup.",
    "move lifecycle check into replaceprops instead of updatecomponent",
    "update the tooling page to include pyreact, react-rails and react-page",
    "move to using `jstransform` and `esprima-fb` npm modules",
    "warn when server-rendered markup is not what we expect on the client",
    "abandon <iframe> test isolation hack now that we have dumpcache.",
    "add changelog at the root, remove from downloads page",
    "revert \"merge pull request #200 from spicyj/version\"",
    "use populist for building jasmine test harness package.",
    "fix rootelementsbyreactrootid bookkeeping in reactmount.js.",
    "use populist v0.1.2 to bundle test modules instead of browserify.",
    "continue over id-less children in reactmount.findcomponentroot.",
    "try harder to find container in reactmount.findreactcontainerforid.",
    "upgrade textchangeeventplugin to changeeventplugin and support more form elements",
    "use reactid.attr_name as the react-specific id attribute name.",
    "use reactid.{get,set}id instead of manipulating .id property directly.",
    "replace uses of reactdomnodecache and getdomnodeid with reactid.",
    "consolidate reactdomnodecache and getdomnodeid into reactid.",
    "add callbacks to all public-facing state/props methods",
    "sync latest jsx transform - all children passed as separate arguments",
    "pass multiple children in jsx as additional arguments",
    "assign the same keys if it's a single nested array or not",
    "make todo example shorter and not rely on the dom.",
    "make reactidentity-test less fragile with respect to root ids.",
    "create testing <iframe>s dynamically, according to grunt config.",
    "use bin/jsx and browserify to build a jasmine bundle."
  ],
  "passed": [
    {
      "message": "allow `useeffect` in `react-hooks/exhaustive-deps`.",
      "diff": "diff --git a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js b/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js\nindex a7b2abbe80d0..eb58f8d4d1fb 100644\n--- a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js\n+++ b/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js\n@@ -1452,6 +1452,15 @@ const tests = {\n         }\n       `,\n     },\n+    {\n+      code: normalizeIndent`\n+        function MyComponent() {\n+          useEffect(() => {\n+            console.log('banana banana banana');\n+          }, undefined);\n+        }\n+      `,\n+    },\n   ],\n   invalid: [\n     {\ndiff --git a/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js b/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\nindex 0b8b61b14fa5..e754edabc434 100644\n--- a/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\n+++ b/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\n@@ -1161,7 +1161,12 @@ export default {\n       const callback = node.arguments[callbackIndex];\n       const reactiveHook = node.callee;\n       const reactiveHookName = getNodeWithoutReactNamespace(reactiveHook).name;\n-      const declaredDependenciesNode = node.arguments[callbackIndex + 1];\n+      const maybeNode = node.arguments[callbackIndex + 1];\n+      const declaredDependenciesNode =\n+        maybeNode &&\n+        !(maybeNode.type === 'Identifier' && maybeNode.name === 'undefined')\n+          ? maybeNode\n+          : undefined;\n       const isEffect = /Effect($|[^a-z])/g.test(reactiveHookName);\n \n       // Check whether a callback is supplied. If there is no callback supplied"
    },
    {
      "message": "move reactserverstreamconfigfb to `react-server` from `react-server-dom-fb`",
      "diff": "diff --git a/packages/react-server-dom-fb/src/ReactServerStreamConfigFB.js b/packages/react-server/src/ReactServerStreamConfigFB.js\nsimilarity index 96%\nrename from packages/react-server-dom-fb/src/ReactServerStreamConfigFB.js\nrename to packages/react-server/src/ReactServerStreamConfigFB.js\nindex a06b2a73d76d..781b6a286094 100644\n--- a/packages/react-server-dom-fb/src/ReactServerStreamConfigFB.js\n+++ b/packages/react-server/src/ReactServerStreamConfigFB.js\n@@ -84,4 +84,4 @@ export function closeWithError(destination: Destination, error: mixed): void {\n   destination.error = error;\n }\n \n-export {createFastHashJS as createFastHash} from 'react-server/src/createFastHashJS';\n+export {createFastHashJS as createFastHash} from './createFastHashJS';\ndiff --git a/packages/react-server/src/forks/ReactServerStreamConfig.dom-fb.js b/packages/react-server/src/forks/ReactServerStreamConfig.dom-fb.js\nindex 6b6461f94221..f90c75933874 100644\n--- a/packages/react-server/src/forks/ReactServerStreamConfig.dom-fb.js\n+++ b/packages/react-server/src/forks/ReactServerStreamConfig.dom-fb.js\n@@ -7,4 +7,4 @@\n  * @flow\n  */\n \n-export * from '../../../react-server-dom-fb/src/ReactServerStreamConfigFB';\n+export * from '../ReactServerStreamConfigFB';"
    },
    {
      "message": "restore experimental prefix for `useformstate` and `useformstatus`",
      "diff": "diff --git a/packages/react-dom/server-rendering-stub.js b/packages/react-dom/server-rendering-stub.js\nindex bb6dbd1813ac..b2e88599718a 100644\n--- a/packages/react-dom/server-rendering-stub.js\n+++ b/packages/react-dom/server-rendering-stub.js\n@@ -28,3 +28,30 @@ export {\n   useFormState,\n   unstable_batchedUpdates,\n } from './src/server/ReactDOMServerRenderingStub';\n+\n+import type {FormStatus} from 'react-dom-bindings/src/shared/ReactDOMFormActions';\n+import {useFormStatus, useFormState} from './src/client/ReactDOM';\n+\n+export function experimental_useFormStatus(): FormStatus {\n+  if (__DEV__) {\n+    console.error(\n+      'useFormStatus is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useFormStatus();\n+}\n+\n+export function experimental_useFormState<S, P>(\n+  action: (S, P) => Promise<S>,\n+  initialState: S,\n+  permalink?: string,\n+): [S, (P) => void] {\n+  if (__DEV__) {\n+    console.error(\n+      'useFormState is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useFormState(action, initialState, permalink);\n+}"
    },
    {
      "message": "add back temporary `experimental_` aliases for server actions apis",
      "diff": "diff --git a/packages/react-dom/index.experimental.js b/packages/react-dom/index.experimental.js\nindex c21671c8306e..e946fee65632 100644\n--- a/packages/react-dom/index.experimental.js\n+++ b/packages/react-dom/index.experimental.js\n@@ -30,3 +30,30 @@ export {\n   preinitModule,\n   version,\n } from './src/client/ReactDOM';\n+\n+import type {FormStatus} from 'react-dom-bindings/src/shared/ReactDOMFormActions';\n+import {useFormStatus, useFormState} from './src/client/ReactDOM';\n+\n+export function experimental_useFormStatus(): FormStatus {\n+  if (__DEV__) {\n+    console.error(\n+      'useFormStatus is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useFormStatus();\n+}\n+\n+export function experimental_useFormState<S, P>(\n+  action: (S, P) => Promise<S>,\n+  initialState: S,\n+  permalink?: string,\n+): [S, (P) => void] {\n+  if (__DEV__) {\n+    console.error(\n+      'useFormState is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useFormState(action, initialState, permalink);\n+}\ndiff --git a/packages/react/index.experimental.js b/packages/react/index.experimental.js\nindex f1092ff4a877..c3d7e01adb6b 100644\n--- a/packages/react/index.experimental.js\n+++ b/packages/react/index.experimental.js\n@@ -58,3 +58,18 @@ export {\n   useTransition,\n   version,\n } from './src/React';\n+\n+import {useOptimistic} from './src/React';\n+\n+export function experimental_useOptimistic<S, A>(\n+  passthrough: S,\n+  reducer: ?(S, A) => S,\n+): [S, (A) => void] {\n+  if (__DEV__) {\n+    console.error(\n+      'useOptimistic is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useOptimistic(passthrough, reducer);\n+}"
    },
    {
      "message": "remove unreferenced react-native-host-hooks from flow",
      "diff": "diff --git a/scripts/flow/react-native-host-hooks.js b/scripts/flow/react-native-host-hooks.js\nindex f7a5f26e6c2e..6616342a618e 100644\n--- a/scripts/flow/react-native-host-hooks.js\n+++ b/scripts/flow/react-native-host-hooks.js\n@@ -230,33 +230,3 @@ declare var nativeFabricUIManager: {\n   unstable_getCurrentEventPriority: () => number,\n   ...\n };\n-\n-declare module 'View' {\n-  declare module.exports: typeof React$Component;\n-}\n-\n-declare module 'RTManager' {\n-  declare function createNode(\n-    tag: number,\n-    classType: string,\n-    props: ?Object,\n-  ): void;\n-\n-  declare function beginUpdates(): void;\n-\n-  declare function appendChildToContext(\n-    contextTag: number,\n-    childTag: number,\n-  ): void;\n-  declare function appendChild(parentTag: number, childTag: number): void;\n-  declare function prependChild(childTag: number, beforeTag: number): void;\n-  declare function deleteChild(childTag: number): void;\n-  declare function updateNode(tag: number, props: ?Object): void;\n-\n-  declare function completeUpdates(): void;\n-}\n-\n-// shims/ReactFeatureFlags is generated by the packaging script\n-declare module '../shims/ReactFeatureFlags' {\n-  declare export var debugRenderPhaseSideEffects: boolean;\n-}"
    },
    {
      "message": "publish `react-server-dom-turbopack` to canary channels",
      "diff": "diff --git a/ReactVersions.js b/ReactVersions.js\nindex c59e772e5cfc..ef97ee7e3afc 100644\n--- a/ReactVersions.js\n+++ b/ReactVersions.js\n@@ -35,6 +35,7 @@ const stablePackages = {\n   'react-art': ReactVersion,\n   'react-dom': ReactVersion,\n   'react-server-dom-webpack': ReactVersion,\n+  'react-server-dom-turbopack': ReactVersion,\n   'react-is': ReactVersion,\n   'react-reconciler': '0.30.0',\n   'react-refresh': '0.15.0',"
    },
    {
      "message": "revert \"publish `react-server-dom-turbopack` to canary channels",
      "diff": "diff --git a/ReactVersions.js b/ReactVersions.js\nindex ef97ee7e3afc..c59e772e5cfc 100644\n--- a/ReactVersions.js\n+++ b/ReactVersions.js\n@@ -35,7 +35,6 @@ const stablePackages = {\n   'react-art': ReactVersion,\n   'react-dom': ReactVersion,\n   'react-server-dom-webpack': ReactVersion,\n-  'react-server-dom-turbopack': ReactVersion,\n   'react-is': ReactVersion,\n   'react-reconciler': '0.30.0',\n   'react-refresh': '0.15.0',"
    },
    {
      "message": "restore \"publish `react-server-dom-turbopack` to canary channels \"",
      "diff": "diff --git a/ReactVersions.js b/ReactVersions.js\nindex c59e772e5cfc..ef97ee7e3afc 100644\n--- a/ReactVersions.js\n+++ b/ReactVersions.js\n@@ -35,6 +35,7 @@ const stablePackages = {\n   'react-art': ReactVersion,\n   'react-dom': ReactVersion,\n   'react-server-dom-webpack': ReactVersion,\n+  'react-server-dom-turbopack': ReactVersion,\n   'react-is': ReactVersion,\n   'react-reconciler': '0.30.0',\n   'react-refresh': '0.15.0',"
    },
    {
      "message": "use opaque config for flight in `dom-legacy` renderer",
      "diff": "diff --git a/packages/react-client/src/forks/ReactFlightClientConfig.dom-legacy.js b/packages/react-client/src/forks/ReactFlightClientConfig.dom-legacy.js\nindex 212290670bd5..0ad00d57cdac 100644\n--- a/packages/react-client/src/forks/ReactFlightClientConfig.dom-legacy.js\n+++ b/packages/react-client/src/forks/ReactFlightClientConfig.dom-legacy.js\n@@ -8,6 +8,16 @@\n  */\n \n export * from 'react-client/src/ReactFlightClientConfigBrowser';\n-export * from 'react-server-dom-webpack/src/ReactFlightClientConfigWebpackBundler';\n export * from 'react-dom-bindings/src/shared/ReactFlightClientConfigDOM';\n+\n+export type Response = any;\n+export opaque type SSRManifest = mixed;\n+export opaque type ServerManifest = mixed;\n+export opaque type ServerReferenceId = string;\n+export opaque type ClientReferenceMetadata = mixed;\n+export opaque type ClientReference<T> = mixed; // eslint-disable-line no-unused-vars\n+export const resolveClientReference: any = null;\n+export const resolveServerReference: any = null;\n+export const preloadModule: any = null;\n+export const requireModule: any = null;\n export const usedWithSSR = true;\ndiff --git a/packages/react-server/src/forks/ReactFlightServerConfig.dom-legacy.js b/packages/react-server/src/forks/ReactFlightServerConfig.dom-legacy.js\nindex 212bd8c89a66..2e7273d82d69 100644\n--- a/packages/react-server/src/forks/ReactFlightServerConfig.dom-legacy.js\n+++ b/packages/react-server/src/forks/ReactFlightServerConfig.dom-legacy.js\n@@ -9,7 +9,7 @@\n \n import type {Request} from 'react-server/src/ReactFlightServer';\n \n-export * from 'react-server-dom-webpack/src/ReactFlightServerConfigWebpackBundler';\n+export * from '../ReactFlightServerConfigBundlerCustom';\n export * from 'react-dom-bindings/src/server/ReactFlightServerConfigDOM';\n \n export const supportsRequestStorage = false;"
    },
    {
      "message": "make temporary `nostrictpassiveeffects` option work with `usemodernstrictmode`",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberWorkLoop.js b/packages/react-reconciler/src/ReactFiberWorkLoop.js\nindex 1b3e274191d3..9ff0fbf3b7be 100644\n--- a/packages/react-reconciler/src/ReactFiberWorkLoop.js\n+++ b/packages/react-reconciler/src/ReactFiberWorkLoop.js\n@@ -90,6 +90,7 @@ import {\n   ConcurrentMode,\n   StrictLegacyMode,\n   StrictEffectsMode,\n+  NoStrictPassiveEffectsMode,\n } from './ReactTypeOfMode';\n import {\n   HostRoot,\n@@ -3538,11 +3539,19 @@ function recursivelyTraverseAndDoubleInvokeEffectsInDEV(\n }\n \n // Unconditionally disconnects and connects passive and layout effects.\n-function doubleInvokeEffectsOnFiber(root: FiberRoot, fiber: Fiber) {\n+function doubleInvokeEffectsOnFiber(\n+  root: FiberRoot,\n+  fiber: Fiber,\n+  shouldDoubleInvokePassiveEffects: boolean = true,\n+) {\n   disappearLayoutEffects(fiber);\n-  disconnectPassiveEffect(fiber);\n+  if (shouldDoubleInvokePassiveEffects) {\n+    disconnectPassiveEffect(fiber);\n+  }\n   reappearLayoutEffects(root, fiber.alternate, fiber, false);\n-  reconnectPassiveEffects(root, fiber, NoLanes, null, false);\n+  if (shouldDoubleInvokePassiveEffects) {\n+    reconnectPassiveEffects(root, fiber, NoLanes, null, false);\n+  }\n }\n \n function doubleInvokeEffectsInDEVIfNecessary(\n@@ -3559,7 +3568,11 @@ function doubleInvokeEffectsInDEVIfNecessary(\n     if (fiber.flags & PlacementDEV) {\n       setCurrentDebugFiberInDEV(fiber);\n       if (isInStrictMode) {\n-        doubleInvokeEffectsOnFiber(root, fiber);\n+        doubleInvokeEffectsOnFiber(\n+          root,\n+          fiber,\n+          (fiber.mode & NoStrictPassiveEffectsMode) === NoMode,\n+        );\n       }\n       resetCurrentDebugFiberInDEV();\n     } else {"
    },
    {
      "message": "remove unused argument from schedule requesthostcallback",
      "diff": "diff --git a/packages/scheduler/src/forks/Scheduler.js b/packages/scheduler/src/forks/Scheduler.js\nindex ccea89d80bf1..2263b706aad3 100644\n--- a/packages/scheduler/src/forks/Scheduler.js\n+++ b/packages/scheduler/src/forks/Scheduler.js\n@@ -152,7 +152,7 @@ function handleTimeout(currentTime: number) {\n   if (!isHostCallbackScheduled) {\n     if (peek(taskQueue) !== null) {\n       isHostCallbackScheduled = true;\n-      requestHostCallback(flushWork);\n+      requestHostCallback();\n     } else {\n       const firstTimer = peek(timerQueue);\n       if (firstTimer !== null) {\n@@ -419,7 +419,7 @@ function unstable_scheduleCallback(\n     // wait until the next time we yield.\n     if (!isHostCallbackScheduled && !isPerformingWork) {\n       isHostCallbackScheduled = true;\n-      requestHostCallback(flushWork);\n+      requestHostCallback();\n     }\n   }\n \n@@ -434,7 +434,7 @@ function unstable_continueExecution() {\n   isSchedulerPaused = false;\n   if (!isHostCallbackScheduled && !isPerformingWork) {\n     isHostCallbackScheduled = true;\n-    requestHostCallback(flushWork);\n+    requestHostCallback();\n   }\n }\n \n@@ -616,7 +616,7 @@ if (typeof localSetImmediate === 'function') {\n   };\n }\n \n-function requestHostCallback(callback: (initialTime: number) => boolean) {\n+function requestHostCallback() {\n   if (!isMessageLoopRunning) {\n     isMessageLoopRunning = true;\n     schedulePerformWorkUntilDeadline();"
    },
    {
      "message": "run schedulerfeatureflags with variant flags again",
      "diff": "diff --git a/scripts/jest/setupTests.www.js b/scripts/jest/setupTests.www.js\nindex 0def1bcadc22..a51b5838ee43 100644\n--- a/scripts/jest/setupTests.www.js\n+++ b/scripts/jest/setupTests.www.js\n@@ -24,9 +24,18 @@ jest.mock('scheduler/src/SchedulerFeatureFlags', () => {\n       ),\n     {virtual: true}\n   );\n-  return jest.requireActual(\n+  const actual = jest.requireActual(\n     schedulerSrcPath + '/src/forks/SchedulerFeatureFlags.www'\n   );\n+\n+  // These flags are not a dynamic on www, but we still want to run\n+  // tests in both versions.\n+  actual.enableIsInputPending = __VARIANT__;\n+  actual.enableIsInputPendingContinuous = __VARIANT__;\n+  actual.enableProfiling = __VARIANT__;\n+  actual.enableSchedulerDebugging = __VARIANT__;\n+\n+  return actual;\n });\n \n global.__WWW__ = true;"
    },
    {
      "message": "remove unused `initialstatus` parameter from `usehosttransitionstatus`",
      "diff": "diff --git a/packages/react-dom-bindings/src/shared/ReactDOMFormActions.js b/packages/react-dom-bindings/src/shared/ReactDOMFormActions.js\nindex d716782e709d..addb70394b9a 100644\n--- a/packages/react-dom-bindings/src/shared/ReactDOMFormActions.js\n+++ b/packages/react-dom-bindings/src/shared/ReactDOMFormActions.js\n@@ -70,7 +70,7 @@ export function useFormStatus(): FormStatus {\n     throw new Error('Not implemented.');\n   } else {\n     const dispatcher = resolveDispatcher();\n-    // $FlowFixMe We know this exists because of the feature check above.\n+    // $FlowFixMe[not-a-function] We know this exists because of the feature check above.\n     return dispatcher.useHostTransitionStatus();\n   }\n }\ndiff --git a/packages/react-reconciler/src/ReactInternalTypes.js b/packages/react-reconciler/src/ReactInternalTypes.js\nindex bc9cfd1fb307..b177db722d0c 100644\n--- a/packages/react-reconciler/src/ReactInternalTypes.js\n+++ b/packages/react-reconciler/src/ReactInternalTypes.js\n@@ -422,9 +422,7 @@ export type Dispatcher = {\n   useId(): string,\n   useCacheRefresh?: () => <T>(?() => T, ?T) => void,\n   useMemoCache?: (size: number) => Array<any>,\n-  useHostTransitionStatus?: (\n-    initialStatus: TransitionStatus,\n-  ) => TransitionStatus,\n+  useHostTransitionStatus?: () => TransitionStatus,\n };\n \n export type CacheDispatcher = {"
    },
    {
      "message": "handle line endings correctly on windows in build script for rn",
      "diff": "diff --git a/scripts/rollup/packaging.js b/scripts/rollup/packaging.js\nindex b49472c1bea9..dba7e835cdda 100644\n--- a/scripts/rollup/packaging.js\n+++ b/scripts/rollup/packaging.js\n@@ -148,9 +148,9 @@ function processGenerated(directory) {\n     const originalContents = readFileSync(file, 'utf8');\n     const contents = originalContents\n       // Replace {@}format with {@}noformat\n-      .replace(/(\\n\\s*\\*\\s*)@format\\b.*(\\n)/, '$1@noformat$2')\n+      .replace(/(\\r?\\n\\s*\\*\\s*)@format\\b.*(\\n)/, '$1@noformat$2')\n       // Add {@}nolint and {@}generated\n-      .replace(' */\\n', ` * @nolint\\n * ${getSigningToken()}\\n */\\n`);\n+      .replace(/(\\r?\\n\\s*\\*)\\//, `$1 @nolint$1 ${getSigningToken()}$1/`);\n     const signedContents = signFile(contents);\n     writeFileSync(file, signedContents, 'utf8');\n   });"
    },
    {
      "message": "go through the tostring path for booleanish strings and .name property",
      "diff": "diff --git a/packages/react-dom-bindings/src/client/ReactDOMComponent.js b/packages/react-dom-bindings/src/client/ReactDOMComponent.js\nindex bd7dfc0d5373..2603d8db3577 100644\n--- a/packages/react-dom-bindings/src/client/ReactDOMComponent.js\n+++ b/packages/react-dom-bindings/src/client/ReactDOMComponent.js\n@@ -685,7 +685,10 @@ function setProp(\n         if (__DEV__) {\n           checkAttributeStringCoercion(value, key);\n         }\n-        domElement.setAttribute(key, (value: any));\n+        domElement.setAttribute(\n+          key,\n+          enableTrustedTypesIntegration ? (value: any) : '' + (value: any),\n+        );\n       } else {\n         domElement.removeAttribute(key);\n       }\ndiff --git a/packages/react-dom-bindings/src/client/ReactDOMInput.js b/packages/react-dom-bindings/src/client/ReactDOMInput.js\nindex 6b16d479532c..409bf1e90765 100644\n--- a/packages/react-dom-bindings/src/client/ReactDOMInput.js\n+++ b/packages/react-dom-bindings/src/client/ReactDOMInput.js\n@@ -188,7 +188,7 @@ export function updateInput(\n     if (__DEV__) {\n       checkAttributeStringCoercion(name, 'name');\n     }\n-    node.name = name;\n+    node.name = toString(getToStringValue(name));\n   } else {\n     node.removeAttribute('name');\n   }"
    },
    {
      "message": "update flight fixture to use use instead of promise as a child",
      "diff": "diff --git a/fixtures/flight/src/index.js b/fixtures/flight/src/index.js\nindex 77461a258a0e..3e8b7e5bcce2 100644\n--- a/fixtures/flight/src/index.js\n+++ b/fixtures/flight/src/index.js\n@@ -1,5 +1,5 @@\n import * as React from 'react';\n-import {Suspense} from 'react';\n+import {use, Suspense} from 'react';\n import ReactDOM from 'react-dom/client';\n import {createFromFetch, encodeReply} from 'react-server-dom-webpack/client';\n \n@@ -27,7 +27,8 @@ let data = createFromFetch(\n   }\n );\n \n-// TODO: This transition shouldn't really be necessary but it is for now.\n-React.startTransition(() => {\n-  ReactDOM.hydrateRoot(document, data);\n-});\n+function Shell({data}) {\n+  return use(data);\n+}\n+\n+ReactDOM.hydrateRoot(document, <Shell data={data} />);"
    },
    {
      "message": "replace deprecated `new-window` with `webcontents.setwindowopenhandler`",
      "diff": "diff --git a/packages/react-devtools/app.js b/packages/react-devtools/app.js\nindex 2153fad0e070..3912a80ef09d 100644\n--- a/packages/react-devtools/app.js\n+++ b/packages/react-devtools/app.js\n@@ -5,7 +5,7 @@\n  * LICENSE file in the root directory of this source tree.\n  */\n \n-const {app, BrowserWindow} = require('electron'); // Module to create native browser window.\n+const {app, BrowserWindow, shell} = require('electron'); // Module to create native browser window.\n const {join} = require('path');\n const os = require('os');\n \n@@ -40,9 +40,9 @@ app.on('ready', function () {\n   }\n \n   // https://stackoverflow.com/questions/32402327/\n-  mainWindow.webContents.on('new-window', function (event, url) {\n-    event.preventDefault();\n-    require('electron').shell.openExternal(url);\n+  mainWindow.webContents.setWindowOpenHandler(({url}) => {\n+    shell.openExternal(url);\n+    return {action: 'deny'};\n   });\n \n   // and load the index.html of the app."
    },
    {
      "message": "add circle ci api token to request header if available",
      "diff": "diff --git a/scripts/release/shared-commands/download-build-artifacts.js b/scripts/release/shared-commands/download-build-artifacts.js\nindex fba746520273..2952bc977103 100644\n--- a/scripts/release/shared-commands/download-build-artifacts.js\n+++ b/scripts/release/shared-commands/download-build-artifacts.js\n@@ -22,9 +22,15 @@ const run = async ({build, cwd, releaseChannel}) => {\n   }\n \n   // Download and extract artifact\n+  const {CIRCLE_CI_API_TOKEN} = process.env;\n+  let header = '';\n+  // Add Circle CI API token to request header if available.\n+  if (CIRCLE_CI_API_TOKEN != null) {\n+    header = '-H \"Circle-Token: ${CIRCLE_CI_API_TOKEN}\" ';\n+  }\n   await exec(`rm -rf ./build`, {cwd});\n   await exec(\n-    `curl -L $(fwdproxy-config curl) ${buildArtifacts.url} | tar -xvz`,\n+    `curl -L $(fwdproxy-config curl) ${buildArtifacts.url} ${header}| tar -xvz`,\n     {\n       cwd,\n     }\ndiff --git a/scripts/release/utils.js b/scripts/release/utils.js\nindex 241395f42d52..efee7b25bc50 100644\n--- a/scripts/release/utils.js\n+++ b/scripts/release/utils.js\n@@ -59,8 +59,13 @@ const extractCommitFromVersionNumber = version => {\n };\n \n const getArtifactsList = async buildID => {\n+  const headers = {};\n+  const {CIRCLE_CI_API_TOKEN} = process.env;\n+  if (CIRCLE_CI_API_TOKEN != null) {\n+    headers['Circle-Token'] = CIRCLE_CI_API_TOKEN;\n+  }\n   const jobArtifactsURL = `https://circleci.com/api/v1.1/project/github/facebook/react/${buildID}/artifacts`;\n-  const jobArtifacts = await fetch(jobArtifactsURL);\n+  const jobArtifacts = await fetch(jobArtifactsURL, {headers});\n   return jobArtifacts.json();\n };"
    },
    {
      "message": "make disableschedulertimeoutinworkloop a static ff",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex 01e4f197ab6b..fc0b59ddfc65 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -25,7 +25,6 @@ export const {\n   enableDebugTracing,\n   skipUnmountedBoundaries,\n   enableUseRefAccessWarning,\n-  disableSchedulerTimeoutInWorkLoop,\n   enableLazyContextPropagation,\n   enableUnifiedSyncLane,\n   enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay,\n@@ -47,6 +46,8 @@ export const enableUpdaterTracking = __PROFILE__;\n export const createRootStrictEffectsByDefault = false;\n export const enableSuspenseAvoidThisFallback = true;\n export const enableSuspenseAvoidThisFallbackFizz = false;\n+\n+export const disableSchedulerTimeoutInWorkLoop = false;\n export const enableCPUSuspense = true;\n export const enableFloat = true;\n export const enableUseHook = true;"
    },
    {
      "message": "fix remaining commonjs imports after rollup upgrade",
      "diff": "diff --git a/scripts/rollup/build.js b/scripts/rollup/build.js\nindex f7ce2760fb7b..6e6384aba66f 100644\n--- a/scripts/rollup/build.js\n+++ b/scripts/rollup/build.js\n@@ -182,12 +182,16 @@ let getRollupInteropValue = id => {\n   // Specifying `interop: 'default'` instead will have Rollup use the imported variable as-is,\n   // without adding a `.default` to the reference.\n   const modulesWithCommonJsExports = [\n-    'JSResourceReferenceImpl',\n-    'error-stack-parser',\n     'art/core/transform',\n     'art/modes/current',\n     'art/modes/fast-noSideEffects',\n     'art/modes/svg',\n+    'JSResourceReferenceImpl',\n+    'error-stack-parser',\n+    'neo-async',\n+    'webpack/lib/dependencies/ModuleDependency',\n+    'webpack/lib/dependencies/NullDependency',\n+    'webpack/lib/Template',\n   ];\n \n   if (modulesWithCommonJsExports.includes(id)) {"
    },
    {
      "message": "make internalinstancehandle type opaque in reactnativetypes",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactNativeTypes.js b/packages/react-native-renderer/src/ReactNativeTypes.js\nindex 25436085debd..129613d54e7c 100644\n--- a/packages/react-native-renderer/src/ReactNativeTypes.js\n+++ b/packages/react-native-renderer/src/ReactNativeTypes.js\n@@ -213,7 +213,7 @@ export type ReactNativeType = {\n };\n \n export opaque type Node = mixed;\n-type InternalInstanceHandle = mixed;\n+export opaque type InternalInstanceHandle = mixed;\n type PublicInstance = mixed;\n \n export type ReactFabricType = {"
    },
    {
      "message": "revert \"remove hydrate entry point from www builds\"",
      "diff": "diff --git a/packages/react-dom/index.classic.fb.js b/packages/react-dom/index.classic.fb.js\nindex 18c05a0861d2..a9efae8208b9 100644\n--- a/packages/react-dom/index.classic.fb.js\n+++ b/packages/react-dom/index.classic.fb.js\n@@ -24,6 +24,7 @@ export {\n   hydrateRoot,\n   findDOMNode,\n   flushSync,\n+  hydrate,\n   render,\n   unmountComponentAtNode,\n   unstable_batchedUpdates,"
    },
    {
      "message": "add missing `\"react-dom/server.bun\"` entry in package.json `\"exports\"`",
      "diff": "diff --git a/packages/react-dom/package.json b/packages/react-dom/package.json\nindex d38382b9f271..d5f051694be3 100644\n--- a/packages/react-dom/package.json\n+++ b/packages/react-dom/package.json\n@@ -58,6 +58,7 @@\n       \"default\": \"./server.node.js\"\n     },\n     \"./server.browser\": \"./server.browser.js\",\n+    \"./server.bun\": \"./server.bun.js\",\n     \"./server.edge\": \"./server.edge.js\",\n     \"./server.node\": \"./server.node.js\",\n     \"./static\": {"
    },
    {
      "message": "restore some guards in reactfabricglobalresponderhandler after refactor",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js b/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\nindex 10ac51d4317d..2ec797e9bd44 100644\n--- a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\n+++ b/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\n@@ -9,7 +9,7 @@\n \n const ReactFabricGlobalResponderHandler = {\n   onChange: function (from: any, to: any, blockNativeResponder: boolean) {\n-    if (from) {\n+    if (from && from.stateNode) {\n       // equivalent to clearJSResponder\n       nativeFabricUIManager.setIsJSResponder(\n         from.stateNode.node,\n@@ -18,7 +18,7 @@ const ReactFabricGlobalResponderHandler = {\n       );\n     }\n \n-    if (to) {\n+    if (to && to.stateNode) {\n       // equivalent to setJSResponder\n       nativeFabricUIManager.setIsJSResponder(\n         to.stateNode.node,"
    },
    {
      "message": "prevent stylex plugin from throwing when inspecting css",
      "diff": "diff --git a/packages/react-devtools-shared/src/backend/StyleX/utils.js b/packages/react-devtools-shared/src/backend/StyleX/utils.js\nindex d99362766f4c..2ae10f316b78 100644\n--- a/packages/react-devtools-shared/src/backend/StyleX/utils.js\n+++ b/packages/react-devtools-shared/src/backend/StyleX/utils.js\n@@ -67,7 +67,10 @@ function crawlObjectProperties(\n         // Special case; this key is the name of the style's source/file/module.\n         sources.add(key);\n       } else {\n-        resolvedStyles[key] = getPropertyValueForStyleName(value);\n+        const propertyValue = getPropertyValueForStyleName(value);\n+        if (propertyValue != null) {\n+          resolvedStyles[key] = propertyValue;\n+        }\n       }\n     } else {\n       const nestedStyle = {};\n@@ -90,13 +93,19 @@ function getPropertyValueForStyleName(styleName: string): string | null {\n     const styleSheet = ((document.styleSheets[\n       styleSheetIndex\n     ]: any): CSSStyleSheet);\n-    // $FlowFixMe Flow doesn't konw about these properties\n-    const rules = styleSheet.rules || styleSheet.cssRules;\n-    // $FlowFixMe `rules` is mixed\n+    let rules: CSSRuleList | null = null;\n+    // this might throw if CORS rules are enforced https://www.w3.org/TR/cssom-1/#the-cssstylesheet-interface\n+    try {\n+      rules = styleSheet.cssRules;\n+    } catch (_e) {\n+      continue;\n+    }\n+\n     for (let ruleIndex = 0; ruleIndex < rules.length; ruleIndex++) {\n-      // $FlowFixMe `rules` is mixed\n-      const rule = rules[ruleIndex];\n-      // $FlowFixMe Flow doesn't konw about these properties\n+      if (!(rules[ruleIndex] instanceof CSSStyleRule)) {\n+        continue;\n+      }\n+      const rule = ((rules[ruleIndex]: any): CSSStyleRule);\n       const {cssText, selectorText, style} = rule;\n \n       if (selectorText != null) {"
    },
    {
      "message": "use settimeout to schedule work on the server in edge environments",
      "diff": "diff --git a/packages/react-server-dom-webpack/src/__tests__/ReactFlightDOMEdge-test.js b/packages/react-server-dom-webpack/src/__tests__/ReactFlightDOMEdge-test.js\nindex 4cba5aa91405..d08aafbcf2a1 100644\n--- a/packages/react-server-dom-webpack/src/__tests__/ReactFlightDOMEdge-test.js\n+++ b/packages/react-server-dom-webpack/src/__tests__/ReactFlightDOMEdge-test.js\n@@ -15,6 +15,10 @@ global.ReadableStream =\n global.TextEncoder = require('util').TextEncoder;\n global.TextDecoder = require('util').TextDecoder;\n \n+// Don't wait before processing work on the server.\n+// TODO: we can replace this with FlightServer.act().\n+global.setTimeout = cb => cb();\n+\n let clientExports;\n let webpackMap;\n let webpackModules;\ndiff --git a/packages/react-server/src/ReactServerStreamConfigEdge.js b/packages/react-server/src/ReactServerStreamConfigEdge.js\nindex a898e6b8d40f..d4157623e452 100644\n--- a/packages/react-server/src/ReactServerStreamConfigEdge.js\n+++ b/packages/react-server/src/ReactServerStreamConfigEdge.js\n@@ -13,7 +13,7 @@ export type PrecomputedChunk = Uint8Array;\n export opaque type Chunk = Uint8Array;\n \n export function scheduleWork(callback: () => void) {\n-  callback();\n+  setTimeout(callback, 0);\n }\n \n export function flushBuffered(destination: Destination) {\ndiff --git a/packages/react/src/__tests__/ReactFetchEdge-test.js b/packages/react/src/__tests__/ReactFetchEdge-test.js\nindex 10484b853bf5..832b8e542843 100644\n--- a/packages/react/src/__tests__/ReactFetchEdge-test.js\n+++ b/packages/react/src/__tests__/ReactFetchEdge-test.js\n@@ -20,6 +20,10 @@ global.Response = require('node-fetch').Response;\n // Patch for Edge environments for global scope\n global.AsyncLocalStorage = require('async_hooks').AsyncLocalStorage;\n \n+// Don't wait before processing work on the server.\n+// TODO: we can replace this with FlightServer.act().\n+global.setTimeout = cb => cb();\n+\n let fetchCount = 0;\n async function fetchMock(resource, options) {\n   fetchCount++;"
    },
    {
      "message": "remove unnecessary  code for compatibility with paper in the fabric version of globalresponderhandler",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js b/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\nindex 90b94295a09f..10ac51d4317d 100644\n--- a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\n+++ b/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\n@@ -7,42 +7,24 @@\n  * @flow\n  */\n \n-// Module provided by RN:\n-import {UIManager} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n-\n const ReactFabricGlobalResponderHandler = {\n   onChange: function (from: any, to: any, blockNativeResponder: boolean) {\n-    const fromOrTo = from || to;\n-    const fromOrToStateNode = fromOrTo && fromOrTo.stateNode;\n-    const isFabric = !!(\n-      fromOrToStateNode && fromOrToStateNode.canonical._internalInstanceHandle\n-    );\n-\n-    if (isFabric) {\n-      if (from) {\n-        // equivalent to clearJSResponder\n-        nativeFabricUIManager.setIsJSResponder(\n-          from.stateNode.node,\n-          false,\n-          blockNativeResponder || false,\n-        );\n-      }\n+    if (from) {\n+      // equivalent to clearJSResponder\n+      nativeFabricUIManager.setIsJSResponder(\n+        from.stateNode.node,\n+        false,\n+        blockNativeResponder || false,\n+      );\n+    }\n \n-      if (to) {\n-        // equivalent to setJSResponder\n-        nativeFabricUIManager.setIsJSResponder(\n-          to.stateNode.node,\n-          true,\n-          blockNativeResponder || false,\n-        );\n-      }\n-    } else {\n-      if (to !== null) {\n-        const tag = to.stateNode.canonical._nativeTag;\n-        UIManager.setJSResponder(tag, blockNativeResponder);\n-      } else {\n-        UIManager.clearJSResponder();\n-      }\n+    if (to) {\n+      // equivalent to setJSResponder\n+      nativeFabricUIManager.setIsJSResponder(\n+        to.stateNode.node,\n+        true,\n+        blockNativeResponder || false,\n+      );\n     }\n   },\n };"
    },
    {
      "message": "make enablecustomelementpropertysupport a dynamic flag in www build",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www-dynamic.js b/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\nindex c9e353f2baef..42e9c8a7ab2f 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\n@@ -26,6 +26,8 @@ export const enableUnifiedSyncLane = __VARIANT__;\n export const enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay =\n   __VARIANT__;\n export const enableTransitionTracing = __VARIANT__;\n+export const enableCustomElementPropertySupport = __VARIANT__;\n+\n // Enable this flag to help with concurrent mode debugging.\n // It logs information to the console about React scheduling, rendering, and commit phases.\n //\ndiff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex 83e3f877c7f1..edbc49557aaa 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -32,6 +32,7 @@ export const {\n   enableUnifiedSyncLane,\n   enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay,\n   enableTransitionTracing,\n+  enableCustomElementPropertySupport,\n } = dynamicFeatureFlags;\n \n // On WWW, __EXPERIMENTAL__ is used for a new modern build.\n@@ -100,8 +101,6 @@ export const enableServerContext = true;\n // Some www surfaces are still using this. Remove once they have been migrated.\n export const enableUseMutableSource = true;\n \n-export const enableCustomElementPropertySupport = __EXPERIMENTAL__;\n-\n export const useModernStrictMode = false;\n export const enableFizzExternalRuntime = true;"
    },
    {
      "message": "add a small test for reacttestutils to find rendered component with type in document",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactTestUtils-test.js b/packages/react-dom/src/__tests__/ReactTestUtils-test.js\nindex 88ede731edca..3394bf4b737d 100644\n--- a/packages/react-dom/src/__tests__/ReactTestUtils-test.js\n+++ b/packages/react-dom/src/__tests__/ReactTestUtils-test.js\n@@ -463,4 +463,19 @@ describe('ReactTestUtils', () => {\n     ReactTestUtils.renderIntoDocument(<Component />);\n     expect(mockArgs.length).toEqual(0);\n   });\n+  it('should find rendered component with type in document', () => {\n+    class MyComponent extends React.Component {\n+      render() {\n+        return true;\n+      }\n+    }\n+\n+    const instance = ReactTestUtils.renderIntoDocument(<MyComponent />);\n+    const renderedComponentType = ReactTestUtils.findRenderedComponentWithType(\n+      instance,\n+      MyComponent,\n+    );\n+\n+    expect(renderedComponentType).toBe(instance);\n+  });\n });"
    },
    {
      "message": "add flow types to maps in reactnativeviewconfigregistry.js",
      "diff": "diff --git a/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js b/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js\nindex 876cf73803b9..0df7395be015 100644\n--- a/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js\n+++ b/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js\n@@ -34,8 +34,8 @@ const customDirectEventTypes: {\n exports.customBubblingEventTypes = customBubblingEventTypes;\n exports.customDirectEventTypes = customDirectEventTypes;\n \n-const viewConfigCallbacks = new Map();\n-const viewConfigs = new Map();\n+const viewConfigCallbacks = new Map<string, ?() => ViewConfig>();\n+const viewConfigs = new Map<string, ViewConfig>();\n \n function processEventTypes(viewConfig: ViewConfig): void {\n   const {bubblingEventTypes, directEventTypes} = viewConfig;"
    },
    {
      "message": "update import for babel-code-frame in build script",
      "diff": "diff --git a/scripts/rollup/build.js b/scripts/rollup/build.js\nindex c08adda6d925..b054e0d4a320 100644\n--- a/scripts/rollup/build.js\n+++ b/scripts/rollup/build.js\n@@ -21,7 +21,7 @@ const useForks = require('./plugins/use-forks-plugin');\n const stripUnusedImports = require('./plugins/strip-unused-imports');\n const Packaging = require('./packaging');\n const {asyncRimRaf} = require('./utils');\n-const codeFrame = require('babel-code-frame');\n+const codeFrame = require('@babel/code-frame');\n const Wrappers = require('./wrappers');\n \n const RELEASE_CHANNEL = process.env.RELEASE_CHANNEL;"
    },
    {
      "message": "add github url for the commit to the commit message",
      "diff": "diff --git a/.github/workflows/commit_artifacts.yml b/.github/workflows/commit_artifacts.yml\nindex 9505643dc3fe..05744cb5cfce 100644\n--- a/.github/workflows/commit_artifacts.yml\n+++ b/.github/workflows/commit_artifacts.yml\n@@ -158,7 +158,8 @@ jobs:\n           commit_message: |\n             ${{ github.event.head_commit.message }}\n \n-            DiffTrain build for `${{ github.sha }}`\n+            DiffTrain build for [${{ github.sha }}](https://github.com/facebook/react/commit/${{ github.sha }})\n+            [View git log for this commit](https://github.com/facebook/react/commits/${{ github.sha }})\n           branch: builds/facebook-www\n           commit_user_name: ${{ github.actor }}\n           commit_user_email: ${{ github.actor }}@users.noreply.github.com"
    },
    {
      "message": "fix invalid link to react-devtools-extensions/src/__tests__",
      "diff": "diff --git a/packages/react-devtools/CONTRIBUTING.md b/packages/react-devtools/CONTRIBUTING.md\nindex cf6ff53d053d..ac0799127a8b 100644\n--- a/packages/react-devtools/CONTRIBUTING.md\n+++ b/packages/react-devtools/CONTRIBUTING.md\n@@ -65,7 +65,7 @@ yarn build:chrome && yarn test:chrome --url=<url-to-test>\n ```\n \n # Unit tests\n-Core DevTools functionality is typically unit tested (see [here](https://github.com/facebook/react/tree/main/packages/react-devtools-shared/src/__tests__) and [here](https://github.com/facebook/react/tree/main/packages/react-devtools-extensions/src/__tests__)). To run tests, you'll first need to build or download React and React DOM ([as explained above](#build-react-and-react-dom)) and then use the following NPM script:\n+Core DevTools functionality is typically unit tested (see [here](https://github.com/facebook/react/tree/main/packages/react-devtools-shared/src/__tests__)). To run tests, you'll first need to build or download React and React DOM ([as explained above](#build-react-and-react-dom)) and then use the following NPM script:\n ```sh\n yarn test-build-devtools\n ```"
    },
    {
      "message": "avoid replaying selectivehydrationexception in dev",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberWorkLoop.js b/packages/react-reconciler/src/ReactFiberWorkLoop.js\nindex 5046d38b589c..24901177563d 100644\n--- a/packages/react-reconciler/src/ReactFiberWorkLoop.js\n+++ b/packages/react-reconciler/src/ReactFiberWorkLoop.js\n@@ -3771,6 +3771,7 @@ if (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n       if (\n         didSuspendOrErrorWhileHydratingDEV() ||\n         originalError === SuspenseException ||\n+        originalError === SelectiveHydrationException ||\n         (originalError !== null &&\n           typeof originalError === 'object' &&\n           typeof originalError.then === 'function')"
    },
    {
      "message": "return lastnonhostinstance in getinspectordataforinstance for devtools",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactNativeFiberInspector.js b/packages/react-native-renderer/src/ReactNativeFiberInspector.js\nindex 874ac91d8473..2cc3c4ca8bf3 100644\n--- a/packages/react-native-renderer/src/ReactNativeFiberInspector.js\n+++ b/packages/react-native-renderer/src/ReactNativeFiberInspector.js\n@@ -112,6 +112,7 @@ if (__DEV__ || enableGetInspectorDataForInstanceInProduction) {\n     const selectedIndex = fiberHierarchy.indexOf(instance);\n \n     return {\n+      closestInstance: instance,\n       hierarchy,\n       props,\n       selectedIndex,\n@@ -225,7 +226,6 @@ if (__DEV__) {\n                 pointerY: locationY,\n                 frame: {left: pageX, top: pageY, width, height},\n                 touchedViewTag: nativeViewTag,\n-                closestInstance,\n               });\n             },\n           );\ndiff --git a/packages/react-native-renderer/src/ReactNativeTypes.js b/packages/react-native-renderer/src/ReactNativeTypes.js\nindex 5eef1a6dff9c..0b0a57b89596 100644\n--- a/packages/react-native-renderer/src/ReactNativeTypes.js\n+++ b/packages/react-native-renderer/src/ReactNativeTypes.js\n@@ -138,6 +138,7 @@ type InspectorDataGetter = (\n }>;\n \n export type InspectorData = $ReadOnly<{\n+  closestInstance?: mixed,\n   hierarchy: Array<{\n     name: ?string,\n     getInspectorData: InspectorDataGetter,\n@@ -150,7 +151,6 @@ export type InspectorData = $ReadOnly<{\n export type TouchedViewDataAtPoint = $ReadOnly<{\n   pointerY: number,\n   touchedViewTag?: number,\n-  closestInstance?: mixed,\n   frame: $ReadOnly<{\n     top: number,\n     left: number,"
    },
    {
      "message": "stop spamming highlight events when a component is selected",
      "diff": "diff --git a/packages/react-devtools-core/src/backend.js b/packages/react-devtools-core/src/backend.js\nindex 48a1348ee05c..cc6d9067089b 100644\n--- a/packages/react-devtools-core/src/backend.js\n+++ b/packages/react-devtools-core/src/backend.js\n@@ -131,21 +131,6 @@ export function connectToDevTools(options: ?ConnectOptions) {\n         }\n       },\n     });\n-    bridge.addListener(\n-      'inspectElement',\n-      ({id, rendererID}: {id: number, rendererID: number, ...}) => {\n-        const renderer = agent.rendererInterfaces[rendererID];\n-        if (renderer != null) {\n-          // Send event for RN to highlight.\n-          const nodes: ?Array<HTMLElement> = renderer.findNativeNodesForFiberID(\n-            id,\n-          );\n-          if (nodes != null && nodes[0] != null) {\n-            agent.emit('showNativeHighlight', nodes[0]);\n-          }\n-        }\n-      },\n-    );\n     // $FlowFixMe[incompatible-use] found when upgrading Flow\n     bridge.addListener(\n       'updateComponentFilters',"
    },
    {
      "message": "include install command for devtools-extension build instructions",
      "diff": "diff --git a/packages/react-devtools-extensions/README.md b/packages/react-devtools-extensions/README.md\nindex b5c7daf34f7b..d3e7689ea7eb 100644\n--- a/packages/react-devtools-extensions/README.md\n+++ b/packages/react-devtools-extensions/README.md\n@@ -15,6 +15,12 @@ DevTools depends on local versions of several NPM packages<sup>1</sup> also in t\n \n <sup>1</sup> Note that at this time, an _experimental_ build is required because DevTools depends on the `createRoot` API.\n \n+To install all necessary dependencies, run the following command from the root of the repository:\n+\n+```sh\n+yarn install\n+```\n+\n #### Build from source\n To build dependencies from source, run the following command from the root of the repository:\n ```sh"
    },
    {
      "message": "add tests for resource emission when rendering no head or just a head",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMFloat-test.js b/packages/react-dom/src/__tests__/ReactDOMFloat-test.js\nindex 8c5fafdb71c6..937796dfc87a 100644\n--- a/packages/react-dom/src/__tests__/ReactDOMFloat-test.js\n+++ b/packages/react-dom/src/__tests__/ReactDOMFloat-test.js\n@@ -248,6 +248,60 @@ describe('ReactDOMFloat', () => {\n     );\n   });\n \n+  // @gate enableFloat\n+  it('emits resources before everything else when rendering with no head', async () => {\n+    function App() {\n+      return (\n+        <>\n+          <title>foo</title>\n+          <link rel=\"preload\" href=\"foo\" as=\"style\" />\n+        </>\n+      );\n+    }\n+\n+    await actIntoEmptyDocument(() => {\n+      buffer = `<!DOCTYPE html><html><head>${ReactDOMFizzServer.renderToString(\n+        <App />,\n+      )}</head><body>foo</body></html>`;\n+    });\n+    expect(getVisibleChildren(document)).toEqual(\n+      <html>\n+        <head>\n+          <link rel=\"preload\" href=\"foo\" as=\"style\" />\n+          <title>foo</title>\n+        </head>\n+        <body>foo</body>\n+      </html>,\n+    );\n+  });\n+\n+  // @gate enableFloat\n+  it('emits resources before everything else when rendering with just a head', async () => {\n+    function App() {\n+      return (\n+        <head>\n+          <title>foo</title>\n+          <link rel=\"preload\" href=\"foo\" as=\"style\" />\n+        </head>\n+      );\n+    }\n+\n+    await actIntoEmptyDocument(() => {\n+      buffer = `<!DOCTYPE html><html>${ReactDOMFizzServer.renderToString(\n+        <App />,\n+      )}<body>foo</body></html>`;\n+    });\n+    expect(getVisibleChildren(document)).toEqual(\n+      <html>\n+        <head>\n+          <link rel=\"preload\" href=\"foo\" as=\"style\" />\n+          <title>foo</title>\n+        </head>\n+        <body>foo</body>\n+      </html>,\n+    );\n+  });\n+\n   describe('HostResource', () => {\n     // @gate enableFloat\n     it('warns when you update props to an invalid type', async () => {"
    },
    {
      "message": "fix failing tests in latest 16.x and 18.x node versions",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactTestUtilsAct-test.js b/packages/react-dom/src/__tests__/ReactTestUtilsAct-test.js\nindex ca7aa3317c5c..257497f6a2ab 100644\n--- a/packages/react-dom/src/__tests__/ReactTestUtilsAct-test.js\n+++ b/packages/react-dom/src/__tests__/ReactTestUtilsAct-test.js\n@@ -503,16 +503,15 @@ function runActTests(label, render, unmount, rerender) {\n       // @gate __DEV__\n       it('warns if you try to interleave multiple act calls', async () => {\n         spyOnDevAndProd(console, 'error');\n-        // let's try to cheat and spin off a 'thread' with an act call\n-        (async () => {\n-          await act(async () => {\n-            await sleep(50);\n-          });\n-        })();\n \n-        await act(async () => {\n-          await sleep(100);\n-        });\n+        await Promise.all([\n+          act(async () => {\n+            await sleep(50);\n+          }),\n+          act(async () => {\n+            await sleep(100);\n+          }),\n+        ]);\n \n         await sleep(150);\n         if (__DEV__) {"
    },
    {
      "message": "check if proxy exists before creating dispatcherproxy",
      "diff": "diff --git a/packages/react-debug-tools/src/ReactDebugHooks.js b/packages/react-debug-tools/src/ReactDebugHooks.js\nindex a09da97f90d7..6409647772ef 100644\n--- a/packages/react-debug-tools/src/ReactDebugHooks.js\n+++ b/packages/react-debug-tools/src/ReactDebugHooks.js\n@@ -367,7 +367,11 @@ const DispatcherProxyHandler = {\n   },\n };\n \n-const DispatcherProxy = new Proxy(Dispatcher, DispatcherProxyHandler);\n+// `Proxy` may not exist on some platforms\n+const DispatcherProxy =\n+  typeof Proxy === 'undefined'\n+    ? Dispatcher\n+    : new Proxy(Dispatcher, DispatcherProxyHandler);\n \n // Inspect"
    },
    {
      "message": "remove usedeferredvalue and usetransition from flight subset",
      "diff": "diff --git a/packages/react/src/ReactSharedSubset.experimental.js b/packages/react/src/ReactSharedSubset.experimental.js\nindex 076349e29383..b05ec07302ed 100644\n--- a/packages/react/src/ReactSharedSubset.experimental.js\n+++ b/packages/react/src/ReactSharedSubset.experimental.js\n@@ -32,8 +32,6 @@ export {\n   useCallback,\n   useContext,\n   useDebugValue,\n-  useDeferredValue,\n   useMemo,\n-  useTransition,\n   version,\n } from './React';"
    },
    {
      "message": "remove some rsc subset entry points that were removed in the main entry point",
      "diff": "diff --git a/packages/react/src/ReactSharedSubset.experimental.js b/packages/react/src/ReactSharedSubset.experimental.js\nindex fe096ba1dba9..076349e29383 100644\n--- a/packages/react/src/ReactSharedSubset.experimental.js\n+++ b/packages/react/src/ReactSharedSubset.experimental.js\n@@ -17,7 +17,6 @@ export {\n   SuspenseList,\n   cloneElement,\n   createElement,\n-  createMutableSource as unstable_createMutableSource,\n   createRef,\n   createServerContext,\n   experimental_use,\n@@ -34,9 +33,7 @@ export {\n   useContext,\n   useDebugValue,\n   useDeferredValue,\n-  useDeferredValue as unstable_useDeferredValue,\n   useMemo,\n-  useMutableSource as unstable_useMutableSource,\n   useTransition,\n   version,\n } from './React';"
    },
    {
      "message": "return closestinstance in `getinspectordataforviewatpoint`",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactNativeFiberInspector.js b/packages/react-native-renderer/src/ReactNativeFiberInspector.js\nindex a0f543a9c4e4..f0c6a8de2f56 100644\n--- a/packages/react-native-renderer/src/ReactNativeFiberInspector.js\n+++ b/packages/react-native-renderer/src/ReactNativeFiberInspector.js\n@@ -217,6 +217,7 @@ if (__DEV__) {\n                 pointerY: locationY,\n                 frame: {left: pageX, top: pageY, width, height},\n                 touchedViewTag: nativeViewTag,\n+                closestInstance,\n               });\n             },\n           );\ndiff --git a/packages/react-native-renderer/src/ReactNativeTypes.js b/packages/react-native-renderer/src/ReactNativeTypes.js\nindex 864952c52ff2..8a9968c0a080 100644\n--- a/packages/react-native-renderer/src/ReactNativeTypes.js\n+++ b/packages/react-native-renderer/src/ReactNativeTypes.js\n@@ -150,6 +150,7 @@ export type InspectorData = $ReadOnly<{|\n export type TouchedViewDataAtPoint = $ReadOnly<{|\n   pointerY: number,\n   touchedViewTag?: number,\n+  closestInstance?: Object,\n   frame: $ReadOnly<{|\n     top: number,\n     left: number,"
    },
    {
      "message": "add missing createservercontext for experimental shared subset",
      "diff": "diff --git a/packages/react/src/ReactSharedSubset.experimental.js b/packages/react/src/ReactSharedSubset.experimental.js\nindex 932aa1da6d0c..4a9ad873c1dc 100644\n--- a/packages/react/src/ReactSharedSubset.experimental.js\n+++ b/packages/react/src/ReactSharedSubset.experimental.js\n@@ -19,6 +19,7 @@ export {\n   createElement,\n   createMutableSource as unstable_createMutableSource,\n   createRef,\n+  createServerContext,\n   forwardRef,\n   isValidElement,\n   lazy,"
    },
    {
      "message": "enable \"reload & profile\" button for timeline view",
      "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.js b/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.js\nindex 3b5ad02351aa..f9f98fae656f 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.js\n+++ b/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.js\n@@ -113,9 +113,7 @@ function Profiler(_: {||}) {\n         <div className={styles.LeftColumn}>\n           <div className={styles.Toolbar}>\n             <RecordToggle disabled={!supportsProfiling} />\n-            <ReloadAndProfileButton\n-              disabled={selectedTabID === 'timeline' || !supportsProfiling}\n-            />\n+            <ReloadAndProfileButton disabled={!supportsProfiling} />\n             <ClearProfilingDataButton />\n             <ProfilingImportExportButtons />\n             <div className={styles.VRule} />"
    },
    {
      "message": "mock requestanimationframe with settimeout as a temporary fix for #24626",
      "diff": "diff --git a/packages/react-devtools-extensions/src/main.js b/packages/react-devtools-extensions/src/main.js\nindex a0f9bcea17a2..156eb81d07de 100644\n--- a/packages/react-devtools-extensions/src/main.js\n+++ b/packages/react-devtools-extensions/src/main.js\n@@ -30,6 +30,23 @@ const LOCAL_STORAGE_SUPPORTS_PROFILING_KEY =\n const isChrome = getBrowserName() === 'Chrome';\n const isEdge = getBrowserName() === 'Edge';\n \n+// since Chromium v102, requestAnimationFrame no longer fires in devtools_page (i.e. this file)\n+// mock requestAnimationFrame with setTimeout as a temporary workaround\n+// https://github.com/facebook/react/issues/24626\n+// The polyfill is based on https://gist.github.com/jalbam/5fe05443270fa6d8136238ec72accbc0\n+if (isChrome || isEdge) {\n+  const FRAME_TIME = 16;\n+  let lastTime = 0;\n+  window.requestAnimationFrame = function(callback, element) {\n+    const now = window.performance.now();\n+    const nextTime = Math.max(lastTime + FRAME_TIME, now);\n+    return setTimeout(function() {\n+      callback((lastTime = nextTime));\n+    }, nextTime - now);\n+  };\n+  window.cancelAnimationFrame = clearTimeout;\n+}\n+\n let panelCreated = false;\n \n // The renderer interface can't read saved component filters directly,"
    },
    {
      "message": "modify devtools e2e test script for regression tests",
      "diff": "diff --git a/scripts/circleci/run_devtools_e2e_tests.js b/scripts/circleci/run_devtools_e2e_tests.js\nindex 2c05db087e03..023c0ffc5407 100755\n--- a/scripts/circleci/run_devtools_e2e_tests.js\n+++ b/scripts/circleci/run_devtools_e2e_tests.js\n@@ -6,7 +6,7 @@ const {spawn} = require('child_process');\n const {join} = require('path');\n \n const ROOT_PATH = join(__dirname, '..', '..');\n-\n+const reactVersion = process.argv[2];\n const inlinePackagePath = join(ROOT_PATH, 'packages', 'react-devtools-inline');\n const shellPackagePath = join(ROOT_PATH, 'packages', 'react-devtools-shell');\n \n@@ -74,7 +74,15 @@ function runTestShell() {\n \n   logBright('Starting testing shell server');\n \n-  serverProcess = spawn('yarn', ['start'], {cwd: shellPackagePath});\n+  if (!reactVersion) {\n+    serverProcess = spawn('yarn', ['start'], {cwd: shellPackagePath});\n+  } else {\n+    serverProcess = spawn('yarn', ['start'], {\n+      cwd: shellPackagePath,\n+      env: {...process.env, REACT_VERSION: reactVersion},\n+    });\n+  }\n+\n   serverProcess.stdout.on('data', data => {\n     if (`${data}`.includes('Compiled successfully.')) {\n       logBright('Testing shell server running');\n@@ -106,8 +114,15 @@ function runTestShell() {\n \n async function runEndToEndTests() {\n   logBright('Running e2e tests');\n+  if (!reactVersion) {\n+    testProcess = spawn('yarn', ['test:e2e'], {cwd: inlinePackagePath});\n+  } else {\n+    testProcess = spawn('yarn', ['test:e2e'], {\n+      cwd: inlinePackagePath,\n+      env: {...process.env, REACT_VERSION: reactVersion},\n+    });\n+  }\n \n-  testProcess = spawn('yarn', ['test:e2e'], {cwd: inlinePackagePath});\n   testProcess.stdout.on('data', data => {\n     // Log without formatting because Playwright applies its own formatting.\n     const formatted = format(data);"
    },
    {
      "message": "fix typo in usesyncexternalstore main entry point error",
      "diff": "diff --git a/packages/use-sync-external-store/src/useSyncExternalStore.js b/packages/use-sync-external-store/src/useSyncExternalStore.js\nindex f1bb95556d2b..b8abd5b6857f 100644\n--- a/packages/use-sync-external-store/src/useSyncExternalStore.js\n+++ b/packages/use-sync-external-store/src/useSyncExternalStore.js\n@@ -22,7 +22,7 @@ if (__DEV__) {\n       'it only works with React 18+.' +\n       '\\n\\n' +\n       'If you wish to support React 16 and 17, import from ' +\n-      \"'use-sync-external-store/shim' instead. It will fall back to a shimmed\" +\n+      \"'use-sync-external-store/shim' instead. It will fall back to a shimmed \" +\n       'implementation when the native one is not available.' +\n       '\\n\\n' +\n       \"If you only support React 18+, you can import directly from 'react'.\","
    },
    {
      "message": "fix modulenamemapper order in devtools config  #24602)",
      "diff": "diff --git a/packages/react-devtools-shared/src/__tests__/profilingCache-test.js b/packages/react-devtools-shared/src/__tests__/profilingCache-test.js\nindex eb4a1aceba92..1a84be03aa50 100644\n--- a/packages/react-devtools-shared/src/__tests__/profilingCache-test.js\n+++ b/packages/react-devtools-shared/src/__tests__/profilingCache-test.js\n@@ -734,7 +734,7 @@ describe('ProfilingCache', () => {\n     }\n   });\n \n-  // @reactVersion >= 16.9\n+  // @reactVersion >= 18.0\n   it('should calculate durations based on actual children (not filtered children)', () => {\n     store.componentFilters = [utils.createDisplayNameFilter('^Parent$')];\n \ndiff --git a/scripts/jest/config.build-devtools.js b/scripts/jest/config.build-devtools.js\nindex ecea02fa338c..dd74a4ce984a 100644\n--- a/scripts/jest/config.build-devtools.js\n+++ b/scripts/jest/config.build-devtools.js\n@@ -51,8 +51,8 @@ moduleNameMapper['^react-reconciler/([^/]+)$'] =\n module.exports = Object.assign({}, baseConfig, {\n   // Redirect imports to the compiled bundles\n   moduleNameMapper: {\n-    ...moduleNameMapper,\n     ...devtoolsRegressionConfig.moduleNameMapper,\n+    ...moduleNameMapper,\n   },\n   // Don't run bundle tests on -test.internal.* files\n   testPathIgnorePatterns: ['/node_modules/', '-test.internal.js$'],"
    },
    {
      "message": "remove string.replaceall call in @reactversion pragma functions",
      "diff": "diff --git a/scripts/jest/devtools/setupEnv.js b/scripts/jest/devtools/setupEnv.js\nindex a9c638a92ff9..7ef6003e5182 100644\n--- a/scripts/jest/devtools/setupEnv.js\n+++ b/scripts/jest/devtools/setupEnv.js\n@@ -29,9 +29,8 @@ global.process.env.LIGHT_MODE_DIMMED_ERROR_COLOR = LIGHT_MODE_DIMMED_ERROR_COLOR\n global.process.env.LIGHT_MODE_DIMMED_LOG_COLOR = LIGHT_MODE_DIMMED_LOG_COLOR;\n \n global._test_react_version = (range, testName, callback) => {\n-  const trimmedRange = range.replaceAll(' ', '');\n   const reactVersion = process.env.REACT_VERSION || ReactVersion.default;\n-  const shouldPass = semver.satisfies(reactVersion, trimmedRange);\n+  const shouldPass = semver.satisfies(reactVersion, range);\n \n   if (shouldPass) {\n     test(testName, callback);\n@@ -41,9 +40,8 @@ global._test_react_version = (range, testName, callback) => {\n };\n \n global._test_react_version_focus = (range, testName, callback) => {\n-  const trimmedRange = range.replaceAll(' ', '');\n   const reactVersion = process.env.REACT_VERSION || ReactVersion.default;\n-  const shouldPass = semver.satisfies(reactVersion, trimmedRange);\n+  const shouldPass = semver.satisfies(reactVersion, range);\n \n   if (shouldPass) {\n     // eslint-disable-next-line jest/no-focused-tests"
    },
    {
      "message": "upgrade react-shallow-renderer to support react 18",
      "diff": "diff --git a/packages/react-test-renderer/package.json b/packages/react-test-renderer/package.json\nindex b582f4ef6fad..b46c58b9ff49 100644\n--- a/packages/react-test-renderer/package.json\n+++ b/packages/react-test-renderer/package.json\n@@ -20,7 +20,7 @@\n   \"homepage\": \"https://reactjs.org/\",\n   \"dependencies\": {\n     \"react-is\": \"^18.0.0\",\n-    \"react-shallow-renderer\": \"^16.13.1\",\n+    \"react-shallow-renderer\": \"^16.15.0\",\n     \"scheduler\": \"^0.21.0\"\n   },\n   \"peerDependencies\": {\ndiff --git a/yarn.lock b/yarn.lock\nindex f376e74f8c5a..f9d8524bd6c1 100644\n--- a/yarn.lock\n+++ b/yarn.lock\n@@ -13655,13 +13655,13 @@ react-native-web@0.0.0-26873b469:\n     prop-types \"^15.6.0\"\n     react-timer-mixin \"^0.13.4\"\n \n-react-shallow-renderer@^16.13.1:\n-  version \"16.14.1\"\n-  resolved \"https://registry.yarnpkg.com/react-shallow-renderer/-/react-shallow-renderer-16.14.1.tgz#bf0d02df8a519a558fd9b8215442efa5c840e124\"\n-  integrity sha512-rkIMcQi01/+kxiTE9D3fdS959U1g7gs+/rborw++42m1O9FAQiNI/UNRZExVUoAOprn4umcXf+pFRou8i4zuBg==\n+react-shallow-renderer@^16.15.0:\n+  version \"16.15.0\"\n+  resolved \"https://registry.yarnpkg.com/react-shallow-renderer/-/react-shallow-renderer-16.15.0.tgz#48fb2cf9b23d23cde96708fe5273a7d3446f4457\"\n+  integrity sha512-oScf2FqQ9LFVQgA73vr86xl2NaOIX73rh+YFqcOp68CWj56tSfgtGKrEbyhCj0rSijyG9M1CYprTh39fBi5hzA==\n   dependencies:\n     object-assign \"^4.1.1\"\n-    react-is \"^16.12.0 || ^17.0.0\"\n+    react-is \"^16.12.0 || ^17.0.0 || ^18.0.0\"\n \n react-timer-mixin@^0.13.4:\n   version \"0.13.4\""
    },
    {
      "message": "explain the rationale for the chosen escaping implemenation in a comment",
      "diff": "diff --git a/packages/react-dom/src/server/ReactDOMServerFormatConfig.js b/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\nindex f41abe26cfff..4814bd0aa333 100644\n--- a/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\n+++ b/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\n@@ -83,16 +83,25 @@ const startScriptSrc = stringToPrecomputedChunk('<script src=\"');\n const startModuleSrc = stringToPrecomputedChunk('<script type=\"module\" src=\"');\n const endAsyncScript = stringToPrecomputedChunk('\" async=\"\"></script>');\n \n-const scriptRegex = /(<\\/|<)(s)(cript)/gi;\n-const scriptReplacer = (match, prefix, s, suffix) =>\n-  `${prefix}${s === 's' ? '\\\\u0073' : '\\\\u0053'}${suffix}`;\n-\n+/**\n+ * This escaping function is designed to work with bootstrapScriptContent only.\n+ * because we know we are escaping the entire script. We can avoid for instance\n+ * escaping html comment string sequences that are valid javascript as well because\n+ * if there are no sebsequent <script sequences the html parser will never enter\n+ * script data double escaped state (see: https://www.w3.org/TR/html53/syntax.html#script-data-double-escaped-state)\n+ *\n+ * While untrusted script content should be made safe before using this api it will\n+ * ensure that the script cannot be early terminated or never terminated state\n+ */\n function escapeBootstrapScriptContent(scriptText) {\n   if (__DEV__) {\n     checkHtmlStringCoercion(scriptText);\n   }\n   return ('' + scriptText).replace(scriptRegex, scriptReplacer);\n }\n+const scriptRegex = /(<\\/|<)(s)(cript)/gi;\n+const scriptReplacer = (match, prefix, s, suffix) =>\n+  `${prefix}${s === 's' ? '\\\\u0073' : '\\\\u0053'}${suffix}`;\n \n // Allows us to keep track of what we've already written so we can refer back to it.\n export function createResponseState("
    },
    {
      "message": "synchronize implementations of second render logging",
      "diff": "diff --git a/packages/react-devtools-shared/src/backend/utils.js b/packages/react-devtools-shared/src/backend/utils.js\nindex da911cf94458..f0f78b7f778b 100644\n--- a/packages/react-devtools-shared/src/backend/utils.js\n+++ b/packages/react-devtools-shared/src/backend/utils.js\n@@ -187,7 +187,7 @@ export function formatWithStyles(\n     return inputArgs;\n   }\n \n-  // Matches any of %(o|O|i|s|f), but not %%(o|O|i|s|f)\n+  // Matches any of %(o|O|d|i|s|f), but not %%(o|O|d|i|s|f)\n   const REGEXP = /([^%]|^)(%([oOdisf]))/g;\n   if (inputArgs[0].match(REGEXP)) {\n     return [`%c${inputArgs[0]}`, style, ...inputArgs.slice(1)];\ndiff --git a/packages/react-devtools-shared/src/hook.js b/packages/react-devtools-shared/src/hook.js\nindex 1ea54985fab6..ad5b33850b76 100644\n--- a/packages/react-devtools-shared/src/hook.js\n+++ b/packages/react-devtools-shared/src/hook.js\n@@ -180,13 +180,16 @@ export function installHook(target: any): DevToolsHook | null {\n       inputArgs === undefined ||\n       inputArgs === null ||\n       inputArgs.length === 0 ||\n-      (typeof inputArgs[0] === 'string' && inputArgs[0].includes('%c')) ||\n+      // Matches any of %c but not %%c\n+      (typeof inputArgs[0] === 'string' &&\n+        inputArgs[0].match(/([^%]|^)(%c)/g)) ||\n       style === undefined\n     ) {\n       return inputArgs;\n     }\n \n-    const REGEXP = /(%?)(%([oOdisf]))/g;\n+    // Matches any of %(o|O|d|i|s|f), but not %%(o|O|d|i|s|f)\n+    const REGEXP = /([^%]|^)(%([oOdisf]))/g;\n     if (inputArgs[0].match(REGEXP)) {\n       return [`%c${inputArgs[0]}`, style, ...inputArgs.slice(1)];\n     } else {"
    },
    {
      "message": "rename react-dom/testing to react-dom/unstable_testing in yarn build-for-devtools",
      "diff": "diff --git a/package.json b/package.json\nindex a10d76d48570..59aed94e1cf9 100644\n--- a/package.json\n+++ b/package.json\n@@ -108,7 +108,7 @@\n   \"scripts\": {\n     \"build\": \"node ./scripts/rollup/build.js\",\n     \"build-combined\": \"node ./scripts/rollup/build-all-release-channels.js\",\n-    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react/jsx,react-dom/index,react-dom/test,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh,react-art --type=NODE && cp -r ./build/node_modules build/oss-experimental/\",\n+    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react/jsx,react-dom/index,react-dom/unstable_testing,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh,react-art --type=NODE && cp -r ./build/node_modules build/oss-experimental/\",\n     \"build-for-devtools-dev\": \"yarn build-for-devtools --type=NODE_DEV\",\n     \"build-for-devtools-prod\": \"yarn build-for-devtools --type=NODE_PROD\",\n     \"linc\": \"node ./scripts/tasks/linc.js\","
    },
    {
      "message": "match bundle.name and match upper case entry points",
      "diff": "diff --git a/scripts/rollup/build.js b/scripts/rollup/build.js\nindex c42edbe7eea6..52c0b7dc9fe2 100644\n--- a/scripts/rollup/build.js\n+++ b/scripts/rollup/build.js\n@@ -438,13 +438,21 @@ function shouldSkipBundle(bundle, bundleType) {\n     }\n   }\n   if (requestedBundleNames.length > 0) {\n+    // If the name ends with `something/index` we only match if the\n+    // entry ends in something. Such as `react-dom/index` only matches\n+    // `react-dom` but not `react-dom/server`. Everything else is fuzzy\n+    // search.\n+    const entryLowerCase = bundle.entry.toLowerCase() + '/index.js';\n     const isAskingForDifferentNames = requestedBundleNames.every(\n-      // If the name ends with `something/index` we only match if the\n-      // entry ends in something. Such as `react-dom/index` only matches\n-      // `react-dom` but not `react-dom/server`. Everything else is fuzzy\n-      // search.\n-      requestedName =>\n-        (bundle.entry + '/index.js').indexOf(requestedName) === -1\n+      requestedName => {\n+        const matchEntry = entryLowerCase.indexOf(requestedName) !== -1;\n+        if (!bundle.name) {\n+          return !matchEntry;\n+        }\n+        const matchName =\n+          bundle.name.toLowerCase().indexOf(requestedName) !== -1;\n+        return !matchEntry && !matchName;\n+      }\n     );\n     if (isAskingForDifferentNames) {\n       return true;"
    },
    {
      "message": "fix file path separator compatibility in scripts/babel",
      "diff": "diff --git a/scripts/babel/transform-object-assign.js b/scripts/babel/transform-object-assign.js\nindex 9b20675f39f1..e2724f89e48e 100644\n--- a/scripts/babel/transform-object-assign.js\n+++ b/scripts/babel/transform-object-assign.js\n@@ -28,7 +28,7 @@ module.exports = function autoImporter(babel) {\n \n     visitor: {\n       CallExpression: function(path, file) {\n-        if (file.filename.indexOf('shared/assign') !== -1) {\n+        if (/shared(\\/|\\\\)assign/.test(file.filename)) {\n           // Don't replace Object.assign if we're transforming shared/assign\n           return;\n         }\n@@ -40,7 +40,7 @@ module.exports = function autoImporter(babel) {\n       },\n \n       MemberExpression: function(path, file) {\n-        if (file.filename.indexOf('shared/assign') !== -1) {\n+        if (/shared(\\/|\\\\)assign/.test(file.filename)) {\n           // Don't replace Object.assign if we're transforming shared/assign\n           return;\n         }"
    },
    {
      "message": "update rendertopipeablestream#options.onshellerror to match usage",
      "diff": "diff --git a/packages/react-dom/src/server/ReactDOMFizzServerNode.js b/packages/react-dom/src/server/ReactDOMFizzServerNode.js\nindex efc6cd817b05..b3d9642e77ae 100644\n--- a/packages/react-dom/src/server/ReactDOMFizzServerNode.js\n+++ b/packages/react-dom/src/server/ReactDOMFizzServerNode.js\n@@ -41,7 +41,7 @@ type Options = {|\n   bootstrapModules?: Array<string>,\n   progressiveChunkSize?: number,\n   onShellReady?: () => void,\n-  onShellError?: () => void,\n+  onShellError?: (error: mixed) => void,\n   onAllReady?: () => void,\n   onError?: (error: mixed) => void,\n |};"
    },
    {
      "message": "fix false positive warning about react-dom/client with umd builds",
      "diff": "diff --git a/packages/react-dom/src/client/ReactDOM.js b/packages/react-dom/src/client/ReactDOM.js\nindex 1d78dc08dea9..9ec6f67cbd7d 100644\n--- a/packages/react-dom/src/client/ReactDOM.js\n+++ b/packages/react-dom/src/client/ReactDOM.js\n@@ -149,7 +149,7 @@ function createRoot(\n   options?: CreateRootOptions,\n ): RootType {\n   if (__DEV__) {\n-    if (!Internals.usingClientEntryPoint) {\n+    if (!Internals.usingClientEntryPoint && !__UMD__) {\n       console.error(\n         'You are importing createRoot from \"react-dom\" which is not supported. ' +\n           'You should instead import it from \"react-dom/client\".',\n@@ -165,7 +165,7 @@ function hydrateRoot(\n   options?: HydrateRootOptions,\n ): RootType {\n   if (__DEV__) {\n-    if (!Internals.usingClientEntryPoint) {\n+    if (!Internals.usingClientEntryPoint && !__UMD__) {\n       console.error(\n         'You are importing hydrateRoot from \"react-dom\" which is not supported. ' +\n           'You should instead import it from \"react-dom/client\".',"
    },
    {
      "message": "allow react-devtools-inline createstore method to override store config params",
      "diff": "diff --git a/packages/react-devtools-inline/src/frontend.js b/packages/react-devtools-inline/src/frontend.js\nindex 0e90c884667a..42c820126f28 100644\n--- a/packages/react-devtools-inline/src/frontend.js\n+++ b/packages/react-devtools-inline/src/frontend.js\n@@ -18,7 +18,9 @@ import type {FrontendBridge} from 'react-devtools-shared/src/bridge';\n import type {Props} from 'react-devtools-shared/src/devtools/views/DevTools';\n \n type Config = {|\n+  checkBridgeProtocolCompatibility?: boolean,\n   supportsNativeInspection?: boolean,\n+  supportsProfiling?: boolean,\n |};\n \n export function createStore(bridge: FrontendBridge, config?: Config): Store {\n@@ -26,7 +28,8 @@ export function createStore(bridge: FrontendBridge, config?: Config): Store {\n     checkBridgeProtocolCompatibility: true,\n     supportsTraceUpdates: true,\n     supportsTimeline: true,\n-    supportsNativeInspection: config?.supportsNativeInspection !== false,\n+    supportsNativeInspection: true,\n+    ...config,\n   });\n }"
    },
    {
      "message": "fix name mismatch in react-reconciler custom build.",
      "diff": "diff --git a/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js b/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js\nindex 6535d8d3fdec..f2705b7b1df4 100644\n--- a/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js\n+++ b/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js\n@@ -64,7 +64,7 @@ export const getInstanceFromNode = $$$hostConfig.getInstanceFromNode;\n export const beforeActiveInstanceBlur = $$$hostConfig.beforeActiveInstanceBlur;\n export const afterActiveInstanceBlur = $$$hostConfig.afterActiveInstanceBlur;\n export const preparePortalMount = $$$hostConfig.preparePortalMount;\n-export const prepareScopeUpdate = $$$hostConfig.preparePortalMount;\n+export const prepareScopeUpdate = $$$hostConfig.prepareScopeUpdate;\n export const getInstanceFromScope = $$$hostConfig.getInstanceFromScope;\n export const getCurrentEventPriority = $$$hostConfig.getCurrentEventPriority;\n export const detachDeletedInstance = $$$hostConfig.detachDeletedInstance;"
    },
    {
      "message": "remove unstable_createmutablesource from experimental build",
      "diff": "diff --git a/packages/react/index.experimental.js b/packages/react/index.experimental.js\nindex b54fe6fdcd0b..287c13729881 100644\n--- a/packages/react/index.experimental.js\n+++ b/packages/react/index.experimental.js\n@@ -22,7 +22,6 @@ export {\n   createContext,\n   createElement,\n   createFactory,\n-  createMutableSource as unstable_createMutableSource,\n   createRef,\n   createServerContext,\n   forwardRef,"
    },
    {
      "message": "fix test-build-devtools if build was generated by build-for-devtools",
      "diff": "diff --git a/package.json b/package.json\nindex ec226416e211..80a697031d51 100644\n--- a/package.json\n+++ b/package.json\n@@ -131,7 +131,7 @@\n     \"test-prod-build\": \"yarn test --deprecated 'yarn test --prod --build'\",\n     \"test-build\": \"yarn test --deprecated 'yarn test --build'\",\n     \"test-build-prod\": \"yarn test --deprecated 'yarn test --build --prod'\",\n-    \"test-build-devtools\": \"yarn test --build --project devtools\",\n+    \"test-build-devtools\": \"node ./scripts/jest/jest-cli.js --build --project devtools --release-channel=experimental\",\n     \"debug-test-build-devtools\": \"yarn test --deprecated 'yarn test-build-devtools --debug'\",\n     \"test-dom-fixture\": \"cd fixtures/dom && yarn && yarn prestart && yarn test\",\n     \"flow\": \"node ./scripts/tasks/flow.js\",\ndiff --git a/packages/shared/ReactVersion.js b/packages/shared/ReactVersion.js\nindex 8d357322ca3a..51aebd51ee57 100644\n--- a/packages/shared/ReactVersion.js\n+++ b/packages/shared/ReactVersion.js\n@@ -7,10 +7,10 @@\n \n // TODO: this is special because it gets imported during build.\n //\n-// TODO: 17.0.3 has not been released to NPM;\n+// TODO: 18.0.0 has not been released to NPM;\n // It exists as a placeholder so that DevTools can support work tag changes between releases.\n-// When we next publish a release (either 17.0.3 or 17.1.0), update the matching TODO in backend/renderer.js\n+// When we next publish a release, update the matching TODO in backend/renderer.js\n // TODO: This module is used both by the release scripts and to expose a version\n // at runtime. We should instead inject the version number as part of the build\n // process, and use the ReactVersions.js module as the single source of truth.\n-export default '17.0.3';\n+export default '18.0.0';"
    },
    {
      "message": "include other build types when building for codesandbox ci",
      "diff": "diff --git a/package.json b/package.json\nindex 7c2651474352..9dc97a27eb42 100644\n--- a/package.json\n+++ b/package.json\n@@ -145,7 +145,7 @@\n     \"publish-prereleases\": \"node ./scripts/release/publish-using-ci-workflow.js\",\n     \"download-build\": \"node ./scripts/release/download-experimental-build.js\",\n     \"download-build-for-head\": \"node ./scripts/release/download-experimental-build.js --commit=$(git rev-parse HEAD)\",\n-    \"download-build-in-codesandbox-ci\": \"cd scripts/release && yarn install && cd ../../ && yarn download-build-for-head || yarn build-combined --type=node react/index react-dom scheduler\",\n+    \"download-build-in-codesandbox-ci\": \"cd scripts/release && yarn install && cd ../../ && yarn download-build-for-head || yarn build-combined --type=node react/index react-dom/index react-dom/src/server react-dom/test-utils scheduler/index react/jsx-runtime react/jsx-dev-runtime\",\n     \"check-release-dependencies\": \"node ./scripts/release/check-release-dependencies\"\n   },\n   \"resolutions\": {"
    },
    {
      "message": "revert changes to react-devtools-inline webpack config from pr #22760",
      "diff": "diff --git a/packages/react-devtools-inline/webpack.config.js b/packages/react-devtools-inline/webpack.config.js\nindex 07f23f8ef34e..c53a61b61d41 100644\n--- a/packages/react-devtools-inline/webpack.config.js\n+++ b/packages/react-devtools-inline/webpack.config.js\n@@ -33,14 +33,6 @@ const babelOptions = {\n   ),\n };\n \n-const builtModulesDir = resolve(\n-  __dirname,\n-  '..',\n-  '..',\n-  'build',\n-  'oss-experimental',\n-);\n-\n module.exports = {\n   mode: __DEV__ ? 'development' : 'production',\n   devtool: __DEV__ ? 'eval-cheap-source-map' : 'source-map',\n@@ -57,10 +49,10 @@ module.exports = {\n     libraryTarget: 'commonjs2',\n   },\n   externals: {\n-    react: resolve(builtModulesDir, 'react'),\n-    'react-dom': resolve(builtModulesDir, 'react-dom/unstable_testing'),\n-    'react-is': resolve(builtModulesDir, 'react-is'),\n-    scheduler: resolve(builtModulesDir, 'scheduler'),\n+    react: 'react',\n+    'react-dom': 'react-dom',\n+    'react-is': 'react-is',\n+    scheduler: 'scheduler',\n   },\n   node: {\n     // source-maps package has a dependency on 'fs'"
    },
    {
      "message": "build both a partial renderer and fizz renderer of the legacy api for fb",
      "diff": "diff --git a/scripts/rollup/bundles.js b/scripts/rollup/bundles.js\nindex 02f0c68f6baa..bfa423b720c8 100644\n--- a/scripts/rollup/bundles.js\n+++ b/scripts/rollup/bundles.js\n@@ -259,9 +259,14 @@ const bundles = [\n \n   /******* React DOM Server *******/\n   {\n-    bundleTypes: __EXPERIMENTAL__\n-      ? [UMD_DEV, UMD_PROD, NODE_DEV, NODE_PROD]\n-      : [UMD_DEV, UMD_PROD, NODE_DEV, NODE_PROD, FB_WWW_DEV, FB_WWW_PROD],\n+    bundleTypes: [\n+      UMD_DEV,\n+      UMD_PROD,\n+      NODE_DEV,\n+      NODE_PROD,\n+      FB_WWW_DEV,\n+      FB_WWW_PROD,\n+    ],\n     moduleType: RENDERER,\n     entry: 'react-dom/src/server/ReactDOMLegacyServerBrowser',\n     name: 'react-dom-server-legacy.browser',\n@@ -317,7 +322,7 @@ const bundles = [\n     bundleTypes: __EXPERIMENTAL__ ? [FB_WWW_DEV, FB_WWW_PROD] : [],\n     moduleType: RENDERER,\n     entry: 'react-server-dom-relay/src/ReactDOMServerFB',\n-    global: 'ReactDOMServer',\n+    global: 'ReactDOMServerStreaming',\n     minifyWithProdErrorCodes: false,\n     wrapWithModuleBoundaries: false,\n     externals: ['react'],"
    },
    {
      "message": "emit new event when devtools connects in standalone app",
      "diff": "diff --git a/packages/react-devtools-core/src/standalone.js b/packages/react-devtools-core/src/standalone.js\nindex 1ef01e8ffc02..ab3250d7cff7 100644\n--- a/packages/react-devtools-core/src/standalone.js\n+++ b/packages/react-devtools-core/src/standalone.js\n@@ -41,13 +41,17 @@ import type {InspectedElement} from 'react-devtools-shared/src/devtools/views/Co\n \n installHook(window);\n \n-export type StatusListener = (message: string) => void;\n+export type StatusTypes = 'server-connected' | 'devtools-connected' | 'error';\n+export type StatusListener = (message: string, status: StatusTypes) => void;\n export type OnDisconnectedCallback = () => void;\n \n let node: HTMLElement = ((null: any): HTMLElement);\n let nodeWaitingToConnectHTML: string = '';\n let projectRoots: Array<string> = [];\n-let statusListener: StatusListener = (message: string) => {};\n+let statusListener: StatusListener = (\n+  message: string,\n+  status?: StatusTypes,\n+) => {};\n let disconnectedCallback: OnDisconnectedCallback = () => {};\n \n // TODO (Webpack 5) Hopefully we can remove this prop after the Webpack 5 migration.\n@@ -260,6 +264,7 @@ function initialize(socket: WebSocket) {\n   });\n \n   log('Connected');\n+  statusListener('DevTools initialized.', 'devtools-connected');\n   reload();\n }\n \n@@ -372,12 +377,15 @@ function startServer(\n \n   httpServer.on('error', event => {\n     onError(event);\n-    statusListener('Failed to start the server.');\n+    statusListener('Failed to start the server.', 'error');\n     startServerTimeoutID = setTimeout(() => startServer(port), 1000);\n   });\n \n   httpServer.listen(port, () => {\n-    statusListener('The server is listening on the port ' + port + '.');\n+    statusListener(\n+      'The server is listening on the port ' + port + '.',\n+      'server-connected',\n+    );\n   });\n \n   return {"
    },
    {
      "message": "ensure react-is version used for resolution for playwright is installed",
      "diff": "diff --git a/package.json b/package.json\nindex c1467036aaf9..c57c892b1573 100644\n--- a/package.json\n+++ b/package.json\n@@ -148,6 +148,6 @@\n     \"download-build-in-codesandbox-ci\": \"cd scripts/release && yarn install && cd ../../ && yarn download-build-for-head || yarn build-combined --type=node react/index react-dom scheduler\"\n   },\n   \"resolutions\": {\n-    \"**/@playwright/test/**/react-is\": \"^16.0.0\"\n+    \"react-is\": \"npm:react-is\"\n   }\n }\ndiff --git a/yarn.lock b/yarn.lock\nindex 518c249287bf..f376e74f8c5a 100644\n--- a/yarn.lock\n+++ b/yarn.lock\n@@ -13629,10 +13629,10 @@ rc@^1.0.1, rc@^1.1.6, rc@^1.2.8:\n     prop-types \"^15.6.2\"\n     scheduler \"^0.13.0\"\n \n-react-is@^16.0.0, react-is@^16.8.1:\n-  version \"16.13.1\"\n-  resolved \"https://registry.yarnpkg.com/react-is/-/react-is-16.13.1.tgz#789729a4dc36de2999dc156dd6c1d9c18cea56a4\"\n-  integrity sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\n+react-is@^16.8.1, \"react-is@npm:react-is\":\n+  version \"17.0.2\"\n+  resolved \"https://registry.yarnpkg.com/react-is/-/react-is-17.0.2.tgz#e691d4a8e9c789365655539ab372762b0efb54f0\"\n+  integrity sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==\n \n react-lifecycles-compat@^3.0.4:\n   version \"3.0.4\""
    },
    {
      "message": "use globalthis if possible for native fetch in browser build",
      "diff": "diff --git a/packages/react-fetch/src/ReactFetchBrowser.js b/packages/react-fetch/src/ReactFetchBrowser.js\nindex 41df29c8afcc..473a875c30b1 100644\n--- a/packages/react-fetch/src/ReactFetchBrowser.js\n+++ b/packages/react-fetch/src/ReactFetchBrowser.js\n@@ -32,8 +32,11 @@ type RejectedRecord = {|\n \n type Record = PendingRecord | ResolvedRecord | RejectedRecord;\n \n+declare var globalThis: any;\n+\n // TODO: this is a browser-only version. Add a separate Node entry point.\n-const nativeFetch = window.fetch;\n+const nativeFetch = (typeof globalThis !== 'undefined' ? globalThis : window)\n+  .fetch;\n \n function getRecordMap(): Map<string, Record> {\n   return unstable_getCacheForType(createRecordMap);\ndiff --git a/scripts/rollup/validate/eslintrc.cjs.js b/scripts/rollup/validate/eslintrc.cjs.js\nindex 0adb5a197dd1..e75f5967eeaf 100644\n--- a/scripts/rollup/validate/eslintrc.cjs.js\n+++ b/scripts/rollup/validate/eslintrc.cjs.js\n@@ -15,6 +15,7 @@ module.exports = {\n     WeakSet: true,\n     Uint16Array: true,\n     Reflect: true,\n+    globalThis: true,\n     // Vendor specific\n     MSApp: true,\n     __REACT_DEVTOOLS_GLOBAL_HOOK__: true,"
    },
    {
      "message": "revert \"fix node package.json ./ exports deprecation warning \"",
      "diff": "diff --git a/packages/react/package.json b/packages/react/package.json\nindex a7ae10388473..0ab41de16ca5 100644\n--- a/packages/react/package.json\n+++ b/packages/react/package.json\n@@ -32,7 +32,7 @@\n     \"./build-info.json\": \"./build-info.json\",\n     \"./jsx-runtime\": \"./jsx-runtime.js\",\n     \"./jsx-dev-runtime\": \"./jsx-dev-runtime.js\",\n-    \"./*\": \"./*\"\n+    \"./\": \"./\"\n   },\n   \"repository\": {\n     \"type\": \"git\","
    },
    {
      "message": "fix node package.json ./ exports deprecation warning",
      "diff": "diff --git a/packages/react/package.json b/packages/react/package.json\nindex 0ab41de16ca5..a7ae10388473 100644\n--- a/packages/react/package.json\n+++ b/packages/react/package.json\n@@ -32,7 +32,7 @@\n     \"./build-info.json\": \"./build-info.json\",\n     \"./jsx-runtime\": \"./jsx-runtime.js\",\n     \"./jsx-dev-runtime\": \"./jsx-dev-runtime.js\",\n-    \"./\": \"./\"\n+    \"./*\": \"./*\"\n   },\n   \"repository\": {\n     \"type\": \"git\","
    },
    {
      "message": "add runtime type checks around module boundary code",
      "diff": "diff --git a/packages/react-reconciler/src/SchedulingProfiler.js b/packages/react-reconciler/src/SchedulingProfiler.js\nindex 0304f39a12e5..6ef0b6293bc7 100644\n--- a/packages/react-reconciler/src/SchedulingProfiler.js\n+++ b/packages/react-reconciler/src/SchedulingProfiler.js\n@@ -18,6 +18,7 @@ import {\n import ReactVersion from 'shared/ReactVersion';\n import getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\n import {SCHEDULING_PROFILER_VERSION} from 'react-devtools-timeline/src/constants';\n+import isArray from 'shared/isArray';\n \n import {\n   getLabelForLane as getLabelForLane_old,\n@@ -105,11 +106,18 @@ function markInternalModuleRanges() {\n     typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.getInternalModuleRanges === 'function'\n   ) {\n     const ranges = __REACT_DEVTOOLS_GLOBAL_HOOK__.getInternalModuleRanges();\n-    for (let i = 0; i < ranges.length; i++) {\n-      const [startStackFrame, stopStackFrame] = ranges[i];\n-\n-      markAndClear(`--react-internal-module-start-${startStackFrame}`);\n-      markAndClear(`--react-internal-module-stop-${stopStackFrame}`);\n+    // This check would not be required,\n+    // except that it's possible for things to override __REACT_DEVTOOLS_GLOBAL_HOOK__.\n+    if (isArray(ranges)) {\n+      for (let i = 0; i < ranges.length; i++) {\n+        const range = ranges[i];\n+        if (isArray(range) && range.length === 2) {\n+          const [startStackFrame, stopStackFrame] = ranges[i];\n+\n+          markAndClear(`--react-internal-module-start-${startStackFrame}`);\n+          markAndClear(`--react-internal-module-stop-${stopStackFrame}`);\n+        }\n+      }\n     }\n   }\n }"
    },
    {
      "message": "add scheduling profiler gk link to timeline ui for fb build",
      "diff": "diff --git a/packages/react-devtools-timeline/src/Timeline.js b/packages/react-devtools-timeline/src/Timeline.js\nindex 4b6d21f8a8f7..33459fc4543e 100644\n--- a/packages/react-devtools-timeline/src/Timeline.js\n+++ b/packages/react-devtools-timeline/src/Timeline.js\n@@ -10,6 +10,7 @@\n import type {DataResource} from './createDataResourceFromImportedFile';\n import type {ViewState} from './types';\n \n+import {isInternalFacebookBuild} from 'react-devtools-feature-flags';\n import * as React from 'react';\n import {\n   Suspense,\n@@ -79,6 +80,19 @@ export function Timeline(_: {||}) {\n \n const Welcome = ({onFileSelect}: {|onFileSelect: (file: File) => void|}) => (\n   <ol className={styles.WelcomeInstructionsList}>\n+    {isInternalFacebookBuild && (\n+      <li className={styles.WelcomeInstructionsListItem}>\n+        Enable the\n+        <a\n+          className={styles.WelcomeInstructionsListItemLink}\n+          href=\"https://fburl.com/react-devtools-scheduling-profiler-gk\"\n+          rel=\"noopener noreferrer\"\n+          target=\"_blank\">\n+          <code>react_enable_scheduling_profiler</code> GK\n+        </a>\n+        .\n+      </li>\n+    )}\n     <li className={styles.WelcomeInstructionsListItem}>\n       Open a website that's built with the\n       <a"
    },
    {
      "message": "fix devtools advanced tooltip display conditional check",
      "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitList.js b/packages/react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitList.js\nindex 4fda4177706a..2b837f28f649 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitList.js\n+++ b/packages/react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitList.js\n@@ -217,7 +217,11 @@ function List({\n \n     // Only some React versions include commit durations.\n     // Show a richer tooltip only for builds that have that info.\n-    if (effectDuration !== null || passiveEffectDuration !== null) {\n+    if (\n+      effectDuration !== null ||\n+      passiveEffectDuration !== null ||\n+      priorityLevel !== null\n+    ) {\n       tooltipLabel = (\n         <ul className={styles.TooltipList}>\n           {priorityLevel !== null && ("
    },
    {
      "message": "remove @flow pragma comment from module registration start/stop templates",
      "diff": "diff --git a/packages/shared/registerInternalModuleStart.js b/packages/shared/registerInternalModuleStart.js\nindex aa1154fe9f1b..1bab503c2a6d 100644\n--- a/packages/shared/registerInternalModuleStart.js\n+++ b/packages/shared/registerInternalModuleStart.js\n@@ -3,8 +3,6 @@\n  *\n  * This source code is licensed under the MIT license found in the\n  * LICENSE file in the root directory of this source tree.\n- *\n- * @flow\n  */\n \n /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\ndiff --git a/packages/shared/registerInternalModuleStop.js b/packages/shared/registerInternalModuleStop.js\nindex dab139f2557f..44a69bed9ac3 100644\n--- a/packages/shared/registerInternalModuleStop.js\n+++ b/packages/shared/registerInternalModuleStop.js\n@@ -3,8 +3,6 @@\n  *\n  * This source code is licensed under the MIT license found in the\n  * LICENSE file in the root directory of this source tree.\n- *\n- * @flow\n  */\n \n /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */"
    },
    {
      "message": "enable 'reload and start profiling' for microsoft edge",
      "diff": "diff --git a/packages/react-devtools-extensions/src/main.js b/packages/react-devtools-extensions/src/main.js\nindex 60ed0fcb1a9e..f8750292a1a7 100644\n--- a/packages/react-devtools-extensions/src/main.js\n+++ b/packages/react-devtools-extensions/src/main.js\n@@ -33,6 +33,7 @@ const LOCAL_STORAGE_SUPPORTS_PROFILING_KEY =\n   'React::DevTools::supportsProfiling';\n \n const isChrome = getBrowserName() === 'Chrome';\n+const isEdge = getBrowserName() === 'Edge';\n \n let panelCreated = false;\n \n@@ -203,7 +204,7 @@ function createPanelIfReactLoaded() {\n \n           store = new Store(bridge, {\n             isProfiling,\n-            supportsReloadAndProfile: isChrome,\n+            supportsReloadAndProfile: isChrome || isEdge,\n             supportsProfiling,\n             // At this time, the scheduling profiler can only parse Chrome performance profiles.\n             supportsSchedulingProfiler: isChrome,"
    },
    {
      "message": "fix passing extensionid in evaled postmessage calls",
      "diff": "diff --git a/packages/react-devtools-extensions/src/main.js b/packages/react-devtools-extensions/src/main.js\nindex 5203b511035d..60ed0fcb1a9e 100644\n--- a/packages/react-devtools-extensions/src/main.js\n+++ b/packages/react-devtools-extensions/src/main.js\n@@ -216,7 +216,7 @@ function createPanelIfReactLoaded() {\n           chrome.devtools.inspectedWindow.eval(\n             `window.postMessage({\n                source: 'react-devtools-inject-backend',\n-               extensionId: \"${CURRENT_EXTENSION_ID}\"\n+               extensionId: \"${CURRENT_EXTENSION_ID}\",\n              }, '*');`,\n             function(response, evalError) {\n               if (evalError) {\n@@ -361,15 +361,15 @@ function createPanelIfReactLoaded() {\n               chrome.runtime.onMessage.addListener(onPortMessage);\n \n               chrome.devtools.inspectedWindow.eval(`\n-              window.postMessage({\n-                source: 'react-devtools-extension',\n-                extensionId: \"${CURRENT_EXTENSION_ID}\"\n-                payload: {\n-                  type: 'fetch-file-with-cache',\n-                  url: \"${url}\",\n-                },\n-              });\n-            `);\n+                window.postMessage({\n+                  source: 'react-devtools-extension',\n+                  extensionId: \"${CURRENT_EXTENSION_ID}\",\n+                  payload: {\n+                    type: 'fetch-file-with-cache',\n+                    url: \"${url}\",\n+                  },\n+                }, '*');\n+              `);\n             };\n \n             // Fetching files from the extension won't make use of the network cache"
    },
    {
      "message": "enable scheduling profiler for rn fb profiling builds",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.native-fb.js b/packages/shared/forks/ReactFeatureFlags.native-fb.js\nindex c86d00217cc9..15a8c29f7179 100644\n--- a/packages/shared/forks/ReactFeatureFlags.native-fb.js\n+++ b/packages/shared/forks/ReactFeatureFlags.native-fb.js\n@@ -20,7 +20,7 @@ export const {enablePersistentOffscreenHostContainer} = dynamicFlags;\n \n // The rest of the flags are static for better dead code elimination.\n export const enableDebugTracing = false;\n-export const enableSchedulingProfiler = true;\n+export const enableSchedulingProfiler = __PROFILE__;\n export const enableProfilerTimer = __PROFILE__;\n export const enableProfilerCommitHooks = __PROFILE__;\n export const enableProfilerNestedUpdatePhase = __PROFILE__;"
    },
    {
      "message": "enable logger for internal build of devtools extensions",
      "diff": "diff --git a/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-fb.js b/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-fb.js\nindex 51fe2ed6abc1..b3bd5a7a92dc 100644\n--- a/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-fb.js\n+++ b/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-fb.js\n@@ -16,7 +16,7 @@\n export const enableProfilerChangedHookIndices = true;\n export const isInternalFacebookBuild = true;\n export const enableNamedHooksFeature = true;\n-export const enableLogger = false;\n+export const enableLogger = true;\n export const consoleManagedByDevToolsDuringStrictMode = true;\n \n /************************************************************************"
    },
    {
      "message": "prevent unused exec getcurrentvalue after re-render",
      "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/hooks.js b/packages/react-devtools-shared/src/devtools/views/hooks.js\nindex 54b1d7d20ce8..247a865060cd 100644\n--- a/packages/react-devtools-shared/src/devtools/views/hooks.js\n+++ b/packages/react-devtools-shared/src/devtools/views/hooks.js\n@@ -264,11 +264,11 @@ export function useSubscription<Value>({\n   getCurrentValue: () => Value,\n   subscribe: (callback: Function) => () => void,\n |}): Value {\n-  const [state, setState] = useState({\n+  const [state, setState] = useState(() => ({\n     getCurrentValue,\n     subscribe,\n     value: getCurrentValue(),\n-  });\n+  }));\n \n   if (\n     state.getCurrentValue !== getCurrentValue ||"
    },
    {
      "message": "update yarn build-for-devtools script to account for build/build2 changes",
      "diff": "diff --git a/package.json b/package.json\nindex cfd9e4281fa3..03f5aa57c6f5 100644\n--- a/package.json\n+++ b/package.json\n@@ -108,7 +108,7 @@\n   \"scripts\": {\n     \"build\": \"node ./scripts/rollup/build.js\",\n     \"build-combined\": \"node ./scripts/rollup/build-all-release-channels.js\",\n-    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react/jsx,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh --type=NODE && rm -rf build && mkdir build && cp -r ./build/node_modules build/oss-experimental/\",\n+    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react/jsx,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh --type=NODE && cp -r ./build/node_modules build/oss-experimental/\",\n     \"build-for-devtools-dev\": \"yarn build-for-devtools --type=NODE_DEV\",\n     \"build-for-devtools-prod\": \"yarn build-for-devtools --type=NODE_PROD\",\n     \"linc\": \"node ./scripts/tasks/linc.js\","
    },
    {
      "message": "update codesandbox to pull build artifacts from ci",
      "diff": "diff --git a/.codesandbox/ci.json b/.codesandbox/ci.json\nindex e0a23e13761b..9c54169b0c04 100644\n--- a/.codesandbox/ci.json\n+++ b/.codesandbox/ci.json\n@@ -1,11 +1,11 @@\n {\n   \"packages\": [\"packages/react\", \"packages/react-dom\", \"packages/scheduler\"],\n-  \"buildCommand\": \"build --type=NODE react/index,react-dom/index,react-dom/src/server,react-dom/test-utils,scheduler/index,react/jsx-runtime,react/jsx-dev-runtime\",\n+  \"buildCommand\": \"download-build-in-codesandbox-ci\",\n   \"node\": \"12\",\n   \"publishDirectory\": {\n-    \"react\": \"build/node_modules/react\",\n-    \"react-dom\": \"build/node_modules/react-dom\",\n-    \"scheduler\": \"build/node_modules/scheduler\"\n+    \"react\": \"build/oss-experimental/react\",\n+    \"react-dom\": \"build/oss-experimental/react-dom\",\n+    \"scheduler\": \"build/oss-experimental/scheduler\"\n   },\n   \"sandboxes\": [\"new\"],\n   \"silent\": true\ndiff --git a/package.json b/package.json\nindex eb9300625c98..cfd9e4281fa3 100644\n--- a/package.json\n+++ b/package.json\n@@ -141,6 +141,9 @@\n     \"version-check\": \"node ./scripts/tasks/version-check.js\",\n     \"merge-fork\": \"node ./scripts/merge-fork/merge-fork.js\",\n     \"replace-fork\": \"node ./scripts/merge-fork/replace-fork.js\",\n-    \"publish-prereleases\": \"node ./scripts/release/publish-using-ci-workflow.js\"\n+    \"publish-prereleases\": \"node ./scripts/release/publish-using-ci-workflow.js\",\n+    \"download-build\": \"node ./scripts/release/download-experimental-build.js\",\n+    \"download-build-for-head\": \"node ./scripts/release/download-experimental-build.js --commit=$(git rev-parse HEAD)\",\n+    \"download-build-in-codesandbox-ci\": \"cd scripts/release && yarn install && cd ../../ && yarn download-build-for-head\"\n   }\n }"
    },
    {
      "message": "increase polling threshold for publish-prereleases",
      "diff": "diff --git a/scripts/release/publish-using-ci-workflow.js b/scripts/release/publish-using-ci-workflow.js\nindex 48a834ba1f19..d7f87b48b094 100644\n--- a/scripts/release/publish-using-ci-workflow.js\n+++ b/scripts/release/publish-using-ci-workflow.js\n@@ -22,8 +22,8 @@ function sleep(ms) {\n \n async function getPublishWorkflowID(pipelineID) {\n   // Since we just created the pipeline in a POST request, the server may 404.\n-  // Try up to three times before giving up.\n-  for (let i = 0; i < 3; i++) {\n+  // Try a few times before giving up.\n+  for (let i = 0; i < 20; i++) {\n     const pipelineWorkflowsResponse = await fetch(\n       `https://circleci.com/api/v2/pipeline/${pipelineID}/workflow`\n     );\n@@ -37,7 +37,7 @@ async function getPublishWorkflowID(pipelineID) {\n     // CircleCI server may be stale. Wait a sec and try again.\n     await sleep(1000);\n   }\n-  throw new Error('Failed to create CircleCI workflow.');\n+  return null;\n }\n \n async function pollUntilWorkflowFinishes(workflowID) {\n@@ -108,6 +108,20 @@ async function main() {\n     2 * 1000 // Estimated time: 2 seconds,\n   );\n \n+  if (workflowID === null) {\n+    console.warn(\n+      theme.yellow(\n+        'Created a CI pipeline to publish the packages, but the script timed ' +\n+          \"out when requesting the associated workflow ID. It's still \" +\n+          'possible the workflow was created.\\n\\n' +\n+          'Visit ' +\n+          'https://app.circleci.com/pipelines/github/facebook/react?branch=main ' +\n+          'for a list of the latest workflows.'\n+      )\n+    );\n+    process.exit(1);\n+  }\n+\n   await logPromise(\n     pollUntilWorkflowFinishes(workflowID),\n     theme`{header Publishing in CI workflow}: https://app.circleci.com/pipelines/workflows/${workflowID}`,"
    },
    {
      "message": "remove fiber fields that were used for hydrating usemutablesource",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberRoot.new.js b/packages/react-reconciler/src/ReactFiberRoot.new.js\nindex 90a1809e4387..84e487c24875 100644\n--- a/packages/react-reconciler/src/ReactFiberRoot.new.js\n+++ b/packages/react-reconciler/src/ReactFiberRoot.new.js\n@@ -10,7 +10,7 @@\n import type {FiberRoot, SuspenseHydrationCallbacks} from './ReactInternalTypes';\n import type {RootTag} from './ReactRootTags';\n \n-import {noTimeout, supportsHydration} from './ReactFiberHostConfig';\n+import {noTimeout} from './ReactFiberHostConfig';\n import {createHostRootFiber} from './ReactFiber.new';\n import {\n   NoLane,\n@@ -59,10 +59,6 @@ function FiberRootNode(containerInfo, tag, hydrate) {\n     this.pooledCacheLanes = NoLanes;\n   }\n \n-  if (supportsHydration) {\n-    this.mutableSourceEagerHydrationData = null;\n-  }\n-\n   if (enableSuspenseCallback) {\n     this.hydrationCallbacks = null;\n   }\ndiff --git a/packages/react-reconciler/src/ReactFiberRoot.old.js b/packages/react-reconciler/src/ReactFiberRoot.old.js\nindex dc1ec23ae159..5750e21ddeca 100644\n--- a/packages/react-reconciler/src/ReactFiberRoot.old.js\n+++ b/packages/react-reconciler/src/ReactFiberRoot.old.js\n@@ -10,7 +10,7 @@\n import type {FiberRoot, SuspenseHydrationCallbacks} from './ReactInternalTypes';\n import type {RootTag} from './ReactRootTags';\n \n-import {noTimeout, supportsHydration} from './ReactFiberHostConfig';\n+import {noTimeout} from './ReactFiberHostConfig';\n import {createHostRootFiber} from './ReactFiber.old';\n import {\n   NoLane,\n@@ -59,10 +59,6 @@ function FiberRootNode(containerInfo, tag, hydrate) {\n     this.pooledCacheLanes = NoLanes;\n   }\n \n-  if (supportsHydration) {\n-    this.mutableSourceEagerHydrationData = null;\n-  }\n-\n   if (enableSuspenseCallback) {\n     this.hydrationCallbacks = null;\n   }"
    },
    {
      "message": "fix runtime error when inspecting an element times out",
      "diff": "diff --git a/packages/react-devtools-shared/src/backendAPI.js b/packages/react-devtools-shared/src/backendAPI.js\nindex 4a79147ec23e..5e0ac663fee4 100644\n--- a/packages/react-devtools-shared/src/backendAPI.js\n+++ b/packages/react-devtools-shared/src/backendAPI.js\n@@ -158,7 +158,9 @@ function getPromiseForRequestID<T>(\n \n     const onTimeout = () => {\n       cleanup();\n-      reject();\n+      reject(\n+        new Error(`Timed out waiting for event '${eventType}' from bridge`),\n+      );\n     };\n \n     bridge.addListener(eventType, onInspectedElement);"
    },
    {
      "message": "add react devtools extension startup and file structure to overview.md",
      "diff": "diff --git a/packages/react-devtools/OVERVIEW.md b/packages/react-devtools/OVERVIEW.md\nindex a05bafc3b2a5..d78d0c7f1875 100644\n--- a/packages/react-devtools/OVERVIEW.md\n+++ b/packages/react-devtools/OVERVIEW.md\n@@ -297,3 +297,10 @@ Once profiling is finished, the frontend requests profiling data from the backen\n ### Importing/exporting data\n \n Because all of the data is merged in the frontend after a profiling session is completed, it can be exported and imported (as a single JSON object), enabling profiling sessions to be shared between users.\n+\n+## Package Specific Details\n+\n+### Devtools Extension Overview Diagram\n+\n+![React Devtools Extension](https://user-images.githubusercontent.com/2735514/132768489-6ab85156-b816-442f-9c3f-7af738ee9e49.png)\n+"
    },
    {
      "message": "fix `react-devtools-extension` build error and `react-devtools-inline`'s `package.json`",
      "diff": "diff --git a/packages/react-devtools-extensions/src/main.js b/packages/react-devtools-extensions/src/main.js\nindex 8781d6e22dbb..30318c1249e8 100644\n--- a/packages/react-devtools-extensions/src/main.js\n+++ b/packages/react-devtools-extensions/src/main.js\n@@ -289,7 +289,7 @@ function createPanelIfReactLoaded() {\n \n         // TODO (Webpack 5) Hopefully we can remove this prop after the Webpack 5 migration.\n         const hookNamesModuleLoaderFunction = () =>\n-          import('react-devtools-inline/hookNames');\n+          import('react-devtools-shared/src/hooks/parseHookNames');\n \n         root = createRoot(document.createElement('div'));\n \ndiff --git a/packages/react-devtools-inline/package.json b/packages/react-devtools-inline/package.json\nindex 160723b21af5..e6e9807c3901 100644\n--- a/packages/react-devtools-inline/package.json\n+++ b/packages/react-devtools-inline/package.json\n@@ -13,7 +13,8 @@\n     \"dist\",\n     \"backend.js\",\n     \"build-info.json\",\n-    \"frontend.js\"\n+    \"frontend.js\",\n+    \"hookNames.js\"\n   ],\n   \"scripts\": {\n     \"build\": \"cross-env NODE_ENV=production webpack --config webpack.config.js\","
    },
    {
      "message": "react-dom] updatereadme's class component to function component",
      "diff": "diff --git a/packages/react-dom/README.md b/packages/react-dom/README.md\nindex 2652912f9992..f31dc407837b 100644\n--- a/packages/react-dom/README.md\n+++ b/packages/react-dom/README.md\n@@ -16,10 +16,8 @@ npm install react react-dom\n var React = require('react');\n var ReactDOM = require('react-dom');\n \n-class MyComponent extends React.Component {\n-  render() {\n-    return <div>Hello World</div>;\n-  }\n+function MyComponent() {\n+  return <div>Hello World</div>;\n }\n \n ReactDOM.render(<MyComponent />, node);\n@@ -31,10 +29,8 @@ ReactDOM.render(<MyComponent />, node);\n var React = require('react');\n var ReactDOMServer = require('react-dom/server');\n \n-class MyComponent extends React.Component {\n-  render() {\n-    return <div>Hello World</div>;\n-  }\n+function MyComponent() {\n+  return <div>Hello World</div>;\n }\n \n ReactDOMServer.renderToString(<MyComponent />);"
    },
    {
      "message": "break up import keyword to avoid being accidentally parsed as dynamic import statement in external code",
      "diff": "diff --git a/packages/react/src/ReactLazy.js b/packages/react/src/ReactLazy.js\nindex 0bc05df6411c..a132e1b5691f 100644\n--- a/packages/react/src/ReactLazy.js\n+++ b/packages/react/src/ReactLazy.js\n@@ -88,7 +88,8 @@ function lazyInitializer<T>(payload: Payload<T>): T {\n     if (__DEV__) {\n       if (moduleObject === undefined) {\n         console.error(\n-          'lazy: Expected the result of a dynamic import() call. ' +\n+          'lazy: Expected the result of a dynamic imp' +\n+            'ort() call. ' +\n             'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n             // Break up imports to avoid accidentally parsing them as dependencies.\n             'const MyComponent = lazy(() => imp' +\n@@ -101,7 +102,8 @@ function lazyInitializer<T>(payload: Payload<T>): T {\n     if (__DEV__) {\n       if (!('default' in moduleObject)) {\n         console.error(\n-          'lazy: Expected the result of a dynamic import() call. ' +\n+          'lazy: Expected the result of a dynamic imp' +\n+            'ort() call. ' +\n             'Instead received: %s\\n\\nYour code should look like: \\n  ' +\n             // Break up imports to avoid accidentally parsing them as dependencies.\n             'const MyComponent = lazy(() => imp' +"
    },
    {
      "message": "add aria-description to the list of known aria attributes",
      "diff": "diff --git a/packages/react-dom/src/shared/validAriaProperties.js b/packages/react-dom/src/shared/validAriaProperties.js\nindex 36875e765119..bfe7b73e2aed 100644\n--- a/packages/react-dom/src/shared/validAriaProperties.js\n+++ b/packages/react-dom/src/shared/validAriaProperties.js\n@@ -7,6 +7,7 @@\n \n const ariaProperties = {\n   'aria-current': 0, // state\n+  'aria-description': 0,\n   'aria-details': 0,\n   'aria-disabled': 0, // state\n   'aria-hidden': 0, // state"
    },
    {
      "message": "fix issue in release script where commits for the last devtools release are undefined #22233",
      "diff": "diff --git a/scripts/devtools/prepare-release.js b/scripts/devtools/prepare-release.js\nindex 5905eec621ad..0fc8fc841f55 100755\n--- a/scripts/devtools/prepare-release.js\n+++ b/scripts/devtools/prepare-release.js\n@@ -115,8 +115,12 @@ async function getPreviousCommitSha() {\n   const choices = [];\n \n   const lines = await execRead(`\n-    git log --max-count=5 --topo-order --pretty=format:'%H:::%s:::%as' HEAD -- ${PACKAGE_PATHS[0]}\n+    git log --max-count=5 --topo-order --pretty=format:'%H:::%s:::%as' HEAD -- ${join(\n+      ROOT_PATH,\n+      PACKAGE_PATHS[0]\n+    )}\n   `);\n+\n   lines.split('\\n').forEach((line, index) => {\n     const [hash, message, date] = line.split(':::');\n     choices.push({"
    },
    {
      "message": "remove dist folder in release script for standalone and inline before building",
      "diff": "diff --git a/scripts/devtools/build-and-test.js b/scripts/devtools/build-and-test.js\nindex cfd41bd809ae..cfa7a7cfd1d6 100755\n--- a/scripts/devtools/build-and-test.js\n+++ b/scripts/devtools/build-and-test.js\n@@ -93,6 +93,9 @@ async function buildAndTestExtensions() {\n \n async function buildAndTestStandalonePackage() {\n   const corePackagePath = join(ROOT_PATH, 'packages', 'react-devtools-core');\n+  const corePackageDest = join(corePackagePath, 'dist');\n+\n+  await exec(`rm -rf ${corePackageDest}`);\n   const buildCorePromise = exec('yarn build', {cwd: corePackagePath});\n \n   await logger(\n@@ -133,6 +136,9 @@ async function buildAndTestInlinePackage() {\n     'packages',\n     'react-devtools-inline'\n   );\n+  const inlinePackageDest = join(inlinePackagePath, 'dist');\n+\n+  await exec(`rm -rf ${inlinePackageDest}`);\n   const buildPromise = exec('yarn build', {cwd: inlinePackagePath});\n \n   await logger("
    },
    {
      "message": "fix a string interpolation typo in reacthooks test",
      "diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js b/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\nindex 53fb9c07589e..9e39b35fc1ba 100644\n--- a/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\n+++ b/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\n@@ -1591,8 +1591,7 @@ describe('ReactHooks', () => {\n         }\n       });\n \n-      it(`warns when more hooks (${(hookNameA,\n-      hookNameB)}) are used during update than mount`, () => {\n+      it(`warns when more hooks (${hookNameA}, ${hookNameB}) are used during update than mount`, () => {\n         function App(props) {\n           /* eslint-disable no-unused-vars */\n           if (props.update) {\n@@ -1646,8 +1645,7 @@ describe('ReactHooks', () => {\n         .replace('use', '')\n         .replace('Helper', '');\n \n-      it(`warns when fewer hooks (${(hookNameA,\n-      hookNameB)}) are used during update than mount`, () => {\n+      it(`warns when fewer hooks (${hookNameA}, ${hookNameB}) are used during update than mount`, () => {\n         function App(props) {\n           /* eslint-disable no-unused-vars */\n           if (props.update) {"
    },
    {
      "message": "add performance marksf or individual fetch requests",
      "diff": "diff --git a/packages/react-devtools-extensions/src/parseHookNames/parseHookNames.js b/packages/react-devtools-extensions/src/parseHookNames/parseHookNames.js\nindex 6ea73e77ec04..5337eb4aff3c 100644\n--- a/packages/react-devtools-extensions/src/parseHookNames/parseHookNames.js\n+++ b/packages/react-devtools-extensions/src/parseHookNames/parseHookNames.js\n@@ -451,6 +451,10 @@ function extractAndLoadSourceMaps(\n }\n \n function fetchFile(url: string): Promise<string> {\n+  if (__PERFORMANCE_PROFILE__) {\n+    mark('fetchFile(\"' + url + '\")');\n+  }\n+\n   return new Promise((resolve, reject) => {\n     fetch(url).then(\n       response => {\n@@ -458,18 +462,27 @@ function fetchFile(url: string): Promise<string> {\n           response\n             .text()\n             .then(text => {\n+              if (__PERFORMANCE_PROFILE__) {\n+                measure('fetchFile(\"' + url + '\")');\n+              }\n               resolve(text);\n             })\n             .catch(error => {\n               if (__DEBUG__) {\n                 console.log(`fetchFile() Could not read text for url \"${url}\"`);\n               }\n+              if (__PERFORMANCE_PROFILE__) {\n+                measure('fetchFile(\"' + url + '\")');\n+              }\n               reject(null);\n             });\n         } else {\n           if (__DEBUG__) {\n             console.log(`fetchFile() Got bad response for url \"${url}\"`);\n           }\n+          if (__PERFORMANCE_PROFILE__) {\n+            measure('fetchFile(\"' + url + '\")');\n+          }\n           reject(null);\n         }\n       },\n@@ -477,6 +490,9 @@ function fetchFile(url: string): Promise<string> {\n         if (__DEBUG__) {\n           console.log(`fetchFile() Could not fetch file: ${error.message}`);\n         }\n+        if (__PERFORMANCE_PROFILE__) {\n+          measure('fetchFile(\"' + url + '\")');\n+        }\n         reject(null);\n       },\n     );"
    },
    {
      "message": "enable enablesuspenselayouteffectsemantics flag statically for facebook",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www-dynamic.js b/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\nindex 72ae2f2c5b47..23a7e321e60e 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\n@@ -18,7 +18,6 @@ export const disableInputAttributeSyncing = __VARIANT__;\n export const enableFilterEmptyStringAttributesDOM = __VARIANT__;\n export const enableLegacyFBSupport = __VARIANT__;\n export const skipUnmountedBoundaries = __VARIANT__;\n-export const enableSuspenseLayoutEffectSemantics = __VARIANT__;\n \n // Enable this flag to help with concurrent mode debugging.\n // It logs information to the console about React scheduling, rendering, and commit phases.\ndiff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex d514e15e8827..39c359e2fc68 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -26,7 +26,6 @@ export const {\n   enableDebugTracing,\n   skipUnmountedBoundaries,\n   createRootStrictEffectsByDefault,\n-  enableSuspenseLayoutEffectSemantics,\n   enableUseRefAccessWarning,\n   disableNativeComponentFrames,\n   disableSchedulerTimeoutInWorkLoop,\n@@ -47,6 +46,8 @@ export const enableProfilerNestedUpdateScheduledHook =\n   __PROFILE__ && dynamicFeatureFlags.enableProfilerNestedUpdateScheduledHook;\n export const enableUpdaterTracking = __PROFILE__;\n \n+export const enableSuspenseLayoutEffectSemantics = true;\n+\n // Logs additional User Timing API marks for use with an experimental profiling tool.\n export const enableSchedulingProfiler =\n   __PROFILE__ && dynamicFeatureFlags.enableSchedulingProfiler;"
    },
    {
      "message": "switch on enableprofilerchangedhookindices flag for oss devtools builds",
      "diff": "diff --git a/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-oss.js b/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-oss.js\nindex 4d1b1472bba6..f3457dae71d0 100644\n--- a/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-oss.js\n+++ b/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-oss.js\n@@ -13,7 +13,7 @@\n  * It should always be imported from \"react-devtools-feature-flags\".\n  ************************************************************************/\n \n-export const enableProfilerChangedHookIndices = false;\n+export const enableProfilerChangedHookIndices = true;\n export const isInternalFacebookBuild = false;\n \n /************************************************************************"
    },
    {
      "message": "enable scheduling profiler flag for react-dom profiling builds",
      "diff": "diff --git a/packages/shared/ReactFeatureFlags.js b/packages/shared/ReactFeatureFlags.js\nindex d966c9ec54c9..862a6bde9b26 100644\n--- a/packages/shared/ReactFeatureFlags.js\n+++ b/packages/shared/ReactFeatureFlags.js\n@@ -17,7 +17,7 @@ export const enableDebugTracing = false;\n \n // Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\n // for an experimental scheduling profiler tool.\n-export const enableSchedulingProfiler = __PROFILE__ && __EXPERIMENTAL__;\n+export const enableSchedulingProfiler = __PROFILE__;\n \n // Helps identify side effects in render-phase lifecycle hooks and setState\n // reducers by double invoking them in StrictLegacyMode."
    },
    {
      "message": "install nested packages from yarn cache before running build tests",
      "diff": "diff --git a/.circleci/config.yml b/.circleci/config.yml\nindex e157cb442707..e3834500ed3b 100644\n--- a/.circleci/config.yml\n+++ b/.circleci/config.yml\n@@ -306,6 +306,9 @@ jobs:\n           at: .\n       - run: yarn workspaces info | head -n -1 > workspace_info.txt\n       - *restore_node_modules\n+      - run:\n+          name: Install nested packages from Yarn cache\n+          command: yarn --frozen-lockfile --cache-folder ~/.cache/yarn\n       - run: yarn test --build <<parameters.args>> --ci\n \n   RELEASE_CHANNEL_stable_yarn_test_dom_fixtures:"
    },
    {
      "message": "revert \"make enablesuspenselayouteffectsemantics static for www \"",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex 3f6d8dec8110..a5972151b79a 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -26,6 +26,7 @@ export const {\n   enableDebugTracing,\n   skipUnmountedBoundaries,\n   createRootStrictEffectsByDefault,\n+  enableSuspenseLayoutEffectSemantics,\n   enableUseRefAccessWarning,\n   disableNativeComponentFrames,\n   disableSchedulerTimeoutInWorkLoop,\n@@ -37,8 +38,6 @@ export const {\n // On WWW, __EXPERIMENTAL__ is used for a new modern build.\n // It's not used anywhere in production yet.\n \n-export const enableSuspenseLayoutEffectSemantics = true;\n-\n export const enableStrictEffects =\n   __DEV__ && dynamicFeatureFlags.enableStrictEffects;\n export const debugRenderPhaseSideEffectsForStrictMode = __DEV__;"
    },
    {
      "message": "make enablesuspenselayouteffectsemantics static for www",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex a5972151b79a..3f6d8dec8110 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -26,7 +26,6 @@ export const {\n   enableDebugTracing,\n   skipUnmountedBoundaries,\n   createRootStrictEffectsByDefault,\n-  enableSuspenseLayoutEffectSemantics,\n   enableUseRefAccessWarning,\n   disableNativeComponentFrames,\n   disableSchedulerTimeoutInWorkLoop,\n@@ -38,6 +37,8 @@ export const {\n // On WWW, __EXPERIMENTAL__ is used for a new modern build.\n // It's not used anywhere in production yet.\n \n+export const enableSuspenseLayoutEffectSemantics = true;\n+\n export const enableStrictEffects =\n   __DEV__ && dynamicFeatureFlags.enableStrictEffects;\n export const debugRenderPhaseSideEffectsForStrictMode = __DEV__;"
    },
    {
      "message": "add flag concurrent root to fabric render function",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactFabric.js b/packages/react-native-renderer/src/ReactFabric.js\nindex c516452a1766..040e02e093e4 100644\n--- a/packages/react-native-renderer/src/ReactFabric.js\n+++ b/packages/react-native-renderer/src/ReactFabric.js\n@@ -40,7 +40,7 @@ import {\n   getInspectorDataForViewTag,\n   getInspectorDataForViewAtPoint,\n } from './ReactNativeFiberInspector';\n-import {LegacyRoot} from 'react-reconciler/src/ReactRootTags';\n+import {LegacyRoot, ConcurrentRoot} from 'react-reconciler/src/ReactRootTags';\n import ReactSharedInternals from 'shared/ReactSharedInternals';\n import getComponentNameFromType from 'shared/getComponentNameFromType';\n \n@@ -201,13 +201,21 @@ function render(\n   element: Element<ElementType>,\n   containerTag: number,\n   callback: ?() => void,\n+  concurrentRoot: ?boolean,\n ): ?ElementRef<ElementType> {\n   let root = roots.get(containerTag);\n \n   if (!root) {\n     // TODO (bvaughn): If we decide to keep the wrapper component,\n     // We could create a wrapper for containerTag as well to reduce special casing.\n-    root = createContainer(containerTag, LegacyRoot, false, null, false, null);\n+    root = createContainer(\n+      containerTag,\n+      concurrentRoot ? ConcurrentRoot : LegacyRoot,\n+      false,\n+      null,\n+      false,\n+      null,\n+    );\n     roots.set(containerTag, root);\n   }\n   updateContainer(element, root, null, callback);"
    },
    {
      "message": "make strictmode double rendering flag static for fb/www",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www-dynamic.js b/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\nindex 83f7c3b812e4..42e5d97e30c4 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\n@@ -41,7 +41,6 @@ export const deferRenderPhaseUpdateToNextBatch = !__VARIANT__;\n \n // These are already tested in both modes using the build type dimension,\n // so we don't need to use __VARIANT__ to get extra coverage.\n-export const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n export const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\n \n // TODO: These flags are hard-coded to the default values used in open source.\ndiff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex 1d9c88cc8fcf..5e0a0134474e 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -15,7 +15,6 @@ import typeof * as DynamicFeatureFlags from './ReactFeatureFlags.www-dynamic';\n const dynamicFeatureFlags: DynamicFeatureFlags = require('ReactFeatureFlags');\n \n export const {\n-  debugRenderPhaseSideEffectsForStrictMode,\n   disableInputAttributeSyncing,\n   enableTrustedTypesIntegration,\n   disableSchedulerTimeoutBasedOnReactExpirationTime,\n@@ -40,6 +39,7 @@ export const {\n // On WWW, __EXPERIMENTAL__ is used for a new modern build.\n // It's not used anywhere in production yet.\n \n+export const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\n export const enableProfilerTimer = __PROFILE__;\n export const enableProfilerCommitHooks = __PROFILE__;\n export const enableProfilerNestedUpdatePhase = __PROFILE__;"
    },
    {
      "message": "fix devtools bug with suspense+legacyhidden component",
      "diff": "diff --git a/packages/react-devtools-shared/src/backend/agent.js b/packages/react-devtools-shared/src/backend/agent.js\nindex e665235271ca..7470070455c0 100644\n--- a/packages/react-devtools-shared/src/backend/agent.js\n+++ b/packages/react-devtools-shared/src/backend/agent.js\n@@ -676,7 +676,10 @@ export default class Agent extends EventEmitter<{|\n \n   onHookOperations = (operations: Array<number>) => {\n     if (__DEBUG__) {\n-      debug('onHookOperations', operations);\n+      debug(\n+        'onHookOperations',\n+        `(${operations.length}) [${operations.join(', ')}]`,\n+      );\n     }\n \n     // TODO:\ndiff --git a/packages/react-devtools-shared/src/backend/renderer.js b/packages/react-devtools-shared/src/backend/renderer.js\nindex 18fa9d7efdda..3afbbf3dd443 100644\n--- a/packages/react-devtools-shared/src/backend/renderer.js\n+++ b/packages/react-devtools-shared/src/backend/renderer.js\n@@ -534,6 +534,7 @@ export function attach(\n     HostText,\n     IncompleteClassComponent,\n     IndeterminateComponent,\n+    LegacyHiddenComponent,\n     MemoComponent,\n     OffscreenComponent,\n     SimpleMemoComponent,\n@@ -841,6 +842,7 @@ export function attach(\n       case HostPortal:\n       case HostText:\n       case Fragment:\n+      case LegacyHiddenComponent:\n       case OffscreenComponent:\n         return true;\n       case HostRoot:"
    },
    {
      "message": "enable strict effects mode for react native facebook builds",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.native-fb.js b/packages/shared/forks/ReactFeatureFlags.native-fb.js\nindex 4cff77870865..e712288cf11c 100644\n--- a/packages/shared/forks/ReactFeatureFlags.native-fb.js\n+++ b/packages/shared/forks/ReactFeatureFlags.native-fb.js\n@@ -53,7 +53,7 @@ export const enableSuspenseLayoutEffectSemantics = false;\n export const enableNewReconciler = false;\n export const deferRenderPhaseUpdateToNextBatch = true;\n \n-export const enableStrictEffects = false;\n+export const enableStrictEffects = __DEV__;\n export const createRootStrictEffectsByDefault = false;\n export const enableUseRefAccessWarning = false;"
    },
    {
      "message": "turn off enablesyncdefaultupdates in test renderer",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.test-renderer.www.js b/packages/shared/forks/ReactFeatureFlags.test-renderer.www.js\nindex 7bbc30f7cb46..4d762c08277c 100644\n--- a/packages/shared/forks/ReactFeatureFlags.test-renderer.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.test-renderer.www.js\n@@ -59,7 +59,7 @@ export const enableUseRefAccessWarning = false;\n export const enableRecursiveCommitTraversal = false;\n export const disableSchedulerTimeoutInWorkLoop = false;\n export const enableLazyContextPropagation = false;\n-export const enableSyncDefaultUpdates = true;\n+export const enableSyncDefaultUpdates = false;\n \n // Flow magic to verify the exports of this file match the original version.\n // eslint-disable-next-line no-unused-vars"
    },
    {
      "message": "mark boundary as client rendered even if aborting fallback",
      "diff": "diff --git a/packages/react-server/src/ReactFizzServer.js b/packages/react-server/src/ReactFizzServer.js\nindex 8b84ce822bcc..bc3b06449f79 100644\n--- a/packages/react-server/src/ReactFizzServer.js\n+++ b/packages/react-server/src/ReactFizzServer.js\n@@ -1245,22 +1245,18 @@ function abortTask(task: Task): void {\n   } else {\n     boundary.pendingTasks--;\n \n-    if (boundary.fallbackAbortableTasks.size > 0) {\n-      // If this boundary was still pending then we haven't already cancelled its fallbacks.\n-      // We'll need to abort the fallbacks, which will also error that parent boundary.\n-      // This means that we don't have to client render this boundary because its parent\n-      // will be client rendered anyway.\n-      boundary.fallbackAbortableTasks.forEach(abortTask, request);\n-      boundary.fallbackAbortableTasks.clear();\n-    } else {\n-      if (!boundary.forceClientRender) {\n-        boundary.forceClientRender = true;\n-        if (boundary.parentFlushed) {\n-          request.clientRenderedBoundaries.push(boundary);\n-        }\n+    if (!boundary.forceClientRender) {\n+      boundary.forceClientRender = true;\n+      if (boundary.parentFlushed) {\n+        request.clientRenderedBoundaries.push(boundary);\n       }\n     }\n \n+    // If this boundary was still pending then we haven't already cancelled its fallbacks.\n+    // We'll need to abort the fallbacks, which will also error that parent boundary.\n+    boundary.fallbackAbortableTasks.forEach(abortTask, request);\n+    boundary.fallbackAbortableTasks.clear();\n+\n     request.allPendingTasks--;\n     if (request.allPendingTasks === 0) {\n       const onCompleteAll = request.onCompleteAll;"
    },
    {
      "message": "update build-for-devtools script to prepare unit tests too",
      "diff": "diff --git a/package.json b/package.json\nindex f498fad2a74d..aecd84fd7120 100644\n--- a/package.json\n+++ b/package.json\n@@ -108,7 +108,7 @@\n   \"scripts\": {\n     \"build\": \"node ./scripts/rollup/build.js\",\n     \"build-combined\": \"node ./scripts/rollup/build-all-release-channels.js\",\n-    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh --type=NODE\",\n+    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh --type=NODE && rm -rf build2 && mkdir build2 && cp -r ./build/node_modules build2/oss-experimental/\",\n     \"build-for-devtools-dev\": \"yarn build-for-devtools --type=NODE_DEV\",\n     \"build-for-devtools-prod\": \"yarn build-for-devtools --type=NODE_PROD\",\n     \"linc\": \"node ./scripts/tasks/linc.js\","
    },
    {
      "message": "ignore function and symbol values on custom-elements on the server",
      "diff": "diff --git a/packages/react-dom/src/server/DOMMarkupOperations.js b/packages/react-dom/src/server/DOMMarkupOperations.js\nindex 7306d9393be5..3cddbb493e07 100644\n--- a/packages/react-dom/src/server/DOMMarkupOperations.js\n+++ b/packages/react-dom/src/server/DOMMarkupOperations.js\n@@ -71,7 +71,12 @@ export function createMarkupForCustomAttribute(\n   name: string,\n   value: mixed,\n ): string {\n-  if (!isAttributeNameSafe(name) || value == null) {\n+  if (\n+    !isAttributeNameSafe(name) ||\n+    value == null ||\n+    typeof value === 'function' ||\n+    typeof value === 'symbol'\n+  ) {\n     return '';\n   }\n   return name + '=' + quoteAttributeValueForBrowser(value);\ndiff --git a/packages/react-dom/src/server/ReactDOMServerFormatConfig.js b/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\nindex 2a034963f48a..62f6d3ca5655 100644\n--- a/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\n+++ b/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\n@@ -1070,7 +1070,11 @@ function pushStartCustomElement(\n           // Ignored. These are built-in to React on the client.\n           break;\n         default:\n-          if (isAttributeNameSafe(propKey)) {\n+          if (\n+            isAttributeNameSafe(propKey) &&\n+            typeof propValue !== 'function' &&\n+            typeof propValue !== 'symbol'\n+          ) {\n             target.push(\n               attributeSeparator,\n               stringToChunk(propKey),"
    },
    {
      "message": "support passing nativeviewtag to getinspectordataforviewatpoint callback, for react devtools compat",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactNativeFiberInspector.js b/packages/react-native-renderer/src/ReactNativeFiberInspector.js\nindex 04ddc968d7e8..ba8474fef23e 100644\n--- a/packages/react-native-renderer/src/ReactNativeFiberInspector.js\n+++ b/packages/react-native-renderer/src/ReactNativeFiberInspector.js\n@@ -190,13 +190,22 @@ if (__DEV__) {\n \n           closestInstance =\n             internalInstanceHandle.stateNode.canonical._internalInstanceHandle;\n+\n+          // Note: this is deprecated and we want to remove it ASAP. Keeping it here for React DevTools compatibility for now.\n+          const nativeViewTag =\n+            internalInstanceHandle.stateNode.canonical._nativeTag;\n+\n           nativeFabricUIManager.measure(\n             internalInstanceHandle.stateNode.node,\n             (x, y, width, height, pageX, pageY) => {\n+              const inspectorData = getInspectorDataForInstance(\n+                closestInstance,\n+              );\n               callback({\n+                ...inspectorData,\n                 pointerY: locationY,\n                 frame: {left: pageX, top: pageY, width, height},\n-                ...getInspectorDataForInstance(closestInstance),\n+                touchedViewTag: nativeViewTag,\n               });\n             },\n           );"
    },
    {
      "message": "fix react-devtools-scheduling-profiler tests on main",
      "diff": "diff --git a/packages/react-devtools-scheduling-profiler/src/constants.js b/packages/react-devtools-scheduling-profiler/src/constants.js\nindex e5f9336d73e7..2e463ae632d9 100644\n--- a/packages/react-devtools-scheduling-profiler/src/constants.js\n+++ b/packages/react-devtools-scheduling-profiler/src/constants.js\n@@ -11,6 +11,5 @@ export {\n   COMFORTABLE_LINE_HEIGHT,\n   COMPACT_LINE_HEIGHT,\n } from 'react-devtools-shared/src/constants.js';\n-import {TotalLanes} from 'react-reconciler/src/ReactFiberLane.new';\n \n-export const REACT_TOTAL_NUM_LANES = TotalLanes;\n+export const REACT_TOTAL_NUM_LANES = 31;"
    },
    {
      "message": "use sharedarraybuffer only when cross-origin isolation is enabled",
      "diff": "diff --git a/packages/scheduler/src/SchedulerProfiling.js b/packages/scheduler/src/SchedulerProfiling.js\nindex 810a5be22327..3036476afeeb 100644\n--- a/packages/scheduler/src/SchedulerProfiling.js\n+++ b/packages/scheduler/src/SchedulerProfiling.js\n@@ -15,13 +15,18 @@ import {NoPriority} from './SchedulerPriorities';\n let runIdCounter: number = 0;\n let mainThreadIdCounter: number = 0;\n \n+const isEnabledSharedArrayBuffer =\n+  // $FlowFixMe Flow doesn't know about SharedArrayBuffer\n+  typeof SharedArrayBuffer === 'function' &&\n+  // We only use SharedArrayBuffer when cross origin isolation is enabled.\n+  typeof window !== 'undefined' &&\n+  window.crossOriginIsolated === true;\n+\n const profilingStateSize = 4;\n export const sharedProfilingBuffer = enableProfiling\n-  ? // $FlowFixMe Flow doesn't know about SharedArrayBuffer\n-    typeof SharedArrayBuffer === 'function'\n+  ? isEnabledSharedArrayBuffer\n     ? new SharedArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT)\n-    : // $FlowFixMe Flow doesn't know about ArrayBuffer\n-    typeof ArrayBuffer === 'function'\n+    : typeof ArrayBuffer === 'function'\n     ? new ArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT)\n     : null // Don't crash the init path on IE9\n   : null;"
    },
    {
      "message": "add additional messaging for rulesofhooks lint error",
      "diff": "diff --git a/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js b/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js\nindex 5b8ff6f3e1de..b6b0c8d4a967 100644\n--- a/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js\n+++ b/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js\n@@ -915,7 +915,8 @@ function functionError(hook, fn) {\n     message:\n       `React Hook \"${hook}\" is called in function \"${fn}\" that is neither ` +\n       'a React function component nor a custom React Hook function.' +\n-      ' React component names must start with an uppercase letter.',\n+      ' React component names must start with an uppercase letter.' +\n+      ' React Hook names must start with the word \"use\".',\n   };\n }\n \ndiff --git a/packages/eslint-plugin-react-hooks/src/RulesOfHooks.js b/packages/eslint-plugin-react-hooks/src/RulesOfHooks.js\nindex bc747e0094f0..66e2d8edba56 100644\n--- a/packages/eslint-plugin-react-hooks/src/RulesOfHooks.js\n+++ b/packages/eslint-plugin-react-hooks/src/RulesOfHooks.js\n@@ -482,7 +482,8 @@ export default {\n                 `function \"${context.getSource(codePathFunctionName)}\" ` +\n                 'that is neither a React function component nor a custom ' +\n                 'React Hook function.' +\n-                ' React component names must start with an uppercase letter.';\n+                ' React component names must start with an uppercase letter.' +\n+                ' React Hook names must start with the word \"use\".';\n               context.report({node: hook, message});\n             } else if (codePathNode.type === 'Program') {\n               // These are dangerous if you have inline requires enabled."
    },
    {
      "message": "restore experimental build script's ability to auto download latest build",
      "diff": "diff --git a/scripts/release/download-experimental-build.js b/scripts/release/download-experimental-build.js\nindex ae5e69857990..2de19359559a 100755\n--- a/scripts/release/download-experimental-build.js\n+++ b/scripts/release/download-experimental-build.js\n@@ -18,15 +18,16 @@ const printSummary = require('./download-experimental-build-commands/print-summa\n const run = async () => {\n   try {\n     addDefaultParamValue('-r', '--releaseChannel', 'experimental');\n+    addDefaultParamValue(\n+      null,\n+      '--build',\n+      await getLatestMasterBuildNumber(true)\n+    );\n \n     const params = await parseParams();\n     params.cwd = join(__dirname, '..', '..');\n     params.packages = await getPublicPackages(true);\n \n-    if (!params.build) {\n-      params.build = await getLatestMasterBuildNumber(true);\n-    }\n-\n     await checkEnvironmentVariables(params);\n     await downloadBuildArtifacts(params);\n \ndiff --git a/scripts/release/utils.js b/scripts/release/utils.js\nindex f49471ad76f5..08ffdeb7c8c9 100644\n--- a/scripts/release/utils.js\n+++ b/scripts/release/utils.js\n@@ -17,18 +17,18 @@ const logger = createLogger({\n   storagePath: join(__dirname, '.progress-estimator'),\n });\n \n-const addDefaultParamValue = (shortName, longName, defaultValue) => {\n+const addDefaultParamValue = (optionalShortName, longName, defaultValue) => {\n   let found = false;\n   for (let i = 0; i < process.argv.length; i++) {\n     const current = process.argv[i];\n-    if (current === shortName || current.startsWith(`${longName}=`)) {\n+    if (current === optionalShortName || current.startsWith(`${longName}=`)) {\n       found = true;\n       break;\n     }\n   }\n \n   if (!found) {\n-    process.argv.push(shortName, defaultValue);\n+    process.argv.push(`${longName}=${defaultValue}`);\n   }\n };"
    },
    {
      "message": "set default release channel for download-experimental-build script",
      "diff": "diff --git a/scripts/release/download-experimental-build.js b/scripts/release/download-experimental-build.js\nindex 97ba2d1bc32a..75080554c9d9 100755\n--- a/scripts/release/download-experimental-build.js\n+++ b/scripts/release/download-experimental-build.js\n@@ -3,7 +3,11 @@\n 'use strict';\n \n const {join} = require('path');\n-const {getPublicPackages, handleError} = require('./utils');\n+const {\n+  addDefaultParamValue,\n+  getPublicPackages,\n+  handleError,\n+} = require('./utils');\n \n const checkEnvironmentVariables = require('./shared-commands/check-environment-variables');\n const downloadBuildArtifacts = require('./shared-commands/download-build-artifacts');\n@@ -13,6 +17,8 @@ const printSummary = require('./download-experimental-build-commands/print-summa\n \n const run = async () => {\n   try {\n+    addDefaultParamValue('-r', '--releaseChannel', 'experimental');\n+\n     const params = parseParams();\n     params.cwd = join(__dirname, '..', '..');\n     params.packages = await getPublicPackages(true);\ndiff --git a/scripts/release/utils.js b/scripts/release/utils.js\nindex 52731d4376e0..f49471ad76f5 100644\n--- a/scripts/release/utils.js\n+++ b/scripts/release/utils.js\n@@ -17,6 +17,21 @@ const logger = createLogger({\n   storagePath: join(__dirname, '.progress-estimator'),\n });\n \n+const addDefaultParamValue = (shortName, longName, defaultValue) => {\n+  let found = false;\n+  for (let i = 0; i < process.argv.length; i++) {\n+    const current = process.argv[i];\n+    if (current === shortName || current.startsWith(`${longName}=`)) {\n+      found = true;\n+      break;\n+    }\n+  }\n+\n+  if (!found) {\n+    process.argv.push(shortName, defaultValue);\n+  }\n+};\n+\n const confirm = async message => {\n   const confirmation = await prompt(theme`\\n{caution ${message}} (y/N) `);\n   prompt.done();\n@@ -249,6 +264,7 @@ const updateVersionsForNext = async (cwd, reactVersion, version) => {\n };\n \n module.exports = {\n+  addDefaultParamValue,\n   confirm,\n   execRead,\n   getArtifactsList,"
    },
    {
      "message": "add regression test for hooks after error boundaries",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactErrorBoundariesHooks-test.internal.js b/packages/react-dom/src/__tests__/ReactErrorBoundariesHooks-test.internal.js\nnew file mode 100644\nindex 000000000000..078c58e0357e\n--- /dev/null\n+++ b/packages/react-dom/src/__tests__/ReactErrorBoundariesHooks-test.internal.js\n@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) Facebook, Inc. and its affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @emails react-core\n+ */\n+\n+'use strict';\n+\n+let React;\n+let ReactDOM;\n+\n+describe('ReactErrorBoundariesHooks', () => {\n+  beforeEach(() => {\n+    jest.resetModules();\n+    ReactDOM = require('react-dom');\n+    React = require('react');\n+  });\n+\n+  it('should preserve hook order if errors are caught', () => {\n+    function ErrorThrower() {\n+      React.useMemo(() => undefined, []);\n+      throw new Error('expected');\n+    }\n+\n+    function StatefulComponent() {\n+      React.useState(null);\n+      return ' | stateful';\n+    }\n+\n+    class ErrorHandler extends React.Component {\n+      state = {error: null};\n+\n+      componentDidCatch(error) {\n+        return this.setState({error});\n+      }\n+\n+      render() {\n+        if (this.state.error !== null) {\n+          return <p>Handled error: {this.state.error.message}</p>;\n+        }\n+        return this.props.children;\n+      }\n+    }\n+\n+    function App(props) {\n+      return (\n+        <React.Fragment>\n+          <ErrorHandler>\n+            <ErrorThrower />\n+          </ErrorHandler>\n+          <StatefulComponent />\n+        </React.Fragment>\n+      );\n+    }\n+\n+    const container = document.createElement('div');\n+    ReactDOM.render(<App />, container);\n+\n+    expect(() => {\n+      ReactDOM.render(<App />, container);\n+    }).not.toThrow();\n+  });\n+});"
    },
    {
      "message": "revert \"temporarily disable profiler commit hooks flag \"",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex e6b05679f86e..ea9610713d05 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -35,10 +35,7 @@ export const {\n // It's not used anywhere in production yet.\n \n export const enableProfilerTimer = __PROFILE__;\n-\n-// Temporarily disable commit hooks flag to verify it does not cause a regression.\n-// TODO (brian) Re-enable this flag if performance is mostly neutral.\n-export const enableProfilerCommitHooks = false;\n+export const enableProfilerCommitHooks = __PROFILE__;\n \n // Logs additional User Timing API marks for use with an experimental profiling tool.\n export const enableSchedulingProfiler = __PROFILE__;"
    },
    {
      "message": "fix compatibility with @typescript-eslint/parser@4.0.0+",
      "diff": "diff --git a/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js b/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\nindex 9899abc0c7d4..d80d701c6869 100644\n--- a/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\n+++ b/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\n@@ -406,7 +406,10 @@ export default {\n             });\n           }\n \n-          if (dependencyNode.parent.type === 'TSTypeQuery') {\n+          if (\n+            dependencyNode.parent.type === 'TSTypeQuery' ||\n+            dependencyNode.parent.type === 'TSTypeReference'\n+          ) {\n             continue;\n           }"
    },
    {
      "message": "remove unused argument from `finishconcurrentrender`",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberWorkLoop.new.js b/packages/react-reconciler/src/ReactFiberWorkLoop.new.js\nindex 5a3d2fe59b68..ecd4611c3402 100644\n--- a/packages/react-reconciler/src/ReactFiberWorkLoop.new.js\n+++ b/packages/react-reconciler/src/ReactFiberWorkLoop.new.js\n@@ -859,7 +859,7 @@ function performConcurrentWorkOnRoot(root) {\n     const finishedWork: Fiber = (root.current.alternate: any);\n     root.finishedWork = finishedWork;\n     root.finishedLanes = lanes;\n-    finishConcurrentRender(root, finishedWork, exitStatus, lanes);\n+    finishConcurrentRender(root, exitStatus, lanes);\n   }\n \n   ensureRootIsScheduled(root, now());\n@@ -871,7 +871,7 @@ function performConcurrentWorkOnRoot(root) {\n   return null;\n }\n \n-function finishConcurrentRender(root, finishedWork, exitStatus, lanes) {\n+function finishConcurrentRender(root, exitStatus, lanes) {\n   switch (exitStatus) {\n     case RootIncomplete:\n     case RootFatalErrored: {\ndiff --git a/packages/react-reconciler/src/ReactFiberWorkLoop.old.js b/packages/react-reconciler/src/ReactFiberWorkLoop.old.js\nindex 59cdb9890550..21ac3eeb65ce 100644\n--- a/packages/react-reconciler/src/ReactFiberWorkLoop.old.js\n+++ b/packages/react-reconciler/src/ReactFiberWorkLoop.old.js\n@@ -847,7 +847,7 @@ function performConcurrentWorkOnRoot(root) {\n     const finishedWork: Fiber = (root.current.alternate: any);\n     root.finishedWork = finishedWork;\n     root.finishedLanes = lanes;\n-    finishConcurrentRender(root, finishedWork, exitStatus, lanes);\n+    finishConcurrentRender(root, exitStatus, lanes);\n   }\n \n   ensureRootIsScheduled(root, now());\n@@ -859,7 +859,7 @@ function performConcurrentWorkOnRoot(root) {\n   return null;\n }\n \n-function finishConcurrentRender(root, finishedWork, exitStatus, lanes) {\n+function finishConcurrentRender(root, exitStatus, lanes) {\n   switch (exitStatus) {\n     case RootIncomplete:\n     case RootFatalErrored: {"
    },
    {
      "message": "fix event.relatedtarget fallback logic for firefox",
      "diff": "diff --git a/packages/react-dom/src/events/SyntheticEvent.js b/packages/react-dom/src/events/SyntheticEvent.js\nindex a6c7e6041119..e226e95833ca 100644\n--- a/packages/react-dom/src/events/SyntheticEvent.js\n+++ b/packages/react-dom/src/events/SyntheticEvent.js\n@@ -170,12 +170,12 @@ export const MouseEventInterface = {\n   button: 0,\n   buttons: 0,\n   relatedTarget: function(event) {\n-    return (\n-      event.relatedTarget ||\n-      (event.fromElement === event.srcElement\n+    if (event.relatedTarget === undefined)\n+      return event.fromElement === event.srcElement\n         ? event.toElement\n-        : event.fromElement)\n-    );\n+        : event.fromElement;\n+\n+    return event.relatedTarget;\n   },\n   movementX: function(event) {\n     if ('movementX' in event) {"
    },
    {
      "message": "remove resolutions from test renderer package.json",
      "diff": "diff --git a/packages/react-test-renderer/package.json b/packages/react-test-renderer/package.json\nindex c2907a4e2981..724eba635de0 100644\n--- a/packages/react-test-renderer/package.json\n+++ b/packages/react-test-renderer/package.json\n@@ -27,9 +27,6 @@\n   \"peerDependencies\": {\n     \"react\": \"^17.0.0-alpha\"\n   },\n-  \"resolutions\": {\n-    \"react-shallow-renderer/react-is\": \"^17.0.0-alpha\"\n-  },\n   \"files\": [\n     \"LICENSE\",\n     \"README.md\","
    },
    {
      "message": "allow decoupleupdatepriorityfromscheduler to be set",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex 15592c39095f..6f98961100e7 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -24,6 +24,7 @@ export const {\n   enableFilterEmptyStringAttributesDOM,\n   enableLegacyFBSupport,\n   deferRenderPhaseUpdateToNextBatch,\n+  decoupleUpdatePriorityFromScheduler,\n } = dynamicFeatureFlags;\n \n // On WWW, __EXPERIMENTAL__ is used for a new modern build.\n@@ -75,7 +76,6 @@ export const warnUnstableRenderSubtreeIntoContainer = false;\n // don't have to add another test dimension. The build system will compile this\n // to the correct value.\n export const enableNewReconciler = __VARIANT__;\n-export const decoupleUpdatePriorityFromScheduler = __VARIANT__;\n \n // TODO: This does not currently exist in the new reconciler fork.\n export const enableDebugTracing = !__VARIANT__;"
    },
    {
      "message": "use define property to overwrite console, close #19099",
      "diff": "diff --git a/packages/shared/ConsolePatchingDev.js b/packages/shared/ConsolePatchingDev.js\nindex ee5d6a426dac..34b5a3f7823e 100644\n--- a/packages/shared/ConsolePatchingDev.js\n+++ b/packages/shared/ConsolePatchingDev.js\n@@ -29,8 +29,20 @@ export function disableLogs(): void {\n       prevInfo = console.info;\n       prevWarn = console.warn;\n       prevError = console.error;\n+      // https://github.com/facebook/react/issues/19099\n+      const props = {\n+        configurable: true,\n+        enumerable: true,\n+        value: disabledLog,\n+        writable: true,\n+      };\n       // $FlowFixMe Flow thinks console is immutable.\n-      console.log = console.info = console.warn = console.error = disabledLog;\n+      Object.defineProperties(console, {\n+        info: props,\n+        log: props,\n+        warn: props,\n+        error: props,\n+      });\n       /* eslint-enable react-internal/no-production-logging */\n     }\n     disabledDepth++;\n@@ -42,14 +54,18 @@ export function reenableLogs(): void {\n     disabledDepth--;\n     if (disabledDepth === 0) {\n       /* eslint-disable react-internal/no-production-logging */\n+      const props = {\n+        configurable: true,\n+        enumerable: true,\n+        writable: true,\n+      };\n       // $FlowFixMe Flow thinks console is immutable.\n-      console.log = prevLog;\n-      // $FlowFixMe Flow thinks console is immutable.\n-      console.info = prevInfo;\n-      // $FlowFixMe Flow thinks console is immutable.\n-      console.warn = prevWarn;\n-      // $FlowFixMe Flow thinks console is immutable.\n-      console.error = prevError;\n+      Object.defineProperties(console, {\n+        log: {...props, value: prevLog},\n+        info: {...props, value: prevInfo},\n+        warn: {...props, value: prevWarn},\n+        error: {...props, value: prevError},\n+      });\n       /* eslint-enable react-internal/no-production-logging */\n     }\n     if (disabledDepth < 0) {"
    },
    {
      "message": "move iscustomcomponent function call outside of loop",
      "diff": "diff --git a/packages/react-dom/src/server/ReactPartialRenderer.js b/packages/react-dom/src/server/ReactPartialRenderer.js\nindex 6c700a1ac5fe..63693ed1b593 100644\n--- a/packages/react-dom/src/server/ReactPartialRenderer.js\n+++ b/packages/react-dom/src/server/ReactPartialRenderer.js\n@@ -73,7 +73,7 @@ import {checkControlledValueProps} from '../shared/ReactControlledValuePropTypes\n import assertValidProps from '../shared/assertValidProps';\n import dangerousStyleValue from '../shared/dangerousStyleValue';\n import hyphenateStyleName from '../shared/hyphenateStyleName';\n-import isCustomComponent from '../shared/isCustomComponent';\n+import isCustomComponentFn from '../shared/isCustomComponent';\n import omittedCloseTags from '../shared/omittedCloseTags';\n import warnValidStyle from '../shared/warnValidStyle';\n import {validateProperties as validateARIAProperties} from '../shared/ReactDOMInvalidARIAHook';\n@@ -361,6 +361,8 @@ function createOpenTagMarkup(\n ): string {\n   let ret = '<' + tagVerbatim;\n \n+  const isCustomComponent = isCustomComponentFn(tagLowercase, props);\n+\n   for (const propKey in props) {\n     if (!hasOwnProperty.call(props, propKey)) {\n       continue;\n@@ -376,7 +378,7 @@ function createOpenTagMarkup(\n       propValue = createMarkupForStyles(propValue);\n     }\n     let markup = null;\n-    if (isCustomComponent(tagLowercase, props)) {\n+    if (isCustomComponent) {\n       if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n         markup = createMarkupForCustomAttribute(propKey, propValue);\n       }"
    },
    {
      "message": "remove hint to post feedback about exhaustive-deps rule",
      "diff": "diff --git a/packages/eslint-plugin-react-hooks/README.md b/packages/eslint-plugin-react-hooks/README.md\nindex df8ae3440262..480891c72aae 100644\n--- a/packages/eslint-plugin-react-hooks/README.md\n+++ b/packages/eslint-plugin-react-hooks/README.md\n@@ -49,8 +49,6 @@ Or use the recommended config:\n \n Please refer to the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html) documentation and the [Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#what-exactly-do-the-lint-rules-enforce) to learn more about this rule.\n \n-For feedback about the `exhaustive-deps` rule, please post in [this thread](https://github.com/facebook/react/issues/14920).\n-\n ## License\n \n MIT"
    },
    {
      "message": "fix requiring timers module with non standard require",
      "diff": "diff --git a/packages/shared/enqueueTask.js b/packages/shared/enqueueTask.js\nindex 7827a794ee90..d8fc646db2b2 100644\n--- a/packages/shared/enqueueTask.js\n+++ b/packages/shared/enqueueTask.js\n@@ -19,7 +19,7 @@ export default function enqueueTask(task: () => void) {\n       const nodeRequire = module && module[requireString];\n       // assuming we're in node, let's try to get node's\n       // version of setImmediate, bypassing fake timers if any.\n-      enqueueTaskImpl = nodeRequire('timers').setImmediate;\n+      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n     } catch (_err) {\n       // we're in a browser\n       // we can't use regular timers because they may still be faked"
    },
    {
      "message": "fix whitespace problem wiht devtools components search",
      "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Components/Element.css b/packages/react-devtools-shared/src/devtools/views/Components/Element.css\nindex f71e9f479f47..cd92bd3937d3 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Components/Element.css\n+++ b/packages/react-devtools-shared/src/devtools/views/Components/Element.css\n@@ -13,7 +13,7 @@\n \n .Wrapper {\n   padding: 0 0.25rem;\n-  white-space: nowrap;\n+  white-space: pre;\n   height: var(--line-height-data);\n   line-height: var(--line-height-data);\n   display: inline-flex;"
    },
    {
      "message": "fix performance issue in react-devtools when highlight enabled",
      "diff": "diff --git a/packages/react-devtools-shared/src/backend/views/TraceUpdates/index.js b/packages/react-devtools-shared/src/backend/views/TraceUpdates/index.js\nindex e94d4fd5c13d..0637d7b818f1 100644\n--- a/packages/react-devtools-shared/src/backend/views/TraceUpdates/index.js\n+++ b/packages/react-devtools-shared/src/backend/views/TraceUpdates/index.js\n@@ -127,7 +127,9 @@ function prepareToDraw(): void {\n \n   draw(nodeToData);\n \n-  redrawTimeoutID = setTimeout(prepareToDraw, earliestExpiration - now);\n+  if (earliestExpiration !== Number.MAX_VALUE) {\n+    redrawTimeoutID = setTimeout(prepareToDraw, earliestExpiration - now);\n+  }\n }\n \n function measureNode(node: Object): Rect | null {"
    },
    {
      "message": "make interaction tracing on by default in all www builds",
      "diff": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex a2da48dd5f33..d424e40b3dfb 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -40,7 +40,11 @@ export let enableUserTimingAPI = __DEV__ && !__EXPERIMENTAL__;\n \n export const enableProfilerTimer = __PROFILE__;\n export const enableProfilerCommitHooks = __PROFILE__;\n-export const enableSchedulerTracing = __PROFILE__;\n+\n+// Note: we'll want to remove this when we to userland implementation.\n+// For now, we'll turn it on for everyone because it's *already* on for everyone in practice.\n+// At least this will let us stop shipping <Profiler> implementation to all users.\n+export const enableSchedulerTracing = true;\n export const enableSchedulerDebugging = true;\n \n export const warnAboutDeprecatedLifecycles = true;"
    },
    {
      "message": "remove unnecessary lines for `hasbadmappolyfill` issue for rollup",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiber.js b/packages/react-reconciler/src/ReactFiber.js\nindex 64e230a891d6..4f0af6fe331e 100644\n--- a/packages/react-reconciler/src/ReactFiber.js\n+++ b/packages/react-reconciler/src/ReactFiber.js\n@@ -101,13 +101,10 @@ if (__DEV__) {\n   hasBadMapPolyfill = false;\n   try {\n     const nonExtensibleObject = Object.preventExtensions({});\n-    const testMap = new Map([[nonExtensibleObject, null]]);\n-    const testSet = new Set([nonExtensibleObject]);\n-    // This is necessary for Rollup to not consider these unused.\n-    // https://github.com/rollup/rollup/issues/1771\n-    // TODO: we can remove these if Rollup fixes the bug.\n-    testMap.set(0, 0);\n-    testSet.add(0);\n+    /* eslint-disable no-new */\n+    new Map([[nonExtensibleObject, null]]);\n+    new Set([nonExtensibleObject]);\n+    /* eslint-enable no-new */\n   } catch (e) {\n     // TODO: Consider warning about bad polyfills\n     hasBadMapPolyfill = true;\ndiff --git a/packages/react/src/BadMapPolyfill.js b/packages/react/src/BadMapPolyfill.js\nindex 7ceb9ca65f9a..9cad26144490 100644\n--- a/packages/react/src/BadMapPolyfill.js\n+++ b/packages/react/src/BadMapPolyfill.js\n@@ -12,13 +12,10 @@ if (__DEV__) {\n   hasBadMapPolyfill = false;\n   try {\n     const frozenObject = Object.freeze({});\n-    const testMap = new Map([[frozenObject, null]]);\n-    const testSet = new Set([frozenObject]);\n-    // This is necessary for Rollup to not consider these unused.\n-    // https://github.com/rollup/rollup/issues/1771\n-    // TODO: we can remove these if Rollup fixes the bug.\n-    testMap.set(0, 0);\n-    testSet.add(0);\n+    /* eslint-disable no-new */\n+    new Map([[frozenObject, null]]);\n+    new Set([frozenObject]);\n+    /* eslint-enable no-new */\n   } catch (e) {\n     // TODO: Consider warning about bad polyfills\n     hasBadMapPolyfill = true;"
    },
    {
      "message": "stop exposing reactdomcomponenttree from fb builds",
      "diff": "diff --git a/packages/react-dom/index.classic.fb.js b/packages/react-dom/index.classic.fb.js\nindex 96ce6a6cc35c..1f451d70348b 100644\n--- a/packages/react-dom/index.classic.fb.js\n+++ b/packages/react-dom/index.classic.fb.js\n@@ -9,7 +9,6 @@\n \n import {addUserTimingListener} from 'shared/ReactFeatureFlags';\n import {isEnabled} from './src/events/ReactDOMEventListener';\n-import {getClosestInstanceFromNode} from './src/client/ReactDOMComponentTree';\n \n import {__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED} from './src/client/ReactDOM';\n \n@@ -18,9 +17,6 @@ Object.assign((__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: any), {\n   ReactBrowserEventEmitter: {\n     isEnabled,\n   },\n-  ReactDOMComponentTree: {\n-    getClosestInstanceFromNode,\n-  },\n   // Perf experiment\n   addUserTimingListener,\n });"
    },
    {
      "message": "wrap components and profiler tabs with box-size style too",
      "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Components/Components.css b/packages/react-devtools-shared/src/devtools/views/Components/Components.css\nindex 7eaa396ccd40..1261e550e003 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Components/Components.css\n+++ b/packages/react-devtools-shared/src/devtools/views/Components/Components.css\n@@ -9,6 +9,11 @@\n   font-family: var(--font-family-sans);\n }\n \n+.Components, .Components * {\n+  box-sizing: border-box;\n+  -webkit-font-smoothing: var(--font-smoothing);\n+}\n+\n .TreeWrapper {\n   flex: 0 0 var(--horizontal-resize-percentage);\n   overflow: auto;\ndiff --git a/packages/react-devtools-shared/src/devtools/views/DevTools.css b/packages/react-devtools-shared/src/devtools/views/DevTools.css\nindex 3332c35f1f67..8091c15b8484 100644\n--- a/packages/react-devtools-shared/src/devtools/views/DevTools.css\n+++ b/packages/react-devtools-shared/src/devtools/views/DevTools.css\n@@ -56,6 +56,5 @@\n \n .DevTools, .DevTools * {\n   box-sizing: border-box;\n-\n   -webkit-font-smoothing: var(--font-smoothing);\n }\ndiff --git a/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.css b/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.css\nindex e9157aa35c66..6763564e52a2 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.css\n+++ b/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.css\n@@ -11,6 +11,11 @@\n   color: var(--color-text);\n }\n \n+.Profiler, .Profiler * {\n+  box-sizing: border-box;\n+  -webkit-font-smoothing: var(--font-smoothing);\n+}\n+\n .LeftColumn {\n   display: flex;\n   flex-direction: column;"
    },
    {
      "message": "fix yarn warning on running 'yarn build-for-devtools'",
      "diff": "diff --git a/package.json b/package.json\nindex bc48ac2fc571..7c9a6998db2d 100644\n--- a/package.json\n+++ b/package.json\n@@ -100,7 +100,7 @@\n   },\n   \"scripts\": {\n     \"build\": \"node ./scripts/rollup/build.js\",\n-    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build -- react/index,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer --type=NODE\",\n+    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer --type=NODE\",\n     \"linc\": \"node ./scripts/tasks/linc.js\",\n     \"lint\": \"node ./scripts/tasks/eslint.js\",\n     \"lint-build\": \"node ./scripts/rollup/validate/index.js\","
    },
    {
      "message": "put react.jsx and react.jsxdev behind experimental build",
      "diff": "diff --git a/packages/react/index.experimental.js b/packages/react/index.experimental.js\nindex e348f332b7f7..a1e7b9629a5d 100644\n--- a/packages/react/index.experimental.js\n+++ b/packages/react/index.experimental.js\n@@ -43,4 +43,8 @@ export {\n   unstable_withSuspenseConfig,\n   // enableBlocksAPI\n   block,\n+  // enableJSXTransformAPI\n+  jsx,\n+  jsxs,\n+  jsxDEV,\n } from './src/React';"
    },
    {
      "message": "fix targetasinstance dispatchevent \"cannot read property of null\"",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactFabricEventEmitter.js b/packages/react-native-renderer/src/ReactFabricEventEmitter.js\nindex 959df5bc4873..49abda74eb36 100644\n--- a/packages/react-native-renderer/src/ReactFabricEventEmitter.js\n+++ b/packages/react-native-renderer/src/ReactFabricEventEmitter.js\n@@ -87,7 +87,11 @@ export function dispatchEvent(\n   let eventTarget = null;\n   if (enableNativeTargetAsInstance) {\n     if (targetFiber != null) {\n-      eventTarget = targetFiber.stateNode.canonical;\n+      const stateNode = targetFiber.stateNode;\n+      // Guard against Fiber being unmounted\n+      if (stateNode != null) {\n+        eventTarget = stateNode.canonical;\n+      }\n     }\n   } else {\n     eventTarget = nativeEvent.target;"
    },
    {
      "message": "update react-shallow-renderer from 16.12.0 to 16.13.0",
      "diff": "diff --git a/packages/react-test-renderer/package.json b/packages/react-test-renderer/package.json\nindex b1ab08fe6089..ccfb6b8f18f2 100644\n--- a/packages/react-test-renderer/package.json\n+++ b/packages/react-test-renderer/package.json\n@@ -21,7 +21,7 @@\n   \"dependencies\": {\n     \"object-assign\": \"^4.1.1\",\n     \"react-is\": \"^16.8.6\",\n-    \"react-shallow-renderer\": \"^16.12.0\",\n+    \"react-shallow-renderer\": \"^16.13.0\",\n     \"scheduler\": \"^0.19.0\"\n   },\n   \"peerDependencies\": {\ndiff --git a/yarn.lock b/yarn.lock\nindex 5a02e8407c9d..50f7b5818f92 100644\n--- a/yarn.lock\n+++ b/yarn.lock\n@@ -10856,13 +10856,12 @@ react-native-web@^0.11.5:\n     prop-types \"^15.6.0\"\n     react-timer-mixin \"^0.13.4\"\n \n-react-shallow-renderer@^16.12.0:\n-  version \"16.12.0\"\n-  resolved \"https://registry.yarnpkg.com/react-shallow-renderer/-/react-shallow-renderer-16.12.0.tgz#e68ca8fca7a616db42c36fdd6929723ba0bccef6\"\n-  integrity sha512-elIe2dhXJAO19IY1K3b4YWHBLnKE5wRH+PKx3AYzM6j2+N5UI+FGLKiRNFbLQcggrpBiy3GLhj7MqNUlRk9Z7g==\n+react-shallow-renderer@^16.13.0:\n+  version \"16.13.0\"\n+  resolved \"https://registry.yarnpkg.com/react-shallow-renderer/-/react-shallow-renderer-16.13.0.tgz#18defe59ac922a9623fcbb8bed8db0da7c728fd4\"\n+  integrity sha512-qdFKyjjHSp5t4+Fs4479JqYDQnBdHi/IZEnGEmZZKZqoiwxjG4DKJPYd7YTaTmalUAqZlZR+K9ayz1+8tEctSg==\n   dependencies:\n     object-assign \"^4.1.1\"\n-    prop-types \"^15.7.2\"\n     react-is \"^16.12.0\"\n \n react-timer-mixin@^0.13.4:"
    },
    {
      "message": "add guard around focuswithin responder root events",
      "diff": "diff --git a/packages/react-interactions/events/src/dom/Focus.js b/packages/react-interactions/events/src/dom/Focus.js\nindex d97723dfe620..f4f5e4a0fedc 100644\n--- a/packages/react-interactions/events/src/dom/Focus.js\n+++ b/packages/react-interactions/events/src/dom/Focus.js\n@@ -36,7 +36,7 @@ type FocusState = {\n   isFocused: boolean,\n   isFocusVisible: boolean,\n   pointerType: PointerType,\n-  ...\n+  addedRootEvents?: boolean,\n };\n \n type FocusProps = {\n@@ -416,6 +416,7 @@ const focusResponderImpl = {\n       isFocused: false,\n       isFocusVisible: false,\n       pointerType: '',\n+      addedRootEvents: false,\n     };\n   },\n   onMount() {\n@@ -622,7 +623,10 @@ const focusWithinResponderImpl = {\n             onBeforeBlurWithin,\n             DiscreteEvent,\n           );\n-          context.addRootEventTypes(rootEventTypes);\n+          if (!state.addedRootEvents) {\n+            state.addedRootEvents = true;\n+            context.addRootEventTypes(rootEventTypes);\n+          }\n         } else {\n           // We want to propagate to next focusWithin responder\n           // if this responder doesn't handle beforeblur\n@@ -660,7 +664,10 @@ const focusWithinResponderImpl = {\n       if (detachedTarget !== null && detachedTarget === event.target) {\n         dispatchBlurWithinEvents(context, event, props, state);\n         state.detachedTarget = null;\n-        context.removeRootEventTypes(rootEventTypes);\n+        if (state.addedRootEvents) {\n+          state.addedRootEvents = false;\n+          context.removeRootEventTypes(rootEventTypes);\n+        }\n       }\n     }\n   },"
    },
    {
      "message": "move react map child check to behind flags or __dev__",
      "diff": "diff --git a/packages/react/src/ReactChildren.js b/packages/react/src/ReactChildren.js\nindex 9329d89c57c1..6e65fd8ddcde 100644\n--- a/packages/react/src/ReactChildren.js\n+++ b/packages/react/src/ReactChildren.js\n@@ -159,17 +159,18 @@ function traverseAllChildrenImpl(\n   } else {\n     const iteratorFn = getIteratorFn(children);\n     if (typeof iteratorFn === 'function') {\n-      if (iteratorFn === children.entries) {\n-        if (disableMapsAsChildren) {\n-          invariant(\n-            false,\n-            'Maps are not valid as a React child (found: %s). Consider converting ' +\n-              'children to an array of keyed ReactElements instead.',\n-            children,\n-          );\n-        }\n+      if (disableMapsAsChildren) {\n+        invariant(\n+          iteratorFn !== children.entries,\n+          'Maps are not valid as a React child (found: %s). Consider converting ' +\n+            'children to an array of keyed ReactElements instead.',\n+          children,\n+        );\n+      }\n+\n+      if (__DEV__) {\n         // Warn about using Maps as children\n-        if (__DEV__) {\n+        if (iteratorFn === children.entries) {\n           if (!didWarnAboutMaps) {\n             console.warn(\n               'Using Maps as children is deprecated and will be removed in ' +"
    },
    {
      "message": "use babel parser rather than babylon in extract errors",
      "diff": "diff --git a/scripts/error-codes/extract-errors.js b/scripts/error-codes/extract-errors.js\nindex d82b4e68db15..58823cbe1687 100644\n--- a/scripts/error-codes/extract-errors.js\n+++ b/scripts/error-codes/extract-errors.js\n@@ -6,7 +6,7 @@\n  */\n 'use strict';\n \n-const babylon = require('babylon');\n+const parser = require('@babel/parser');\n const fs = require('fs');\n const path = require('path');\n const traverse = require('@babel/traverse').default;\n@@ -65,7 +65,7 @@ module.exports = function(opts) {\n   existingErrorMap = invertObject(existingErrorMap);\n \n   function transform(source) {\n-    const ast = babylon.parse(source, babylonOptions);\n+    const ast = parser.parse(source, babylonOptions);\n \n     traverse(ast, {\n       CallExpression: {"
    },
    {
      "message": "apply changes on editablevalue on blur feature implemented",
      "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Components/EditableValue.js b/packages/react-devtools-shared/src/devtools/views/Components/EditableValue.js\nindex 992f2b2dff65..e501c39adee0 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Components/EditableValue.js\n+++ b/packages/react-devtools-shared/src/devtools/views/Components/EditableValue.js\n@@ -8,8 +8,6 @@\n  */\n \n import React, {Fragment, useRef} from 'react';\n-import Button from '../Button';\n-import ButtonIcon from '../ButtonIcon';\n import styles from './EditableValue.css';\n import {useEditableValue} from '../hooks';\n \n@@ -51,9 +49,7 @@ export default function EditableValue({\n \n     switch (event.key) {\n       case 'Enter':\n-        if (isValid && hasPendingChanges) {\n-          overrideValueFn(path, parsedValue);\n-        }\n+        applyChanges();\n         break;\n       case 'Escape':\n         reset();\n@@ -63,6 +59,12 @@ export default function EditableValue({\n     }\n   };\n \n+  const applyChanges = () => {\n+    if (isValid && hasPendingChanges) {\n+      overrideValueFn(path, parsedValue);\n+    }\n+  };\n+\n   let placeholder = '';\n   if (editableValue === undefined) {\n     placeholder = '(undefined)';\n@@ -75,6 +77,7 @@ export default function EditableValue({\n       <input\n         autoComplete=\"new-password\"\n         className={`${isValid ? styles.Input : styles.Invalid} ${className}`}\n+        onBlur={applyChanges}\n         onChange={handleChange}\n         onKeyDown={handleKeyDown}\n         placeholder={placeholder}\n@@ -82,14 +85,6 @@ export default function EditableValue({\n         type=\"text\"\n         value={editableValue}\n       />\n-      {hasPendingChanges && (\n-        <Button\n-          className={styles.ResetButton}\n-          onClick={reset}\n-          title=\"Reset value\">\n-          <ButtonIcon type=\"undo\" />\n-        </Button>\n-      )}\n     </Fragment>\n   );\n }"
    },
    {
      "message": "fix sizebot - point correctly to circleci artifact",
      "diff": "diff --git a/dangerfile.js b/dangerfile.js\nindex f4624a17c173..86e7e422a5b4 100644\n--- a/dangerfile.js\n+++ b/dangerfile.js\n@@ -171,7 +171,7 @@ function git(args) {\n \n     for (let i = 0; i < baseArtifactsInfo.length; i++) {\n       const info = baseArtifactsInfo[i];\n-      if (info.path === 'home/circleci/project/build/bundle-sizes.json') {\n+      if (info.path.endsWith('bundle-sizes.json')) {\n         const resultsResponse = await fetch(info.url);\n         previousBuildResults = await resultsResponse.json();\n         break;"
    },
    {
      "message": "check bigint in serializetostring and change it to string",
      "diff": "diff --git a/packages/react-devtools-shared/src/backend/utils.js b/packages/react-devtools-shared/src/backend/utils.js\nindex c08daac1d758..6f96f9864f80 100644\n--- a/packages/react-devtools-shared/src/backend/utils.js\n+++ b/packages/react-devtools-shared/src/backend/utils.js\n@@ -81,6 +81,10 @@ export function serializeToString(data: any): string {\n       }\n       cache.add(value);\n     }\n+    // $FlowFixMe\n+    if (typeof value === 'bigint') {\n+      return value.toString() + 'n';\n+    }\n     return value;\n   });\n }\ndiff --git a/packages/react-devtools-shell/src/app/InspectableElements/UnserializableProps.js b/packages/react-devtools-shell/src/app/InspectableElements/UnserializableProps.js\nindex 561aad203449..982ea6528425 100644\n--- a/packages/react-devtools-shell/src/app/InspectableElements/UnserializableProps.js\n+++ b/packages/react-devtools-shell/src/app/InspectableElements/UnserializableProps.js\n@@ -31,6 +31,8 @@ const immutable = Immutable.fromJS({\n     xyz: 1,\n   },\n });\n+// $FlowFixMe\n+const bigInt = BigInt(123); // eslint-disable-line no-undef\n \n export default function UnserializableProps() {\n   return (\n@@ -43,6 +45,7 @@ export default function UnserializableProps() {\n       setOfSets={setOfSets}\n       typedArray={typedArray}\n       immutable={immutable}\n+      bigInt={bigInt}\n     />\n   );\n }"
    },
    {
      "message": "create reactfabric.stopsurface and use that for bridgeless mode binding",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactFabric.js b/packages/react-native-renderer/src/ReactFabric.js\nindex 1371067ab0a7..d9b532e49798 100644\n--- a/packages/react-native-renderer/src/ReactFabric.js\n+++ b/packages/react-native-renderer/src/ReactFabric.js\n@@ -199,7 +199,13 @@ const ReactFabric: ReactFabricType = {\n     return getPublicRootInstance(root);\n   },\n \n+  // Deprecated - this function is being renamed to stopSurface, use that instead.\n+  // TODO (T47576999): Delete this once it's no longer called from native code.\n   unmountComponentAtNode(containerTag: number) {\n+    this.stopSurface(containerTag);\n+  },\n+\n+  stopSurface(containerTag: number) {\n     const root = roots.get(containerTag);\n     if (root) {\n       // TODO: Is it safe to reset this now or should I wait since this unmount could be deferred?\ndiff --git a/scripts/rollup/shims/react-native/ReactFabric.js b/scripts/rollup/shims/react-native/ReactFabric.js\nindex 8f6a708fd205..536ce9a6f30b 100644\n--- a/scripts/rollup/shims/react-native/ReactFabric.js\n+++ b/scripts/rollup/shims/react-native/ReactFabric.js\n@@ -23,6 +23,10 @@ if (__DEV__) {\n   ReactFabric = require('../implementations/ReactFabric-prod');\n }\n \n-BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);\n+if (global.RN$Bridgeless) {\n+  global.RN$stopSurface = ReactFabric.stopSurface;\n+} else {\n+  BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);\n+}\n \n module.exports = (ReactFabric: ReactNativeType);"
    },
    {
      "message": "update create-react-app note for eslint-plugin-react-hooks",
      "diff": "diff --git a/packages/eslint-plugin-react-hooks/README.md b/packages/eslint-plugin-react-hooks/README.md\nindex 2fc149a7e35a..bda6fe8fdc83 100644\n--- a/packages/eslint-plugin-react-hooks/README.md\n+++ b/packages/eslint-plugin-react-hooks/README.md\n@@ -6,7 +6,7 @@ It is a part of the [Hooks API](https://reactjs.org/docs/hooks-intro.html) for R\n \n ## Installation\n \n-**Note: If you're using Create React App, please wait for a corresponding release of `react-scripts` that includes this rule instead of adding it directly.**\n+**Note: If you're using Create React App, please use `react-scripts` >= 3 instead of adding it directly.**\n \n Assuming you already have ESLint installed, run:"
    },
    {
      "message": "add tooltip to interaction name in devtools profiler sidebar",
      "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/Profiler/SidebarInteractions.js b/packages/react-devtools-shared/src/devtools/views/Profiler/SidebarInteractions.js\nindex 6e9819291649..21787d5fb1f5 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Profiler/SidebarInteractions.js\n+++ b/packages/react-devtools-shared/src/devtools/views/Profiler/SidebarInteractions.js\n@@ -86,7 +86,9 @@ export default function SidebarInteractions(_: Props) {\n   return (\n     <Fragment>\n       <div className={styles.Toolbar}>\n-        <div className={styles.Name}>{interaction.name}</div>\n+        <div className={styles.Name} title={interaction.name}>\n+          {interaction.name}\n+        </div>\n       </div>\n       <div className={styles.Content}>\n         <div className={styles.Commits}>Commits:</div>"
    },
    {
      "message": "fix for the standalone devtools not responding to clicks.",
      "diff": "diff --git a/packages/react-devtools-shared/src/devtools/views/DevTools.css b/packages/react-devtools-shared/src/devtools/views/DevTools.css\nindex efc59b78dba6..dd6b0d81e78b 100644\n--- a/packages/react-devtools-shared/src/devtools/views/DevTools.css\n+++ b/packages/react-devtools-shared/src/devtools/views/DevTools.css\n@@ -29,6 +29,7 @@\n .TabContent {\n   flex: 1 1 100%;\n   overflow: auto;\n+  -webkit-app-region: no-drag;\n }\n \n .DevToolsVersion {"
    },
    {
      "message": "make devtools check document.contenttype before injecting",
      "diff": "diff --git a/packages/react-devtools-extensions/src/injectGlobalHook.js b/packages/react-devtools-extensions/src/injectGlobalHook.js\nindex ea41a6c9688f..dd38c8ce1b58 100644\n--- a/packages/react-devtools-extensions/src/injectGlobalHook.js\n+++ b/packages/react-devtools-extensions/src/injectGlobalHook.js\n@@ -86,8 +86,14 @@ if (sessionStorageGetItem(SESSION_STORAGE_RELOAD_AND_PROFILE_KEY) === 'true') {\n   injectCode(rendererCode);\n }\n \n-// Inject a `__REACT_DEVTOOLS_GLOBAL_HOOK__` global so that React can detect that the\n-// devtools are installed (and skip its suggestion to install the devtools).\n-injectCode(\n-  ';(' + installHook.toString() + '(window))' + saveNativeValues + detectReact,\n-);\n+// Inject a __REACT_DEVTOOLS_GLOBAL_HOOK__ global for React to interact with.\n+// Only do this for HTML documents though, to avoid e.g. breaking syntax highlighting for XML docs.\n+if (document.contentType === 'text/html') {\n+  injectCode(\n+    ';(' +\n+      installHook.toString() +\n+      '(window))' +\n+      saveNativeValues +\n+      detectReact,\n+  );\n+}"
    },
    {
      "message": "fix show correct displayname with forwardref in dev tools",
      "diff": "diff --git a/packages/react-devtools-shared/src/backend/renderer.js b/packages/react-devtools-shared/src/backend/renderer.js\nindex 90d7958fbad7..f62255579054 100644\n--- a/packages/react-devtools-shared/src/backend/renderer.js\n+++ b/packages/react-devtools-shared/src/backend/renderer.js\n@@ -347,7 +347,7 @@ export function getInternalReactConstants(\n \n   // NOTICE Keep in sync with shouldFilterFiber() and other get*ForFiber methods\n   function getDisplayNameForFiber(fiber: Fiber): string | null {\n-    const {elementType, type, tag} = fiber;\n+    const {type, tag} = fiber;\n \n     let resolvedType = type;\n     if (typeof type === 'object' && type !== null) {\n@@ -364,8 +364,10 @@ export function getInternalReactConstants(\n       case IndeterminateComponent:\n         return getDisplayName(resolvedType);\n       case ForwardRef:\n+        // Mirror https://github.com/facebook/react/blob/7c21bf72ace77094fd1910cc350a548287ef8350/packages/shared/getComponentName.js#L27-L37\n         return (\n-          resolvedType.displayName || getDisplayName(resolvedType, 'Anonymous')\n+          (type && type.displayName) ||\n+          getDisplayName(resolvedType, 'Anonymous')\n         );\n       case HostRoot:\n         return null;\n@@ -377,11 +379,7 @@ export function getInternalReactConstants(\n         return null;\n       case MemoComponent:\n       case SimpleMemoComponent:\n-        if (elementType.displayName) {\n-          return elementType.displayName;\n-        } else {\n-          return getDisplayName(resolvedType, 'Anonymous');\n-        }\n+        return getDisplayName(resolvedType, 'Anonymous');\n       case SuspenseComponent:\n         return 'Suspense';\n       case SuspenseListComponent:"
    },
    {
      "message": "fix release script to ignore empty package folders",
      "diff": "diff --git a/scripts/release/utils.js b/scripts/release/utils.js\nindex 8b73017b65ff..972d311d3016 100644\n--- a/scripts/release/utils.js\n+++ b/scripts/release/utils.js\n@@ -128,10 +128,17 @@ const getPublicPackages = () => {\n \n     const packagePath = join(packagesRoot, dir, 'package.json');\n \n-    if (dir.charAt(0) !== '.' && statSync(packagePath).isFile()) {\n-      const packageJSON = JSON.parse(readFileSync(packagePath));\n-\n-      return packageJSON.private !== true;\n+    if (dir.charAt(0) !== '.') {\n+      let stat;\n+      try {\n+        stat = statSync(packagePath);\n+      } catch (err) {\n+        return false;\n+      }\n+      if (stat.isFile()) {\n+        const packageJSON = JSON.parse(readFileSync(packagePath));\n+        return packageJSON.private !== true;\n+      }\n     }\n \n     return false;"
    },
    {
      "message": "avoid bundling in ponyfill for object.assign in use-subscription package",
      "diff": "diff --git a/packages/use-subscription/package.json b/packages/use-subscription/package.json\nindex 1ed01ae0329f..3220c1e122cf 100644\n--- a/packages/use-subscription/package.json\n+++ b/packages/use-subscription/package.json\n@@ -14,6 +14,9 @@\n     \"index.js\",\n     \"cjs/\"\n   ],\n+  \"dependencies\": {\n+    \"object-assign\": \"^4.1.1\"\n+  },\n   \"peerDependencies\": {\n     \"react\": \"^16.8.0\"\n   },"
    },
    {
      "message": "ensure props on scope query function is always object",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberScope.js b/packages/react-reconciler/src/ReactFiberScope.js\nindex 1b33b78cadfa..34eb261f24d2 100644\n--- a/packages/react-reconciler/src/ReactFiberScope.js\n+++ b/packages/react-reconciler/src/ReactFiberScope.js\n@@ -31,6 +31,8 @@ function getSuspenseFallbackChild(fiber: Fiber): Fiber | null {\n   return ((((fiber.child: any): Fiber).sibling: any): Fiber).child;\n }\n \n+const emptyObject = {};\n+\n function collectScopedNodes(\n   node: Fiber,\n   fn: (type: string | Object, props: Object) => boolean,\n@@ -39,7 +41,7 @@ function collectScopedNodes(\n   if (enableScopeAPI) {\n     if (node.tag === HostComponent) {\n       const {type, memoizedProps} = node;\n-      if (fn(type, memoizedProps) === true) {\n+      if (fn(type, memoizedProps || emptyObject) === true) {\n         scopedNodes.push(getPublicInstance(node.stateNode));\n       }\n     }"
    },
    {
      "message": "remove unused canonical check in fiber host component",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactNativeFiberHostComponent.js b/packages/react-native-renderer/src/ReactNativeFiberHostComponent.js\nindex 3b3b901f95af..b49b31008f74 100644\n--- a/packages/react-native-renderer/src/ReactNativeFiberHostComponent.js\n+++ b/packages/react-native-renderer/src/ReactNativeFiberHostComponent.js\n@@ -83,15 +83,6 @@ class ReactNativeFiberHostComponent {\n       relativeNode = relativeToNativeNode;\n     } else if (relativeToNativeNode._nativeTag) {\n       relativeNode = relativeToNativeNode._nativeTag;\n-    } else if (\n-      /* $FlowFixMe canonical doesn't exist on the node.\n-       I think this branch is dead and will remove it in a followup */\n-      relativeToNativeNode.canonical &&\n-      relativeToNativeNode.canonical._nativeTag\n-    ) {\n-      /* $FlowFixMe canonical doesn't exist on the node.\n-       I think this branch is dead and will remove it in a followup */\n-      relativeNode = relativeToNativeNode.canonical._nativeTag;\n     }\n \n     if (relativeNode == null) {"
    },
    {
      "message": "allow suspense mismatch on the client to silently proceed",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactServerRenderingHydration-test.js b/packages/react-dom/src/__tests__/ReactServerRenderingHydration-test.js\nindex 33e56bba260e..1707f9f1dbdc 100644\n--- a/packages/react-dom/src/__tests__/ReactServerRenderingHydration-test.js\n+++ b/packages/react-dom/src/__tests__/ReactServerRenderingHydration-test.js\n@@ -659,4 +659,15 @@ describe('ReactDOMServerHydration', () => {\n \n     document.body.removeChild(parentContainer);\n   });\n+\n+  it('regression test: Suspense + hydration in legacy mode ', () => {\n+    const element = document.createElement('div');\n+    element.innerHTML = '<div>Hello World</div>';\n+    ReactDOM.hydrate(\n+      <React.Suspense>\n+        <div>Hello World</div>\n+      </React.Suspense>,\n+      element,\n+    );\n+  });\n });\ndiff --git a/packages/react-reconciler/src/ReactFiberHydrationContext.js b/packages/react-reconciler/src/ReactFiberHydrationContext.js\nindex 018a80886e6e..61f007daca25 100644\n--- a/packages/react-reconciler/src/ReactFiberHydrationContext.js\n+++ b/packages/react-reconciler/src/ReactFiberHydrationContext.js\n@@ -404,11 +404,10 @@ function skipPastDehydratedSuspenseInstance(\n   let suspenseState: null | SuspenseState = fiber.memoizedState;\n   let suspenseInstance: null | SuspenseInstance =\n     suspenseState !== null ? suspenseState.dehydrated : null;\n-  invariant(\n-    suspenseInstance,\n-    'Expected to have a hydrated suspense instance. ' +\n-      'This error is likely caused by a bug in React. Please file an issue.',\n-  );\n+  if (suspenseInstance === null) {\n+    // This Suspense boundary was hydrated without a match.\n+    return nextHydratableInstance;\n+  }\n   return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n }"
    },
    {
      "message": "fix typo inteval -> interval & continutation -> continuation",
      "diff": "diff --git a/packages/scheduler/src/__tests__/SchedulerBrowser-test.internal.js b/packages/scheduler/src/__tests__/SchedulerBrowser-test.internal.js\nindex 657e59762063..f7f56f31f7aa 100644\n--- a/packages/scheduler/src/__tests__/SchedulerBrowser-test.internal.js\n+++ b/packages/scheduler/src/__tests__/SchedulerBrowser-test.internal.js\n@@ -312,7 +312,7 @@ describe('SchedulerBrowser', () => {\n       runtime.assertLog(['Message Event', 'B']);\n     });\n \n-    it('adjusts frame rate by measuring inteval between rAF events', () => {\n+    it('adjusts frame rate by measuring interval between rAF events', () => {\n       runtime.setHardwareFrameRate(60);\n \n       scheduleCallback(NormalPriority, () => runtime.log('Tick'));\n@@ -371,7 +371,7 @@ describe('SchedulerBrowser', () => {\n       runtime.assertLog(['Message Event', 'Task']);\n     });\n \n-    it('task with continutation', () => {\n+    it('task with continuation', () => {\n       scheduleCallback(NormalPriority, () => {\n         runtime.log('Task');\n         while (!Scheduler.unstable_shouldYield()) {"
    },
    {
      "message": "remove unnecessary interaction tracing ping wrapper",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberThrow.js b/packages/react-reconciler/src/ReactFiberThrow.js\nindex b739f4056c45..5806f63e345b 100644\n--- a/packages/react-reconciler/src/ReactFiberThrow.js\n+++ b/packages/react-reconciler/src/ReactFiberThrow.js\n@@ -15,7 +15,6 @@ import type {Update} from './ReactUpdateQueue';\n import type {Thenable} from './ReactFiberWorkLoop';\n import type {SuspenseContext} from './ReactFiberSuspenseContext';\n \n-import {unstable_wrap as Schedule_tracing_wrap} from 'scheduler/tracing';\n import getComponentName from 'shared/getComponentName';\n import warningWithoutStack from 'shared/warningWithoutStack';\n import {\n@@ -31,7 +30,6 @@ import {\n   ShouldCapture,\n   LifecycleEffectMask,\n } from 'shared/ReactSideEffectTags';\n-import {enableSchedulerTracing} from 'shared/ReactFeatureFlags';\n import {NoMode, BatchedMode} from './ReactTypeOfMode';\n import {shouldCaptureSuspense} from './ReactFiberSuspenseComponent';\n \n@@ -173,11 +171,6 @@ function attachPingListener(\n       thenable,\n       renderExpirationTime,\n     );\n-    if (enableSchedulerTracing) {\n-      if (thenable.__reactDoNotTraceInteractions !== true) {\n-        ping = Schedule_tracing_wrap(ping);\n-      }\n-    }\n     thenable.then(ping, ping);\n   }\n }"
    },
    {
      "message": "inspect classcomponent.render instead of constructor, fixes #16749",
      "diff": "diff --git a/packages/react-devtools-extensions/src/utils.js b/packages/react-devtools-extensions/src/utils.js\nindex c8d4003115a8..922b1717563b 100644\n--- a/packages/react-devtools-extensions/src/utils.js\n+++ b/packages/react-devtools-extensions/src/utils.js\n@@ -12,10 +12,21 @@ export function createViewElementSource(bridge: Bridge, store: Store) {\n \n       setTimeout(() => {\n         // Ask Chrome to display the location of the component function,\n+        // or a render method if it is a Class (ideally Class instance, not type)\n         // assuming the renderer found one.\n         chrome.devtools.inspectedWindow.eval(`\n           if (window.$type != null) {\n-            inspect(window.$type);\n+            if (\n+              window.$type &&\n+              window.$type.prototype &&\n+              window.$type.prototype.isReactComponent\n+            ) {\n+              // inspect Component.render, not constructor\n+              inspect(window.$type.prototype.render);\n+            } else {\n+              // inspect Functional Component\n+              inspect(window.$type);\n+            }\n           }\n         `);\n       }, 100);"
    },
    {
      "message": "ensure screen reader virtual clicks support preventdefault",
      "diff": "diff --git a/packages/react-events/src/dom/Press.js b/packages/react-events/src/dom/Press.js\nindex ce8b745254c6..267240776af6 100644\n--- a/packages/react-events/src/dom/Press.js\n+++ b/packages/react-events/src/dom/Press.js\n@@ -635,6 +635,11 @@ const pressResponderImpl = {\n         if (isFunction(onPress) && isScreenReaderVirtualClick(nativeEvent)) {\n           state.pointerType = 'keyboard';\n           state.pressTarget = event.responderTarget;\n+          const preventDefault = props.preventDefault;\n+\n+          if (preventDefault !== false) {\n+            nativeEvent.preventDefault();\n+          }\n           dispatchEvent(event, onPress, context, state, 'press', DiscreteEvent);\n         }\n         break;\ndiff --git a/packages/react-events/src/dom/__tests__/Press-test.internal.js b/packages/react-events/src/dom/__tests__/Press-test.internal.js\nindex 159a039bbc69..5e155f5ad839 100644\n--- a/packages/react-events/src/dom/__tests__/Press-test.internal.js\n+++ b/packages/react-events/src/dom/__tests__/Press-test.internal.js\n@@ -423,7 +423,9 @@ describe.each(environmentTable)('Press responder', hasPointerEvents => {\n \n     it('is called once after virtual screen reader \"click\" event', () => {\n       const target = createEventTarget(ref.current);\n-      target.virtualclick();\n+      const preventDefault = jest.fn();\n+      target.virtualclick({preventDefault});\n+      expect(preventDefault).toBeCalled();\n       expect(onPress).toHaveBeenCalledTimes(1);\n       expect(onPress).toHaveBeenCalledWith(\n         expect.objectContaining({"
    },
    {
      "message": "add custom devtools flow definitions to shared flowconfig",
      "diff": "diff --git a/scripts/flow/config/flowconfig b/scripts/flow/config/flowconfig\nindex 0e19ddcc146a..99cd2da34e0a 100644\n--- a/scripts/flow/config/flowconfig\n+++ b/scripts/flow/config/flowconfig\n@@ -21,6 +21,7 @@\n [libs]\n ../../../node_modules/fbjs/flow/lib/dev.js\n ../environment.js\n+../react-devtools.js\n ../react-native-host-hooks.js\n \n [lints]"
    },
    {
      "message": "disable @babel/plugin-transform-block-scoping \"throwifclosurerequired\" option for tests",
      "diff": "diff --git a/scripts/jest/preprocessor.js b/scripts/jest/preprocessor.js\nindex 44642ec91888..b04daaee886b 100644\n--- a/scripts/jest/preprocessor.js\n+++ b/scripts/jest/preprocessor.js\n@@ -40,6 +40,10 @@ const babelOptions = {\n     require.resolve('@babel/plugin-transform-react-jsx-source'),\n \n     require.resolve('../babel/transform-prevent-infinite-loops'),\n+\n+    // This optimization is important for extremely performance-sensitive (e.g. React source).\n+    // It's okay to disable it for tests.\n+    [require.resolve('@babel/plugin-transform-block-scoping'), {throwIfClosureRequired: false}],\n   ],\n   retainLines: true,\n };"
    },
    {
      "message": "add build-info.json to package files array for non-private dt packages",
      "diff": "diff --git a/packages/react-devtools-core/package.json b/packages/react-devtools-core/package.json\nindex 30b606d7285e..f34c8ea23092 100644\n--- a/packages/react-devtools-core/package.json\n+++ b/packages/react-devtools-core/package.json\n@@ -11,6 +11,7 @@\n   \"files\": [\n     \"dist\",\n     \"backend.js\",\n+    \"build-info.json\",\n     \"standalone.js\"\n   ],\n   \"scripts\": {\ndiff --git a/packages/react-devtools-inline/package.json b/packages/react-devtools-inline/package.json\nindex dee1a11dc260..6204f647c0f3 100644\n--- a/packages/react-devtools-inline/package.json\n+++ b/packages/react-devtools-inline/package.json\n@@ -11,6 +11,7 @@\n   \"files\": [\n     \"dist\",\n     \"backend.js\",\n+    \"build-info.json\",\n     \"frontend.js\"\n   ],\n   \"scripts\": {\ndiff --git a/packages/react-devtools/package.json b/packages/react-devtools/package.json\nindex 2ce188a47f7b..d141a2ebb14d 100644\n--- a/packages/react-devtools/package.json\n+++ b/packages/react-devtools/package.json\n@@ -12,6 +12,7 @@\n   },\n   \"files\": [\n     \"bin.js\",\n+    \"build-info.json\",\n     \"app.html\",\n     \"app.js\",\n     \"index.js\","
    },
    {
      "message": "update react-devtools-inline to embed react-debug-tools since it's not published yet",
      "diff": "diff --git a/packages/react-devtools-inline/webpack.config.js b/packages/react-devtools-inline/webpack.config.js\nindex a3214164d7bc..bd1966683b92 100644\n--- a/packages/react-devtools-inline/webpack.config.js\n+++ b/packages/react-devtools-inline/webpack.config.js\n@@ -31,7 +31,8 @@ module.exports = {\n   },\n   externals: {\n     react: 'react',\n-    'react-debug-tools': 'react-debug-tools',\n+    // TODO: Once this package is published, remove the external\n+    // 'react-debug-tools': 'react-debug-tools',\n     'react-dom': 'react-dom',\n     'react-is': 'react-is',\n     scheduler: 'scheduler',"
    },
    {
      "message": "suppress known/expected warnings and errors in local dev shell",
      "diff": "diff --git a/shells/dev/app/console.js b/shells/dev/app/console.js\nnew file mode 100644\nindex 000000000000..9e5f01401aa3\n--- /dev/null\n+++ b/shells/dev/app/console.js\n@@ -0,0 +1,27 @@\n+// @flow\n+\n+function ignoreStrings(\n+  methodName: string,\n+  stringsToIgnore: Array<string>\n+): void {\n+  const originalMethod = console[methodName];\n+  console[methodName] = (...args) => {\n+    const maybeString = args[0];\n+    if (typeof maybeString === 'string') {\n+      for (let i = 0; i < stringsToIgnore.length; i++) {\n+        if (maybeString.startsWith(stringsToIgnore[i])) {\n+          return;\n+        }\n+      }\n+    }\n+    originalMethod(...args);\n+  };\n+}\n+\n+export function ignoreErrors(errorsToIgnore: Array<string>): void {\n+  ignoreStrings('error', errorsToIgnore);\n+}\n+\n+export function ignoreWarnings(warningsToIgnore: Array<string>): void {\n+  ignoreStrings('warn', warningsToIgnore);\n+}\ndiff --git a/shells/dev/app/index.js b/shells/dev/app/index.js\nindex b0609a877ca2..4115c1c4807f 100644\n--- a/shells/dev/app/index.js\n+++ b/shells/dev/app/index.js\n@@ -19,9 +19,20 @@ import ReactNativeWeb from './ReactNativeWeb';\n import ToDoList from './ToDoList';\n import Toggle from './Toggle';\n import SuspenseTree from './SuspenseTree';\n+import { ignoreErrors, ignoreWarnings } from './console';\n \n import './styles.css';\n \n+// DevTools intentionally tests compatibility with certain legacy APIs.\n+// Suppress their error messages in the local dev shell,\n+// because they might mask other more serious error messages.\n+ignoreErrors([\n+  'Warning: Legacy context API',\n+  'Warning: Unsafe lifecycle methods',\n+  'Warning: %s is deprecated in StrictMode.', // findDOMNode\n+]);\n+ignoreWarnings(['Warning: componentWillReceiveProps is deprecated']);\n+\n const roots = [];\n \n function mountHelper(App) {"
    },
    {
      "message": "ensure we check for bad polyfill when creating responders",
      "diff": "diff --git a/packages/shared/createEventResponder.js b/packages/shared/createEventResponder.js\nindex 9dfe11cfb2f6..cd21bfc9b082 100644\n--- a/packages/shared/createEventResponder.js\n+++ b/packages/shared/createEventResponder.js\n@@ -8,6 +8,7 @@\n \n import type {ReactEventResponder} from 'shared/ReactTypes';\n import {REACT_RESPONDER_TYPE} from 'shared/ReactSymbols';\n+import {hasBadMapPolyfill} from './hasBadMapPolyfill';\n \n export default function createEventResponder<E, C>(\n   displayName: string,\n@@ -35,7 +36,10 @@ export default function createEventResponder<E, C>(\n     rootEventTypes: rootEventTypes || null,\n     targetEventTypes: targetEventTypes || null,\n   };\n-  if (__DEV__) {\n+  // We use responder as a Map key later on. When we have a bad\n+  // polyfill, then we can't use it as a key as the polyfill tries\n+  // to add a property to the object.\n+  if (__DEV__ && !hasBadMapPolyfill) {\n     Object.freeze(eventResponder);\n   }\n   return eventResponder;"
    },
    {
      "message": "re-enabled packages backend build to be production mode",
      "diff": "diff --git a/packages/react-devtools-core/webpack.backend.js b/packages/react-devtools-core/webpack.backend.js\nindex 3103abdd6bcf..79e633f7433b 100644\n--- a/packages/react-devtools-core/webpack.backend.js\n+++ b/packages/react-devtools-core/webpack.backend.js\n@@ -14,7 +14,7 @@ const GITHUB_URL = getGitHubURL();\n const DEVTOOLS_VERSION = getVersionString();\n \n module.exports = {\n-  mode: 'development', // TODO TESTING __DEV__ ? 'development' : 'production',\n+  mode: __DEV__ ? 'development' : 'production',\n   devtool: __DEV__ ? 'cheap-module-eval-source-map' : false,\n   entry: {\n     backend: './src/backend.js',"
    },
    {
      "message": "make style editor inputs more obvious resemble inputs",
      "diff": "diff --git a/src/devtools/views/Components/NativeStyleEditor/AutoSizeInput.js b/src/devtools/views/Components/NativeStyleEditor/AutoSizeInput.js\nindex f2eb4f4cb6b0..b9fc9b6e0b57 100644\n--- a/src/devtools/views/Components/NativeStyleEditor/AutoSizeInput.js\n+++ b/src/devtools/views/Components/NativeStyleEditor/AutoSizeInput.js\n@@ -68,8 +68,12 @@ export default function AutoSizeInput({\n       return;\n     }\n \n+    // Adding an extra pixel avoids a slight horizontal scroll when changing text selection/cursor.\n+    // Not sure why this is, but the old DevTools did a similar thing.\n+    const targetWidth = Math.ceil(scrollWidth) + 1;\n+\n     if (inputRef.current !== null) {\n-      inputRef.current.style.width = `${scrollWidth}px`;\n+      inputRef.current.style.width = `${targetWidth}px`;\n     }\n   }, [value]);\n \ndiff --git a/src/devtools/views/Components/NativeStyleEditor/StyleEditor.css b/src/devtools/views/Components/NativeStyleEditor/StyleEditor.css\nindex a097665581b7..bbaaf16ea582 100644\n--- a/src/devtools/views/Components/NativeStyleEditor/StyleEditor.css\n+++ b/src/devtools/views/Components/NativeStyleEditor/StyleEditor.css\n@@ -42,6 +42,12 @@\n \n .Input {\n   flex: 0 1 auto;\n+  padding: 1px;\n+  box-shadow: 0px 1px 3px transparent;\n+}\n+.Input:focus {\n+  color: var(--color-text);\n+  box-shadow: 0px 1px 3px var(--color-shadow);\n }\n \n .Empty {"
    },
    {
      "message": "inject reactdebugcurrentframe into devtools so it can append component stacks to warnings in dev mode",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberReconciler.js b/packages/react-reconciler/src/ReactFiberReconciler.js\nindex be4bab8089bf..3202f36c1a84 100644\n--- a/packages/react-reconciler/src/ReactFiberReconciler.js\n+++ b/packages/react-reconciler/src/ReactFiberReconciler.js\n@@ -473,7 +473,7 @@ if (__DEV__) {\n \n export function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n   const {findFiberByHostInstance} = devToolsConfig;\n-  const {ReactCurrentDispatcher} = ReactSharedInternals;\n+  const {ReactCurrentDispatcher, ReactDebugCurrentFrame} = ReactSharedInternals;\n \n   return injectInternals({\n     ...devToolsConfig,\n@@ -501,5 +501,7 @@ export function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n     scheduleRefresh: __DEV__ ? scheduleRefresh : null,\n     scheduleRoot: __DEV__ ? scheduleRoot : null,\n     setRefreshHandler: __DEV__ ? setRefreshHandler : null,\n+    // Enables DevTools to append component stack to error messages in DEV mode.\n+    debugCurrentFrame: ReactDebugCurrentFrame,\n   });\n }"
    },
    {
      "message": "use map instead of object as map in reactnativecomponenttree",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactNativeComponentTree.js b/packages/react-native-renderer/src/ReactNativeComponentTree.js\nindex 9f580d72e74f..542ab9b22efe 100644\n--- a/packages/react-native-renderer/src/ReactNativeComponentTree.js\n+++ b/packages/react-native-renderer/src/ReactNativeComponentTree.js\n@@ -7,20 +7,20 @@\n \n import invariant from 'shared/invariant';\n \n-const instanceCache = {};\n-const instanceProps = {};\n+const instanceCache = new Map();\n+const instanceProps = new Map();\n \n export function precacheFiberNode(hostInst, tag) {\n-  instanceCache[tag] = hostInst;\n+  instanceCache.set(tag, hostInst);\n }\n \n export function uncacheFiberNode(tag) {\n-  delete instanceCache[tag];\n-  delete instanceProps[tag];\n+  instanceCache.delete(tag);\n+  instanceProps.delete(tag);\n }\n \n function getInstanceFromTag(tag) {\n-  return instanceCache[tag] || null;\n+  return instanceCache.get(tag) || null;\n }\n \n function getTagFromInstance(inst) {\n@@ -39,9 +39,9 @@ export {\n };\n \n export function getFiberCurrentPropsFromNode(stateNode) {\n-  return instanceProps[stateNode._nativeTag] || null;\n+  return instanceProps.get(stateNode._nativeTag) || null;\n }\n \n export function updateFiberProps(tag, props) {\n-  instanceProps[tag] = props;\n+  instanceProps.set(tag, props);\n }"
    },
    {
      "message": "rename statelesscomponent to functioncomponent in react-is/readme.md",
      "diff": "diff --git a/packages/react-is/README.md b/packages/react-is/README.md\nindex 9adeee1d9aad..d25597761817 100644\n--- a/packages/react-is/README.md\n+++ b/packages/react-is/README.md\n@@ -26,7 +26,7 @@ class ClassComponent extends React.Component {\n   }\n }\n \n-const StatelessComponent = () => React.createElement(\"div\");\n+const FunctionComponent = () => React.createElement(\"div\");\n \n const ForwardRefComponent = React.forwardRef((props, ref) =>\n   React.createElement(Component, { forwardedRef: ref, ...props })\n@@ -36,7 +36,7 @@ const Context = React.createContext(false);\n \n ReactIs.isValidElementType(\"div\"); // true\n ReactIs.isValidElementType(ClassComponent); // true\n-ReactIs.isValidElementType(StatelessComponent); // true\n+ReactIs.isValidElementType(FunctionComponent); // true\n ReactIs.isValidElementType(ForwardRefComponent); // true\n ReactIs.isValidElementType(Context.Provider); // true\n ReactIs.isValidElementType(Context.Consumer); // true"
    },
    {
      "message": "fall back to map/set if weak equivalents are not available",
      "diff": "diff --git a/packages/react-refresh/src/ReactFreshRuntime.js b/packages/react-refresh/src/ReactFreshRuntime.js\nindex 24f434702eb4..2ccfe7eece80 100644\n--- a/packages/react-refresh/src/ReactFreshRuntime.js\n+++ b/packages/react-refresh/src/ReactFreshRuntime.js\n@@ -21,14 +21,22 @@ type Signature = {|\n   getCustomHooks: () => Array<Function>,\n |};\n \n+// In old environments, we'll leak previous types after every edit.\n+const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n+const PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n+\n // We never remove these associations.\n // It's OK to reference families, but use WeakMap/Set for types.\n const allFamiliesByID: Map<string, Family> = new Map();\n-const allTypes: WeakSet<any> = new WeakSet();\n-const allSignaturesByType: WeakMap<any, Signature> = new WeakMap();\n+// $FlowIssue\n+const allTypes: WeakSet<any> | Set<any> = new PossiblyWeakSet();\n+const allSignaturesByType: // $FlowIssue\n+WeakMap<any, Signature> | Map<any, Signature> = new PossiblyWeakMap();\n // This WeakMap is read by React, so we only put families\n // that have actually been edited here. This keeps checks fast.\n-const familiesByType: WeakMap<any, Family> = new WeakMap();\n+// $FlowIssue\n+const familiesByType: // $FlowIssue\n+WeakMap<any, Family> | Map<any, Family> = new PossiblyWeakMap();\n \n // This is cleared on every prepareUpdate() call.\n // It is an array of [Family, NextType] tuples."
    },
    {
      "message": "re-add plugin-transform-react-jsx-source plugin for tests",
      "diff": "diff --git a/babel.config.js b/babel.config.js\nindex 3ecbb2d4cced..1d705076ff9f 100644\n--- a/babel.config.js\n+++ b/babel.config.js\n@@ -29,7 +29,7 @@ module.exports = api => {\n     ['@babel/plugin-transform-flow-strip-types'],\n     ['@babel/plugin-proposal-class-properties', { loose: false }],\n   ];\n-  if (process.env.NODE_ENV === 'development') {\n+  if (process.env.NODE_ENV !== 'production') {\n     plugins.push(['@babel/plugin-transform-react-jsx-source']);\n   }\n   return {"
    },
    {
      "message": "rename reactfeatureflags to remove the `.fb` suffix.",
      "diff": "diff --git a/scripts/rollup/shims/react-native/ReactFeatureFlags.fb.js b/scripts/rollup/shims/react-native/ReactFeatureFlags.js\nsimilarity index 100%\nrename from scripts/rollup/shims/react-native/ReactFeatureFlags.fb.js\nrename to scripts/rollup/shims/react-native/ReactFeatureFlags.js"
    },
    {
      "message": "remove version_name from firefox webextension manifest",
      "diff": "diff --git a/shells/browser/shared/build.js b/shells/browser/shared/build.js\nindex 8cc9de1c3a0c..52744b484a14 100644\n--- a/shells/browser/shared/build.js\n+++ b/shells/browser/shared/build.js\n@@ -63,7 +63,9 @@ const build = async (tempPath, manifestPath) => {\n \n   const manifest = JSON.parse(readFileSync(copiedManifestPath).toString());\n   manifest.description += `\\n\\nCreated from revision ${commit} (${new Date().toLocaleDateString()})`;\n-  manifest.version_name = `${commit} (${new Date().toLocaleDateString()})`;\n+  if (tempPath.includes('chrome')) {\n+    manifest.version_name = `${commit} (${new Date().toLocaleDateString()})`;\n+  }\n   writeFileSync(copiedManifestPath, JSON.stringify(manifest, null, 2));\n \n   // Pack the extension"
    },
    {
      "message": "disable guide/group highlight in owners tree  mode",
      "diff": "diff --git a/src/devtools/views/Components/Guideline.js b/src/devtools/views/Components/Guideline.js\nindex f9e9d7407fec..9fbba7c2bb00 100644\n--- a/src/devtools/views/Components/Guideline.js\n+++ b/src/devtools/views/Components/Guideline.js\n@@ -19,7 +19,7 @@ export default function Guideline(_: {||}) {\n   const { lineHeight } = useContext(SettingsContext);\n   const store = useContext(StoreContext);\n   const treeFocused = useContext(TreeFocusedContext);\n-  const { selectedElementID } = useContext(TreeStateContext);\n+  const { ownerID, selectedElementID } = useContext(TreeStateContext);\n \n   const subscription = useMemo(\n     () => ({\n@@ -75,6 +75,10 @@ export default function Guideline(_: {||}) {\n   );\n   const data = useSubscription<Data | null, Store>(subscription);\n \n+  if (ownerID !== null) {\n+    return null;\n+  }\n+\n   if (data === null) {\n     return null;\n   }"
    },
    {
      "message": "fix potential rte caused by setting  profiling data while profiling is in progress",
      "diff": "diff --git a/src/__tests__/profilerStore-test.js b/src/__tests__/profilerStore-test.js\nindex 08f64b344b15..f6ffcfe78369 100644\n--- a/src/__tests__/profilerStore-test.js\n+++ b/src/__tests__/profilerStore-test.js\n@@ -54,4 +54,21 @@ describe('ProfilerStore', () => {\n \n     expect(store.profilerStore.getDataForRoot(rootB)).not.toBeNull();\n   });\n+\n+  it('should not allow new/saved profiling data to be set while profiling is in progress', () => {\n+    utils.act(() => store.profilerStore.startProfiling());\n+    const fauxProfilingData = {\n+      dataForRoots: new Map(),\n+    };\n+    spyOn(console, 'warn');\n+    store.profilerStore.profilingData = fauxProfilingData;\n+    expect(store.profilerStore.profilingData).not.toBe(fauxProfilingData);\n+    expect(console.warn).toHaveBeenCalledTimes(1);\n+    expect(console.warn).toHaveBeenCalledWith(\n+      'Profiling data cannot be updated while profiling is in progress.'\n+    );\n+    utils.act(() => store.profilerStore.stopProfiling());\n+    store.profilerStore.profilingData = fauxProfilingData;\n+    expect(store.profilerStore.profilingData).toBe(fauxProfilingData);\n+  });\n });\ndiff --git a/src/devtools/ProfilerStore.js b/src/devtools/ProfilerStore.js\nindex 30e193460026..f4901287ea15 100644\n--- a/src/devtools/ProfilerStore.js\n+++ b/src/devtools/ProfilerStore.js\n@@ -144,6 +144,13 @@ export default class ProfilerStore extends EventEmitter {\n     return this._dataFrontend;\n   }\n   set profilingData(value: ProfilingDataFrontend | null): void {\n+    if (this._isProfiling) {\n+      console.warn(\n+        'Profiling data cannot be updated while profiling is in progress.'\n+      );\n+      return;\n+    }\n+\n     this._dataBackends.splice(0);\n     this._dataFrontend = value;\n     this._initialRendererIDs.clear();"
    },
    {
      "message": "fix undefined chart node when switching commits in profiler",
      "diff": "diff --git a/src/devtools/views/Profiler/CommitFlamegraph.js b/src/devtools/views/Profiler/CommitFlamegraph.js\nindex 982722415283..091fd96b6187 100644\n--- a/src/devtools/views/Profiler/CommitFlamegraph.js\n+++ b/src/devtools/views/Profiler/CommitFlamegraph.js\n@@ -123,9 +123,13 @@ function CommitFlamegraph({\n   const selectedChartNode = useMemo(() => {\n     let chartNode = null;\n     if (selectedFiberID !== null) {\n-      chartNode = ((chartData.rows[selectedChartNodeIndex].find(\n+      const foundChartNode = chartData.rows[selectedChartNodeIndex].find(\n         chartNode => chartNode.id === selectedFiberID\n-      ): any): ChartNode);\n+      );\n+\n+      if (foundChartNode !== undefined) {\n+        chartNode = foundChartNode;\n+      }\n     }\n     return chartNode;\n   }, [chartData, selectedFiberID, selectedChartNodeIndex]);"
    },
    {
      "message": "fix flow failure on circleci due to the number of workers",
      "diff": "diff --git a/.flowconfig b/.flowconfig\nindex c2f42c17c7c9..d613bab513a3 100644\n--- a/.flowconfig\n+++ b/.flowconfig\n@@ -25,6 +25,7 @@ shells/dev/build/*\n [lints]\n \n [options]\n+server.max_workers=4\n esproposal.class_instance_fields=enable\n suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowFixMe\n suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowIssue"
    },
    {
      "message": "remove fiber type properties we don't use in devtools",
      "diff": "diff --git a/src/backend/types.js b/src/backend/types.js\nindex 705d2bc7ca93..4a2c5372c9f5 100644\n--- a/src/backend/types.js\n+++ b/src/backend/types.js\n@@ -8,7 +8,6 @@ type BundleType =\n   | 1; // DEV\n \n export type WorkTag = number;\n-export type TypeOfMode = number;\n export type SideEffectTag = number;\n export type ExpirationTime = number;\n export type RefObject = {|\n@@ -30,7 +29,9 @@ export type HookType =\n   | 'useImperativeHandle'\n   | 'useDebugValue';\n \n-// Copied modified from https://github.com/facebook/react/blob/v16.9.0-alpha.0/packages/react-reconciler/src/ReactFiber.js\n+// The Fiber type is copied from React and should be kept in sync:\n+// https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiber.js\n+// The properties we don't use in DevTools are omitted.\n export type Fiber = {|\n   tag: WorkTag,\n \n@@ -53,41 +54,20 @@ export type Fiber = {|\n   pendingProps: any, // This type will be more specific once we overload the tag.\n   memoizedProps: any, // The props used to create the output.\n \n-  // updateQueue: UpdateQueue<any> | null,\n-\n   memoizedState: any,\n \n-  // contextDependencies: ContextDependencyList | null,\n-\n-  mode: TypeOfMode,\n-\n   effectTag: SideEffectTag,\n \n-  nextEffect: Fiber | null,\n-\n-  firstEffect: Fiber | null,\n-  lastEffect: Fiber | null,\n-\n-  expirationTime: ExpirationTime,\n-\n-  childExpirationTime: ExpirationTime,\n-\n   alternate: Fiber | null,\n \n   actualDuration?: number,\n \n   actualStartTime?: number,\n \n-  selfBaseDuration?: number,\n-\n   treeBaseDuration?: number,\n \n-  _debugID?: number,\n   _debugSource?: Source | null,\n   _debugOwner?: Fiber | null,\n-  _debugIsCurrentlyTiming?: boolean,\n-\n-  _debugHookTypes?: Array<HookType> | null,\n |};\n \n // TODO: If it's useful for the frontend to know which types of data an Element has"
    },
    {
      "message": "reverse direction of menu items within drop-down owners list",
      "diff": "diff --git a/src/devtools/views/Components/OwnersStack.js b/src/devtools/views/Components/OwnersStack.js\nindex 3e98b2e59442..e252c6c9af9d 100644\n--- a/src/devtools/views/Components/OwnersStack.js\n+++ b/src/devtools/views/Components/OwnersStack.js\n@@ -92,6 +92,20 @@ function ElementsDropdown({\n   const store = useContext(StoreContext);\n   const dispatch = useContext(TreeDispatcherContext);\n \n+  const menuItems = [];\n+  for (let index = ownerStack.length - 1; index >= 0; index--) {\n+    const id = ownerStack[index];\n+    menuItems.push(\n+      <MenuItem\n+        key={id}\n+        className={styles.Component}\n+        onSelect={() => dispatch({ type: 'SELECT_OWNER', payload: id })}\n+      >\n+        {((store.getElementByID(id): any): Element).displayName}\n+      </MenuItem>\n+    );\n+  }\n+\n   return (\n     <Menu>\n       <MenuButton className={styles.MenuButton}>\n@@ -101,17 +115,7 @@ function ElementsDropdown({\n           </span>\n         </Tooltip>\n       </MenuButton>\n-      <MenuList className={styles.Modal}>\n-        {ownerStack.map((id, index) => (\n-          <MenuItem\n-            key={id}\n-            className={styles.Component}\n-            onSelect={() => dispatch({ type: 'SELECT_OWNER', payload: id })}\n-          >\n-            {((store.getElementByID(id): any): Element).displayName}\n-          </MenuItem>\n-        ))}\n-      </MenuList>\n+      <MenuList className={styles.Modal}>{menuItems}</MenuList>\n     </Menu>\n   );\n }"
    },
    {
      "message": "give  `canusedom` with a possibility to be a constant",
      "diff": "diff --git a/packages/shared/ExecutionEnvironment.js b/packages/shared/ExecutionEnvironment.js\nindex 9554c8d6464c..2e7af6edd2d6 100644\n--- a/packages/shared/ExecutionEnvironment.js\n+++ b/packages/shared/ExecutionEnvironment.js\n@@ -9,6 +9,6 @@\n \n export const canUseDOM: boolean = !!(\n   typeof window !== 'undefined' &&\n-  window.document &&\n-  window.document.createElement\n+  typeof window.document !== 'undefined' &&\n+  typeof window.document.createElement !== 'undefined'\n );"
    },
    {
      "message": "keep track of root insertion order in the renderer",
      "diff": "diff --git a/src/backend/renderer.js b/src/backend/renderer.js\nindex caf165dd8e0a..7275386270c0 100644\n--- a/src/backend/renderer.js\n+++ b/src/backend/renderer.js\n@@ -539,6 +539,11 @@ export function attach(\n   // When a mount or update is in progress, this value tracks the root that is being operated on.\n   let currentRootID: number = -1;\n \n+  // Track the order in which roots were added.\n+  // We will use it to disambiguate roots when restoring selection between reloads.\n+  let nextRootIndex = 0;\n+  const rootInsertionOrder: Map<number, number> = new Map();\n+\n   function getFiberID(primaryFiber: Fiber): number {\n     if (!fiberToIDMap.has(primaryFiber)) {\n       const id = getUID();\n@@ -690,6 +695,7 @@ export function attach(\n     const hasOwnerMetadata = fiber.hasOwnProperty('_debugOwner');\n \n     if (isRoot) {\n+      rootInsertionOrder.set(id, nextRootIndex++);\n       pushOperation(TREE_OPERATION_ADD);\n       pushOperation(id);\n       pushOperation(ElementTypeRoot);\n@@ -777,6 +783,7 @@ export function attach(\n     }\n     const id = getFiberID(primaryFiber);\n     if (isRoot) {\n+      rootInsertionOrder.delete(id);\n       // Removing a root needs to happen at the end\n       // so we don't batch it with other unmounts.\n       pushOperation(TREE_OPERATION_REMOVE);"
    },
    {
      "message": "run first setstate with explicit priority in case of non-react event handlers",
      "diff": "diff --git a/src/devtools/views/Components/TreeContext.js b/src/devtools/views/Components/TreeContext.js\nindex 1c4f4f9daecf..21b16e89a042 100644\n--- a/src/devtools/views/Components/TreeContext.js\n+++ b/src/devtools/views/Components/TreeContext.js\n@@ -27,7 +27,11 @@ import React, {\n   useReducer,\n   useRef,\n } from 'react';\n-import { unstable_next as next } from 'scheduler';\n+import {\n+  unstable_next as next,\n+  unstable_runWithPriority as runWithPriority,\n+  unstable_UserBlockingPriority as UserBlockingPriority,\n+} from 'scheduler';\n import { createRegExp } from '../utils';\n import { BridgeContext, StoreContext } from '../context';\n import Store from '../../store';\n@@ -699,7 +703,10 @@ function TreeContextController({ children }: Props) {\n \n   const dispatchWrapper = useCallback(\n     (action: Action) => {\n-      dispatch(action);\n+      // Run the first update at \"user-blocking\" priority in case dispatch is called from a non-React event.\n+      // In this case, the current (and \"next\") priorities would both be \"normal\",\n+      // and suspense would potentially block both updates.\n+      runWithPriority(UserBlockingPriority, () => dispatch(action));\n       next(() => dispatch({ type: 'UPDATE_INSPECTED_ELEMENT_ID' }));\n     },\n     [dispatch]"
    },
    {
      "message": "fix small sizing issue with expand collapse toggle",
      "diff": "diff --git a/src/devtools/views/Components/ExpandCollapseToggle.css b/src/devtools/views/Components/ExpandCollapseToggle.css\nindex a686fcd1dcca..38b2aa6f7e5c 100644\n--- a/src/devtools/views/Components/ExpandCollapseToggle.css\n+++ b/src/devtools/views/Components/ExpandCollapseToggle.css\n@@ -1,4 +1,5 @@\n .ExpandCollapseToggle {\n+  flex: 0 0 1rem;\n   width: 1rem;\n   height: 1rem;\n   padding: 0;\ndiff --git a/src/devtools/views/Components/HooksTree.css b/src/devtools/views/Components/HooksTree.css\nindex 8eb3312b4dee..819c556d3660 100644\n--- a/src/devtools/views/Components/HooksTree.css\n+++ b/src/devtools/views/Components/HooksTree.css\n@@ -57,5 +57,6 @@\n }\n \n .ExpandCollapseToggleSpacer {\n+  flex: 0 0 1rem;\n   width: 1rem;\n }\ndiff --git a/src/devtools/views/Components/KeyValue.css b/src/devtools/views/Components/KeyValue.css\nindex 25340bdd560a..892bee1a3915 100644\n--- a/src/devtools/views/Components/KeyValue.css\n+++ b/src/devtools/views/Components/KeyValue.css\n@@ -30,5 +30,6 @@\n }\n \n .ExpandCollapseToggleSpacer {\n+  flex: 0 0 1rem;\n   width: 1rem;\n }"
    },
    {
      "message": "fix a bug that caused it to jump over nodes when pressing too fast",
      "diff": "diff --git a/src/devtools/views/Components/TreeContext.js b/src/devtools/views/Components/TreeContext.js\nindex 7d23766767ba..d610cddfb397 100644\n--- a/src/devtools/views/Components/TreeContext.js\n+++ b/src/devtools/views/Components/TreeContext.js\n@@ -134,7 +134,11 @@ function reduceTreeState(store: Store, state: State, action: Action): State {\n           const selectedElement = store.getElementAtIndex(\n             ((selectedElementIndex: any): number)\n           );\n-          if (selectedElement !== null && selectedElement.children.length > 0) {\n+          if (\n+            selectedElement !== null &&\n+            selectedElement.children.length > 0 &&\n+            !selectedElement.isCollapsed\n+          ) {\n             const firstChildID = selectedElement.children[0];\n             const firstChildIndex = store.getIndexOfElementID(firstChildID);\n             if (firstChildIndex !== null) {"
    },
    {
      "message": "update store.getindexofelementid to take iscollapsed into account",
      "diff": "diff --git a/src/devtools/store.js b/src/devtools/store.js\nindex 844d7e9b07fc..a764394184ec 100644\n--- a/src/devtools/store.js\n+++ b/src/devtools/store.js\n@@ -353,7 +353,7 @@ export default class Store extends EventEmitter {\n           break;\n         }\n         const child = ((this._idToElement.get(childID): any): Element);\n-        index += child.weight;\n+        index += child.isCollapsed ? 1 : child.weight;\n       }\n \n       previousID = current.id;"
    },
    {
      "message": "rewrote weightdelta calculation to be more readable based on pr feedback",
      "diff": "diff --git a/src/devtools/store.js b/src/devtools/store.js\nindex 66e84b578c10..d5f3a45b2521 100644\n--- a/src/devtools/store.js\n+++ b/src/devtools/store.js\n@@ -430,9 +430,10 @@ export default class Store extends EventEmitter {\n   toggleIsCollapsed(id: number, isCollapsed: boolean): void {\n     const element = this.getElementByID(id);\n     if (element !== null) {\n+      const oldWeight = element.isCollapsed ? 1 : element.weight;\n       element.isCollapsed = isCollapsed;\n-\n-      const weightDelta = isCollapsed ? 1 - element.weight : element.weight - 1;\n+      const newWeight = element.isCollapsed ? 1 : element.weight;\n+      const weightDelta = newWeight - oldWeight;\n \n       this._weightAcrossRoots += weightDelta;"
    },
    {
      "message": "keep dom selection if last $0 resolves to same component",
      "diff": "diff --git a/src/backend/agent.js b/src/backend/agent.js\nindex 5c85cd4562da..c6d705524533 100644\n--- a/src/backend/agent.js\n+++ b/src/backend/agent.js\n@@ -296,12 +296,19 @@ export default class Agent extends EventEmitter {\n     if (renderer == null) {\n       console.warn(`Invalid renderer id \"${rendererID}\" for element \"${id}\"`);\n     } else {\n-      // Update the active DOM node on the global hook object.\n-      // The content script will read this to update window.$0\n-      // when we switch tabs.\n+      // When a different React component is selected, we want to store\n+      // the active DOM node ($0) on the global hook so that content script\n+      // can update the native elements panel to match it.\n       const node = ((renderer.findNativeByFiberID(id): any): HTMLElement);\n       if (node !== null) {\n-        window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0 = node;\n+        // However, we don't want to do it if the current $0 node already\n+        // belongs to this component. In this case we were probably inspecting\n+        // a part of its host subtree, and changing $0 would be disuptive.\n+        const prev$0 = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0;\n+        const prev$0ID = this.getIDForNode(prev$0);\n+        if (prev$0ID !== id) {\n+          window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0 = node;\n+        }\n       }\n       renderer.selectElement(id);\n       this._bridge.send('selectElement');"
    },
    {
      "message": "fix arehookinputsequal method  warning params order",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberHooks.js b/packages/react-reconciler/src/ReactFiberHooks.js\nindex 80707120e95f..975d4ada3f7d 100644\n--- a/packages/react-reconciler/src/ReactFiberHooks.js\n+++ b/packages/react-reconciler/src/ReactFiberHooks.js\n@@ -315,8 +315,8 @@ function areHookInputsEqual(\n           'Previous: %s\\n' +\n           'Incoming: %s',\n         currentHookNameInDev,\n-        `[${nextDeps.join(', ')}]`,\n         `[${prevDeps.join(', ')}]`,\n+        `[${nextDeps.join(', ')}]`,\n       );\n     }\n   }\ndiff --git a/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js b/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\nindex 1de8540a6eeb..e2e5178ba37f 100644\n--- a/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\n+++ b/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\n@@ -608,8 +608,8 @@ describe('ReactHooks', () => {\n       'Warning: The final argument passed to useLayoutEffect changed size ' +\n         'between renders. The order and size of this array must remain ' +\n         'constant.\\n\\n' +\n-        'Previous: [A, B]\\n' +\n-        'Incoming: [A]\\n',\n+        'Previous: [A]\\n' +\n+        'Incoming: [A, B]\\n',\n     ]);\n   });"
    },
    {
      "message": "use 'classnames' in tabbar to simplify an attribute",
      "diff": "diff --git a/src/devtools/views/TabBar.js b/src/devtools/views/TabBar.js\nindex 81611fb7a2f1..d5ba8c5cb62b 100644\n--- a/src/devtools/views/TabBar.js\n+++ b/src/devtools/views/TabBar.js\n@@ -1,5 +1,6 @@\n // @flow\n \n+import classNames from 'classnames';\n import React, { Fragment, useCallback } from 'react';\n import Icon from './Icon';\n \n@@ -60,9 +61,11 @@ export default function TabBar({\n     <Fragment>\n       {tabs.map(({ icon, id, label, title }) => (\n         <label\n-          className={`${tabClassName} ${\n-            disabled ? styles.TabDisabled : styles.Tab\n-          } ${!disabled && currentTab === id ? styles.TabCurrent : ''}`}\n+          className={classNames(\n+            tabClassName,\n+            disabled ? styles.TabDisabled : styles.Tab,\n+            !disabled && currentTab === id ? styles.TabCurrent : null\n+          )}\n           key={id}\n           onKeyDown={handleKeyDown}\n           title={title || label}"
    },
    {
      "message": "expose extra internals in fb build of react-dom/unstable-new-scheduler",
      "diff": "diff --git a/packages/react-dom/unstable-new-scheduler.fb.js b/packages/react-dom/unstable-new-scheduler.fb.js\nnew file mode 100644\nindex 000000000000..ea901748d694\n--- /dev/null\n+++ b/packages/react-dom/unstable-new-scheduler.fb.js\n@@ -0,0 +1,14 @@\n+/**\n+ * Copyright (c) Facebook, Inc. and its affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ */\n+\n+'use strict';\n+\n+const ReactDOMFB = require('./src/client/ReactDOMFB');\n+\n+// TODO: decide on the top-level export form.\n+// This is hacky but makes it work with both Rollup and Jest.\n+module.exports = ReactDOMFB.default || ReactDOMFB;"
    },
    {
      "message": "fix feature flags react-dom/unstable-new-scheduler",
      "diff": "diff --git a/scripts/rollup/bundles.js b/scripts/rollup/bundles.js\nindex 3ba276130135..e2e59d2c4092 100644\n--- a/scripts/rollup/bundles.js\n+++ b/scripts/rollup/bundles.js\n@@ -118,6 +118,7 @@ const bundles = [\n       FB_WWW_PROFILING,\n       NODE_DEV,\n       NODE_PROD,\n+      NODE_PROFILING,\n     ],\n     moduleType: RENDERER,\n     entry: 'react-dom/unstable-new-scheduler',\ndiff --git a/scripts/rollup/forks.js b/scripts/rollup/forks.js\nindex 41d0f9bce6cd..45c1fd411f17 100644\n--- a/scripts/rollup/forks.js\n+++ b/scripts/rollup/forks.js\n@@ -7,6 +7,9 @@ const inlinedHostConfigs = require('../shared/inlinedHostConfigs');\n const UMD_DEV = bundleTypes.UMD_DEV;\n const UMD_PROD = bundleTypes.UMD_PROD;\n const UMD_PROFILING = bundleTypes.UMD_PROFILING;\n+const NODE_DEV = bundleTypes.NODE_DEV;\n+const NODE_PROD = bundleTypes.NODE_PROD;\n+const NODE_PROFILING = bundleTypes.NODE_PROFILING;\n const FB_WWW_DEV = bundleTypes.FB_WWW_DEV;\n const FB_WWW_PROD = bundleTypes.FB_WWW_PROD;\n const FB_WWW_PROFILING = bundleTypes.FB_WWW_PROFILING;\n@@ -69,10 +72,20 @@ const forks = Object.freeze({\n   'shared/ReactFeatureFlags': (bundleType, entry) => {\n     switch (entry) {\n       case 'react-dom/unstable-new-scheduler': {\n-        if (entry === 'react-dom/unstable-new-scheduler') {\n-          return 'shared/forks/ReactFeatureFlags.www-new-scheduler.js';\n+        switch (bundleType) {\n+          case FB_WWW_DEV:\n+          case FB_WWW_PROD:\n+          case FB_WWW_PROFILING:\n+            return 'shared/forks/ReactFeatureFlags.www-new-scheduler.js';\n+          case NODE_DEV:\n+          case NODE_PROD:\n+          case NODE_PROFILING:\n+            return 'shared/forks/ReactFeatureFlags.new-scheduler.js';\n+          default:\n+            throw Error(\n+              `Unexpected entry (${entry}) and bundleType (${bundleType})`\n+            );\n         }\n-        return null;\n       }\n       case 'react-native-renderer':\n         switch (bundleType) {"
    },
    {
      "message": "prevent bundling of node polyfills when importing testutils/testrenderer",
      "diff": "diff --git a/packages/shared/enqueueTask.js b/packages/shared/enqueueTask.js\nindex 02f4ee220672..c2cfde1f2802 100644\n--- a/packages/shared/enqueueTask.js\n+++ b/packages/shared/enqueueTask.js\n@@ -12,10 +12,13 @@ import warningWithoutStack from './warningWithoutStack';\n let didWarnAboutMessageChannel = false;\n let enqueueTask;\n try {\n+  // read require off the module object to get around the bundlers.\n+  // we don't want them to detect a require and bundle a Node polyfill.\n+  let requireString = ('require' + Math.random()).slice(0, 7);\n+  let nodeRequire = module && module[requireString];\n   // assuming we're in node, let's try to get node's\n-  // version of setImmediate, bypassing fake timers if any\n-  let r = require; // trick packagers not to bundle this stuff.\n-  enqueueTask = r('timers').setImmediate;\n+  // version of setImmediate, bypassing fake timers if any.\n+  enqueueTask = nodeRequire('timers').setImmediate;\n } catch (_err) {\n   // we're in a browser\n   // we can't use regular timers because they may still be faked"
    },
    {
      "message": "fix onpresschange events in experimental press event api",
      "diff": "diff --git a/packages/react-events/src/Press.js b/packages/react-events/src/Press.js\nindex 99becac03aef..3f0340038d3b 100644\n--- a/packages/react-events/src/Press.js\n+++ b/packages/react-events/src/Press.js\n@@ -80,7 +80,7 @@ function dispatchPressInEvents(\n           true,\n         );\n       }\n-      if (props.onLongPress) {\n+      if (props.onLongPress && !props.longPressCancelsPress) {\n         const longPressEventListener = e => {\n           props.onLongPress(e);\n           if (e.nativeEvent.defaultPrevented) {\n@@ -110,7 +110,7 @@ function dispatchPressOutEvents(\n       true,\n     );\n   }\n-  if (props.onPressChange) {\n+  if (props.onPressChange && !props.longPressCancelsPress) {\n     const pressChangeEventListener = () => {\n       props.onPressChange(false);\n     };\n@@ -121,6 +121,17 @@ function dispatchPressOutEvents(\n       true,\n     );\n   }\n+  if (state.isLongPressed && props.onLongPressChange) {\n+    const longPressChangeEventListener = () => {\n+      props.onLongPressChange(false);\n+    };\n+    context.dispatchEvent(\n+      'longpresschange',\n+      longPressChangeEventListener,\n+      state.pressTarget,\n+      true,\n+    );\n+  }\n }\n \n function isAnchorTagElement(eventTarget: EventTarget): boolean {"
    },
    {
      "message": "allow for null targetfiber for root event handling",
      "diff": "diff --git a/packages/react-dom/src/events/DOMEventResponderSystem.js b/packages/react-dom/src/events/DOMEventResponderSystem.js\nindex 8ef3c42d5538..ce23eb5ad9d7 100644\n--- a/packages/react-dom/src/events/DOMEventResponderSystem.js\n+++ b/packages/react-dom/src/events/DOMEventResponderSystem.js\n@@ -259,7 +259,7 @@ function handleTopLevelType(\n \n export function runResponderEventsInBatch(\n   topLevelType: DOMTopLevelEventType,\n-  targetFiber: Fiber,\n+  targetFiber: null | Fiber,\n   nativeEvent: AnyNativeEvent,\n   nativeEventTarget: EventTarget,\n   eventSystemFlags: EventSystemFlags,\ndiff --git a/packages/react-dom/src/events/ReactDOMEventListener.js b/packages/react-dom/src/events/ReactDOMEventListener.js\nindex 5591646b1980..1e1e67936f98 100644\n--- a/packages/react-dom/src/events/ReactDOMEventListener.js\n+++ b/packages/react-dom/src/events/ReactDOMEventListener.js\n@@ -143,7 +143,7 @@ function handleTopLevel(bookKeeping: BookKeepingInstance) {\n         nativeEvent,\n         eventTarget,\n       );\n-    } else if (enableEventAPI && targetInst !== null) {\n+    } else if (enableEventAPI) {\n       // Responder event system (experimental event API)\n       runResponderEventsInBatch(\n         topLevelType,"
    },
    {
      "message": "disable reload-and-profile button if no renderers support profiling",
      "diff": "diff --git a/src/devtools/views/Profiler/ReloadAndProfileButton.js b/src/devtools/views/Profiler/ReloadAndProfileButton.js\nindex 5af7d8bf9e94..ac33e1feec42 100644\n--- a/src/devtools/views/Profiler/ReloadAndProfileButton.js\n+++ b/src/devtools/views/Profiler/ReloadAndProfileButton.js\n@@ -18,7 +18,11 @@ export default function ReloadAndProfileButton() {\n   }\n \n   return (\n-    <Button onClick={reloadAndProfile} title=\"Reload and start profiling\">\n+    <Button\n+      disabled={!store.supportsProfiling}\n+      onClick={reloadAndProfile}\n+      title=\"Reload and start profiling\"\n+    >\n       <ButtonIcon type=\"reload\" />\n     </Button>\n   );"
    },
    {
      "message": "suppress horizontal scroll bars in snapshot selector",
      "diff": "diff --git a/src/devtools/views/Profiler/SnapshotCommitList.css b/src/devtools/views/Profiler/SnapshotCommitList.css\nnew file mode 100644\nindex 000000000000..7324c034b1f2\n--- /dev/null\n+++ b/src/devtools/views/Profiler/SnapshotCommitList.css\n@@ -0,0 +1,9 @@\n+.List {\n+  /**\n+   * The decision to suppress the default (horizontal) scroll bars is intentional.\n+   * The snapshot selector is small enough that the scrollbar renders it essentially useless.\n+   * There are two alternative navigation mechanisms (arrow keys and arrow buttons).\n+   * If necessary, we could also expand the click-and-drag mechanism to scroll.\n+   */\n+  overflow-x: hidden;\n+}\ndiff --git a/src/devtools/views/Profiler/SnapshotCommitList.js b/src/devtools/views/Profiler/SnapshotCommitList.js\nindex fde83a236707..16538ae1efd3 100644\n--- a/src/devtools/views/Profiler/SnapshotCommitList.js\n+++ b/src/devtools/views/Profiler/SnapshotCommitList.js\n@@ -12,6 +12,8 @@ import { FixedSizeList } from 'react-window';\n import SnapshotCommitListItem from './SnapshotCommitListItem';\n import { minBarWidth } from './constants';\n \n+import styles from './SnapshotCommitList.css';\n+\n export type ItemData = {|\n   commitDurations: Array<number>,\n   commitTimes: Array<number>,\n@@ -160,6 +162,7 @@ function List({\n       style={{ height, width }}\n     >\n       <FixedSizeList\n+        className={styles.List}\n         direction=\"horizontal\"\n         height={height}\n         itemCount={filteredCommitIndices.length}"
    },
    {
      "message": "flip event passive logic on passivebrowsereventssupported",
      "diff": "diff --git a/packages/react-dom/src/events/ReactDOMEventListener.js b/packages/react-dom/src/events/ReactDOMEventListener.js\nindex 32da3c610614..51897225474d 100644\n--- a/packages/react-dom/src/events/ReactDOMEventListener.js\n+++ b/packages/react-dom/src/events/ReactDOMEventListener.js\n@@ -188,11 +188,11 @@ export function trapEventForResponderEventSystem(\n     // and can provide polyfills if needed.\n     if (passive) {\n       if (passiveBrowserEventsSupported) {\n+        eventFlags |= IS_PASSIVE;\n+      } else {\n         eventFlags |= IS_ACTIVE;\n         eventFlags |= PASSIVE_NOT_SUPPORTED;\n         passive = false;\n-      } else {\n-        eventFlags |= IS_PASSIVE;\n       }\n     } else {\n       eventFlags |= IS_ACTIVE;"
    },
    {
      "message": "handle rte in profiler when commit does not contain selected node",
      "diff": "diff --git a/src/devtools/views/Profiler/CommitFlamegraph.js b/src/devtools/views/Profiler/CommitFlamegraph.js\nindex 75967d4b5938..f8ab0bff25ae 100644\n--- a/src/devtools/views/Profiler/CommitFlamegraph.js\n+++ b/src/devtools/views/Profiler/CommitFlamegraph.js\n@@ -86,21 +86,29 @@ function CommitFlamegraph({\n     rootID: ((rootID: any): number),\n   });\n \n-  const selectedChartNodeIndex = useMemo(\n-    () =>\n-      selectedFiberID === null\n-        ? 0\n-        : ((chartData.idToDepthMap.get(selectedFiberID): any): number) - 1,\n-    [chartData, selectedFiberID]\n-  );\n+  const selectedChartNodeIndex = useMemo<number>(() => {\n+    if (selectedFiberID === null) {\n+      return 0;\n+    }\n+    // The selected node might not be in the tree for this commit,\n+    // so it's important that we have a fallback plan.\n+    const depth = chartData.idToDepthMap.get(selectedFiberID);\n+    return depth !== undefined ? depth - 1 : 0;\n+  }, [chartData, selectedFiberID]);\n \n   const selectedChartNode = useMemo(() => {\n-    if (selectedFiberID === null) {\n+    let chartNode = null;\n+    if (selectedFiberID !== null) {\n+      chartNode = ((chartData.rows[selectedChartNodeIndex].find(\n+        chartNode => chartNode.id === selectedFiberID\n+      ): any): ChartNode);\n+    }\n+    // The selected node might not be in the tree for this commit,\n+    // so it's important that we have a fallback plan.\n+    if (chartNode == null) {\n       return chartData.rows[0][0];\n     }\n-    return ((chartData.rows[selectedChartNodeIndex].find(\n-      chartNode => chartNode.id === selectedFiberID\n-    ): any): ChartNode);\n+    return chartNode;\n   }, [chartData, selectedFiberID, selectedChartNodeIndex]);\n \n   const itemData = useMemo<ItemData>("
    },
    {
      "message": "reset selected commit and fiber between profiling sessions",
      "diff": "diff --git a/src/devtools/views/Profiler/ProfilerContext.js b/src/devtools/views/Profiler/ProfilerContext.js\nindex 490db544c837..d6d0a96a4fc6 100644\n--- a/src/devtools/views/Profiler/ProfilerContext.js\n+++ b/src/devtools/views/Profiler/ProfilerContext.js\n@@ -124,6 +124,15 @@ function ProfilerContextController({ children }: Props) {\n \n   const [selectedFiberID, selectFiber] = useState<number | null>(null);\n \n+  if (isProfiling) {\n+    if (selectedFiberID !== null) {\n+      selectFiber(null);\n+    }\n+    if (selectedCommitIndex !== null) {\n+      setSelectedCommitIndex(null);\n+    }\n+  }\n+\n   const value = useMemo(\n     () => ({\n       hasProfilingData,\ndiff --git a/src/devtools/views/Profiler/SnapshotSelector.js b/src/devtools/views/Profiler/SnapshotSelector.js\nindex fa6469b54e2b..ff4abdf4ae8b 100644\n--- a/src/devtools/views/Profiler/SnapshotSelector.js\n+++ b/src/devtools/views/Profiler/SnapshotSelector.js\n@@ -56,7 +56,8 @@ export default function SnapshotSelector(_: Props) {\n   }, [filteredCommitIndices, selectedCommitIndex]);\n \n   // TODO (profiling) This should be managed by the context controller (reducer).\n-  // TODO (profiling) We should also reset the selected index to 0 between profiling sessions.\n+  // It doesn't currently know about the filtered commits though (since it doesn't suspend).\n+  // Maybe this component should pass filteredCommitIndices up?\n   if (selectedFilteredCommitIndex === null) {\n     if (numFilteredCommits > 0) {\n       setSelectedCommitIndex(0);"
    },
    {
      "message": "improve selected node highlighting by using minwidth instead of width",
      "diff": "diff --git a/src/devtools/views/Element.css b/src/devtools/views/Element.css\nindex 44ec9d3815e1..6227ee6fef6b 100644\n--- a/src/devtools/views/Element.css\n+++ b/src/devtools/views/Element.css\n@@ -1,6 +1,5 @@\n .Element,\n .SelectedElement {\n-  width: 100%;\n   border-radius: 0.25em;\n   position: relative;\n   white-space: nowrap;\ndiff --git a/src/devtools/views/Element.js b/src/devtools/views/Element.js\nindex c0cb4ab34a7d..ca26ebf08d24 100644\n--- a/src/devtools/views/Element.js\n+++ b/src/devtools/views/Element.js\n@@ -89,6 +89,8 @@ export default function ElementView({ index, style }: Props) {\n       style={{\n         ...style, // \"style\" comes from react-window\n         paddingLeft: `${(depth - baseDepth) * 0.75 + 0.25}rem`,\n+        width: undefined,\n+        minWidth: '100%',\n       }}\n     >\n       <span className={styles.Component} ref={ref}>"
    },
    {
      "message": "select dom element mode should usecapture to prevent clicks from passing through",
      "diff": "diff --git a/src/backend/agent.js b/src/backend/agent.js\nindex fbd306f3bb72..a4716ecc71e5 100644\n--- a/src/backend/agent.js\n+++ b/src/backend/agent.js\n@@ -177,17 +177,17 @@ export default class Agent extends EventEmitter {\n   };\n \n   startInspectingDOM = () => {\n-    window.addEventListener('click', this._onClick);\n-    window.addEventListener('mousedown', this._onMouseDown);\n-    window.addEventListener('mouseover', this._onMouseOver);\n+    window.addEventListener('click', this._onClick, true);\n+    window.addEventListener('mousedown', this._onMouseDown, true);\n+    window.addEventListener('mouseover', this._onMouseOver, true);\n   };\n \n   stopInspectingDOM = () => {\n     hideOverlay();\n \n-    window.removeEventListener('click', this._onClick);\n-    window.removeEventListener('mousedown', this._onMouseDown);\n-    window.removeEventListener('mouseover', this._onMouseOver);\n+    window.removeEventListener('click', this._onClick, true);\n+    window.removeEventListener('mousedown', this._onMouseDown, true);\n+    window.removeEventListener('mouseover', this._onMouseOver, true);\n   };\n \n   viewElementSource = ({ id, rendererID }: InspectSelectParams) => {"
    },
    {
      "message": "disable view-source button rather than hiding it to avoid jumping when selecting new components",
      "diff": "diff --git a/src/devtools/views/SelectedElement.js b/src/devtools/views/SelectedElement.js\nindex de2b14acbc9a..ce3023db2972 100644\n--- a/src/devtools/views/SelectedElement.js\n+++ b/src/devtools/views/SelectedElement.js\n@@ -81,15 +81,14 @@ export default function SelectedElement(_: Props) {\n         >\n           <ButtonIcon type=\"view-dom\" />\n         </Button>\n-        {canViewSource && (\n-          <Button\n-            className={styles.IconButton}\n-            onClick={viewSource}\n-            title=\"View source for this element\"\n-          >\n-            <ButtonIcon type=\"view-source\" />\n-          </Button>\n-        )}\n+        <Button\n+          className={styles.IconButton}\n+          disabled={!canViewSource}\n+          onClick={viewSource}\n+          title=\"View source for this element\"\n+        >\n+          <ButtonIcon type=\"view-source\" />\n+        </Button>\n       </div>\n \n       {inspectedElement === null && ("
    },
    {
      "message": "restore input focus after clicking reset value button",
      "diff": "diff --git a/src/devtools/views/InspectedElementTree.js b/src/devtools/views/InspectedElementTree.js\nindex 157befb35746..afeb8f0b18a5 100644\n--- a/src/devtools/views/InspectedElementTree.js\n+++ b/src/devtools/views/InspectedElementTree.js\n@@ -1,6 +1,6 @@\n // @flow\n \n-import React, { Fragment, useCallback, useState } from 'react';\n+import React, { Fragment, useCallback, useRef, useState } from 'react';\n import Button from './Button';\n import ButtonIcon from './ButtonIcon';\n import { getMetaValueLabel } from './utils';\n@@ -175,6 +175,7 @@ export function EditableValue({\n }: EditableValueProps) {\n   const [hasPendingChanges, setHasPendingChanges] = useState(false);\n   const [editableValue, setEditableValue] = useState(value);\n+  const inputRef = useRef<HTMLInputElement | null>(null);\n \n   if (hasPendingChanges && editableValue === value) {\n     setHasPendingChanges(false);\n@@ -198,6 +199,10 @@ export function EditableValue({\n   const handleReset = useCallback(() => {\n     setEditableValue(value);\n     setHasPendingChanges(false);\n+\n+    if (inputRef.current !== null) {\n+      inputRef.current.focus();\n+    }\n   }, [value]);\n \n   const handleKeyDown = useCallback(\n@@ -242,6 +247,7 @@ export function EditableValue({\n           className={styles.ValueInput}\n           onChange={handleChange}\n           onKeyDown={handleKeyDown}\n+          ref={inputRef}\n           type={type}\n           value={dataType === 'boolean' ? undefined : inputValue}\n         />"
    },
    {
      "message": "scroll to newly selected component if it's out of view",
      "diff": "diff --git a/src/devtools/views/Element.js b/src/devtools/views/Element.js\nindex 7006032af195..4fa325599df5 100644\n--- a/src/devtools/views/Element.js\n+++ b/src/devtools/views/Element.js\n@@ -1,6 +1,13 @@\n // @flow\n \n-import React, { Fragment, useCallback, useContext, useMemo } from 'react';\n+import React, {\n+  Fragment,\n+  useCallback,\n+  useContext,\n+  useMemo,\n+  useRef,\n+  useEffect,\n+} from 'react';\n import { ElementTypeClass, ElementTypeFunction } from 'src/devtools/types';\n import { createRegExp } from './utils';\n import { TreeContext } from './TreeContext';\n@@ -45,6 +52,13 @@ export default function ElementView({ index, style }: Props) {\n   const showDollarR =\n     isSelected && (type === ElementTypeClass || type === ElementTypeFunction);\n \n+  const component = useRef(null);\n+  useEffect(() => {\n+    if (isSelected && component.current !== null) {\n+      component.current.scrollIntoView();\n+    }\n+  }, [isSelected]);\n+\n   // TODO styles.SelectedElement is 100% width but it doesn't take horizontal overflow into account.\n \n   return (\n@@ -57,7 +71,7 @@ export default function ElementView({ index, style }: Props) {\n         paddingLeft: `${(depth - baseDepth) * 0.75 + 0.25}rem`,\n       }}\n     >\n-      <span className={styles.Component}>\n+      <span ref={component} className={styles.Component}>\n         <DisplayName displayName={displayName} id={id} />\n         {key && (\n           <Fragment>"
    },
    {
      "message": "avoid npe in agent if renderer can't be found for an id",
      "diff": "diff --git a/src/backend/agent.js b/src/backend/agent.js\nindex 93af40578597..b23ff86d758e 100644\n--- a/src/backend/agent.js\n+++ b/src/backend/agent.js\n@@ -73,16 +73,18 @@ export default class Agent extends EventEmitter {\n     const renderer = this._rendererInterfaces[rendererID];\n     if (renderer == null) {\n       console.warn(`Invalid renderer id \"${rendererID}\" for element \"${id}\"`);\n+    } else {\n+      this._bridge.send('inspectedElement', renderer.inspectElement(id));\n     }\n-    this._bridge.send('inspectedElement', renderer.inspectElement(id));\n   };\n \n   selectElement = ({ id, rendererID }: { id: number, rendererID: number }) => {\n     const renderer = this._rendererInterfaces[rendererID];\n     if (renderer == null) {\n       console.warn(`Invalid renderer id \"${rendererID}\" for element \"${id}\"`);\n+    } else {\n+      this._bridge.send('selectElement', renderer.selectElement(id));\n     }\n-    this._bridge.send('selectElement', renderer.selectElement(id));\n   };\n \n   setRendererInterface("
    },
    {
      "message": "use functional component as a first example in readme",
      "diff": "diff --git a/README.md b/README.md\nindex 1cf0009202df..808ad63cf3b4 100644\n--- a/README.md\n+++ b/README.md\n@@ -40,10 +40,8 @@ You can improve it by sending pull requests to [this repository](https://github.\n We have several examples [on the website](https://reactjs.org/). Here is the first one to get you started:\n \n ```jsx\n-class HelloMessage extends React.Component {\n-  render() {\n-    return <div>Hello {this.props.name}</div>;\n-  }\n+function HelloMessage({ name }) {\n+  return <div>Hello {name}</div>;\n }\n \n ReactDOM.render("
    },
    {
      "message": "add noop usedebugvalue hook to partial/server renderer",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationHooks-test.internal.js b/packages/react-dom/src/__tests__/ReactDOMServerIntegrationHooks-test.internal.js\nindex 2e585a1373a2..7cd436c4ed2f 100644\n--- a/packages/react-dom/src/__tests__/ReactDOMServerIntegrationHooks-test.internal.js\n+++ b/packages/react-dom/src/__tests__/ReactDOMServerIntegrationHooks-test.internal.js\n@@ -26,6 +26,7 @@ let useMemo;\n let useRef;\n let useImperativeHandle;\n let useLayoutEffect;\n+let useDebugValue;\n let forwardRef;\n let yieldedValues;\n let yieldValue;\n@@ -48,6 +49,7 @@ function initModules() {\n   useCallback = React.useCallback;\n   useMemo = React.useMemo;\n   useRef = React.useRef;\n+  useDebugValue = React.useDebugValue;\n   useImperativeHandle = React.useImperativeHandle;\n   useLayoutEffect = React.useLayoutEffect;\n   forwardRef = React.forwardRef;\n@@ -658,4 +660,16 @@ describe('ReactDOMServerHooks', () => {\n       'Hooks can only be called inside the body of a function component.',\n     );\n   });\n+\n+  describe('useDebugValue', () => {\n+    itRenders('is a noop', async render => {\n+      function Counter(props) {\n+        const debugValue = useDebugValue(123);\n+        return <Text text={typeof debugValue} />;\n+      }\n+\n+      const domNode = await render(<Counter />);\n+      expect(domNode.textContent).toEqual('undefined');\n+    });\n+  });\n });\ndiff --git a/packages/react-dom/src/server/ReactPartialRendererHooks.js b/packages/react-dom/src/server/ReactPartialRendererHooks.js\nindex d5ca03dee81a..6eb62c7bd7c2 100644\n--- a/packages/react-dom/src/server/ReactPartialRendererHooks.js\n+++ b/packages/react-dom/src/server/ReactPartialRendererHooks.js\n@@ -351,6 +351,8 @@ export const Dispatcher = {\n   useImperativeHandle: noop,\n   // Effects are not run in the server environment.\n   useEffect: noop,\n+  // Debugging effect\n+  useDebugValue: noop,\n };\n export const DispatcherWithoutHooks = {\n   readContext,"
    },
    {
      "message": "move schedulerfeatureflags fork to src directory to fix lint",
      "diff": "diff --git a/packages/scheduler/forks/SchedulerFeatureFlags.www.js b/packages/scheduler/src/forks/SchedulerFeatureFlags.www.js\nsimilarity index 100%\nrename from packages/scheduler/forks/SchedulerFeatureFlags.www.js\nrename to packages/scheduler/src/forks/SchedulerFeatureFlags.www.js\ndiff --git a/scripts/rollup/forks.js b/scripts/rollup/forks.js\nindex d64e9e53288d..934d21328922 100644\n--- a/scripts/rollup/forks.js\n+++ b/scripts/rollup/forks.js\n@@ -164,7 +164,7 @@ const forks = Object.freeze({\n         bundleType === FB_WWW_PROD ||\n         bundleType === FB_WWW_PROFILING)\n     ) {\n-      return 'scheduler/forks/SchedulerFeatureFlags.www.js';\n+      return 'scheduler/src/forks/SchedulerFeatureFlags.www.js';\n     }\n     return 'scheduler/src/SchedulerFeatureFlags';\n   },"
    },
    {
      "message": "remove usage of `fbjs/lib/invariant` in reactnativeviewconfigregistry.",
      "diff": "diff --git a/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js b/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js\nindex 0430c8e9ffd7..cb27a9d96686 100644\n--- a/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js\n+++ b/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js\n@@ -15,7 +15,7 @@ import type {\n   ViewConfigGetter,\n } from './ReactNativeTypes';\n \n-const invariant = require('fbjs/lib/invariant');\n+const invariant = require('invariant');\n \n // Event configs\n const customBubblingEventTypes = {};"
    },
    {
      "message": "prevent deopts from modifying exports object in stable builds",
      "diff": "diff --git a/packages/react-dom/src/client/ReactDOM.js b/packages/react-dom/src/client/ReactDOM.js\nindex 8934a67be37b..ded53f4e1c58 100644\n--- a/packages/react-dom/src/client/ReactDOM.js\n+++ b/packages/react-dom/src/client/ReactDOM.js\n@@ -770,6 +770,7 @@ const ReactDOM: Object = {\n \n   flushSync: flushSync,\n \n+  unstable_createRoot: createRoot,\n   unstable_flushControlled: flushControlled,\n \n   __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n@@ -810,8 +811,7 @@ function createRoot(container: DOMContainer, options?: RootOptions): ReactRoot {\n \n if (enableStableConcurrentModeAPIs) {\n   ReactDOM.createRoot = createRoot;\n-} else {\n-  ReactDOM.unstable_createRoot = createRoot;\n+  ReactDOM.unstable_createRoot = undefined;\n }\n \n const foundDevTools = injectIntoDevTools({\ndiff --git a/packages/react/src/React.js b/packages/react/src/React.js\nindex 04f3592cedf9..872072e29e35 100644\n--- a/packages/react/src/React.js\n+++ b/packages/react/src/React.js\n@@ -77,15 +77,22 @@ const React = {\n \n   version: ReactVersion,\n \n+  unstable_ConcurrentMode: REACT_CONCURRENT_MODE_TYPE,\n+  unstable_Profiler: REACT_PROFILER_TYPE,\n+\n   __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals,\n };\n \n+// Note: some APIs are added with feature flags.\n+// Make sure that stable builds for open source\n+// don't modify the React object to avoid deopts.\n+// Also let's not expose their names in stable builds.\n+\n if (enableStableConcurrentModeAPIs) {\n   React.ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n   React.Profiler = REACT_PROFILER_TYPE;\n-} else {\n-  React.unstable_ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n-  React.unstable_Profiler = REACT_PROFILER_TYPE;\n+  React.unstable_ConcurrentMode = undefined;\n+  React.unstable_Profiler = undefined;\n }\n \n if (enableHooks) {"
    },
    {
      "message": "list ignored types instead of included types in the stack",
      "diff": "diff --git a/packages/react-reconciler/src/ReactCurrentFiber.js b/packages/react-reconciler/src/ReactCurrentFiber.js\nindex 158d54ded61c..47baa167eb3d 100644\n--- a/packages/react-reconciler/src/ReactCurrentFiber.js\n+++ b/packages/react-reconciler/src/ReactCurrentFiber.js\n@@ -11,13 +11,12 @@ import type {Fiber} from './ReactFiber';\n \n import ReactSharedInternals from 'shared/ReactSharedInternals';\n import {\n-  IndeterminateComponent,\n-  FunctionComponent,\n-  ClassComponent,\n-  HostComponent,\n-  Mode,\n-  LazyComponent,\n-  SuspenseComponent,\n+  HostRoot,\n+  HostPortal,\n+  HostText,\n+  Fragment,\n+  ContextProvider,\n+  ContextConsumer,\n } from 'shared/ReactWorkTags';\n import describeComponentFrame from 'shared/describeComponentFrame';\n import getComponentName from 'shared/getComponentName';\n@@ -28,13 +27,14 @@ type LifeCyclePhase = 'render' | 'getChildContext';\n \n function describeFiber(fiber: Fiber): string {\n   switch (fiber.tag) {\n-    case IndeterminateComponent:\n-    case LazyComponent:\n-    case FunctionComponent:\n-    case ClassComponent:\n-    case HostComponent:\n-    case Mode:\n-    case SuspenseComponent:\n+    case HostRoot:\n+    case HostPortal:\n+    case HostText:\n+    case Fragment:\n+    case ContextProvider:\n+    case ContextConsumer:\n+      return '';\n+    default:\n       const owner = fiber._debugOwner;\n       const source = fiber._debugSource;\n       const name = getComponentName(fiber.type);\n@@ -43,8 +43,6 @@ function describeFiber(fiber: Fiber): string {\n         ownerName = getComponentName(owner.type);\n       }\n       return describeComponentFrame(name, source, ownerName);\n-    default:\n-      return '';\n   }\n }"
    },
    {
      "message": "revert \"clear memoizedstate on unmount of fiber to avoid memory leak \"",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberCommitWork.js b/packages/react-reconciler/src/ReactFiberCommitWork.js\nindex 0dc3d27f1dcf..55a39ee640db 100644\n--- a/packages/react-reconciler/src/ReactFiberCommitWork.js\n+++ b/packages/react-reconciler/src/ReactFiberCommitWork.js\n@@ -726,20 +726,11 @@ function detachFiber(current: Fiber) {\n   // get GC:ed but we don't know which for sure which parent is the current\n   // one so we'll settle for GC:ing the subtree of this child. This child\n   // itself will be GC:ed when the parent updates the next time.\n-  // We do not null out the 'nextEffect' field as it causes tests to fail.\n   current.return = null;\n   current.child = null;\n-  current.memoizedState = null;\n-  current.updateQueue = null;\n-  current.firstEffect = null;\n-  current.lastEffect = null;\n   if (current.alternate) {\n-    current.alternate.return = null;\n     current.alternate.child = null;\n-    current.alternate.memoizedState = null;\n-    current.alternate.updateQueue = null;\n-    current.alternate.firstEffect = null;\n-    current.alternate.lastEffect = null;\n+    current.alternate.return = null;\n   }\n }"
    },
    {
      "message": "fix support for mixing react-dom/server@16.6 and react@<16.6",
      "diff": "diff --git a/packages/react-dom/src/server/ReactPartialRendererContext.js b/packages/react-dom/src/server/ReactPartialRendererContext.js\nindex 6a0e1fad16f3..b10e392e37d0 100644\n--- a/packages/react-dom/src/server/ReactPartialRendererContext.js\n+++ b/packages/react-dom/src/server/ReactPartialRendererContext.js\n@@ -56,10 +56,12 @@ export function validateContextBounds(\n   context: ReactContext<any>,\n   threadID: ThreadID,\n ) {\n+  // If `react` package is < 16.6, _threadCount is undefined.\n+  let initialThreadCount = context._threadCount || 0;\n   // If we don't have enough slots in this context to store this threadID,\n   // fill it in without leaving any holes to ensure that the VM optimizes\n   // this as non-holey index properties.\n-  for (let i = context._threadCount; i <= threadID; i++) {\n+  for (let i = initialThreadCount; i <= threadID; i++) {\n     // We assume that this is the same as the defaultValue which might not be\n     // true if we're rendering inside a secondary renderer but they are\n     // secondary because these use cases are very rare."
    },
    {
      "message": "rename .internal tests that aren't using internals",
      "diff": "diff --git a/packages/scheduler/src/__tests__/Scheduler-test.internal.js b/packages/scheduler/src/__tests__/Scheduler-test.js\nsimilarity index 100%\nrename from packages/scheduler/src/__tests__/Scheduler-test.internal.js\nrename to packages/scheduler/src/__tests__/Scheduler-test.js\ndiff --git a/packages/scheduler/src/__tests__/SchedulerNoDOM-test.internal.js b/packages/scheduler/src/__tests__/SchedulerNoDOM-test.js\nsimilarity index 100%\nrename from packages/scheduler/src/__tests__/SchedulerNoDOM-test.internal.js\nrename to packages/scheduler/src/__tests__/SchedulerNoDOM-test.js"
    },
    {
      "message": "use function.prototype.apply in warningwithoutstack",
      "diff": "diff --git a/packages/shared/warningWithoutStack.js b/packages/shared/warningWithoutStack.js\nindex 756ddc1ef435..94a6ed68ea26 100644\n--- a/packages/shared/warningWithoutStack.js\n+++ b/packages/shared/warningWithoutStack.js\n@@ -32,44 +32,12 @@ if (__DEV__) {\n       return;\n     }\n     if (typeof console !== 'undefined') {\n-      const [a, b, c, d, e, f, g, h] = args.map(item => '' + item);\n-      const message = 'Warning: ' + format;\n+      const argsWithFormat = args.map(item => '' + item);\n+      argsWithFormat.unshift('Warning: ' + format);\n \n-      // We intentionally don't use spread (or .apply) because it breaks IE9:\n-      // https://github.com/facebook/react/issues/13610\n-      switch (args.length) {\n-        case 0:\n-          console.error(message);\n-          break;\n-        case 1:\n-          console.error(message, a);\n-          break;\n-        case 2:\n-          console.error(message, a, b);\n-          break;\n-        case 3:\n-          console.error(message, a, b, c);\n-          break;\n-        case 4:\n-          console.error(message, a, b, c, d);\n-          break;\n-        case 5:\n-          console.error(message, a, b, c, d, e);\n-          break;\n-        case 6:\n-          console.error(message, a, b, c, d, e, f);\n-          break;\n-        case 7:\n-          console.error(message, a, b, c, d, e, f, g);\n-          break;\n-        case 8:\n-          console.error(message, a, b, c, d, e, f, g, h);\n-          break;\n-        default:\n-          throw new Error(\n-            'warningWithoutStack() currently supports at most 8 arguments.',\n-          );\n-      }\n+      // We intentionally don't use spread (or .apply) directly because it\n+      // breaks IE9: https://github.com/facebook/react/issues/13610\n+      Function.prototype.apply.call(console.error, console, argsWithFormat);\n     }\n     try {\n       // --- Welcome to debugging React ---"
    },
    {
      "message": "add back early return in setoffsets which was removed between 16.4.2 and 16.5.0. fails in edge in some scenarios.",
      "diff": "diff --git a/packages/react-dom/src/client/ReactDOMSelection.js b/packages/react-dom/src/client/ReactDOMSelection.js\nindex 9f247af15b4f..1f584597514c 100644\n--- a/packages/react-dom/src/client/ReactDOMSelection.js\n+++ b/packages/react-dom/src/client/ReactDOMSelection.js\n@@ -153,6 +153,14 @@ export function getModernOffsetsFromPoints(\n export function setOffsets(node, offsets) {\n   const doc = node.ownerDocument || document;\n   const win = (doc && doc.defaultView) || window;\n+\n+  // Edge fails with \"Object expected\" in some scenarios.\n+  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,\n+  // fails when pasting 100+ items)\n+  if (!win.getSelection) {\n+    return;\n+  }\n+\n   const selection = win.getSelection();\n   const length = node.textContent.length;\n   let start = Math.min(offsets.start, length);"
    },
    {
      "message": "update createroot warning message based on `enablestableconcurrentmodeapis`",
      "diff": "diff --git a/packages/react-dom/src/client/ReactDOM.js b/packages/react-dom/src/client/ReactDOM.js\nindex ffd34d6e48c1..1d43d2e6ed8f 100644\n--- a/packages/react-dom/src/client/ReactDOM.js\n+++ b/packages/react-dom/src/client/ReactDOM.js\n@@ -772,9 +772,11 @@ type RootOptions = {\n };\n \n function createRoot(container: DOMContainer, options?: RootOptions): ReactRoot {\n+  const functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';\n   invariant(\n     isValidContainer(container),\n-    'unstable_createRoot(...): Target container is not a DOM element.',\n+    '%s(...): Target container is not a DOM element.',\n+    functionName,\n   );\n   const hydrate = options != null && options.hydrate === true;\n   return new ReactRoot(container, true, hydrate);"
    },
    {
      "message": "revert \"revert \"updating dependencies for react-noop-renderer\"\"",
      "diff": "diff --git a/packages/react-noop-renderer/package.json b/packages/react-noop-renderer/package.json\nindex e7a145892bee..21fe8be9d891 100644\n--- a/packages/react-noop-renderer/package.json\n+++ b/packages/react-noop-renderer/package.json\n@@ -10,7 +10,7 @@\n     \"object-assign\": \"^4.1.1\",\n     \"prop-types\": \"^15.6.2\",\n     \"regenerator-runtime\": \"^0.11.0\",\n-    \"react-reconciler\": \"*\"\n+    \"react-reconciler\": \"* || 0.16.0-alpha.8af6728\"\n   },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0 || 16.6.0-beta.0\""
    },
    {
      "message": "revert \"updating dependencies for react-noop-renderer\"",
      "diff": "diff --git a/packages/react-noop-renderer/package.json b/packages/react-noop-renderer/package.json\nindex 21fe8be9d891..e7a145892bee 100644\n--- a/packages/react-noop-renderer/package.json\n+++ b/packages/react-noop-renderer/package.json\n@@ -10,7 +10,7 @@\n     \"object-assign\": \"^4.1.1\",\n     \"prop-types\": \"^15.6.2\",\n     \"regenerator-runtime\": \"^0.11.0\",\n-    \"react-reconciler\": \"* || 0.16.0-alpha.8af6728\"\n+    \"react-reconciler\": \"*\"\n   },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0 || 16.6.0-beta.0\""
    },
    {
      "message": "fix minor bug with handlereset in suspense fixture",
      "diff": "diff --git a/fixtures/unstable-async/suspense/src/index.js b/fixtures/unstable-async/suspense/src/index.js\nindex d6287c50daa5..12a77f907843 100644\n--- a/fixtures/unstable-async/suspense/src/index.js\n+++ b/fixtures/unstable-async/suspense/src/index.js\n@@ -65,7 +65,7 @@ class Debugger extends PureComponent {\n   }\n \n   handleReset = () => {\n-    trace('Clear cache', () => {\n+    trace('Clear cache', performance.now(), () => {\n       cache.invalidate();\n       this.setState(state => ({\n         requests: {},"
    },
    {
      "message": "add back accidentally deleted `break` to prevent fallthrough",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberCompleteWork.js b/packages/react-reconciler/src/ReactFiberCompleteWork.js\nindex b8270ea1fa0b..2aa17aa1e024 100644\n--- a/packages/react-reconciler/src/ReactFiberCompleteWork.js\n+++ b/packages/react-reconciler/src/ReactFiberCompleteWork.js\n@@ -684,6 +684,7 @@ function completeWork(\n       break;\n     }\n     case ForwardRef:\n+      break;\n     case SuspenseComponent: {\n       const nextState = workInProgress.memoizedState;\n       const prevState = current !== null ? current.memoizedState : null;"
    },
    {
      "message": "rename reactsuspensewithtestrenderer-test -> reactsuspense-test",
      "diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspenseWithTestRenderer-test.internal.js b/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\nsimilarity index 96%\nrename from packages/react-reconciler/src/__tests__/ReactSuspenseWithTestRenderer-test.internal.js\nrename to packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\nindex 0a0b9353ac4c..3d66b81c8b6b 100644\n--- a/packages/react-reconciler/src/__tests__/ReactSuspenseWithTestRenderer-test.internal.js\n+++ b/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\n@@ -10,10 +10,9 @@ let cache;\n let TextResource;\n let textResourceShouldFail;\n \n-// The tests in the ReactSuspense suite use ReactNoop. We want to use\n-// ReactTestRenderer for most of our tests, so we're gradually migrating the\n-// Suspense tests over to this file.\n-describe('ReactSuspenseWithTestRenderer', () => {\n+// Additional tests can be found in ReactSuspenseWithNoopRenderer. Plan is\n+// to gradually migrate those to this file.\n+describe('ReactSuspense', () => {\n   beforeEach(() => {\n     jest.resetModules();\n     ReactFeatureFlags = require('shared/ReactFeatureFlags');"
    },
    {
      "message": "rename reactsuspense-test -> reactsuspensewithnooprenderer-test",
      "diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js b/packages/react-reconciler/src/__tests__/ReactSuspenseWithNoopRenderer-test.internal.js\nsimilarity index 99%\nrename from packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\nrename to packages/react-reconciler/src/__tests__/ReactSuspenseWithNoopRenderer-test.internal.js\nindex 8f5eb547e8a5..017817fd621b 100644\n--- a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\n+++ b/packages/react-reconciler/src/__tests__/ReactSuspenseWithNoopRenderer-test.internal.js\n@@ -12,7 +12,10 @@ let cache;\n let TextResource;\n let textResourceShouldFail;\n \n-describe('ReactSuspense', () => {\n+// These tests use React Noop Renderer.  All new tests should use React Test\n+// Renderer and go in ReactSuspense-test; plan is gradually migrate the noop\n+// tests to that file.\n+describe('ReactSuspenseWithNoopRenderer', () => {\n   beforeEach(() => {\n     jest.resetModules();\n     ReactFeatureFlags = require('shared/ReactFeatureFlags');"
    },
    {
      "message": "ensure \"addeventlistener\" exists on \"window\" for \"scheduler\" package",
      "diff": "diff --git a/packages/scheduler/src/Scheduler.js b/packages/scheduler/src/Scheduler.js\nindex 412f96930eb3..2c692d7dfe79 100644\n--- a/packages/scheduler/src/Scheduler.js\n+++ b/packages/scheduler/src/Scheduler.js\n@@ -468,7 +468,12 @@ var requestHostCallback;\n var cancelHostCallback;\n var getFrameDeadline;\n \n-if (typeof window === 'undefined') {\n+// \"addEventListener\" might not be available on the window object\n+// if this is a mocked \"window\" object. So we need to validate that too.\n+if (\n+  typeof window === 'undefined' ||\n+  typeof window.addEventListener !== 'function'\n+) {\n   // If this accidentally gets imported in a non-browser environment, fallback\n   // to a naive implementation.\n   var timeoutID = -1;"
    },
    {
      "message": "restore global window.event after event dispatching",
      "diff": "diff --git a/packages/shared/invokeGuardedCallbackImpl.js b/packages/shared/invokeGuardedCallbackImpl.js\nindex 70cedd4cb32d..74ec54c871b0 100644\n--- a/packages/shared/invokeGuardedCallbackImpl.js\n+++ b/packages/shared/invokeGuardedCallbackImpl.js\n@@ -98,6 +98,13 @@ if (__DEV__) {\n       // browsers that support it.\n       let windowEvent = window.event;\n \n+      // Keeps track of the descriptor of window.event to restore it after event\n+      // dispatching: https://github.com/facebook/react/issues/13688\n+      const windowEventDescriptor = Object.getOwnPropertyDescriptor(\n+        window,\n+        'event',\n+      );\n+\n       // Create an event handler for our fake event. We will synchronously\n       // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n       // call the user-provided callback.\n@@ -172,6 +179,10 @@ if (__DEV__) {\n       evt.initEvent(evtType, false, false);\n       fakeNode.dispatchEvent(evt);\n \n+      if (windowEventDescriptor) {\n+        Object.defineProperty(window, 'event', windowEventDescriptor);\n+      }\n+\n       if (didError) {\n         if (!didSetError) {\n           // The callback errored, but the error event never fired."
    },
    {
      "message": "revert \"updating dependencies for react-noop-renderer\"",
      "diff": "diff --git a/packages/react-noop-renderer/package.json b/packages/react-noop-renderer/package.json\nindex a7f8435d9a84..f3f82b6fd2e7 100644\n--- a/packages/react-noop-renderer/package.json\n+++ b/packages/react-noop-renderer/package.json\n@@ -10,7 +10,7 @@\n     \"object-assign\": \"^4.1.1\",\n     \"prop-types\": \"^15.6.2\",\n     \"regenerator-runtime\": \"^0.11.0\",\n-    \"react-reconciler\": \"* || 0.15.0-alpha.0\"\n+    \"react-reconciler\": \"*\"\n   },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0 || 16.6.0-alpha.0\""
    },
    {
      "message": "revert \"update error codes for 16.6.0-alpha.0 release\"",
      "diff": "diff --git a/scripts/error-codes/codes.json b/scripts/error-codes/codes.json\nindex 9b91dad0da71..7785769f3ab2 100644\n--- a/scripts/error-codes/codes.json\n+++ b/scripts/error-codes/codes.json\n@@ -286,6 +286,5 @@\n   \"284\": \"Expected ref to be a function, a string, an object returned by React.createRef(), or null.\",\n   \"285\": \"The root failed to unmount after an error. This is likely a bug in React. Please file an issue.\",\n   \"286\": \"%s(...): the first argument must be a React class instance. Instead received: %s.\",\n-  \"287\": \"It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `schedule/tracking` module with `schedule/tracking-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling\",\n-  \"288\": \"It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `schedule/tracing` module with `schedule/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling\"\n+  \"287\": \"It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `schedule/tracking` module with `schedule/tracking-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling\"\n }"
    },
    {
      "message": "fix a regression related to isreactcomponent prototype check",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js b/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js\nindex 7db34eafa700..115544170a83 100644\n--- a/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js\n+++ b/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js\n@@ -1762,4 +1762,18 @@ describe('ReactCompositeComponent', () => {\n       {withoutStack: true},\n     );\n   });\n+\n+  // Regression test for accidental breaking change\n+  // https://github.com/facebook/react/issues/13580\n+  it('should support classes shadowing isReactComponent', () => {\n+    class Shadow extends React.Component {\n+      isReactComponent() {}\n+      render() {\n+        return <div />;\n+      }\n+    }\n+    const container = document.createElement('div');\n+    ReactDOM.render(<Shadow />, container);\n+    expect(container.firstChild.tagName).toBe('DIV');\n+  });\n });\ndiff --git a/packages/react-reconciler/src/ReactFiber.js b/packages/react-reconciler/src/ReactFiber.js\nindex 5fba962eed60..5ba88f0011c9 100644\n--- a/packages/react-reconciler/src/ReactFiber.js\n+++ b/packages/react-reconciler/src/ReactFiber.js\n@@ -284,12 +284,7 @@ const createFiber = function(\n \n function shouldConstruct(Component: Function) {\n   const prototype = Component.prototype;\n-  return (\n-    typeof prototype === 'object' &&\n-    prototype !== null &&\n-    typeof prototype.isReactComponent === 'object' &&\n-    prototype.isReactComponent !== null\n-  );\n+  return !!(prototype && prototype.isReactComponent);\n }\n \n export function resolveLazyComponentTag("
    },
    {
      "message": "build schedule which is required for time slicing demo",
      "diff": "diff --git a/fixtures/unstable-async/suspense/README.md b/fixtures/unstable-async/suspense/README.md\nindex cb5b823c34e9..66d92b5186ec 100644\n--- a/fixtures/unstable-async/suspense/README.md\n+++ b/fixtures/unstable-async/suspense/README.md\n@@ -26,7 +26,7 @@ Set [the `enableSuspense` flag](https://github.com/facebook/react/blob/d79238f1e\n # 1: Build react from source\n cd /path/to/react\n yarn\n-yarn build dom,core,interaction,simple-cache-provider --type=NODE\n+yarn build dom-client,core,simple-cache-provider,schedule --type=NODE\n \n # 2: Install fixture dependencies\n cd fixtures/unstable-async/suspense/\ndiff --git a/fixtures/unstable-async/time-slicing/README.md b/fixtures/unstable-async/time-slicing/README.md\nindex 8d068a393b7f..d2bbd291bc6a 100644\n--- a/fixtures/unstable-async/time-slicing/README.md\n+++ b/fixtures/unstable-async/time-slicing/README.md\n@@ -18,7 +18,7 @@ There are also known bugs and inefficiencies in master so **don't use this fixtu\n # 1: Build react from source\n cd /path/to/react\n yarn\n-yarn build dom,core,interaction,simple-cache-provider --type=NODE\n+yarn build dom-client,core,simple-cache-provider,schedule --type=NODE\n \n # 2: Install fixture dependencies\n cd fixtures/unstable-async/time-slicing/"
    },
    {
      "message": "build script correctly bumps prerelease deps  for react",
      "diff": "diff --git a/scripts/release/build-commands/update-package-versions.js b/scripts/release/build-commands/update-package-versions.js\nindex 7d1ed1e6c966..60e98fbc2f28 100644\n--- a/scripts/release/build-commands/update-package-versions.js\n+++ b/scripts/release/build-commands/update-package-versions.js\n@@ -61,7 +61,22 @@ const update = async ({cwd, dry, packages, version}) => {\n       // Unstable package version.\n       json.version = getNextVersion(json.version, version);\n \n-      if (project !== 'react' && json.peerDependencies) {\n+      if (project === 'react') {\n+        // Update inter-package dependencies as well.\n+        // e.g. react depends on scheduler\n+        if (json.dependencies) {\n+          Object.keys(json.dependencies).forEach(dependency => {\n+            if (packages.indexOf(dependency) >= 0) {\n+              const prevVersion = json.dependencies[dependency];\n+              const nextVersion = getNextVersion(\n+                prevVersion.replace('^', ''),\n+                version\n+              );\n+              json.dependencies[dependency] = `^${nextVersion}`;\n+            }\n+          });\n+        }\n+      } else if (json.peerDependencies) {\n         let peerVersion = json.peerDependencies.react.replace('^', '');\n \n         // If the previous release was a pre-release version,"
    },
    {
      "message": "remove emove type judgment when defining warning props",
      "diff": "diff --git a/packages/react/src/ReactElement.js b/packages/react/src/ReactElement.js\nindex 4d0c674dc213..99a465fe2e93 100644\n--- a/packages/react/src/ReactElement.js\n+++ b/packages/react/src/ReactElement.js\n@@ -229,20 +229,15 @@ export function createElement(type, config, children) {\n   }\n   if (__DEV__) {\n     if (key || ref) {\n-      if (\n-        typeof props.$$typeof === 'undefined' ||\n-        props.$$typeof !== REACT_ELEMENT_TYPE\n-      ) {\n-        const displayName =\n-          typeof type === 'function'\n-            ? type.displayName || type.name || 'Unknown'\n-            : type;\n-        if (key) {\n-          defineKeyPropWarningGetter(props, displayName);\n-        }\n-        if (ref) {\n-          defineRefPropWarningGetter(props, displayName);\n-        }\n+      const displayName =\n+        typeof type === 'function'\n+          ? type.displayName || type.name || 'Unknown'\n+          : type;\n+      if (key) {\n+        defineKeyPropWarningGetter(props, displayName);\n+      }\n+      if (ref) {\n+        defineRefPropWarningGetter(props, displayName);\n       }\n     }\n   }"
    },
    {
      "message": "remove negative lookbehind from rollup plugin that broke node <= v8.9",
      "diff": "diff --git a/scripts/rollup/plugins/strip-unused-imports.js b/scripts/rollup/plugins/strip-unused-imports.js\nindex 8794f14ddd78..fe276702a26b 100644\n--- a/scripts/rollup/plugins/strip-unused-imports.js\n+++ b/scripts/rollup/plugins/strip-unused-imports.js\n@@ -6,16 +6,22 @@\n  */\n 'use strict';\n \n-module.exports = function sizes(pureExternalModules) {\n+module.exports = function stripUnusedImports(pureExternalModules) {\n   return {\n     name: 'scripts/rollup/plugins/strip-unused-imports',\n     transformBundle(code) {\n       pureExternalModules.forEach(module => {\n+        // Ideally this would use a negative lookbehind: (?<!= *)\n+        // But this isn't supported by the Node <= 8.9.\n+        // So instead we try to handle the most common cases:\n+        // 1. foo,bar=require(\"bar\"),baz\n+        // 2. foo;bar = require('bar');baz\n+        // 3.   require('bar');\n         const regExp = new RegExp(\n-          `(?<!= *)require\\\\([\"']${module}[\"']\\\\)[,;]`,\n+          `([,;]| {2})require\\\\([\"']${module}[\"']\\\\)[,;]`,\n           'g'\n         );\n-        code = code.replace(regExp, '');\n+        code = code.replace(regExp, '$1');\n       });\n       return {code};\n     },"
    },
    {
      "message": "update scroll restoration logic in suspense fixture",
      "diff": "diff --git a/fixtures/unstable-async/suspense/src/components/App.js b/fixtures/unstable-async/suspense/src/components/App.js\nindex 6c639487c043..1c8df3c1092b 100644\n--- a/fixtures/unstable-async/suspense/src/components/App.js\n+++ b/fixtures/unstable-async/suspense/src/components/App.js\n@@ -21,7 +21,7 @@ export default class App extends PureComponent {\n   componentDidUpdate(prevProps, prevState) {\n     if (\n       prevState.showDetail !== this.state.showDetail ||\n-      prevState.currentId !== this.state.currentId\n+      (prevState.currentId !== this.state.currentId && this.state.showDetail)\n     ) {\n       window.scrollTo(0, 0);\n     }"
    },
    {
      "message": "remove unused state initialvalue from reactdomfiberselect",
      "diff": "diff --git a/packages/react-dom/src/client/ReactDOMFiberSelect.js b/packages/react-dom/src/client/ReactDOMFiberSelect.js\nindex 1c51a02376b1..9fb0f0fec9ce 100644\n--- a/packages/react-dom/src/client/ReactDOMFiberSelect.js\n+++ b/packages/react-dom/src/client/ReactDOMFiberSelect.js\n@@ -13,7 +13,6 @@ import warning from 'shared/warning';\n \n import ReactControlledValuePropTypes from '../shared/ReactControlledValuePropTypes';\n import {getToStringValue, toString} from './ToStringValue';\n-import type {ToStringValue} from './ToStringValue';\n \n let didWarnValueDefaultValue;\n \n@@ -23,7 +22,6 @@ if (__DEV__) {\n \n type SelectWithWrapperState = HTMLSelectElement & {\n   _wrapperState: {\n-    initialValue: ?ToStringValue,\n     wasMultiple: boolean,\n   },\n };\n@@ -148,9 +146,7 @@ export function initWrapperState(element: Element, props: Object) {\n     checkSelectPropTypes(props);\n   }\n \n-  const value = props.value;\n   node._wrapperState = {\n-    initialValue: value != null ? value : props.defaultValue,\n     wasMultiple: !!props.multiple,\n   };\n \n@@ -186,10 +182,6 @@ export function postMountWrapper(element: Element, props: Object) {\n \n export function postUpdateWrapper(element: Element, props: Object) {\n   const node = ((element: any): SelectWithWrapperState);\n-  // After the initial mount, we control selected-ness manually so don't pass\n-  // this value down\n-  node._wrapperState.initialValue = undefined;\n-\n   const wasMultiple = node._wrapperState.wasMultiple;\n   node._wrapperState.wasMultiple = !!props.multiple;"
    },
    {
      "message": "ensure arguments are coerced to strings in warnings",
      "diff": "diff --git a/packages/shared/warningWithoutStack.js b/packages/shared/warningWithoutStack.js\nindex 50b58a85d6f6..c2c911a26456 100644\n--- a/packages/shared/warningWithoutStack.js\n+++ b/packages/shared/warningWithoutStack.js\n@@ -26,7 +26,8 @@ if (__DEV__) {\n       return;\n     }\n     if (typeof console !== 'undefined') {\n-      console.error('Warning: ' + format, ...args);\n+      const stringArgs = args.map(item => '' + item);\n+      console.error('Warning: ' + format, ...stringArgs);\n     }\n     try {\n       // --- Welcome to debugging React ---"
    },
    {
      "message": "support tangentialpressure and twist fields of pointer events",
      "diff": "diff --git a/packages/react-dom/src/events/SyntheticPointerEvent.js b/packages/react-dom/src/events/SyntheticPointerEvent.js\nindex 96a488f18632..3654d9829ad0 100644\n--- a/packages/react-dom/src/events/SyntheticPointerEvent.js\n+++ b/packages/react-dom/src/events/SyntheticPointerEvent.js\n@@ -16,8 +16,10 @@ const SyntheticPointerEvent = SyntheticMouseEvent.extend({\n   width: null,\n   height: null,\n   pressure: null,\n+  tangentialPressure: null,\n   tiltX: null,\n   tiltY: null,\n+  twist: null,\n   pointerType: null,\n   isPrimary: null,\n });"
    },
    {
      "message": "treat focusable as enumerated boolean svg attribute",
      "diff": "diff --git a/fixtures/attribute-behavior/AttributeTableSnapshot.md b/fixtures/attribute-behavior/AttributeTableSnapshot.md\nindex d0fa5f567f5e..62dc25d7771b 100644\n--- a/fixtures/attribute-behavior/AttributeTableSnapshot.md\n+++ b/fixtures/attribute-behavior/AttributeTableSnapshot.md\n@@ -3587,8 +3587,8 @@\n | `focusable=(integer)`| (changed)| `\"1\"` |\n | `focusable=(NaN)`| (changed, warning)| `\"NaN\"` |\n | `focusable=(float)`| (changed)| `\"99.99\"` |\n-| `focusable=(true)`| (initial, warning)| `<null>` |\n-| `focusable=(false)`| (initial, warning)| `<null>` |\n+| `focusable=(true)`| (changed)| `\"true\"` |\n+| `focusable=(false)`| (changed)| `\"false\"` |\n | `focusable=(string 'true')`| (changed)| `\"true\"` |\n | `focusable=(string 'false')`| (changed)| `\"false\"` |\n | `focusable=(string 'on')`| (changed)| `\"on\"` |\ndiff --git a/packages/react-dom/src/shared/DOMProperty.js b/packages/react-dom/src/shared/DOMProperty.js\nindex 23a00b48a59b..cef4609497fb 100644\n--- a/packages/react-dom/src/shared/DOMProperty.js\n+++ b/packages/react-dom/src/shared/DOMProperty.js\n@@ -260,7 +260,12 @@ const properties = {};\n // In React, we let users pass `true` and `false` even though technically\n // these aren't boolean attributes (they are coerced to strings).\n // Since these are SVG attributes, their attribute names are case-sensitive.\n-['autoReverse', 'externalResourcesRequired', 'preserveAlpha'].forEach(name => {\n+[\n+  'autoReverse',\n+  'externalResourcesRequired',\n+  'focusable',\n+  'preserveAlpha',\n+].forEach(name => {\n   properties[name] = new PropertyInfoRecord(\n     name,\n     BOOLEANISH_STRING,"
    },
    {
      "message": "remove irrelevant suggestion of a legacy method from a warning",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js b/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js\nindex c0b30b032e57..6e1320dd7cc3 100644\n--- a/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js\n+++ b/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js\n@@ -466,9 +466,7 @@ describe('ReactCompositeComponent', () => {\n       instance = ReactDOM.render(<Component />, container);\n     }).toWarnDev(\n       'Cannot update during an existing state transition (such as within ' +\n-        \"`render` or another component's constructor). Render methods should \" +\n-        'be a pure function of props and state; constructor side-effects are ' +\n-        'an anti-pattern, but can be moved to `componentWillMount`.',\n+        '`render`). Render methods should be a pure function of props and state.',\n       {withoutStack: true},\n     );\n \ndiff --git a/packages/react-reconciler/src/ReactFiberScheduler.js b/packages/react-reconciler/src/ReactFiberScheduler.js\nindex 325522b2c4b4..a7e60f17b1e6 100644\n--- a/packages/react-reconciler/src/ReactFiberScheduler.js\n+++ b/packages/react-reconciler/src/ReactFiberScheduler.js\n@@ -210,9 +210,7 @@ if (__DEV__) {\n         warningWithoutStack(\n           false,\n           'Cannot update during an existing state transition (such as within ' +\n-            \"`render` or another component's constructor). Render methods should \" +\n-            'be a pure function of props and state; constructor side-effects are ' +\n-            'an anti-pattern, but can be moved to `componentWillMount`.',\n+            '`render`). Render methods should be a pure function of props and state.',\n         );\n         didWarnAboutStateTransition = true;\n         break;"
    },
    {
      "message": "add an invariant to createroot to validate containers",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMRoot-test.js b/packages/react-dom/src/__tests__/ReactDOMRoot-test.js\nindex deded7213005..1d3bc4074879 100644\n--- a/packages/react-dom/src/__tests__/ReactDOMRoot-test.js\n+++ b/packages/react-dom/src/__tests__/ReactDOMRoot-test.js\n@@ -366,4 +366,12 @@ describe('ReactDOMRoot', () => {\n     );\n     expect(() => batch.commit()).toThrow('Element type is invalid');\n   });\n+\n+  it('throws a good message on invalid containers', () => {\n+    expect(() => {\n+      ReactDOM.unstable_createRoot(<div>Hi</div>);\n+    }).toThrow(\n+      'unstable_createRoot(...): Target container is not a DOM element.',\n+    );\n+  });\n });\ndiff --git a/packages/react-dom/src/client/ReactDOM.js b/packages/react-dom/src/client/ReactDOM.js\nindex 55760eaff53d..8a179d1e55a4 100644\n--- a/packages/react-dom/src/client/ReactDOM.js\n+++ b/packages/react-dom/src/client/ReactDOM.js\n@@ -758,6 +758,10 @@ ReactDOM.unstable_createRoot = function createRoot(\n   container: DOMContainer,\n   options?: RootOptions,\n ): ReactRoot {\n+  invariant(\n+    isValidContainer(container),\n+    'unstable_createRoot(...): Target container is not a DOM element.',\n+  );\n   const hydrate = options != null && options.hydrate === true;\n   return new ReactRoot(container, true, hydrate);\n };"
    },
    {
      "message": "add regression test for placeholder fallbacks with lifecycle methods",
      "diff": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js b/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\nindex 14678d160ea9..c95e050cfe00 100644\n--- a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\n+++ b/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\n@@ -1314,6 +1314,37 @@ describe('ReactSuspense', () => {\n \n       expect(ReactNoop.getChildren()).toEqual([span('Loading...')]);\n     });\n+\n+    it('does not infinite loop if fallback contains lifecycle method', async () => {\n+      class Fallback extends React.Component {\n+        state = {\n+          name: 'foo',\n+        };\n+        componentDidMount() {\n+          this.setState({\n+            name: 'bar',\n+          });\n+        }\n+        render() {\n+          return <Text text=\"Loading...\" />;\n+        }\n+      }\n+\n+      class Demo extends React.Component {\n+        render() {\n+          return (\n+            <Placeholder fallback={<Fallback />}>\n+              <AsyncText text=\"Hi\" ms={100} />\n+            </Placeholder>\n+          );\n+        }\n+      }\n+\n+      ReactNoop.renderLegacySyncRoot(<Demo />);\n+      expect(ReactNoop.getChildren()).toEqual([span('Loading...')]);\n+      await advanceTimers(100);\n+      expect(ReactNoop.getChildren()).toEqual([span('Hi')]);\n+    });\n   });\n \n   it('does not call lifecycles of a suspended component', async () => {"
    },
    {
      "message": "set current fiber during before-mutation traversal",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberScheduler.js b/packages/react-reconciler/src/ReactFiberScheduler.js\nindex 2bf21ab1b2c2..72f2022c6dd4 100644\n--- a/packages/react-reconciler/src/ReactFiberScheduler.js\n+++ b/packages/react-reconciler/src/ReactFiberScheduler.js\n@@ -428,8 +428,11 @@ function commitAllHostEffects() {\n \n function commitBeforeMutationLifecycles() {\n   while (nextEffect !== null) {\n-    const effectTag = nextEffect.effectTag;\n+    if (__DEV__) {\n+      ReactCurrentFiber.setCurrentFiber(nextEffect);\n+    }\n \n+    const effectTag = nextEffect.effectTag;\n     if (effectTag & Snapshot) {\n       recordEffect();\n       const current = nextEffect.alternate;\n@@ -440,6 +443,10 @@ function commitBeforeMutationLifecycles() {\n     // This will be done by commitAllLifeCycles()\n     nextEffect = nextEffect.nextEffect;\n   }\n+\n+  if (__DEV__) {\n+    ReactCurrentFiber.resetCurrentFiber();\n+  }\n }\n \n function commitAllLifeCycles("
    },
    {
      "message": "link create-subscription doc to gh issue with de-opt explanation",
      "diff": "diff --git a/packages/create-subscription/README.md b/packages/create-subscription/README.md\nindex caca7a3a2e5c..3fa90d1e693d 100644\n--- a/packages/create-subscription/README.md\n+++ b/packages/create-subscription/README.md\n@@ -15,7 +15,7 @@ Other cases have **better long-term solutions**:\n \n The main motivation for `create-subscription` is to provide a way for library authors to ensure compatibility with React's upcoming asynchronous rendering mode. `create-subscription` guarantees correctness in async mode, accounting for the subtle bugs and edge cases that a library author might otherwise miss.\n \n-However, it achieves correctness by sometimes de-opting to synchronous mode, obviating the benefits of async rendering. This is an inherent limitation of storing state outside of React's managed state queue and rendering in response to a change event.\n+However, [it achieves correctness by sometimes de-opting to synchronous mode](https://github.com/facebook/react/issues/13186#issuecomment-403959161), obviating the benefits of async rendering. This is an inherent limitation of storing state outside of React's managed state queue and rendering in response to a change event.\n \n The effect of de-opting to sync mode is that the main thread may periodically be blocked (in the case of CPU-bound work), and placeholders may appear earlier than desired (in the case of IO-bound work)."
    },
    {
      "message": "drop handling for ms and o prefixes for css transition and animation events.",
      "diff": "diff --git a/packages/react-dom/src/events/getVendorPrefixedEventName.js b/packages/react-dom/src/events/getVendorPrefixedEventName.js\nindex 1ba369e9d14f..bed5532fcbd3 100644\n--- a/packages/react-dom/src/events/getVendorPrefixedEventName.js\n+++ b/packages/react-dom/src/events/getVendorPrefixedEventName.js\n@@ -20,8 +20,6 @@ function makePrefixMap(styleProp, eventName) {\n   prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n   prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n   prefixes['Moz' + styleProp] = 'moz' + eventName;\n-  prefixes['ms' + styleProp] = 'MS' + eventName;\n-  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n \n   return prefixes;\n }"
    },
    {
      "message": "fix this in a functional component for shallowrenderer",
      "diff": "diff --git a/packages/react-test-renderer/src/ReactShallowRenderer.js b/packages/react-test-renderer/src/ReactShallowRenderer.js\nindex 54f671e6607d..ceaf1e748afe 100644\n--- a/packages/react-test-renderer/src/ReactShallowRenderer.js\n+++ b/packages/react-test-renderer/src/ReactShallowRenderer.js\n@@ -107,7 +107,11 @@ class ReactShallowRenderer {\n \n         this._mountClassComponent(element, this._context);\n       } else {\n-        this._rendered = element.type(element.props, this._context);\n+        this._rendered = element.type.call(\n+          undefined,\n+          element.props,\n+          this._context,\n+        );\n       }\n     }\n \ndiff --git a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\nindex b47495bca981..15eb862fcf51 100644\n--- a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n+++ b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n@@ -1407,4 +1407,15 @@ describe('ReactShallowRenderer', () => {\n     instance.setState(state => ({count: state.count + 1}));\n     expect(log).toEqual(['render']);\n   });\n+\n+  it('should not get this in a functional component', () => {\n+    const logs = [];\n+    function Foo() {\n+      logs.push(this);\n+      return <div>foo</div>;\n+    }\n+    const shallowRenderer = createRenderer();\n+    shallowRenderer.render(<Foo foo=\"bar\" />);\n+    expect(logs).toEqual([undefined]);\n+  });\n });"
    },
    {
      "message": "fix incorrect data in compositionend event with korean ime on ie11",
      "diff": "diff --git a/packages/react-dom/src/events/BeforeInputEventPlugin.js b/packages/react-dom/src/events/BeforeInputEventPlugin.js\nindex 9bdb8dab7d01..445575173fae 100644\n--- a/packages/react-dom/src/events/BeforeInputEventPlugin.js\n+++ b/packages/react-dom/src/events/BeforeInputEventPlugin.js\n@@ -200,6 +200,20 @@ function getDataFromCustomEvent(nativeEvent) {\n   return null;\n }\n \n+/**\n+ * Check if a composition event was triggered by Korean IME.\n+ * Our fallback mode does not work well with IE's Korean IME,\n+ * so just use native composition events when Korean IME is used.\n+ * Although CompositionEvent.locale property is deprecated,\n+ * it is available in IE, where our fallback mode is enabled.\n+ *\n+ * @param {object} nativeEvent\n+ * @return {boolean}\n+ */\n+function isUsingKoreanIME(nativeEvent) {\n+  return nativeEvent.locale === 'ko';\n+}\n+\n // Track the current IME composition status, if any.\n let isComposing = false;\n \n@@ -229,7 +243,7 @@ function extractCompositionEvent(\n     return null;\n   }\n \n-  if (useFallbackCompositionData) {\n+  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {\n     // The current composition is stored statically and must not be\n     // overwritten while composition continues.\n     if (!isComposing && eventType === eventTypes.compositionStart) {\n@@ -378,7 +392,9 @@ function getFallbackBeforeInputChars(topLevelType: TopLevelType, nativeEvent) {\n       }\n       return null;\n     case TOP_COMPOSITION_END:\n-      return useFallbackCompositionData ? null : nativeEvent.data;\n+      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)\n+        ? null\n+        : nativeEvent.data;\n     default:\n       return null;\n   }"
    },
    {
      "message": "delete a couple of redundant lines in performworkonroot in reactfiberscheduler.js",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberScheduler.js b/packages/react-reconciler/src/ReactFiberScheduler.js\nindex 0bd0f1c82e6f..8f78c0bc4a15 100644\n--- a/packages/react-reconciler/src/ReactFiberScheduler.js\n+++ b/packages/react-reconciler/src/ReactFiberScheduler.js\n@@ -1768,7 +1768,6 @@ function performWorkOnRoot(\n       // This root is already complete. We can commit it.\n       completeRoot(root, finishedWork, expirationTime);\n     } else {\n-      root.finishedWork = null;\n       finishedWork = renderRoot(root, expirationTime, false);\n       if (finishedWork !== null) {\n         // We've completed the root. Commit it.\n@@ -1782,7 +1781,6 @@ function performWorkOnRoot(\n       // This root is already complete. We can commit it.\n       completeRoot(root, finishedWork, expirationTime);\n     } else {\n-      root.finishedWork = null;\n       finishedWork = renderRoot(root, expirationTime, true);\n       if (finishedWork !== null) {\n         // We've completed the root. Check the deadline one more time"
    },
    {
      "message": "fix jest/matchers/towarndev expected, actual order for jest-diff",
      "diff": "diff --git a/scripts/jest/matchers/toWarnDev.js b/scripts/jest/matchers/toWarnDev.js\nindex f8ae0be17414..c8e17d794c11 100644\n--- a/scripts/jest/matchers/toWarnDev.js\n+++ b/scripts/jest/matchers/toWarnDev.js\n@@ -49,11 +49,11 @@ const createMatcherFor = consoleMethod =>\n         } else if (expectedMessages.length === 1) {\n           errorMessage =\n             'Unexpected warning recorded: ' +\n-            jestDiff(normalizedMessage, expectedMessages[0]);\n+            jestDiff(expectedMessages[0], normalizedMessage);\n         } else {\n           errorMessage =\n             'Unexpected warning recorded: ' +\n-            jestDiff([normalizedMessage], expectedMessages);\n+            jestDiff(expectedMessages, [normalizedMessage]);\n         }\n \n         // Record the call stack for unexpected warnings."
    },
    {
      "message": "update comment in computeasyncexpiration to reflect code",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberScheduler.js b/packages/react-reconciler/src/ReactFiberScheduler.js\nindex dbd252a20e03..0bd0f1c82e6f 100644\n--- a/packages/react-reconciler/src/ReactFiberScheduler.js\n+++ b/packages/react-reconciler/src/ReactFiberScheduler.js\n@@ -1208,7 +1208,7 @@ function captureCommitPhaseError(fiber: Fiber, error: mixed) {\n function computeAsyncExpiration(currentTime: ExpirationTime) {\n   // Given the current clock time, returns an expiration time. We use rounding\n   // to batch like updates together.\n-  // Should complete within ~1000ms. 1200ms max.\n+  // Should complete within ~5000ms. 5250ms max.\n   const expirationMs = 5000;\n   const bucketSizeMs = 250;\n   return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);"
    },
    {
      "message": "fix react native example links in readme of 'react-reconciler'",
      "diff": "diff --git a/packages/react-reconciler/README.md b/packages/react-reconciler/README.md\nindex 5398c3c5a3ac..256f466a7fc7 100644\n--- a/packages/react-reconciler/README.md\n+++ b/packages/react-reconciler/README.md\n@@ -32,7 +32,7 @@ module.exports = RendererPublicAPI;\n \n * [React ART](https://github.com/facebook/react/blob/master/packages/react-art/src/ReactART.js)\n * [React DOM](https://github.com/facebook/react/blob/master/packages/react-dom/src/client/ReactDOM.js)\n-* [React Native](https://github.com/facebook/react/blob/master/packages/react-native-renderer/src/ReactNativeFiberRenderer.js)\n+* [React Native](https://github.com/facebook/react/blob/master/packages/react-native-renderer/src/ReactNativeRenderer.js)\n \n If these links break please file an issue and we\u2019ll fix them. They intentionally link to the latest versions since the API is still evolving."
    },
    {
      "message": "add test to ensure no duplicate values in reactsymbols",
      "diff": "diff --git a/packages/shared/__tests__/ReactSymbols-test.internal.js b/packages/shared/__tests__/ReactSymbols-test.internal.js\nnew file mode 100644\nindex 000000000000..12f12a5d417e\n--- /dev/null\n+++ b/packages/shared/__tests__/ReactSymbols-test.internal.js\n@@ -0,0 +1,39 @@\n+/**\n+ * Copyright (c) 2013-present, Facebook, Inc.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @emails react-core\n+ */\n+'use strict';\n+\n+describe('ReactSymbols', () => {\n+  beforeEach(() => jest.resetModules());\n+\n+  const expectToBeUnique = keyValuePairs => {\n+    const map = new Map();\n+    keyValuePairs.forEach(([key, value]) => {\n+      if (map.has(value)) {\n+        throw Error(\n+          `${key} value ${value.toString()} is the same as ${map.get(value)}.`,\n+        );\n+      }\n+      map.set(value, key);\n+    });\n+  };\n+\n+  it('Symbol values should be unique', () => {\n+    expectToBeUnique(Object.entries(require('shared/ReactSymbols')));\n+  });\n+\n+  it('numeric values should be unique', () => {\n+    const originalSymbolFor = global.Symbol.for;\n+    global.Symbol.for = null;\n+    try {\n+      expectToBeUnique(Object.entries(require('shared/ReactSymbols')));\n+    } finally {\n+      global.Symbol.for = originalSymbolFor;\n+    }\n+  });\n+});"
    },
    {
      "message": "remove timeout export on react object unless enablesuspense flag",
      "diff": "diff --git a/packages/react/src/React.js b/packages/react/src/React.js\nindex 2f6221a23eff..50ce68dc3cfd 100644\n--- a/packages/react/src/React.js\n+++ b/packages/react/src/React.js\n@@ -55,7 +55,6 @@ const React = {\n   StrictMode: REACT_STRICT_MODE_TYPE,\n   unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,\n   unstable_Profiler: REACT_PROFILER_TYPE,\n-  Timeout: REACT_TIMEOUT_TYPE,\n \n   createElement: __DEV__ ? createElementWithValidation : createElement,\n   cloneElement: __DEV__ ? cloneElementWithValidation : cloneElement,"
    },
    {
      "message": "use reactfibererrordialog fork for fabric renderer",
      "diff": "diff --git a/scripts/rollup/forks.js b/scripts/rollup/forks.js\nindex 97f73879ea0d..0a223c59ae88 100644\n--- a/scripts/rollup/forks.js\n+++ b/scripts/rollup/forks.js\n@@ -121,6 +121,7 @@ const forks = Object.freeze({\n       case RN_FB_PROD:\n         switch (entry) {\n           case 'react-native-renderer':\n+          case 'react-native-renderer/fabric':\n             // Use the RN fork which plays well with redbox.\n             return 'react-reconciler/src/forks/ReactFiberErrorDialog.native.js';\n           default:"
    },
    {
      "message": "set owner correctly inside forwardref and context consumer",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberBeginWork.js b/packages/react-reconciler/src/ReactFiberBeginWork.js\nindex 14927b2db98e..d08ebd133024 100644\n--- a/packages/react-reconciler/src/ReactFiberBeginWork.js\n+++ b/packages/react-reconciler/src/ReactFiberBeginWork.js\n@@ -201,7 +201,17 @@ export default function<T, P, I, TI, HI, PI, C, CC, CX, PL>(\n         return bailoutOnAlreadyFinishedWork(current, workInProgress);\n       }\n     }\n-    const nextChildren = render(nextProps, ref);\n+\n+    let nextChildren;\n+    if (__DEV__) {\n+      ReactCurrentOwner.current = workInProgress;\n+      ReactDebugCurrentFiber.setCurrentPhase('render');\n+      nextChildren = render(nextProps, ref);\n+      ReactDebugCurrentFiber.setCurrentPhase(null);\n+    } else {\n+      nextChildren = render(nextProps, ref);\n+    }\n+\n     reconcileChildren(current, workInProgress, nextChildren);\n     memoizeProps(workInProgress, nextProps);\n     return workInProgress.child;\n@@ -1101,7 +1111,16 @@ export default function<T, P, I, TI, HI, PI, C, CC, CX, PL>(\n       );\n     }\n \n-    const newChildren = render(newValue);\n+    let newChildren;\n+    if (__DEV__) {\n+      ReactCurrentOwner.current = workInProgress;\n+      ReactDebugCurrentFiber.setCurrentPhase('render');\n+      newChildren = render(newValue);\n+      ReactDebugCurrentFiber.setCurrentPhase(null);\n+    } else {\n+      newChildren = render(newValue);\n+    }\n+\n     // React DevTools reads this flag.\n     workInProgress.effectTag |= PerformedWork;\n     reconcileChildren(current, workInProgress, newChildren);"
    },
    {
      "message": "pass component instance to setstate updater as `this`",
      "diff": "diff --git a/packages/react-test-renderer/src/ReactShallowRenderer.js b/packages/react-test-renderer/src/ReactShallowRenderer.js\nindex 9cafeeb2f15e..3134f991eeaf 100644\n--- a/packages/react-test-renderer/src/ReactShallowRenderer.js\n+++ b/packages/react-test-renderer/src/ReactShallowRenderer.js\n@@ -298,7 +298,11 @@ class Updater {\n     const currentState = this._renderer._newState || publicInstance.state;\n \n     if (typeof partialState === 'function') {\n-      partialState = partialState(currentState, publicInstance.props);\n+      partialState = partialState.call(\n+        publicInstance,\n+        currentState,\n+        publicInstance.props,\n+      );\n     }\n \n     // Null and undefined are treated as no-ops.\ndiff --git a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\nindex ce62bba28073..c4cdcd6b65ee 100644\n--- a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n+++ b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n@@ -945,6 +945,27 @@ describe('ReactShallowRenderer', () => {\n     expect(result.props.children).toEqual(2);\n   });\n \n+  it('can access component instance from setState updater function', done => {\n+    let instance;\n+\n+    class SimpleComponent extends React.Component {\n+      state = {};\n+\n+      render() {\n+        instance = this;\n+        return null;\n+      }\n+    }\n+\n+    const shallowRenderer = createRenderer();\n+    shallowRenderer.render(<SimpleComponent />);\n+\n+    instance.setState(function updater(state, props) {\n+      expect(this).toBe(instance);\n+      done();\n+    });\n+  });\n+\n   it('can setState with a callback', () => {\n     let instance;"
    },
    {
      "message": "mark context consumers with performedwork effect on render",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberBeginWork.js b/packages/react-reconciler/src/ReactFiberBeginWork.js\nindex ce93bccfdd6a..5aa7ffc446cd 100644\n--- a/packages/react-reconciler/src/ReactFiberBeginWork.js\n+++ b/packages/react-reconciler/src/ReactFiberBeginWork.js\n@@ -1023,6 +1023,8 @@ export default function<T, P, I, TI, HI, PI, C, CC, CX, PL>(\n     }\n \n     const newChildren = render(newValue);\n+    // React DevTools reads this flag.\n+    workInProgress.effectTag |= PerformedWork;\n     reconcileChildren(current, workInProgress, newChildren);\n     return workInProgress.child;\n   }"
    },
    {
      "message": "call getderivedstatefromprops even for setstate of shallowrenderer",
      "diff": "diff --git a/packages/react-test-renderer/src/ReactShallowRenderer.js b/packages/react-test-renderer/src/ReactShallowRenderer.js\nindex 131db2d41751..49be844e8be8 100644\n--- a/packages/react-test-renderer/src/ReactShallowRenderer.js\n+++ b/packages/react-test-renderer/src/ReactShallowRenderer.js\n@@ -186,9 +186,8 @@ class ReactShallowRenderer {\n           this._instance.UNSAFE_componentWillReceiveProps(props, context);\n         }\n       }\n-\n-      this._updateStateFromStaticLifecycle(props);\n     }\n+    this._updateStateFromStaticLifecycle(props);\n \n     // Read state after cWRP in case it calls setState\n     const state = this._newState || oldState;\ndiff --git a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\nindex 7e60bde00367..59ea0d9c690b 100644\n--- a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n+++ b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n@@ -94,7 +94,7 @@ describe('ReactShallowRenderer', () => {\n     const instance = shallowRenderer.getMountedInstance();\n     instance.setState({});\n \n-    expect(logs).toEqual(['shouldComponentUpdate']);\n+    expect(logs).toEqual(['getDerivedStateFromProps', 'shouldComponentUpdate']);\n \n     logs.splice(0);"
    },
    {
      "message": "prevent removing attributes on custom component tags",
      "diff": "diff --git a/packages/react-dom/src/__tests__/DOMPropertyOperations-test.js b/packages/react-dom/src/__tests__/DOMPropertyOperations-test.js\nindex aabb3e995f86..08874222d594 100644\n--- a/packages/react-dom/src/__tests__/DOMPropertyOperations-test.js\n+++ b/packages/react-dom/src/__tests__/DOMPropertyOperations-test.js\n@@ -155,5 +155,11 @@ describe('DOMPropertyOperations', () => {\n       expect(container.firstChild.getAttribute('value')).toBe('foo');\n       expect(container.firstChild.value).toBe('foo');\n     });\n+\n+    it('should not remove attributes for custom component tag', () => {\n+      const container = document.createElement('div');\n+      ReactDOM.render(<my-icon size=\"5px\" />, container);\n+      expect(container.firstChild.getAttribute('size')).toBe('5px');\n+    });\n   });\n });\ndiff --git a/packages/react-dom/src/shared/DOMProperty.js b/packages/react-dom/src/shared/DOMProperty.js\nindex dd2c8f6e3a42..b01c069dbad0 100644\n--- a/packages/react-dom/src/shared/DOMProperty.js\n+++ b/packages/react-dom/src/shared/DOMProperty.js\n@@ -157,6 +157,9 @@ export function shouldRemoveAttribute(\n   ) {\n     return true;\n   }\n+  if (isCustomComponentTag) {\n+    return false;\n+  }\n   if (propertyInfo !== null) {\n     switch (propertyInfo.type) {\n       case BOOLEAN:"
    },
    {
      "message": "add forwardref dev warning for prop-types on render function",
      "diff": "diff --git a/packages/react/src/__tests__/forwardRef-test.internal.js b/packages/react/src/__tests__/forwardRef-test.internal.js\nindex 068448c43740..5780dbd054c6 100644\n--- a/packages/react/src/__tests__/forwardRef-test.internal.js\n+++ b/packages/react/src/__tests__/forwardRef-test.internal.js\n@@ -249,4 +249,25 @@ describe('forwardRef', () => {\n       'forwardRef requires a render function but was given undefined.',\n     );\n   });\n+\n+  it('should warn if the render function provided has propTypes or defaultProps attributes', () => {\n+    function renderWithPropTypes() {\n+      return null;\n+    }\n+    renderWithPropTypes.propTypes = {};\n+\n+    function renderWithDefaultProps() {\n+      return null;\n+    }\n+    renderWithDefaultProps.defaultProps = {};\n+\n+    expect(() => React.forwardRef(renderWithPropTypes)).toWarnDev(\n+      'forwardRef render functions do not support propTypes or defaultProps. ' +\n+        'Did you accidentally pass a React component?',\n+    );\n+    expect(() => React.forwardRef(renderWithDefaultProps)).toWarnDev(\n+      'forwardRef render functions do not support propTypes or defaultProps. ' +\n+        'Did you accidentally pass a React component?',\n+    );\n+  });\n });\ndiff --git a/packages/react/src/forwardRef.js b/packages/react/src/forwardRef.js\nindex 6a923be12795..6c3c1a4343ba 100644\n--- a/packages/react/src/forwardRef.js\n+++ b/packages/react/src/forwardRef.js\n@@ -18,6 +18,14 @@ export default function forwardRef<Props, ElementType: React$ElementType>(\n       'forwardRef requires a render function but was given %s.',\n       render === null ? 'null' : typeof render,\n     );\n+\n+    if (render != null) {\n+      warning(\n+        render.defaultProps == null && render.propTypes == null,\n+        'forwardRef render functions do not support propTypes or defaultProps. ' +\n+          'Did you accidentally pass a React component?',\n+      );\n+    }\n   }\n \n   return {"
    },
    {
      "message": "add regression test for reading reactcurrentowner statenode",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOM-test.js b/packages/react-dom/src/__tests__/ReactDOM-test.js\nindex 0ca365afd8a9..46b9f5cabe16 100644\n--- a/packages/react-dom/src/__tests__/ReactDOM-test.js\n+++ b/packages/react-dom/src/__tests__/ReactDOM-test.js\n@@ -377,6 +377,26 @@ describe('ReactDOM', () => {\n     }\n   });\n \n+  it('should not crash calling findDOMNode inside a functional component', () => {\n+    const container = document.createElement('div');\n+\n+    class Component extends React.Component {\n+      render() {\n+        return <div />;\n+      }\n+    }\n+\n+    const instance = ReactTestUtils.renderIntoDocument(<Component />);\n+    const App = () => {\n+      ReactDOM.findDOMNode(instance);\n+      return <div />;\n+    };\n+\n+    if (__DEV__) {\n+      ReactDOM.render(<App />, container);\n+    }\n+  });\n+\n   it('throws in DEV if jsdom is destroyed by the time setState() is called', () => {\n     class App extends React.Component {\n       state = {x: 1};"
    },
    {
      "message": "throw more specific error if passed undefined in react.cloneelement",
      "diff": "diff --git a/packages/react/src/ReactElement.js b/packages/react/src/ReactElement.js\nindex 0594412fa78f..9127453b9b55 100644\n--- a/packages/react/src/ReactElement.js\n+++ b/packages/react/src/ReactElement.js\n@@ -5,6 +5,7 @@\n  * LICENSE file in the root directory of this source tree.\n  */\n \n+import invariant from 'fbjs/lib/invariant';\n import warning from 'fbjs/lib/warning';\n import {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\n \n@@ -290,6 +291,12 @@ export function cloneAndReplaceKey(oldElement, newKey) {\n  * See https://reactjs.org/docs/react-api.html#cloneelement\n  */\n export function cloneElement(element, config, children) {\n+  invariant(\n+    !(element === null || element === undefined),\n+    'React.cloneElement(...): The argument must be a React element, but you passed %s.',\n+    element,\n+  );\n+\n   let propName;\n \n   // Original props are copied\ndiff --git a/packages/react/src/__tests__/ReactElementClone-test.js b/packages/react/src/__tests__/ReactElementClone-test.js\nindex d5b08496ba74..475fa623cb22 100644\n--- a/packages/react/src/__tests__/ReactElementClone-test.js\n+++ b/packages/react/src/__tests__/ReactElementClone-test.js\n@@ -359,4 +359,18 @@ describe('ReactElementClone', () => {\n     }\n     expect(clone.props).toEqual({foo: 'ef'});\n   });\n+\n+  it('throws an error if passed null', () => {\n+    const element = null;\n+    expect(() => React.cloneElement(element)).toThrow(\n+      'React.cloneElement(...): The argument must be a React element, but you passed null.',\n+    );\n+  });\n+\n+  it('throws an error if passed undefined', () => {\n+    let element;\n+    expect(() => React.cloneElement(element)).toThrow(\n+      'React.cloneElement(...): The argument must be a React element, but you passed undefined.',\n+    );\n+  });\n });"
    },
    {
      "message": "change create-subscription's peerdep on react to ^16.3.0",
      "diff": "diff --git a/packages/create-subscription/package.json b/packages/create-subscription/package.json\nindex 578169ae00a1..a2b84ee07554 100644\n--- a/packages/create-subscription/package.json\n+++ b/packages/create-subscription/package.json\n@@ -13,7 +13,7 @@\n     \"fbjs\": \"^0.8.16\"\n   },\n   \"peerDependencies\": {\n-    \"react\": \"^16.3.0-alpha.1\"\n+    \"react\": \"^16.3.0\"\n   },\n   \"devDependencies\": {\n     \"rxjs\": \"^5.5.6\""
    },
    {
      "message": "remove defaultprops type parameter from reactnativecomponent",
      "diff": "diff --git a/packages/react-native-renderer/src/ReactNativeComponent.js b/packages/react-native-renderer/src/ReactNativeComponent.js\nindex c6bbb136d089..4aefbd0282c4 100644\n--- a/packages/react-native-renderer/src/ReactNativeComponent.js\n+++ b/packages/react-native-renderer/src/ReactNativeComponent.js\n@@ -37,11 +37,14 @@ import findNumericNodeHandle from './findNumericNodeHandle';\n  *\n  * @abstract\n  */\n-class ReactNativeComponent<DefaultProps, Props, State> extends React.Component<\n+class ReactNativeComponent<Props, State = void> extends React.Component<\n   Props,\n   State,\n > {\n-  static defaultProps: DefaultProps;\n+  /**\n+   * Due to bugs in Flow's handling of React.createClass, some fields already\n+   * declared in the base class need to be redeclared below.\n+   */\n   props: Props;\n   state: State;"
    },
    {
      "message": "add unstable prefix to `observedbits` prop until its proven to work in practice",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberBeginWork.js b/packages/react-reconciler/src/ReactFiberBeginWork.js\nindex fbd85b553939..75a9759508eb 100644\n--- a/packages/react-reconciler/src/ReactFiberBeginWork.js\n+++ b/packages/react-reconciler/src/ReactFiberBeginWork.js\n@@ -953,7 +953,7 @@ export default function<T, P, I, TI, HI, PI, C, CC, CX, PL>(\n     }\n     workInProgress.memoizedProps = newProps;\n \n-    let observedBits = newProps.observedBits;\n+    let observedBits = newProps.unstable_observedBits;\n     if (observedBits === undefined || observedBits === null) {\n       // Subscribe to all changes by default\n       observedBits = MAX_SIGNED_31_BIT_INT;\ndiff --git a/packages/react-reconciler/src/__tests__/ReactNewContext-test.internal.js b/packages/react-reconciler/src/__tests__/ReactNewContext-test.internal.js\nindex 11ffbe8a4f68..fde767979423 100644\n--- a/packages/react-reconciler/src/__tests__/ReactNewContext-test.internal.js\n+++ b/packages/react-reconciler/src/__tests__/ReactNewContext-test.internal.js\n@@ -516,7 +516,7 @@ describe('ReactNewContext', () => {\n \n     function Foo() {\n       return (\n-        <Context.Consumer observedBits={0b01}>\n+        <Context.Consumer unstable_observedBits={0b01}>\n           {value => {\n             ReactNoop.yield('Foo');\n             return <span prop={'Foo: ' + value.foo} />;\n@@ -527,7 +527,7 @@ describe('ReactNewContext', () => {\n \n     function Bar() {\n       return (\n-        <Context.Consumer observedBits={0b10}>\n+        <Context.Consumer unstable_observedBits={0b10}>\n           {value => {\n             ReactNoop.yield('Bar');\n             return <span prop={'Bar: ' + value.bar} />;"
    },
    {
      "message": "replace danger token with a refreshed facebook-open-source-bot token",
      "diff": "diff --git a/scripts/tasks/danger.js b/scripts/tasks/danger.js\nindex 8198d0c22bc4..ad61424e9e29 100644\n--- a/scripts/tasks/danger.js\n+++ b/scripts/tasks/danger.js\n@@ -12,8 +12,8 @@ const spawn = require('child_process').spawn;\n \n const extension = process.platform === 'win32' ? '.cmd' : '';\n \n-// This came from React Native's circle.yml\n-const token = 'e622517d9f1136ea8900' + '07c6373666312cdfaa69';\n+// Facebook-Open-Source-Bot public_repo token\n+const token = 'b186c9a82bab3b08ec80' + 'c0818117619eec6f281a';\n spawn(path.join('node_modules', '.bin', 'danger-ci' + extension), [], {\n   // Allow colors to pass through\n   stdio: 'inherit',"
    },
    {
      "message": "initialize react prop name/attribute name mapping without map",
      "diff": "diff --git a/packages/react-dom/src/shared/DOMProperty.js b/packages/react-dom/src/shared/DOMProperty.js\nindex cd88c0223db3..dd2c8f6e3a42 100644\n--- a/packages/react-dom/src/shared/DOMProperty.js\n+++ b/packages/react-dom/src/shared/DOMProperty.js\n@@ -224,12 +224,12 @@ const properties = {};\n \n // A few React string attributes have a different name.\n // This is a mapping from React prop names to the attribute names.\n-new Map([\n+[\n   ['acceptCharset', 'accept-charset'],\n   ['className', 'class'],\n   ['htmlFor', 'for'],\n   ['httpEquiv', 'http-equiv'],\n-]).forEach((attributeName, name) => {\n+].forEach(([name, attributeName]) => {\n   properties[name] = new PropertyInfoRecord(\n     name,\n     STRING,"
    },
    {
      "message": "add a clearer error message for the consumer render",
      "diff": "diff --git a/packages/react-reconciler/src/ReactFiberBeginWork.js b/packages/react-reconciler/src/ReactFiberBeginWork.js\nindex 7e2be7b79c54..b13a7d757a1e 100644\n--- a/packages/react-reconciler/src/ReactFiberBeginWork.js\n+++ b/packages/react-reconciler/src/ReactFiberBeginWork.js\n@@ -869,6 +869,16 @@ export default function<T, P, I, TI, HI, PI, C, CC, CX, PL>(\n     workInProgress.stateNode = observedBits;\n \n     const render = newProps.children;\n+\n+    if (typeof render !== 'function') {\n+      invariant(\n+        false,\n+        \"A context consumer was rendered with multiple children, or a child that isn't a function. \" +\n+          'A context consumer expects a single child that is a function. ' +\n+          'If you did pass a function, make sure there is no trailing or leading whitespace around it.',\n+      );\n+    }\n+\n     const newChildren = render(newValue);\n     reconcileChildren(current, workInProgress, newChildren);\n     return workInProgress.child;"
    },
    {
      "message": "add an unit test for react.fragment with shallowrenderer",
      "diff": "diff --git a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\nindex 377ba5f67161..318611db64b4 100644\n--- a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n+++ b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n@@ -336,6 +336,34 @@ describe('ReactShallowRenderer', () => {\n     ]);\n   });\n \n+  it('should shallow render a React.fragment', () => {\n+    class SomeComponent extends React.Component {\n+      render() {\n+        return <div />;\n+      }\n+    }\n+    class Fragment extends React.Component {\n+      render() {\n+        return (\n+          <React.Fragment>\n+            <div />\n+            <span />\n+            <SomeComponent />\n+          </React.Fragment>\n+        );\n+      }\n+    }\n+    const shallowRenderer = createRenderer();\n+    const result = shallowRenderer.render(<Fragment />);\n+    expect(result).toEqual(\n+      <React.Fragment>\n+        <div />\n+        <span />\n+        <SomeComponent />\n+      </React.Fragment>,\n+    );\n+  });\n+\n   it('should throw for invalid elements', () => {\n     class SomeComponent extends React.Component {\n       render() {"
    },
    {
      "message": "add a remote for the upstream repo, and try use that for the merge base for danger",
      "diff": "diff --git a/dangerfile.js b/dangerfile.js\nindex c2812889835a..dd135c3fddb5 100644\n--- a/dangerfile.js\n+++ b/dangerfile.js\n@@ -73,14 +73,6 @@ function setBoldness(row, isBold) {\n   }\n }\n \n-/**\n- * Gets the commit that represents the merge between the current branch\n- * and master.\n- */\n-function getMergeBase() {\n-  return git('merge-base HEAD origin/master');\n-}\n-\n /**\n  * Gets the commit that represents the merge between the current branch\n  * and master.\n@@ -100,7 +92,12 @@ function git(args) {\n (async function() {\n   // Use git locally to grab the commit which represents the place\n   // where the branches differ\n-  const mergeBaseCommit = await getMergeBase();\n+  const upstreamRepo = danger.github.pr.base.repo.full_name;\n+  const upstreamRef = danger.github.pr.base.ref;\n+  await git(`remote add upstream https://github.com/${upstreamRepo}.git`);\n+  await git('fetch upstream');\n+  const mergeBaseCommit = await git(`merge-base HEAD upstream/${upstreamRef}`);\n+\n   const commitURL = sha =>\n     `http://react.zpao.com/builds/master/_commits/${sha}/results.json`;\n   const response = await fetch(commitURL(mergeBaseCommit));"
    },
    {
      "message": "include 1% changes in a build, not just greater than",
      "diff": "diff --git a/dangerfile.js b/dangerfile.js\nindex 97824c08edd4..c2812889835a 100644\n--- a/dangerfile.js\n+++ b/dangerfile.js\n@@ -117,8 +117,8 @@ function git(args) {\n   const packagesToShow = results\n     .filter(\n       r =>\n-        Math.abs(r.prevFileSizeChange) > percentToWarrentShowing ||\n-        Math.abs(r.prevGzipSizeChange) > percentToWarrentShowing\n+        Math.abs(r.prevFileSizeChange) >= percentToWarrentShowing ||\n+        Math.abs(r.prevGzipSizeChange) >= percentToWarrentShowing\n     )\n \n     .map(r => r.packageName);"
    },
    {
      "message": "enable warnaboutdeprecatedlifecycles for reactnative",
      "diff": "diff --git a/scripts/rollup/shims/react-native/ReactFeatureFlags.js b/scripts/rollup/shims/react-native/ReactFeatureFlags.js\nindex 5a2b32e747e6..44add71fc5c5 100644\n--- a/scripts/rollup/shims/react-native/ReactFeatureFlags.js\n+++ b/scripts/rollup/shims/react-native/ReactFeatureFlags.js\n@@ -12,7 +12,7 @@\n const ReactFeatureFlags = {\n   debugRenderPhaseSideEffects: false,\n   debugRenderPhaseSideEffectsForStrictMode: false,\n-  warnAboutDeprecatedLifecycles: false,\n+  warnAboutDeprecatedLifecycles: true,\n };\n \n module.exports = ReactFeatureFlags;"
    },
    {
      "message": "add a workaround for incomplete proxy polyfill issue",
      "diff": "diff --git a/packages/events/SyntheticEvent.js b/packages/events/SyntheticEvent.js\nindex 4380bf09a8f4..beaaa5947e6c 100644\n--- a/packages/events/SyntheticEvent.js\n+++ b/packages/events/SyntheticEvent.js\n@@ -12,7 +12,6 @@ import invariant from 'fbjs/lib/invariant';\n import warning from 'fbjs/lib/warning';\n \n let didWarnForAddedNewProperty = false;\n-const isProxySupported = typeof Proxy === 'function';\n const EVENT_POOL_SIZE = 10;\n \n const shouldBeReleasedProperties = [\n@@ -234,6 +233,11 @@ SyntheticEvent.extend = function(Interface) {\n  * in which some Event properties are set to undefined (GH#10010)\n  */\n if (__DEV__) {\n+  const isProxySupported =\n+    typeof Proxy === 'function' &&\n+    // https://github.com/facebook/react/issues/12011\n+    !Object.isSealed(new Proxy({}, {}));\n+\n   if (isProxySupported) {\n     /*eslint-disable no-func-assign */\n     SyntheticEvent = new Proxy(SyntheticEvent, {"
    },
    {
      "message": "add test to ensure checked inputs don't accidentally get value=\"on\"",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMInput-test.js b/packages/react-dom/src/__tests__/ReactDOMInput-test.js\nindex 057e36513364..03eed7bc1ec6 100644\n--- a/packages/react-dom/src/__tests__/ReactDOMInput-test.js\n+++ b/packages/react-dom/src/__tests__/ReactDOMInput-test.js\n@@ -1674,4 +1674,31 @@ describe('ReactDOMInput', () => {\n       // TODO: we should warn here.\n     });\n   });\n+\n+  describe('checked inputs without a value property', function() {\n+    // In absence of a value, radio and checkboxes report a value of \"on\".\n+    // Between 16 and 16.2, we assigned a node's value to it's current\n+    // value in order to \"dettach\" it from defaultValue. This had the unfortunate\n+    // side-effect of assigning value=\"on\" to radio and checkboxes\n+    it('does not add \"on\" in absence of value on a checkbox', function() {\n+      const container = document.createElement('div');\n+      ReactDOM.render(\n+        <input type=\"checkbox\" defaultChecked={true} />,\n+        container,\n+      );\n+      const node = container.firstChild;\n+\n+      expect(node.value).toBe('on');\n+      expect(node.hasAttribute('value')).toBe(false);\n+    });\n+\n+    it('does not add \"on\" in absence of value on a radio', function() {\n+      const container = document.createElement('div');\n+      ReactDOM.render(<input type=\"radio\" defaultChecked={true} />, container);\n+      const node = container.firstChild;\n+\n+      expect(node.value).toBe('on');\n+      expect(node.hasAttribute('value')).toBe(false);\n+    });\n+  });\n });"
    },
    {
      "message": "align shallow renderer with other renderers in defaulting state to null on mount",
      "diff": "diff --git a/packages/react-test-renderer/src/ReactShallowRenderer.js b/packages/react-test-renderer/src/ReactShallowRenderer.js\nindex ef50aafa28d1..6c55709bca6b 100644\n--- a/packages/react-test-renderer/src/ReactShallowRenderer.js\n+++ b/packages/react-test-renderer/src/ReactShallowRenderer.js\n@@ -125,7 +125,7 @@ class ReactShallowRenderer {\n   _mountClassComponent(props, context) {\n     this._instance.context = context;\n     this._instance.props = props;\n-    this._instance.state = this._instance.state || emptyObject;\n+    this._instance.state = this._instance.state || null;\n     this._instance.updater = this._updater;\n \n     if (typeof this._instance.componentWillMount === 'function') {\ndiff --git a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\nindex a2e572e7bd32..fc76810aa1f2 100644\n--- a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n+++ b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n@@ -947,4 +947,17 @@ describe('ReactShallowRenderer', () => {\n     renderAndVerifyWarningAndError([], 'array');\n     renderAndVerifyWarningAndError({}, 'object');\n   });\n+\n+  it('should have initial state of null if not defined', () => {\n+    class SomeComponent extends React.Component {\n+      render() {\n+        return <span />;\n+      }\n+    }\n+\n+    const shallowRenderer = createRenderer();\n+    shallowRenderer.render(<SomeComponent />);\n+\n+    expect(shallowRenderer.getMountedInstance().state).toBeNull();\n+  });\n });"
    },
    {
      "message": "use `declare module.exports` syntax for flow libdefs",
      "diff": "diff --git a/scripts/flow/react-native-host-hooks.js b/scripts/flow/react-native-host-hooks.js\nindex 1bfb9421faec..42bad64d536d 100644\n--- a/scripts/flow/react-native-host-hooks.js\n+++ b/scripts/flow/react-native-host-hooks.js\n@@ -10,10 +10,10 @@\n /* eslint-disable */\n \n declare module 'deepDiffer' {\n-  declare function exports(one: any, two: any): boolean;\n+  declare module.exports: (one: any, two: any) => boolean;\n }\n declare module 'deepFreezeAndThrowOnMutationInDev' {\n-  declare function exports<T>(obj: T): T;\n+  declare module.exports: <T>(obj: T) => T;\n }\n declare module 'flattenStyle' {\n }\n@@ -83,7 +83,7 @@ declare module 'UIManager' {\n   ): Promise<any>;\n }\n declare module 'View' {\n-  declare var exports: typeof React$Component;\n+  declare module.exports: typeof React$Component;\n }\n \n declare module 'RTManager' {"
    },
    {
      "message": "fix #11759. false positive warning in ie11 when using react.fragment",
      "diff": "diff --git a/packages/react/src/ReactElementValidator.js b/packages/react/src/ReactElementValidator.js\nindex 10b0723ca9fb..cfa2afa00f3d 100644\n--- a/packages/react/src/ReactElementValidator.js\n+++ b/packages/react/src/ReactElementValidator.js\n@@ -281,8 +281,9 @@ export function createElementWithValidation(type, props, children) {\n   const validType =\n     typeof type === 'string' ||\n     typeof type === 'function' ||\n-    typeof type === 'symbol' ||\n-    typeof type === 'number';\n+    // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n+    type === REACT_FRAGMENT_TYPE;\n+\n   // We warn in this case but don't throw. We expect the element creation to\n   // succeed and there will likely be errors in render.\n   if (!validType) {\n@@ -336,7 +337,7 @@ export function createElementWithValidation(type, props, children) {\n     }\n   }\n \n-  if (typeof type === 'symbol' && type === REACT_FRAGMENT_TYPE) {\n+  if (type === REACT_FRAGMENT_TYPE) {\n     validateFragmentProps(element);\n   } else {\n     validatePropTypes(element);"
    },
    {
      "message": "remove unused wheel event detection in iseventsupported",
      "diff": "diff --git a/packages/react-dom/src/events/isEventSupported.js b/packages/react-dom/src/events/isEventSupported.js\nindex 11c1e2339eba..cf9e854c7a03 100644\n--- a/packages/react-dom/src/events/isEventSupported.js\n+++ b/packages/react-dom/src/events/isEventSupported.js\n@@ -7,16 +7,6 @@\n \n import ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\n \n-let useHasFeature;\n-if (ExecutionEnvironment.canUseDOM) {\n-  useHasFeature =\n-    document.implementation &&\n-    document.implementation.hasFeature &&\n-    // always returns true in newer browsers as per the standard.\n-    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n-    document.implementation.hasFeature('', '') !== true;\n-}\n-\n /**\n  * Checks if an event is supported in the current execution environment.\n  *\n@@ -48,11 +38,6 @@ function isEventSupported(eventNameSuffix, capture) {\n     isSupported = typeof element[eventName] === 'function';\n   }\n \n-  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n-    // This is the only way to test support for the `wheel` event in IE9+.\n-    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n-  }\n-\n   return isSupported;\n }"
    },
    {
      "message": "add test fixture for initial input validation bug in firefox",
      "diff": "diff --git a/fixtures/dom/src/components/fixtures/text-inputs/index.js b/fixtures/dom/src/components/fixtures/text-inputs/index.js\nindex 8bf2b36de1bc..af71edcbb5cb 100644\n--- a/fixtures/dom/src/components/fixtures/text-inputs/index.js\n+++ b/fixtures/dom/src/components/fixtures/text-inputs/index.js\n@@ -42,6 +42,46 @@ class TextInputFixtures extends React.Component {\n           </p>\n         </TestCase>\n \n+        <TestCase\n+          title=\"Required Inputs\"\n+          affectedBrowsers=\"Firefox\"\n+          relatedIssues=\"8395\">\n+          <TestCase.Steps>\n+            <li>View this test in Firefox</li>\n+          </TestCase.Steps>\n+\n+          <TestCase.ExpectedResult>\n+            You should{' '}\n+            <b>\n+              <i>not</i>\n+            </b>{' '}\n+            see a red aura, indicating the input is invalid.\n+            <br />\n+            This aura looks roughly like:\n+            <input style={{boxShadow: '0 0 1px 1px red', marginLeft: 8}} />\n+          </TestCase.ExpectedResult>\n+\n+          <Fixture>\n+            <form className=\"control-box\">\n+              <fieldset>\n+                <legend>Text</legend>\n+                <input required={true} />\n+              </fieldset>\n+              <fieldset>\n+                <legend>Date</legend>\n+                <input type=\"date\" required={true} />\n+              </fieldset>\n+            </form>\n+          </Fixture>\n+\n+          <p className=\"footnote\">\n+            Checking the date type is also important because of a prior fix for\n+            iOS Safari that involved assigning over value/defaultValue\n+            properties of the input to prevent a display bug. This also\n+            triggered input validation.\n+          </p>\n+        </TestCase>\n+\n         <TestCase title=\"Cursor when editing email inputs\">\n           <TestCase.Steps>\n             <li>Type \"user@example.com\"</li>"
    },
    {
      "message": "use the same value synchronization function on number blur",
      "diff": "diff --git a/packages/react-dom/src/client/ReactDOMFiberInput.js b/packages/react-dom/src/client/ReactDOMFiberInput.js\nindex c754daab5abd..22cf89c400b0 100644\n--- a/packages/react-dom/src/client/ReactDOMFiberInput.js\n+++ b/packages/react-dom/src/client/ReactDOMFiberInput.js\n@@ -307,7 +307,7 @@ function updateNamedCousins(rootNode, props) {\n // when the user is inputting text\n //\n // https://github.com/facebook/react/issues/7253\n-function synchronizeDefaultValue(\n+export function synchronizeDefaultValue(\n   node: InputWithWrapperState,\n   type: ?string,\n   value: *,\ndiff --git a/packages/react-dom/src/events/ChangeEventPlugin.js b/packages/react-dom/src/events/ChangeEventPlugin.js\nindex 7ab525f2e0a7..cb98d19a9b9f 100644\n--- a/packages/react-dom/src/events/ChangeEventPlugin.js\n+++ b/packages/react-dom/src/events/ChangeEventPlugin.js\n@@ -17,6 +17,7 @@ import getEventTarget from './getEventTarget';\n import isEventSupported from './isEventSupported';\n import {getNodeFromInstance} from '../client/ReactDOMComponentTree';\n import * as inputValueTracking from '../client/inputValueTracking';\n+import {synchronizeDefaultValue} from '../client/ReactDOMFiberInput';\n \n var eventTypes = {\n   change: {\n@@ -235,10 +236,7 @@ function handleControlledInputBlur(inst, node) {\n   }\n \n   // If controlled, assign the value attribute to the current value on blur\n-  let value = '' + node.value;\n-  if (node.getAttribute('value') !== value) {\n-    node.setAttribute('value', value);\n-  }\n+  synchronizeDefaultValue(node, 'number', node.value);\n }\n \n /**"
    },
    {
      "message": "ensure reactfibererrordialogwww.showerrordialog exists",
      "diff": "diff --git a/packages/react-reconciler/src/forks/ReactFiberErrorDialog.www.js b/packages/react-reconciler/src/forks/ReactFiberErrorDialog.www.js\nindex 80546ec1987e..b7cd2d59d014 100644\n--- a/packages/react-reconciler/src/forks/ReactFiberErrorDialog.www.js\n+++ b/packages/react-reconciler/src/forks/ReactFiberErrorDialog.www.js\n@@ -9,8 +9,14 @@\n \n import type {CapturedError} from '../ReactFiberScheduler';\n \n+import invariant from 'fbjs/lib/invariant';\n+\n // Provided by www\n const ReactFiberErrorDialogWWW = require('ReactFiberErrorDialog');\n+invariant(\n+  typeof ReactFiberErrorDialogWWW.showErrorDialog === 'function',\n+  'Expected ReactFiberErrorDialog.showErrorDialog to existbe a function.',\n+);\n \n export function showErrorDialog(capturedError: CapturedError): boolean {\n   return ReactFiberErrorDialogWWW.showErrorDialog(capturedError);"
    },
    {
      "message": "stop eslint from looking for a configuration file in parent folders",
      "diff": "diff --git a/.eslintrc.js b/.eslintrc.js\nindex 3805f13b7c57..4645e51855d4 100644\n--- a/.eslintrc.js\n+++ b/.eslintrc.js\n@@ -6,6 +6,9 @@ const ERROR = 2;\n module.exports = {\n   extends: 'fbjs',\n \n+  // Stop ESLint from looking for a configuration file in parent folders\n+  'root': true,\n+\n   plugins: [\n     'react',\n     'react-internal',"
    },
    {
      "message": "add a note about private api dependency for a test",
      "diff": "diff --git a/packages/events/__tests__/EventPluginRegistry-test.internal.js b/packages/events/__tests__/EventPluginRegistry-test.internal.js\nindex 6273e7779901..3af0a782378b 100644\n--- a/packages/events/__tests__/EventPluginRegistry-test.internal.js\n+++ b/packages/events/__tests__/EventPluginRegistry-test.internal.js\n@@ -15,7 +15,10 @@ describe('EventPluginRegistry', () => {\n \n   beforeEach(() => {\n     jest.resetModuleRegistry();\n-    // TODO: can we express this test with only public API?\n+    // These tests are intentionally testing the private injection interface.\n+    // The public API surface of this is covered by other tests so\n+    // if `EventPluginRegistry` is ever deleted, these tests should be\n+    // safe to remove too.\n     EventPluginRegistry = require('events/EventPluginRegistry');\n \n     createPlugin = function(properties) {"
    },
    {
      "message": "remove mousewheel and mousedomscroll event patching",
      "diff": "diff --git a/packages/react-dom/src/events/ReactBrowserEventEmitter.js b/packages/react-dom/src/events/ReactBrowserEventEmitter.js\nindex f9a5ee52f41f..2b7e9a550915 100644\n--- a/packages/react-dom/src/events/ReactBrowserEventEmitter.js\n+++ b/packages/react-dom/src/events/ReactBrowserEventEmitter.js\n@@ -123,17 +123,7 @@ export function listenTo(registrationName, contentDocumentHandle) {\n   for (var i = 0; i < dependencies.length; i++) {\n     var dependency = dependencies[i];\n     if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n-      if (dependency === 'topWheel') {\n-        if (isEventSupported('wheel')) {\n-          trapBubbledEvent('topWheel', 'wheel', mountAt);\n-        } else if (isEventSupported('mousewheel')) {\n-          trapBubbledEvent('topWheel', 'mousewheel', mountAt);\n-        } else {\n-          // Firefox needs to capture a different mouse scroll event.\n-          // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n-          trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);\n-        }\n-      } else if (dependency === 'topScroll') {\n+      if (dependency === 'topScroll') {\n         trapCapturedEvent('topScroll', 'scroll', mountAt);\n       } else if (dependency === 'topFocus' || dependency === 'topBlur') {\n         trapCapturedEvent('topFocus', 'focus', mountAt);"
    },
    {
      "message": "re-add haste modules for reacttypes and reactnativerttypes shims",
      "diff": "diff --git a/packages/react-rt-renderer/src/ReactNativeRTTypes.js b/packages/react-rt-renderer/src/ReactNativeRTTypes.js\nindex 02e9ced1cfad..f6eb64f13882 100644\n--- a/packages/react-rt-renderer/src/ReactNativeRTTypes.js\n+++ b/packages/react-rt-renderer/src/ReactNativeRTTypes.js\n@@ -5,6 +5,7 @@\n  * LICENSE file in the root directory of this source tree.\n  *\n  * @flow\n+ * @providesModule ReactNativeRTTypes\n  */\n \n /**\ndiff --git a/packages/shared/ReactTypes.js b/packages/shared/ReactTypes.js\nindex 4efa9a3851dd..900582e5d5ac 100644\n--- a/packages/shared/ReactTypes.js\n+++ b/packages/shared/ReactTypes.js\n@@ -5,6 +5,7 @@\n  * LICENSE file in the root directory of this source tree.\n  *\n  * @flow\n+ * @providesModule ReactTypes\n  */\n \n export type ReactNode =\ndiff --git a/scripts/circleci/check_modules.sh b/scripts/circleci/check_modules.sh\nindex 8ecd67dfbbee..9f900beb027f 100755\n--- a/scripts/circleci/check_modules.sh\n+++ b/scripts/circleci/check_modules.sh\n@@ -5,11 +5,17 @@ set -e\n # Make sure we don't introduce accidental @providesModule annotations.\n EXPECTED='packages/react-cs-renderer/src/ReactNativeCSTypes.js\n packages/react-native-renderer/src/ReactNativeTypes.js\n+packages/react-rt-renderer/src/ReactNativeRTTypes.js\n+packages/shared/ReactTypes.js\n scripts/rollup/wrappers.js'\n ACTUAL=$(git grep -l @providesModule -- './*.js' ':!scripts/rollup/shims/*.js')\n \n+# Colors\n+red=$'\\e[1;31m'\n+end=$'\\e[0m'\n+\n if [ \"$EXPECTED\" != \"$ACTUAL\" ]; then\n-  echo \"@providesModule crept into some new files?\"\n+  printf \"%s\\n\" \"${red}ERROR: @providesModule crept into some new files?${end}\"\n   diff -u <(echo \"$EXPECTED\") <(echo \"$ACTUAL\") || true\n   exit 1\n fi"
    },
    {
      "message": "add .watchmanconfig to .gitignore so that jest --watch doesn't fail arbitrarily",
      "diff": "diff --git a/.gitignore b/.gitignore\nindex 46f908d0cc31..8123faa01e06 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -21,3 +21,4 @@ chrome-user-data\n .vscode\n *.swp\n *.swo\n+.watchmanconfig\n\\ No newline at end of file"
    },
    {
      "message": "remove tests in reactdomcomponent-test depending on internal api",
      "diff": "diff --git a/packages/react-dom/src/__tests__/ReactDOMComponent-test.js b/packages/react-dom/src/__tests__/ReactDOMComponent-test.js\nindex a770b86a5b8e..e9b191195245 100644\n--- a/packages/react-dom/src/__tests__/ReactDOMComponent-test.js\n+++ b/packages/react-dom/src/__tests__/ReactDOMComponent-test.js\n@@ -14,7 +14,6 @@ describe('ReactDOMComponent', () => {\n   var ReactTestUtils;\n   var ReactDOM;\n   var ReactDOMServer;\n-  var inputValueTracking;\n \n   function normalizeCodeLocInfo(str) {\n     return str && str.replace(/\\(at .+?:\\d+\\)/g, '(at **)');\n@@ -26,8 +25,6 @@ describe('ReactDOMComponent', () => {\n     ReactDOM = require('react-dom');\n     ReactDOMServer = require('react-dom/server');\n     ReactTestUtils = require('react-dom/test-utils');\n-    // TODO: can we express this test with only public API?\n-    inputValueTracking = require('../client/inputValueTracking');\n   });\n \n   describe('updateDOM', () => {\n@@ -1174,27 +1171,6 @@ describe('ReactDOMComponent', () => {\n       );\n     });\n \n-    it('should track input values', () => {\n-      var container = document.createElement('div');\n-      var inst = ReactDOM.render(\n-        <input type=\"text\" defaultValue=\"foo\" />,\n-        container,\n-      );\n-\n-      var tracker = inputValueTracking._getTrackerFromNode(inst);\n-\n-      expect(tracker.getValue()).toEqual('foo');\n-    });\n-\n-    it('should track textarea values', () => {\n-      var container = document.createElement('div');\n-      var inst = ReactDOM.render(<textarea defaultValue=\"foo\" />, container);\n-\n-      var tracker = inputValueTracking._getTrackerFromNode(inst);\n-\n-      expect(tracker.getValue()).toEqual('foo');\n-    });\n-\n     it('should throw for children on void elements', () => {\n       class X extends React.Component {\n         render() {"
    },
    {
      "message": "add missing \"files\" field to react-call-return package",
      "diff": "diff --git a/packages/react-call-return/package.json b/packages/react-call-return/package.json\nindex 2cf21889b88d..e1bd00b73cce 100644\n--- a/packages/react-call-return/package.json\n+++ b/packages/react-call-return/package.json\n@@ -3,6 +3,12 @@\n   \"description\": \"Experimental APIs for multi-pass rendering in React.\",\n   \"version\": \"0.1.0\",\n   \"repository\": \"facebook/react\",\n+  \"files\": [\n+    \"LICENSE\",\n+    \"README.md\",\n+    \"index.js\",\n+    \"cjs/\"\n+  ],\n   \"dependencies\": {\n     \"fbjs\": \"^0.8.16\",\n     \"object-assign\": \"^4.1.1\""
    },
    {
      "message": "fix reactshallowrenderer not rerendering when calling forceupdate",
      "diff": "diff --git a/packages/react-test-renderer/src/ReactShallowRenderer.js b/packages/react-test-renderer/src/ReactShallowRenderer.js\nindex 956005da561a..fc3baf251f02 100644\n--- a/packages/react-test-renderer/src/ReactShallowRenderer.js\n+++ b/packages/react-test-renderer/src/ReactShallowRenderer.js\n@@ -147,9 +147,11 @@ class ReactShallowRenderer {\n     // Fallback to previous instance state to support rendering React.cloneElement()\n     const state = this._newState || this._instance.state || emptyObject;\n \n-    if (typeof this._instance.shouldComponentUpdate === 'function') {\n+    if (\n+      typeof this._instance.shouldComponentUpdate === 'function' &&\n+      !this._forcedUpdate\n+    ) {\n       if (\n-        this._forcedUpdate ||\n         this._instance.shouldComponentUpdate(props, state, context) === false\n       ) {\n         this._instance.context = context;\ndiff --git a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\nindex 55647fbaaf34..1f51e390040b 100644\n--- a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n+++ b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n@@ -142,6 +142,24 @@ describe('ReactShallowRenderer', () => {\n     expect(scuCounter).toEqual(0);\n   });\n \n+  it('should rerender when calling forceUpdate', () => {\n+    let renderCounter = 0;\n+    class SimpleComponent extends React.Component {\n+      render() {\n+        renderCounter += 1;\n+        return <div />;\n+      }\n+    }\n+\n+    const shallowRenderer = createRenderer();\n+    shallowRenderer.render(<SimpleComponent />);\n+    expect(renderCounter).toEqual(1);\n+\n+    const instance = shallowRenderer.getMountedInstance();\n+    instance.forceUpdate();\n+    expect(renderCounter).toEqual(2);\n+  });\n+\n   it('should shallow render a functional component', () => {\n     function SomeComponent(props, context) {\n       return ("
    },
    {
      "message": "fix renderer example links in readme of `react-reconciler`",
      "diff": "diff --git a/packages/react-reconciler/README.md b/packages/react-reconciler/README.md\nindex f108413a9e91..5398c3c5a3ac 100644\n--- a/packages/react-reconciler/README.md\n+++ b/packages/react-reconciler/README.md\n@@ -30,9 +30,9 @@ module.exports = RendererPublicAPI;\n \n ## Practical Examples\n \n-* [React ART](https://github.com/facebook/react/blob/master/src/renderers/art/ReactARTFiberEntry.js)\n-* [React DOM](https://github.com/facebook/react/blob/master/src/fb/ReactDOMFiberFBEntry.js)\n-* [React Native](https://github.com/facebook/react/blob/master/src/renderers/native/ReactNativeFiberRenderer.js)\n+* [React ART](https://github.com/facebook/react/blob/master/packages/react-art/src/ReactART.js)\n+* [React DOM](https://github.com/facebook/react/blob/master/packages/react-dom/src/client/ReactDOM.js)\n+* [React Native](https://github.com/facebook/react/blob/master/packages/react-native-renderer/src/ReactNativeFiberRenderer.js)\n \n If these links break please file an issue and we\u2019ll fix them. They intentionally link to the latest versions since the API is still evolving."
    },
    {
      "message": "add \"prop-types\" to dependencies of \"react-test-renderer\"",
      "diff": "diff --git a/packages/react-test-renderer/package.json b/packages/react-test-renderer/package.json\nindex 0bcf5615079b..051cfb0ca71e 100644\n--- a/packages/react-test-renderer/package.json\n+++ b/packages/react-test-renderer/package.json\n@@ -16,7 +16,8 @@\n   \"homepage\": \"https://reactjs.org/\",\n   \"dependencies\": {\n     \"fbjs\": \"^0.8.16\",\n-    \"object-assign\": \"^4.1.1\"\n+    \"object-assign\": \"^4.1.1\",\n+    \"prop-types\": \"^15.6.0\"\n   },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0\""
    },
    {
      "message": "rename shared/event/eventplugins -> shared/event/plugins",
      "diff": "diff --git a/packages/shared/event/eventPlugins/ResponderEventPlugin.js b/packages/shared/event/plugins/ResponderEventPlugin.js\nsimilarity index 100%\nrename from packages/shared/event/eventPlugins/ResponderEventPlugin.js\nrename to packages/shared/event/plugins/ResponderEventPlugin.js\ndiff --git a/packages/shared/event/eventPlugins/ResponderSyntheticEvent.js b/packages/shared/event/plugins/ResponderSyntheticEvent.js\nsimilarity index 100%\nrename from packages/shared/event/eventPlugins/ResponderSyntheticEvent.js\nrename to packages/shared/event/plugins/ResponderSyntheticEvent.js\ndiff --git a/packages/shared/event/eventPlugins/ResponderTouchHistoryStore.js b/packages/shared/event/plugins/ResponderTouchHistoryStore.js\nsimilarity index 100%\nrename from packages/shared/event/eventPlugins/ResponderTouchHistoryStore.js\nrename to packages/shared/event/plugins/ResponderTouchHistoryStore.js\ndiff --git a/packages/shared/event/eventPlugins/TouchHistoryMath.js b/packages/shared/event/plugins/TouchHistoryMath.js\nsimilarity index 100%\nrename from packages/shared/event/eventPlugins/TouchHistoryMath.js\nrename to packages/shared/event/plugins/TouchHistoryMath.js\ndiff --git a/packages/shared/event/eventPlugins/__tests__/ResponderEventPlugin-test.js b/packages/shared/event/plugins/__tests__/ResponderEventPlugin-test.js\nsimilarity index 100%\nrename from packages/shared/event/eventPlugins/__tests__/ResponderEventPlugin-test.js\nrename to packages/shared/event/plugins/__tests__/ResponderEventPlugin-test.js"
    },
    {
      "message": "add note to 'unreleased' changelog about deprecating bower",
      "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 7bd06019c9de..9406ba592f71 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,10 @@\n     Click to see more.\n   </summary>\n \n+### Discontinuing Bower Releases\n+\n+Starting with 16.1.0, we will no longer be publishing new releases on Bower. You can continue using Bower for old releases, or point your Bower configs to the [React UMD builds hosted on unpkg](https://reactjs.org/docs/installation.html#using-a-cdn) that mirror npm releases and will continue to be updated.\n+\n ### All Packages\n \n * Fix an accidental extra global variable in the UMD builds. ([@gaearon](https://github.com/gaearon) in [#10935](https://github.com/facebook/react/pull/10935))"
    },
    {
      "message": "use value on <select> instead of setting selected on <option>",
      "diff": "diff --git a/fixtures/attribute-behavior/src/App.js b/fixtures/attribute-behavior/src/App.js\nindex c682b73aae67..6d1ed959c0b1 100644\n--- a/fixtures/attribute-behavior/src/App.js\n+++ b/fixtures/attribute-behavior/src/App.js\n@@ -958,35 +958,25 @@ class App extends React.Component {\n     return (\n       <div>\n         <div>\n-          <select onChange={this.onUpdateSort}>\n-            <option\n-              selected={this.state.sortOrder === ALPHABETICAL}\n-              value={ALPHABETICAL}>\n+          <select value={this.state.sortOrder} onChange={this.onUpdateSort}>\n+            <option value={ALPHABETICAL}>\n               alphabetical\n             </option>\n-            <option\n-              selected={this.state.sortOrder === REV_ALPHABETICAL}\n-              value={REV_ALPHABETICAL}>\n+            <option value={REV_ALPHABETICAL}>\n               reverse alphabetical\n             </option>\n-            <option\n-              selected={this.state.sortOrder === GROUPED_BY_ROW_PATTERN}\n-              value={GROUPED_BY_ROW_PATTERN}>\n+            <option value={GROUPED_BY_ROW_PATTERN}>\n               grouped by row pattern :)\n             </option>\n           </select>\n-          <select onChange={this.onUpdateFilter}>\n-            <option selected={this.state.sortOrder === ALL} value={ALL}>\n+          <select value={this.state.filter} onChange={this.onUpdateFilter}>\n+            <option value={ALL}>\n               all\n             </option>\n-            <option\n-              selected={this.state.sortOrder === INCOMPLETE}\n-              value={INCOMPLETE}>\n+            <option value={INCOMPLETE}>\n               incomplete\n             </option>\n-            <option\n-              selected={this.state.sortOrder === COMPLETE}\n-              value={COMPLETE}>\n+            <option value={COMPLETE}>\n               complete\n             </option>\n           </select>"
    },
    {
      "message": "fix false positive svg hydration warning for mixed case tags",
      "diff": "diff --git a/src/renderers/dom/fiber/ReactDOMFiberEntry.js b/src/renderers/dom/fiber/ReactDOMFiberEntry.js\nindex 01090873ad72..0bd998e28861 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberEntry.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberEntry.js\n@@ -446,7 +446,7 @@ var DOMRenderer = ReactFiberReconciler({\n   ): boolean {\n     return (\n       instance.nodeType === ELEMENT_NODE &&\n-      type === instance.nodeName.toLowerCase()\n+      type.toLowerCase() === instance.nodeName.toLowerCase()\n     );\n   },\n \ndiff --git a/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js b/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\nindex 3f7ba7abcff0..15ea880a94ca 100644\n--- a/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\n+++ b/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\n@@ -1344,6 +1344,14 @@ describe('ReactDOMServerIntegration', () => {\n         },\n       );\n \n+      itRenders('svg element with a mixed case name', async render => {\n+        let e = await render(<svg><filter><feMorphology /></filter></svg>);\n+        e = e.firstChild.firstChild;\n+        expect(e.childNodes.length).toBe(0);\n+        expect(e.tagName).toBe('feMorphology');\n+        expect(e.namespaceURI).toBe('http://www.w3.org/2000/svg');\n+      });\n+\n       itRenders('a math element', async render => {\n         const e = await render(<math />);\n         expect(e.childNodes.length).toBe(0);"
    },
    {
      "message": "fix false positive <noscript> rehydration text difference warning in react 16",
      "diff": "diff --git a/fixtures/ssr/src/components/Chrome.js b/fixtures/ssr/src/components/Chrome.js\nindex 2cd704064c4d..541d96901c5f 100644\n--- a/fixtures/ssr/src/components/Chrome.js\n+++ b/fixtures/ssr/src/components/Chrome.js\n@@ -15,6 +15,11 @@ export default class Chrome extends Component {\n           <title>{this.props.title}</title>\n         </head>\n         <body>\n+          <noscript\n+            dangerouslySetInnerHTML={{\n+              __html: `<b>Enable JavaScript to run this app.</b>`,\n+            }}\n+          />\n           {this.props.children}\n           <script\n             dangerouslySetInnerHTML={{\ndiff --git a/src/renderers/dom/fiber/ReactDOMFiberComponent.js b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\nindex 72ed46f2857f..2b75e96390b7 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n@@ -164,17 +164,16 @@ if (__DEV__) {\n     );\n   };\n \n-  var testDocument;\n   // Parse the HTML and read it back to normalize the HTML string so that it\n   // can be used for comparison.\n   var normalizeHTML = function(parent: Element, html: string) {\n-    if (!testDocument) {\n-      // The title argument is required in IE11 so we pass an empty string.\n-      testDocument = document.implementation.createHTMLDocument('');\n-    }\n+    // We could have created a separate document here to avoid\n+    // re-initializing custom elements if they exist. But this breaks\n+    // how <noscript> is being handled. So we use the same document.\n+    // See the discussion in https://github.com/facebook/react/pull/11157.\n     var testElement = parent.namespaceURI === HTML_NAMESPACE\n-      ? testDocument.createElement(parent.tagName)\n-      : testDocument.createElementNS(\n+      ? parent.ownerDocument.createElement(parent.tagName)\n+      : parent.ownerDocument.createElementNS(\n           (parent.namespaceURI: any),\n           parent.tagName,\n         );"
    },
    {
      "message": "add exception for 16.alpha when loading react in dom fixtures",
      "diff": "diff --git a/fixtures/dom/src/react-loader.js b/fixtures/dom/src/react-loader.js\nindex 89c8e239703a..6d108b0c28a8 100644\n--- a/fixtures/dom/src/react-loader.js\n+++ b/fixtures/dom/src/react-loader.js\n@@ -42,7 +42,9 @@ export default function loadReact() {\n   let version = query.version || 'local';\n \n   if (version !== 'local') {\n-    if (parseInt(version, 10) >= 16) {\n+    // The file structure was updated in 16. This wasn't the case for alphas.\n+    // Load the old module location for anything less than 16 RC\n+    if (parseInt(version, 10) >= 16 && version.indexOf('alpha') < 0) {\n       REACT_PATH =\n         'https://unpkg.com/react@' + version + '/umd/react.development.js';\n       DOM_PATH ="
    },
    {
      "message": "allow custom attribute named `on` to be passed on to elements",
      "diff": "diff --git a/src/renderers/dom/shared/DOMProperty.js b/src/renderers/dom/shared/DOMProperty.js\nindex 197b57971baa..5727ab0f4465 100644\n--- a/src/renderers/dom/shared/DOMProperty.js\n+++ b/src/renderers/dom/shared/DOMProperty.js\n@@ -205,7 +205,8 @@ var DOMProperty = {\n     }\n     if (\n       (name[0] === 'o' || name[0] === 'O') &&\n-      (name[1] === 'n' || name[1] === 'N')\n+      (name[1] === 'n' || name[1] === 'N') &&\n+      name.length > 2\n     ) {\n       return false;\n     }\ndiff --git a/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js b/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\nindex f4949a77ce59..3f7ba7abcff0 100644\n--- a/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\n+++ b/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\n@@ -991,6 +991,11 @@ describe('ReactDOMServerIntegration', () => {\n       );\n       expect(e.getAttribute('onunknownevent')).toBe(null);\n     });\n+\n+    itRenders('custom attribute named `on`', async render => {\n+      const e = await render(<div on=\"tap:do-something\" />);\n+      expect(e.getAttribute('on')).toEqual('tap:do-something');\n+    });\n   });\n \n   describe('elements and children', function() {\ndiff --git a/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js b/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js\nindex 75d20e7d7765..3fb07e4ca9c7 100644\n--- a/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js\n+++ b/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js\n@@ -70,7 +70,7 @@ if (__DEV__) {\n       return true;\n     }\n \n-    if (lowerCasedName.indexOf('on') === 0) {\n+    if (lowerCasedName.indexOf('on') === 0 && lowerCasedName.length > 2) {\n       warning(\n         false,\n         'Unknown event handler property `%s`. It will be ignored.%s',"
    },
    {
      "message": "use indexof instead of includes in rangekeyboardfixture",
      "diff": "diff --git a/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js b/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\nindex 8d64fe7e6e8b..b9154ee33b4f 100644\n--- a/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\n+++ b/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\n@@ -30,7 +30,9 @@ class RangeKeyboardFixture extends React.Component {\n \n   handleKeydown = e => {\n     // only interesting in arrow key events\n-    if (![37, 38, 39, 40].includes(e.keyCode)) return;\n+    if ([37, 38, 39, 40].indexOf(e.keyCode) < 0) {\n+      return;\n+    }\n \n     this.setState(({keydownCount}) => {\n       return {"
    },
    {
      "message": "add focus helper to range test, update button styles",
      "diff": "diff --git a/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js b/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\nindex b9154ee33b4f..f46d81cfd620 100644\n--- a/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\n+++ b/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\n@@ -54,11 +54,16 @@ class RangeKeyboardFixture extends React.Component {\n \n     return (\n       <Fixture>\n-        <input\n-          type=\"range\"\n-          ref={r => (this.input = r)}\n-          onChange={this.handleChange}\n-        />\n+        <div>\n+          <input\n+            type=\"range\"\n+            ref={r => (this.input = r)}\n+            onChange={this.handleChange}\n+          />\n+          <button onClick={() => this.input.focus()}>\n+            Focus Knob\n+          </button>\n+        </div>\n         {' '}\n \n         <p style={{color}}>\ndiff --git a/fixtures/dom/src/style.css b/fixtures/dom/src/style.css\nindex 28e01b611b2f..c316bb3f37eb 100644\n--- a/fixtures/dom/src/style.css\n+++ b/fixtures/dom/src/style.css\n@@ -17,9 +17,13 @@ body {\n }\n \n button {\n+  background: white;\n+  border-radius: 2px;\n+  border: 1px solid rgba(0, 0, 0, 0.24);\n+  cursor: pointer;\n+  font-size: 16px;\n   margin: 10px;\n-  font-size: 18px;\n-  padding: 5px;\n+  padding: 6px 8px;\n }\n \n .header {"
    },
    {
      "message": "tweak wording based on @landermkerbey's suggestion in #10433#issuecomment-324488168",
      "diff": "diff --git a/docs/tutorial/tutorial.md b/docs/tutorial/tutorial.md\nindex 2aa369f6951a..bac325b57943 100644\n--- a/docs/tutorial/tutorial.md\n+++ b/docs/tutorial/tutorial.md\n@@ -393,7 +393,7 @@ Now when the square is clicked, it calls the `onClick` function that was passed\n 4. Board passed `onClick={() => this.handleClick(i)}` to Square, so, when called, it runs `this.handleClick(i)` on the Board.\n 5. We have not defined the `handleClick()` method on the Board yet, so the code crashes.\n \n-Note that `onClick` on the DOM `<button>` component has a special meaning to React, but we could have called `onClick` prop in Square and `handleClick` in Board something else. It is, however, a common convention in React apps to use `on*` names for the handler prop names and `handle*` for their implementations.\n+Note that DOM `<button>` element's `onClick` attribute has a special meaning to React, but we could have named Square's `onClick` prop or Board's `handleClick` method differently. It is, however, conventional in React apps to use `on*` names for the attributes and `handle*` for the handler methods.\n \n Try clicking a square \u2013 you should get an error because we haven't defined `handleClick` yet. Add it to the Board class."
    },
    {
      "message": "add link to dom level 3 spec for possible values of `key` prop",
      "diff": "diff --git a/docs/docs/reference-events.md b/docs/docs/reference-events.md\nindex bebe24792557..828b63917e36 100644\n--- a/docs/docs/reference-events.md\n+++ b/docs/docs/reference-events.md\n@@ -148,6 +148,8 @@ boolean shiftKey\n number which\n ```\n \n+The `key` property can take any of the values documented in the [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#named-key-attribute-values).\n+\n * * *\n \n ### Focus Events"
    },
    {
      "message": "add react summit nigeria to the list of conferences.",
      "diff": "diff --git a/docs/community/conferences.md b/docs/community/conferences.md\nindex 377ff2f299de..da6c7f3e8292 100644\n--- a/docs/community/conferences.md\n+++ b/docs/community/conferences.md\n@@ -54,6 +54,11 @@ October 13 in Stockholm, Sweden\n \n [Website](https://statejs.com/)\n \n+### Second React Summit - NG 2017\n+October 21 in Lagos, Nigeria\n+\n+[Website](https://reactsummit2017.splashthat.com/) - [Twitter](https://twitter.com/DevCircleLagos/) - [Facebook](https://www.facebook.com/groups/DevCLagos/)\n+\n ### ReactiveConf 2017\n October 25\u201327, Bratislava, Slovakia"
    },
    {
      "message": "push host root context when bailing out on low priority",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberBeginWork.js b/src/renderers/shared/fiber/ReactFiberBeginWork.js\nindex 9bb7c44adad8..3c1bac8183b2 100644\n--- a/src/renderers/shared/fiber/ReactFiberBeginWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberBeginWork.js\n@@ -686,6 +686,9 @@ module.exports = function<T, P, I, TI, PI, C, CX, PL>(\n     // TODO: Handle HostComponent tags here as well and call pushHostContext()?\n     // See PR 8590 discussion for context\n     switch (workInProgress.tag) {\n+      case HostRoot:\n+        pushHostRootContext(workInProgress);\n+        break;\n       case ClassComponent:\n         pushContextProvider(workInProgress);\n         break;"
    },
    {
      "message": "report bad dead code elimination to react devtools",
      "diff": "diff --git a/packages/react-dom/index.js b/packages/react-dom/index.js\nindex 3f92519f1732..0eb376e9d5c3 100644\n--- a/packages/react-dom/index.js\n+++ b/packages/react-dom/index.js\n@@ -1,6 +1,37 @@\n 'use strict';\n \n+function checkDCE() {\n+  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n+  if (\n+    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n+    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n+  ) {\n+    return;\n+  }\n+  if (process.env.NODE_ENV !== 'production') {\n+    // This branch is unreachable because this function is only called\n+    // in production, but the condition is true only in development.\n+    // Therefore if the branch is still here, dead code elimination wasn't\n+    // properly applied.\n+    // Don't change the message. React DevTools relies on it. Also make sure\n+    // this message doesn't occur elsewhere in this function, or it will cause\n+    // a false positive.\n+    throw new Error('^_^');\n+  }\n+  try {\n+    // Verify that the code above has been dead code eliminated (DCE'd).\n+    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n+  } catch (err) {\n+    // DevTools shouldn't crash React, no matter what.\n+    // We should still report in case we break this code.\n+    console.error(err);\n+  }\n+}\n+\n if (process.env.NODE_ENV === 'production') {\n+  // DCE check should happen before ReactDOM bundle executes so that\n+  // DevTools can report bad minification during injection.\n+  checkDCE();\n   module.exports = require('./cjs/react-dom.production.min.js');\n } else {\n   module.exports = require('./cjs/react-dom.development.js');"
    },
    {
      "message": "update to latest allowed versions of `fbjs` and `prop-types`",
      "diff": "diff --git a/yarn.lock b/yarn.lock\nindex fe9befce9d23..c18dc5797463 100644\n--- a/yarn.lock\n+++ b/yarn.lock\n@@ -1781,8 +1781,8 @@ fbjs-scripts@^0.6.0:\n     through2 \"^2.0.0\"\n \n fbjs@^0.8.9:\n-  version \"0.8.12\"\n-  resolved \"https://registry.yarnpkg.com/fbjs/-/fbjs-0.8.12.tgz#10b5d92f76d45575fd63a217d4ea02bea2f8ed04\"\n+  version \"0.8.14\"\n+  resolved \"https://registry.yarnpkg.com/fbjs/-/fbjs-0.8.14.tgz#d1dbe2be254c35a91e09f31f9cd50a40b2a0ed1c\"\n   dependencies:\n     core-js \"^1.0.0\"\n     isomorphic-fetch \"^2.1.1\"\n@@ -3576,10 +3576,11 @@ promise@^7.1.1:\n     asap \"~2.0.3\"\n \n prop-types@^15.5.8:\n-  version \"15.5.8\"\n-  resolved \"https://registry.yarnpkg.com/prop-types/-/prop-types-15.5.8.tgz#6b7b2e141083be38c8595aa51fc55775c7199394\"\n+  version \"15.5.10\"\n+  resolved \"https://registry.yarnpkg.com/prop-types/-/prop-types-15.5.10.tgz#2797dfc3126182e3a95e3dfbb2e893ddd7456154\"\n   dependencies:\n     fbjs \"^0.8.9\"\n+    loose-envify \"^1.3.1\"\n \n prr@~0.0.0:\n   version \"0.0.0\""
    },
    {
      "message": "ensure attribute table server-renders svg inside svg container",
      "diff": "diff --git a/fixtures/attribute-behavior/src/App.js b/fixtures/attribute-behavior/src/App.js\nindex 156efa418f2c..b463f5df821a 100644\n--- a/fixtures/attribute-behavior/src/App.js\n+++ b/fixtures/attribute-behavior/src/App.js\n@@ -2603,11 +2603,24 @@ function getRenderedAttributeValue(renderer, serverRenderer, attribute, type) {\n   let hasTagMismatch = false;\n   let hasUnknownElement = false;\n   try {\n-    const html = serverRenderer.renderToString(\n-      React.createElement(tagName, props)\n-    );\n-    container = createContainer();\n-    container.innerHTML = html;\n+    if (containerTagName === 'document') {\n+      const html = serverRenderer.renderToString(\n+        React.createElement(tagName, props)\n+      );\n+      container = createContainer();\n+      container.innerHTML = html;\n+    } else {\n+      const html = serverRenderer.renderToString(\n+        React.createElement(\n+          containerTagName,\n+          null,\n+          React.createElement(tagName, props)\n+        )\n+      );\n+      const outerContainer = document.createElement('div');\n+      outerContainer.innerHTML = html;\n+      container = outerContainer.firstChild;\n+    }\n \n     if (\n       !container.lastChild ||"
    },
    {
      "message": "canonicalize values immediately after reading them",
      "diff": "diff --git a/fixtures/attribute-behavior/src/App.js b/fixtures/attribute-behavior/src/App.js\nindex b7a8037b0c0c..156efa418f2c 100644\n--- a/fixtures/attribute-behavior/src/App.js\n+++ b/fixtures/attribute-behavior/src/App.js\n@@ -2573,6 +2573,7 @@ function getRenderedAttributeValue(renderer, serverRenderer, attribute, type) {\n   };\n \n   let defaultValue;\n+  let canonicalDefaultValue;\n   let result;\n   let canonicalResult;\n   let ssrResult;\n@@ -2586,6 +2587,7 @@ function getRenderedAttributeValue(renderer, serverRenderer, attribute, type) {\n   try {\n     renderer.render(React.createElement(tagName, baseProps), container);\n     defaultValue = read(container.firstChild);\n+    canonicalDefaultValue = getCanonicalizedValue(defaultValue);\n     renderer.render(React.createElement(tagName, props), container);\n     result = read(container.firstChild);\n     canonicalResult = getCanonicalizedValue(result);\n@@ -2662,7 +2664,7 @@ function getRenderedAttributeValue(renderer, serverRenderer, attribute, type) {\n     defaultValue,\n     result,\n     canonicalResult,\n-    canonicalDefaultValue: getCanonicalizedValue(defaultValue),\n+    canonicalDefaultValue,\n     didWarn,\n     didError,\n     ssrResult,"
    },
    {
      "message": "update eslintignore and prettier config to ignore umd builds of react",
      "diff": "diff --git a/.eslintignore b/.eslintignore\nindex c5fc99a28d9a..388012616529 100644\n--- a/.eslintignore\n+++ b/.eslintignore\n@@ -13,8 +13,8 @@ fixtures/\n # Ignore built files.\n build/\n coverage/\n-scripts/attribute-behavior/public/react-dom.production.min.js\n-scripts/attribute-behavior/public/react.production.min.js\n+fixtures/attribute-behavior/public/react-dom.production.min.js\n+fixtures/attribute-behavior/public/react.production.min.js\n scripts/bench/benchmarks/**/*.js\n scripts/bench/remote-repo/\n vendor/*\ndiff --git a/fixtures/attribute-behavior/src/App.js b/fixtures/attribute-behavior/src/App.js\nindex 6fee801404a1..2ac7e1d7f883 100644\n--- a/fixtures/attribute-behavior/src/App.js\n+++ b/fixtures/attribute-behavior/src/App.js\n@@ -1417,7 +1417,7 @@ function ResultPopover(props) {\n           hasSameBehavior: props.hasSameBehavior,\n         },\n         null,\n-        2,\n+        2\n       )}\n     </pre>\n   );\ndiff --git a/fixtures/attribute-behavior/src/index.js b/fixtures/attribute-behavior/src/index.js\nindex cea8e344b982..da93a3b30f02 100644\n--- a/fixtures/attribute-behavior/src/index.js\n+++ b/fixtures/attribute-behavior/src/index.js\n@@ -19,6 +19,6 @@ import './index.css';\n \n   ReactDOM.render(\n     React.createElement(App.default),\n-    document.getElementById('root'),\n+    document.getElementById('root')\n   );\n })();\ndiff --git a/scripts/prettier/index.js b/scripts/prettier/index.js\nindex 0fd1e51f87c9..d7dda88a45a2 100644\n--- a/scripts/prettier/index.js\n+++ b/scripts/prettier/index.js\n@@ -41,8 +41,8 @@ const config = {\n     patterns: ['scripts/**/*.js', 'fixtures/**/*.js'],\n     ignore: [\n       'scripts/bench/benchmarks/**',\n-      'scripts/attribute-behavior/public/react.production.min.js',\n-      'scripts/attribute-behavior/public/react-dom.production.min.js',\n+      'fixtures/attribute-behavior/public/react.production.min.js',\n+      'fixtures/attribute-behavior/public/react-dom.production.min.js',\n     ],\n     options: {\n       'trailing-comma': 'es5',"
    },
    {
      "message": "put warnforinvalideventlistener call behind nextprop check",
      "diff": "diff --git a/src/renderers/dom/fiber/ReactDOMFiberComponent.js b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\nindex 475960cdf7e5..0ce5956146a3 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n@@ -951,10 +951,10 @@ var ReactDOMFiberComponent = {\n           }\n         }\n       } else if (registrationNameModules.hasOwnProperty(propKey)) {\n-        if (__DEV__ && typeof nextProp !== 'function') {\n-          warnForInvalidEventListener(propKey, nextProp);\n-        }\n         if (nextProp) {\n+          if (__DEV__ && typeof nextProp !== 'function') {\n+            warnForInvalidEventListener(propKey, nextProp);\n+          }\n           ensureListeningTo(rootContainerElement, propKey);\n         }\n       } else if (__DEV__) {"
    },
    {
      "message": "revert \"use the virtual target for change events to avoid restoring controlled state on the real target \"",
      "diff": "diff --git a/src/renderers/dom/shared/eventPlugins/ChangeEventPlugin.js b/src/renderers/dom/shared/eventPlugins/ChangeEventPlugin.js\nindex 930c0f11d605..387ec571ec9b 100644\n--- a/src/renderers/dom/shared/eventPlugins/ChangeEventPlugin.js\n+++ b/src/renderers/dom/shared/eventPlugins/ChangeEventPlugin.js\n@@ -43,28 +43,16 @@ var eventTypes = {\n   },\n };\n \n-function shouldUseChangeEvent(elem) {\n-  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n-  return (\n-    nodeName === 'select' || (nodeName === 'input' && elem.type === 'file')\n-  );\n-}\n-\n-function createAndAccumulateChangeEvent(\n-  inst,\n-  nativeEvent,\n-  nativeEventTarget,\n-  virtualTarget,\n-) {\n+function createAndAccumulateChangeEvent(inst, nativeEvent, target) {\n   var event = SyntheticEvent.getPooled(\n     eventTypes.change,\n     inst,\n     nativeEvent,\n-    nativeEventTarget,\n+    target,\n   );\n   event.type = 'change';\n   // Flag this event loop as needing state restore.\n-  ReactControlledComponent.enqueueStateRestore(virtualTarget);\n+  ReactControlledComponent.enqueueStateRestore(target);\n   EventPropagators.accumulateTwoPhaseDispatches(event);\n   return event;\n }\n@@ -305,7 +293,6 @@ var ChangeEventPlugin = {\n           inst,\n           nativeEvent,\n           nativeEventTarget,\n-          targetNode,\n         );\n         return event;\n       }"
    },
    {
      "message": "replace object getter with `object.defineproperty` in testrenderer",
      "diff": "diff --git a/src/renderers/testing/ReactTestRendererFiberEntry.js b/src/renderers/testing/ReactTestRendererFiberEntry.js\nindex bf0835afbb89..fff2175023e5 100644\n--- a/src/renderers/testing/ReactTestRendererFiberEntry.js\n+++ b/src/renderers/testing/ReactTestRendererFiberEntry.js\n@@ -565,13 +565,9 @@ var ReactTestRendererFiber = {\n     invariant(root != null, 'something went wrong');\n     TestRenderer.updateContainer(element, root, null, null);\n \n-    return {\n-      get root() {\n-        if (root === null || root.current.child === null) {\n-          throw new Error(\"Can't access .root on unmounted test renderer\");\n-        }\n-        return wrapFiber(root.current.child);\n-      },\n+    var entry = {\n+      root: undefined, // makes flow happy\n+      // we define a 'getter' for 'root' below using 'Object.defineProperty'\n       toJSON() {\n         if (root == null || root.current == null || container == null) {\n           return null;\n@@ -611,6 +607,23 @@ var ReactTestRendererFiber = {\n         return TestRenderer.getPublicRootInstance(root);\n       },\n     };\n+\n+    Object.defineProperty(\n+      entry,\n+      'root',\n+      ({\n+        configurable: true,\n+        enumerable: true,\n+        get: function() {\n+          if (root === null || root.current.child === null) {\n+            throw new Error(\"Can't access .root on unmounted test renderer\");\n+          }\n+          return wrapFiber(root.current.child);\n+        },\n+      }: Object),\n+    );\n+\n+    return entry;\n   },\n \n   /* eslint-disable camelcase */"
    },
    {
      "message": "find callsites that would call tostring if we pass attributes through",
      "diff": "diff --git a/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js b/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js\nindex e68bf66d913f..7d931a6ccbd5 100644\n--- a/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js\n+++ b/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js\n@@ -126,6 +126,18 @@ var warnUnknownProperties = function(type, props, debugID) {\n     var isValid = validateProperty(type, key, debugID);\n     if (!isValid) {\n       unknownProps.push(key);\n+      var value = props[key];\n+      if (typeof value === 'object' && value !== null) {\n+        warning(\n+          false,\n+          'The %s prop on <%s> is not a known property, and was given an object.' +\n+            'Remove it, or it will appear in the ' +\n+            'DOM after a future React update.%s',\n+          key,\n+          type,\n+          getStackAddendum(debugID),\n+        );\n+      }\n     }\n   }"
    },
    {
      "message": "fix incorrect reference to undefined diffvalueforattribute",
      "diff": "diff --git a/src/renderers/dom/shared/DOMPropertyOperations.js b/src/renderers/dom/shared/DOMPropertyOperations.js\nindex dd44db48254e..46846b3d3a86 100644\n--- a/src/renderers/dom/shared/DOMPropertyOperations.js\n+++ b/src/renderers/dom/shared/DOMPropertyOperations.js\n@@ -131,12 +131,6 @@ var DOMPropertyOperations = {\n             return stringValue;\n           }\n         }\n-      } else if (DOMProperty.isCustomAttribute(name)) {\n-        return DOMPropertyOperations.diffValueForAttribute(\n-          node,\n-          name,\n-          expected,\n-        );\n       }\n     }\n   },"
    },
    {
      "message": "remove data-reactid and data-reactchecksum from whitelist",
      "diff": "diff --git a/src/renderers/dom/fiber/ReactDOMFiberComponent.js b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\nindex 346e4091d20b..b31104d479c2 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n@@ -931,15 +931,9 @@ var ReactDOMFiberComponent = {\n         // TODO: Do we need to lower case this to get case insensitive matches?\n         var name = attributes[i].name;\n         switch (name) {\n-          // Built-in attributes are whitelisted\n-          // TODO: Once these are gone from the server renderer, we don't need\n-          // this whitelist aynymore.\n+          // Built-in SSR attribute is whitelisted\n           case 'data-reactroot':\n             break;\n-          case 'data-reactid':\n-            break;\n-          case 'data-react-checksum':\n-            break;\n           // Controlled attributes are not validated\n           // TODO: Only ignore them on controlled tags.\n           case 'value':"
    },
    {
      "message": "remove hidden functional shouldcomponentupdate api",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberBeginWork.js b/src/renderers/shared/fiber/ReactFiberBeginWork.js\nindex 87cd7acd2300..d9821063f47b 100644\n--- a/src/renderers/shared/fiber/ReactFiberBeginWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberBeginWork.js\n@@ -198,16 +198,8 @@ module.exports = function<T, P, I, TI, PI, C, CX, PL>(\n       if (nextProps === null || memoizedProps === nextProps) {\n         return bailoutOnAlreadyFinishedWork(current, workInProgress);\n       }\n-      // TODO: Disable this before release, since it is not part of the public API\n-      // I use this for testing to compare the relative overhead of classes.\n-      if (\n-        typeof fn.shouldComponentUpdate === 'function' &&\n-        !fn.shouldComponentUpdate(memoizedProps, nextProps)\n-      ) {\n-        // Memoize props even if shouldComponentUpdate returns false\n-        memoizeProps(workInProgress, nextProps);\n-        return bailoutOnAlreadyFinishedWork(current, workInProgress);\n-      }\n+      // TODO: consider bringing fn.shouldComponentUpdate() back.\n+      // It used to be here.\n     }\n \n     var unmaskedContext = getUnmaskedContext(workInProgress);"
    },
    {
      "message": "remove event namespace check from react-partial-renderer",
      "diff": "diff --git a/src/renderers/shared/server/ReactPartialRenderer.js b/src/renderers/shared/server/ReactPartialRenderer.js\nindex 148030a4a15f..c2ac0f75cd78 100644\n--- a/src/renderers/shared/server/ReactPartialRenderer.js\n+++ b/src/renderers/shared/server/ReactPartialRenderer.js\n@@ -12,7 +12,6 @@\n 'use strict';\n \n var DOMMarkupOperations = require('DOMMarkupOperations');\n-var {registrationNameModules} = require('EventPluginRegistry');\n var React = require('react');\n var ReactControlledValuePropTypes = require('ReactControlledValuePropTypes');\n \n@@ -272,27 +271,22 @@ function createOpenTagMarkup(\n     if (propValue == null) {\n       continue;\n     }\n-    if (!registrationNameModules.hasOwnProperty(propKey)) {\n-      if (propKey === STYLE) {\n-        propValue = createMarkupForStyles(propValue, instForDebug);\n-      }\n-      var markup = null;\n-      if (isCustomComponent(tagLowercase, props)) {\n-        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n-          markup = DOMMarkupOperations.createMarkupForCustomAttribute(\n-            propKey,\n-            propValue,\n-          );\n-        }\n-      } else {\n-        markup = DOMMarkupOperations.createMarkupForProperty(\n+    if (propKey === STYLE) {\n+      propValue = createMarkupForStyles(propValue, instForDebug);\n+    }\n+    var markup = null;\n+    if (isCustomComponent(tagLowercase, props)) {\n+      if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n+        markup = DOMMarkupOperations.createMarkupForCustomAttribute(\n           propKey,\n           propValue,\n         );\n       }\n-      if (markup) {\n-        ret += ' ' + markup;\n-      }\n+    } else {\n+      markup = DOMMarkupOperations.createMarkupForProperty(propKey, propValue);\n+    }\n+    if (markup) {\n+      ret += ' ' + markup;\n     }\n   }"
    },
    {
      "message": "add an extra test for arrays and strings from composites",
      "diff": "diff --git a/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js b/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\nindex 8654506b5628..d6fba2a87676 100644\n--- a/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\n+++ b/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\n@@ -1391,6 +1391,34 @@ describe('ReactDOMServerIntegration', () => {\n           expectTextNode(textNode2, '   ');\n         },\n       );\n+\n+      if (ReactDOMFeatureFlags.useFiber) {\n+        itRenders('a composite with multiple children', async render => {\n+          const Component = props => props.children;\n+          const e = await render(\n+            <Component>{['a', 'b', [undefined], [[false, 'c']]]}</Component>,\n+          );\n+\n+          let parent = e.parentNode;\n+          if (\n+            render === serverRender ||\n+            render === clientRenderOnServerString ||\n+            render === streamRender\n+          ) {\n+            // For plain server markup result we have comments between.\n+            // If we're able to hydrate, they remain.\n+            expect(parent.childNodes.length).toBe(5);\n+            expectTextNode(parent.childNodes[0], 'a');\n+            expectTextNode(parent.childNodes[2], 'b');\n+            expectTextNode(parent.childNodes[4], 'c');\n+          } else {\n+            expect(parent.childNodes.length).toBe(3);\n+            expectTextNode(parent.childNodes[0], 'a');\n+            expectTextNode(parent.childNodes[1], 'b');\n+            expectTextNode(parent.childNodes[2], 'c');\n+          }\n+        });\n+      }\n     });\n \n     describe('escaping >, <, and &', function() {"
    },
    {
      "message": "add tests that shallowrenderer supports string and fragment",
      "diff": "diff --git a/src/renderers/dom/test/__tests__/ReactTestUtils-test.js b/src/renderers/dom/test/__tests__/ReactTestUtils-test.js\nindex e320887c3237..edc11927a761 100644\n--- a/src/renderers/dom/test/__tests__/ReactTestUtils-test.js\n+++ b/src/renderers/dom/test/__tests__/ReactTestUtils-test.js\n@@ -161,6 +161,42 @@ describe('ReactTestUtils', () => {\n     ]);\n   });\n \n+  it('should shallow render a component returning strings directly from render', () => {\n+    const Text = ({value}) => value;\n+\n+    const shallowRenderer = createRenderer();\n+    const result = shallowRenderer.render(<Text value=\"foo\" />);\n+    expect(result).toEqual('foo');\n+  });\n+\n+  it('should shallow render a component returning numbers directly from render', () => {\n+    const Text = ({value}) => value;\n+\n+    const shallowRenderer = createRenderer();\n+    const result = shallowRenderer.render(<Text value={10} />);\n+    expect(result).toEqual(10);\n+  });\n+\n+  it('should shallow render a fragment', () => {\n+    class SomeComponent extends React.Component {\n+      render() {\n+        return <div />;\n+      }\n+    }\n+    class Fragment extends React.Component {\n+      render() {\n+        return [<div key=\"a\" />, <span key=\"b\" />, <SomeComponent />];\n+      }\n+    }\n+    const shallowRenderer = createRenderer();\n+    const result = shallowRenderer.render(<Fragment />);\n+    expect(result).toEqual([\n+      <div key=\"a\" />,\n+      <span key=\"b\" />,\n+      <SomeComponent />,\n+    ]);\n+  });\n+\n   it('should throw for invalid elements', () => {\n     class SomeComponent extends React.Component {\n       render() {"
    },
    {
      "message": "make server hydration warnings more obviously about server",
      "diff": "diff --git a/src/renderers/dom/fiber/ReactDOMFiberComponent.js b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\nindex 61c2575ff26a..378d62e6bbda 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n@@ -1064,7 +1064,7 @@ var ReactDOMFiberComponent = {\n       didWarnInvalidHydration = true;\n       warning(\n         false,\n-        'Did not find a matching <%s> in <%s>.',\n+        'Expected server HTML to contain a matching <%s> in <%s>.',\n         tag,\n         parentNode.nodeName.toLowerCase(),\n       );\n@@ -1086,7 +1086,7 @@ var ReactDOMFiberComponent = {\n       didWarnInvalidHydration = true;\n       warning(\n         false,\n-        'Did not find a matching text node for \"%s\" in <%s>.',\n+        'Expected server HTML to contain a matching text node for \"%s\" in <%s>.',\n         text,\n         parentNode.nodeName.toLowerCase(),\n       );"
    },
    {
      "message": "add a link for the error boundaries codemod into the blog post",
      "diff": "diff --git a/docs/_posts/2017-07-26-error-handling-in-react-16.md b/docs/_posts/2017-07-26-error-handling-in-react-16.md\nindex 24cdb58e7f47..d739c53bc0dc 100644\n--- a/docs/_posts/2017-07-26-error-handling-in-react-16.md\n+++ b/docs/_posts/2017-07-26-error-handling-in-react-16.md\n@@ -98,3 +98,5 @@ Error boundaries preserve the declarative nature of React, and behave as you wou\n ## Naming Changes from React 15\n \n React 15 included a very limited support for error boundaries under a different method name: `unstable_handleError`. This method no longer works, and you will need to change it to `componentDidCatch` in your code starting from the first 16 beta release.\n+\n+For this change, we\u2019ve provided [a codemod](https://github.com/reactjs/react-codemod#error-boundaries) to automatically migrate your code."
    },
    {
      "message": "wrap \"warning\" call in dev block to prevent prod error",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberDevToolsHook.js b/src/renderers/shared/fiber/ReactFiberDevToolsHook.js\nindex b7a2d1fa9e27..dbd0c98213dd 100644\n--- a/src/renderers/shared/fiber/ReactFiberDevToolsHook.js\n+++ b/src/renderers/shared/fiber/ReactFiberDevToolsHook.js\n@@ -12,15 +12,15 @@\n \n 'use strict';\n \n-if (__DEV__) {\n-  var warning = require('fbjs/lib/warning');\n-}\n-\n import type {Fiber} from 'ReactFiber';\n import type {FiberRoot} from 'ReactFiberRoot';\n \n declare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n \n+if (__DEV__) {\n+  var warning = require('fbjs/lib/warning');\n+}\n+\n let rendererID = null;\n let injectInternals = null;\n let onCommitRoot = null;\n@@ -36,7 +36,9 @@ if (\n   } = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n \n   injectInternals = function(internals: Object) {\n-    warning(rendererID == null, 'Cannot inject into DevTools twice.');\n+    if (__DEV__) {\n+      warning(rendererID == null, 'Cannot inject into DevTools twice.');\n+    }\n     rendererID = inject(internals);\n   };"
    },
    {
      "message": "fix error utils test failure caused by updating error codes",
      "diff": "diff --git a/src/renderers/shared/utils/__tests__/ReactErrorUtils-test.js b/src/renderers/shared/utils/__tests__/ReactErrorUtils-test.js\nindex a0a0b808b716..aa4f535682f1 100644\n--- a/src/renderers/shared/utils/__tests__/ReactErrorUtils-test.js\n+++ b/src/renderers/shared/utils/__tests__/ReactErrorUtils-test.js\n@@ -103,7 +103,9 @@ describe('ReactErrorUtils', () => {\n       var callback = jest.fn();\n       ReactErrorUtils.invokeGuardedCallback('foo', callback, null);\n       expect(ReactErrorUtils.hasCaughtError()).toBe(false);\n-      expect(ReactErrorUtils.clearCaughtError).toThrow('no error');\n+      expect(ReactErrorUtils.clearCaughtError).toThrow(\n+        __DEV__ ? 'no error was captured' : 'Minified React error #198',\n+      );\n     });\n \n     it(`can nest with same debug name (${environment})`, () => {"
    },
    {
      "message": "add node v8.x support to devengines in package.json",
      "diff": "diff --git a/package.json b/package.json\nindex f6cc484f00aa..dc378cffc73d 100644\n--- a/package.json\n+++ b/package.json\n@@ -101,7 +101,7 @@\n     \"nodegit\": \"^0.18.0\"\n   },\n   \"devEngines\": {\n-    \"node\": \"4.x || 5.x || 6.x || 7.x\",\n+    \"node\": \"4.x || 5.x || 6.x || 7.x || 8.x\",\n     \"npm\": \"2.x || 3.x || 4.x || 5.x\"\n   },\n   \"commonerConfig\": {"
    },
    {
      "message": "add node-stream.js to react-dom's package.json files entry, enabling the file to be uploaded to npm.",
      "diff": "diff --git a/packages/react-dom/package.json b/packages/react-dom/package.json\nindex 128c567ef283..b7f864a72cb8 100644\n--- a/packages/react-dom/package.json\n+++ b/packages/react-dom/package.json\n@@ -27,6 +27,7 @@\n     \"README.md\",\n     \"index.js\",\n     \"server.js\",\n+    \"node-stream.js\",\n     \"test-utils.js\",\n     \"cjs/\",\n     \"umd/\""
    },
    {
      "message": "fix externalization of 'lowprioritywarning' in fb builds",
      "diff": "diff --git a/scripts/rollup/modules.js b/scripts/rollup/modules.js\nindex 027d6c6fdcbd..bc6467ff9f94 100644\n--- a/scripts/rollup/modules.js\n+++ b/scripts/rollup/modules.js\n@@ -78,10 +78,11 @@ function createModuleMap(paths, extractErrors, bundleType) {\n       moduleMap[moduleName] = resolve(file);\n     });\n   });\n-  // if this is FB, we want to remove ReactCurrentOwner, so we can\n-  // handle it with a different case\n+  // if this is FB, we want to remove ReactCurrentOwner and lowPriorityWarning,\n+  // so we can handle it with a different case\n   if (bundleType === FB_DEV || bundleType === FB_PROD) {\n     delete moduleMap.ReactCurrentOwner;\n+    delete moduleMap.lowPriorityWarning;\n   }\n   return moduleMap;\n }\n@@ -120,6 +121,7 @@ function ignoreFBModules() {\n     // In FB bundles, we preserve an inline require to ReactCurrentOwner.\n     // See the explanation in FB version of ReactCurrentOwner in www:\n     'ReactCurrentOwner',\n+    'lowPriorityWarning',\n   ];\n }\n \ndiff --git a/scripts/rollup/results.json b/scripts/rollup/results.json\nindex 3bdb18bba212..0ab873a697c0 100644\n--- a/scripts/rollup/results.json\n+++ b/scripts/rollup/results.json\n@@ -41,16 +41,16 @@\n       \"gzip\": 3614\n     },\n     \"React-dev.js (FB_DEV)\": {\n-      \"size\": 74115,\n-      \"gzip\": 18980\n+      \"size\": 71806,\n+      \"gzip\": 18233\n     },\n     \"React-prod.js (FB_PROD)\": {\n-      \"size\": 36847,\n-      \"gzip\": 9254\n+      \"size\": 36172,\n+      \"gzip\": 9226\n     },\n     \"ReactDOMStack-dev.js (FB_DEV)\": {\n-      \"size\": 497678,\n-      \"gzip\": 119007\n+      \"size\": 495315,\n+      \"gzip\": 118265\n     },\n     \"ReactDOMStack-prod.js (FB_PROD)\": {\n       \"size\": 353140,"
    },
    {
      "message": "update print warning script for low priority warning",
      "diff": "diff --git a/scripts/print-warnings/print-warnings.js b/scripts/print-warnings/print-warnings.js\nindex dfa9b7c0afe8..2d63823299c8 100644\n--- a/scripts/print-warnings/print-warnings.js\n+++ b/scripts/print-warnings/print-warnings.js\n@@ -46,7 +46,11 @@ function transform(file, enc, cb) {\n     traverse(ast, {\n       CallExpression: {\n         exit: function(astPath) {\n-          if (astPath.get('callee').isIdentifier({name: 'warning'})) {\n+          const callee = astPath.get('callee');\n+          if (\n+            callee.isIdentifier({name: 'warning'}) ||\n+            callee.isIdentifier({name: 'lowPriorityWarning'})\n+          ) {\n             const node = astPath.node;\n \n             // warning messages can be concatenated (`+`) at runtime, so here's"
    },
    {
      "message": "update blog post which creates unhandled promise rejection",
      "diff": "diff --git a/docs/_posts/2015-12-16-ismounted-antipattern.md b/docs/_posts/2015-12-16-ismounted-antipattern.md\nindex 6390baa04819..8f7d2da81d96 100644\n--- a/docs/_posts/2015-12-16-ismounted-antipattern.md\n+++ b/docs/_posts/2015-12-16-ismounted-antipattern.md\n@@ -54,18 +54,16 @@ cancelablePromise\n cancelablePromise.cancel(); // Cancel the promise\n ```\n \n-Where `makeCancelable` is [defined by @istarkov](https://github.com/facebook/react/issues/5465#issuecomment-157888325) as:\n+Where `makeCancelable` was originally [defined by @istarkov](https://github.com/facebook/react/issues/5465#issuecomment-157888325) as:\n \n ```js\n const makeCancelable = (promise) => {\n   let hasCanceled_ = false;\n \n   const wrappedPromise = new Promise((resolve, reject) => {\n-    promise.then((val) =>\n-      hasCanceled_ ? reject({isCanceled: true}) : resolve(val)\n-    );\n-    promise.catch((error) =>\n-      hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n+    promise.then(\n+      val => hasCanceled_ ? reject({isCanceled: true}) : resolve(val),\n+      error => hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n     );\n   });\n \n@@ -78,3 +76,5 @@ const makeCancelable = (promise) => {\n };\n ```\n As an added bonus for getting your code cleaned up early, getting rid of `isMounted()` makes it one step easier for you to upgrade to ES6 classes, where using `isMounted()` is already prohibited.  Happy coding!\n+\n+* _Update 2017-05-12: altered `#makeCancelable` implementation so rejected promises won't go uncaught._"
    },
    {
      "message": "move reacteurope 2017 from upcoming conferences to past conferences",
      "diff": "diff --git a/docs/community/conferences.md b/docs/community/conferences.md\nindex c1aa4e8e2b65..2f0ed3dfcb2b 100644\n--- a/docs/community/conferences.md\n+++ b/docs/community/conferences.md\n@@ -9,11 +9,6 @@ redirect_from: \"docs/conferences.html\"\n \n ## Upcoming Conferences\n \n-### ReactEurope 2017\n-May 18th & 19th in Paris, France\n-\n-[Website](http://www.react-europe.org/) - [Schedule](http://www.react-europe.org/#schedule)\n-\n ### Chain React 2017\n July 10-11 in Portland, Oregon USA\n \n@@ -118,3 +113,8 @@ March 28th at the [QEII Centre, London](http://qeiicentre.london/)\n April 21st in Amsterdam, The Netherlands\n \n [Website](https://react.amsterdam) - [Twitter](https://twitter.com/reactamsterdam)\n+\n+### ReactEurope 2017\n+May 18th & 19th in Paris, France\n+\n+[Website](http://www.react-europe.org/) - [Schedule](http://www.react-europe.org/#schedule)"
    },
    {
      "message": "make the world a better place by placing closing /> on a new line",
      "diff": "diff --git a/docs/_js/examples/markdown.js b/docs/_js/examples/markdown.js\nindex f0cab2b8b0da..50ed3f91da8b 100644\n--- a/docs/_js/examples/markdown.js\n+++ b/docs/_js/examples/markdown.js\n@@ -21,7 +21,8 @@ class MarkdownEditor extends React.Component {\n         <h3>Input</h3>\n         <textarea\n           onChange={this.handleChange}\n-          defaultValue={this.state.value} />\n+          defaultValue={this.state.value}\n+        />\n         <h3>Output</h3>\n         <div\n           className=\"content\""
    },
    {
      "message": "move 'lighthouse' and 'nodegit' to 'optionaldependencies'",
      "diff": "diff --git a/package.json b/package.json\nindex 7b8d01187a3f..98bfddac87a1 100644\n--- a/package.json\n+++ b/package.json\n@@ -68,13 +68,11 @@\n     \"jest-config\": \"^19.0.1\",\n     \"jest-jasmine2\": \"^19.0.1\",\n     \"jest-runtime\": \"^19.0.1\",\n-    \"lighthouse\": \"^1.6.3\",\n     \"loose-envify\": \"^1.1.0\",\n     \"merge-stream\": \"^1.0.0\",\n     \"mime\": \"^1.3.4\",\n     \"minimist\": \"^1.2.0\",\n     \"ncp\": \"^2.0.0\",\n-    \"nodegit\": \"^0.18.0\",\n     \"object-assign\": \"^4.1.1\",\n     \"platform\": \"^1.1.0\",\n     \"prettier\": \"^1.2.2\",\n@@ -97,6 +95,10 @@\n     \"uglifyify\": \"^3.0.1\",\n     \"yargs\": \"^6.3.0\"\n   },\n+  \"optionalDependencies\": {\n+    \"lighthouse\": \"^1.6.3\",\n+    \"nodegit\": \"^0.18.0\"\n+  },\n   \"devEngines\": {\n     \"node\": \"4.x || 5.x || 6.x || 7.x\",\n     \"npm\": \"2.x || 3.x || 4.x\""
    },
    {
      "message": "show the name 'react' first in the homepage's <title>",
      "diff": "diff --git a/docs/_layouts/default.html b/docs/_layouts/default.html\nindex 40c1a0a74f70..0dc4dd952248 100644\n--- a/docs/_layouts/default.html\n+++ b/docs/_layouts/default.html\n@@ -7,7 +7,11 @@\n {% assign sectionTitle = 'React' %}\n {% assign description = 'A JavaScript library for building user interfaces' %}\n {% endif %}\n-{% assign title = page.title | append: ' - ' | append: sectionTitle %}\n+{% if page.id == 'home' %}\n+  {% assign title = sectionTitle | append: ' - ' | append: page.title %}\n+{% else %}\n+  {% assign title = page.title | append: ' - ' | append: sectionTitle %}\n+{% endif %}\n <!DOCTYPE html>\n <!--[if IE]><![endif]-->\n <html>"
    },
    {
      "message": "demonstrate failing test when resuming mount of class component",
      "diff": "diff --git a/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js b/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js\nindex 4e31a6b77e7b..d4eeb883779b 100644\n--- a/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js\n+++ b/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js\n@@ -452,6 +452,47 @@ describe('ReactIncremental', () => {\n     expect(ops).toEqual(['Foo', 'Bar', 'Bar']);\n   });\n \n+  it('can resume mounting a class component', () => {\n+    let ops = [];\n+    let foo;\n+    class Parent extends React.Component {\n+      shouldComponentUpdate() {\n+        return false;\n+      }\n+      render() {\n+        return <Foo prop={this.props.prop} />;\n+      }\n+    }\n+\n+    class Foo extends React.Component {\n+      constructor(props) {\n+        super(props);\n+        // Test based on a www bug where props was null on resume\n+        ops.push('Foo constructor: ' + props.prop);\n+      }\n+      render() {\n+        foo = this;\n+        ops.push('Foo');\n+        return <Bar />;\n+      }\n+    }\n+\n+    function Bar() {\n+      ops.push('Bar');\n+      return <div />;\n+    }\n+\n+    ReactNoop.render(<Parent prop=\"foo\" />);\n+    ReactNoop.flushDeferredPri(20);\n+    expect(ops).toEqual(['Foo constructor: foo', 'Foo']);\n+\n+    foo.setState({value: 'bar'});\n+\n+    ops = [];\n+    ReactNoop.flush();\n+    expect(ops).toEqual(['Foo constructor: foo', 'Foo', 'Bar']);\n+  });\n+\n   it('can reuse work done after being preempted', () => {\n     var ops = [];"
    },
    {
      "message": "fix bug where null props is passed to constructor when resuming mount",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberBeginWork.js b/src/renderers/shared/fiber/ReactFiberBeginWork.js\nindex 050e9d951d63..f0393658fe1b 100644\n--- a/src/renderers/shared/fiber/ReactFiberBeginWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberBeginWork.js\n@@ -260,7 +260,7 @@ module.exports = function<T, P, I, TI, PI, C, CX, PL>(\n     if (current === null) {\n       if (!workInProgress.stateNode) {\n         // In the initial pass we might need to construct the instance.\n-        constructClassInstance(workInProgress);\n+        constructClassInstance(workInProgress, workInProgress.pendingProps);\n         mountClassInstance(workInProgress, priorityLevel);\n         shouldUpdate = true;\n       } else {\ndiff --git a/src/renderers/shared/fiber/ReactFiberClassComponent.js b/src/renderers/shared/fiber/ReactFiberClassComponent.js\nindex 573e8f1bbb87..d97e5b5aa1d7 100644\n--- a/src/renderers/shared/fiber/ReactFiberClassComponent.js\n+++ b/src/renderers/shared/fiber/ReactFiberClassComponent.js\n@@ -285,9 +285,8 @@ module.exports = function(\n     ReactInstanceMap.set(instance, workInProgress);\n   }\n \n-  function constructClassInstance(workInProgress: Fiber): any {\n+  function constructClassInstance(workInProgress: Fiber, props: any): any {\n     const ctor = workInProgress.type;\n-    const props = workInProgress.pendingProps;\n     const unmaskedContext = getUnmaskedContext(workInProgress);\n     const needsContext = isContextConsumer(workInProgress);\n     const context = needsContext\n@@ -411,7 +410,7 @@ module.exports = function(\n \n     // If we didn't bail out we need to construct a new instance. We don't\n     // want to reuse one that failed to fully mount.\n-    const newInstance = constructClassInstance(workInProgress);\n+    const newInstance = constructClassInstance(workInProgress, newProps);\n     newInstance.props = newProps;\n     newInstance.state = newState = newInstance.state || null;\n     newInstance.context = newContext;"
    },
    {
      "message": "prevent process polyfill to be included in builds because of process guards preventing code replace",
      "diff": "diff --git a/src/isomorphic/children/flattenChildren.js b/src/isomorphic/children/flattenChildren.js\nindex c6caa802bea2..82ce3a03a1db 100644\n--- a/src/isomorphic/children/flattenChildren.js\n+++ b/src/isomorphic/children/flattenChildren.js\n@@ -15,21 +15,7 @@\n var KeyEscapeUtils = require('KeyEscapeUtils');\n var traverseAllChildren = require('traverseAllChildren');\n var warning = require('fbjs/lib/warning');\n-\n-var ReactComponentTreeHook;\n-\n-if (\n-  typeof process !== 'undefined' &&\n-  process.env &&\n-  process.env.NODE_ENV === 'test'\n-) {\n-  // Temporary hack.\n-  // Inline requires don't work well with Jest:\n-  // https://github.com/facebook/react/issues/7240\n-  // Remove the inline requires when we don't need them anymore:\n-  // https://github.com/facebook/react/pull/7178\n-  ReactComponentTreeHook = require('ReactComponentTreeHook');\n-}\n+var ReactComponentTreeHook = require('ReactComponentTreeHook');\n \n /**\n  * @param {function} traverseContext Context passed through traversal.\n@@ -48,9 +34,6 @@ function flattenSingleChildIntoContext(\n     const result = traverseContext;\n     const keyUnique = result[name] === undefined;\n     if (__DEV__) {\n-      if (!ReactComponentTreeHook) {\n-        ReactComponentTreeHook = require('ReactComponentTreeHook');\n-      }\n       if (!keyUnique) {\n         warning(\n           false,"
    },
    {
      "message": "add link to 'typechecking with proptypes' under 'advanced guides'",
      "diff": "diff --git a/docs/_data/nav_docs.yml b/docs/_data/nav_docs.yml\nindex 58e1c03dca64..0401c7174b6b 100644\n--- a/docs/_data/nav_docs.yml\n+++ b/docs/_data/nav_docs.yml\n@@ -30,6 +30,8 @@\n   items:\n     - id: jsx-in-depth\n       title: JSX In Depth\n+    - id: typechecking-with-proptypes\n+      title: Typechecking With PropTypes\n     - id: refs-and-the-dom\n       title: Refs and the DOM\n     - id: uncontrolled-components"
    },
    {
      "message": "fix the proptypes deprecation warning url on the \"don't call proptypes warning\" doc page",
      "diff": "diff --git a/docs/warnings/dont-call-proptypes.md b/docs/warnings/dont-call-proptypes.md\nindex bc468689af3b..05da5c04c73e 100644\n--- a/docs/warnings/dont-call-proptypes.md\n+++ b/docs/warnings/dont-call-proptypes.md\n@@ -5,7 +5,7 @@ permalink: warnings/dont-call-proptypes.html\n ---\n \n > Note:\n-> `React.PropTypes` is deprecated as of React v15.5. Please use [the `prop-types` library instead](https://github.com/aackerman/PropTypes).\n+> `React.PropTypes` is deprecated as of React v15.5. Please use [the `prop-types` library instead](https://github.com/reactjs/prop-types).\n \n In a future major release of React, the code that implements PropType validation functions will be stripped in production. Once this happens, any code that calls these functions manually (that isn't stripped in production) will throw an error."
    },
    {
      "message": "rewrite stack implementation of reactart using plain classes",
      "diff": "diff --git a/src/renderers/art/ReactARTStack.js b/src/renderers/art/ReactARTStack.js\nindex db1d22a885e8..26e3ff92e82f 100644\n--- a/src/renderers/art/ReactARTStack.js\n+++ b/src/renderers/art/ReactARTStack.js\n@@ -170,12 +170,8 @@ const ContainerMixin = Object.assign({}, ReactMultiChild, {\n // Surface is a React DOM Component, not an ART component. It serves as the\n // entry point into the ART reconciler.\n \n-const Surface = React.createClass({\n-  displayName: 'Surface',\n-\n-  mixins: [ContainerMixin],\n-\n-  componentDidMount: function() {\n+class Surface extends React.Component {\n+  componentDidMount() {\n     const domNode = ReactDOM.findDOMNode(this);\n \n     this.node = Mode.Surface(+this.props.width, +this.props.height, domNode);\n@@ -189,9 +185,9 @@ const Surface = React.createClass({\n       ReactInstanceMap.get(this)._context,\n     );\n     ReactUpdates.ReactReconcileTransaction.release(transaction);\n-  },\n+  }\n \n-  componentDidUpdate: function(oldProps) {\n+  componentDidUpdate(oldProps) {\n     const node = this.node;\n     if (\n       this.props.width != oldProps.width || this.props.height != oldProps.height\n@@ -220,13 +216,13 @@ const Surface = React.createClass({\n     if (node.render) {\n       node.render();\n     }\n-  },\n+  }\n \n-  componentWillUnmount: function() {\n+  componentWillUnmount() {\n     this.unmountChildren();\n-  },\n+  }\n \n-  render: function() {\n+  render() {\n     // This is going to be a placeholder because we don't know what it will\n     // actually resolve to because ART may render canvas, vml or svg tags here.\n     // We only allow a subset of properties since others might conflict with\n@@ -246,8 +242,10 @@ const Surface = React.createClass({\n         title={props.title}\n       />\n     );\n-  },\n-});\n+  }\n+}\n+Surface.displayName = 'Surface';\n+Object.assign(Surface.prototype, ContainerMixin);\n \n // Various nodes that can go into a surface"
    },
    {
      "message": "point users to the npm page instead of the github project for prop-types",
      "diff": "diff --git a/docs/docs/typechecking-with-proptypes.md b/docs/docs/typechecking-with-proptypes.md\nindex 63c3241c2e1c..ce5e0aedee97 100644\n--- a/docs/docs/typechecking-with-proptypes.md\n+++ b/docs/docs/typechecking-with-proptypes.md\n@@ -7,7 +7,7 @@ redirect_from:\n ---\n \n > Note:\n-> `React.PropTypes` is deprecated as of React v15.5. Please use [the `prop-types` library instead](https://github.com/aackerman/PropTypes).\n+> `React.PropTypes` is deprecated as of React v15.5. Please use [the `prop-types` library instead](https://www.npmjs.com/package/prop-types).\n \n As your app grows, you can catch a lot of bugs with typechecking. For some applications, you can use JavaScript extensions like [Flow](https://flowtype.org/) or [TypeScript](https://www.typescriptlang.org/) to typecheck your whole application. But even if you don't use those, React has some built-in typechecking abilities. To run typechecking on the props for a component, you can assign the special `propTypes` property:"
    },
    {
      "message": "remove 'takesnapshot' from reactnative renderer\\nupstream sync from react-native repo",
      "diff": "diff --git a/src/renderers/native/ReactNativeFiber.js b/src/renderers/native/ReactNativeFiber.js\nindex 7027f4721375..dd4b7a215d4a 100644\n--- a/src/renderers/native/ReactNativeFiber.js\n+++ b/src/renderers/native/ReactNativeFiber.js\n@@ -29,7 +29,6 @@ const deepFreezeAndThrowOnMutationInDev = require('deepFreezeAndThrowOnMutationI\n const emptyObject = require('fbjs/lib/emptyObject');\n const findNodeHandle = require('findNodeHandle');\n const invariant = require('fbjs/lib/invariant');\n-const takeSnapshot = require('takeSnapshot');\n \n const {injectInternals} = require('ReactFiberDevToolsHook');\n \n@@ -415,8 +414,6 @@ const ReactNative = {\n     return NativeRenderer.getPublicRootInstance(root);\n   },\n \n-  takeSnapshot,\n-\n   unmountComponentAtNode(containerTag: number) {\n     const root = roots.get(containerTag);\n     if (root) {\ndiff --git a/src/renderers/native/ReactNativeStack.js b/src/renderers/native/ReactNativeStack.js\nindex 0d1f323f0237..a9fa118cf27b 100644\n--- a/src/renderers/native/ReactNativeStack.js\n+++ b/src/renderers/native/ReactNativeStack.js\n@@ -18,7 +18,6 @@ var ReactNativeStackInjection = require('ReactNativeStackInjection');\n var ReactUpdates = require('ReactUpdates');\n \n var findNodeHandle = require('findNodeHandle');\n-var takeSnapshot = require('takeSnapshot');\n \n ReactNativeInjection.inject();\n ReactNativeStackInjection.inject();\n@@ -47,8 +46,6 @@ var ReactNative = {\n \n   render: render,\n \n-  takeSnapshot,\n-\n   unmountComponentAtNode: ReactNativeMount.unmountComponentAtNode,\n \n   /* eslint-disable camelcase */"
    },
    {
      "message": "make it clear that textarea also supports defaultvalue.",
      "diff": "diff --git a/docs/docs/uncontrolled-components.md b/docs/docs/uncontrolled-components.md\nindex 2eaac55f6ffd..d9fa20ac80a5 100644\n--- a/docs/docs/uncontrolled-components.md\n+++ b/docs/docs/uncontrolled-components.md\n@@ -63,4 +63,4 @@ render() {\n }\n ```\n \n-Likewise, `<input type=\"checkbox\">` and `<input type=\"radio\">` support `defaultChecked`, and `<select>` supports `defaultValue`.\n+Likewise, `<input type=\"checkbox\">` and `<input type=\"radio\">` support `defaultChecked`, and `<select>` and `<textarea>` supports `defaultValue`."
    },
    {
      "message": "commit changes without running prettier to see if ci fails",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberUpdateQueue.js b/src/renderers/shared/fiber/ReactFiberUpdateQueue.js\nindex a246436fff93..1474e69e2f06 100644\n--- a/src/renderers/shared/fiber/ReactFiberUpdateQueue.js\n+++ b/src/renderers/shared/fiber/ReactFiberUpdateQueue.js\n@@ -12,7 +12,7 @@\n \n 'use strict';\n \n-import type {Fiber} from 'ReactFiber';\n+import type { Fiber } from 'ReactFiber';\n import type {PriorityLevel} from 'ReactPriorityLevel';\n \n const {"
    },
    {
      "message": "add prettier-ignore where we do matrix style formatting",
      "diff": "diff --git a/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js b/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js\nindex a0d80519ac2e..e23f36f55b14 100644\n--- a/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js\n+++ b/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js\n@@ -301,6 +301,7 @@ describe('ReactES6Class', () => {\n     ]);\n     lifeCycles = []; // reset\n     test(<Foo value=\"bar\" />, 'SPAN', 'bar');\n+    // prettier-ignore\n     expect(lifeCycles).toEqual([\n       'receive-props', freeze({value: 'bar'}),\n       'should-update', freeze({value: 'bar'}), {},"
    },
    {
      "message": "remove pr check from gh pages build hook for stable branch",
      "diff": "diff --git a/scripts/circleci/build_gh_pages.sh b/scripts/circleci/build_gh_pages.sh\nindex fcf49f2af95d..c0ecc81e35da 100755\n--- a/scripts/circleci/build_gh_pages.sh\n+++ b/scripts/circleci/build_gh_pages.sh\n@@ -2,7 +2,7 @@\n \n set -e\n \n-if [ -z $CI_PULL_REQUEST ] && [ \"$CIRCLE_BRANCH\" = \"$REACT_WEBSITE_BRANCH\" ]; then\n+if [ \"$CIRCLE_BRANCH\" = \"$REACT_WEBSITE_BRANCH\" ]; then\n \n   GH_PAGES_DIR=`pwd`/../react-gh-pages"
    },
    {
      "message": "remove destructuring, since the version of node on www doesn't support it",
      "diff": "diff --git a/scripts/error-codes/print-warnings.js b/scripts/error-codes/print-warnings.js\nindex 6d97a7508fe5..c886e021958c 100644\n--- a/scripts/error-codes/print-warnings.js\n+++ b/scripts/error-codes/print-warnings.js\n@@ -16,7 +16,7 @@ const gs = require('glob-stream');\n \n const evalToString = require('./evalToString');\n \n-const { paths } = require('../../gulpfile');\n+const paths = require('../../gulpfile').paths;\n \n \n const babylonOptions = {"
    },
    {
      "message": "fix proptypes production test so it works with error code system",
      "diff": "diff --git a/scripts/error-codes/codes.json b/scripts/error-codes/codes.json\nindex e4662c091265..fb8006fdf2b8 100644\n--- a/scripts/error-codes/codes.json\n+++ b/scripts/error-codes/codes.json\n@@ -142,5 +142,6 @@\n   \"140\": \"Expected hook events to fire for the child before its parent includes it in onSetChildren().\",\n   \"141\": \"Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().\",\n   \"142\": \"Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).\",\n-  \"143\": \"React.Children.only expected to receive a single React element child.\"\n+  \"143\": \"React.Children.only expected to receive a single React element child.\",\n+  \"144\": \"React.PropTypes type checking code is stripped in production.\"\n }\ndiff --git a/src/isomorphic/classic/types/__tests__/ReactPropTypesProduction-test.js b/src/isomorphic/classic/types/__tests__/ReactPropTypesProduction-test.js\nindex 07a46a877444..67842710e414 100644\n--- a/src/isomorphic/classic/types/__tests__/ReactPropTypesProduction-test.js\n+++ b/src/isomorphic/classic/types/__tests__/ReactPropTypesProduction-test.js\n@@ -49,7 +49,7 @@ describe('ReactPropTypesProduction', function() {\n         'prop'\n       );\n     }).toThrowError(\n-      'React.PropTypes type checking code is stripped in production.'\n+      'Minified React error #144'\n     );\n   }"
    },
    {
      "message": "convert shorthanded syntax for function flow types to expanded form",
      "diff": "diff --git a/src/renderers/shared/utils/ReactErrorUtils.js b/src/renderers/shared/utils/ReactErrorUtils.js\nindex c2cd671767e2..f53bdddc5ad9 100644\n--- a/src/renderers/shared/utils/ReactErrorUtils.js\n+++ b/src/renderers/shared/utils/ReactErrorUtils.js\n@@ -26,7 +26,7 @@ let caughtError = null;\n const ReactErrorUtils = {\n   invokeGuardedCallback: function<A, B, C, D, E, F, Context>(\n     name: string | null,\n-    func: (A, B, C, D, E, F) => void,\n+    func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n     context: Context,\n     a: A,\n     b: B,\n@@ -55,7 +55,7 @@ const ReactErrorUtils = {\n    */\n   invokeGuardedCallbackAndCatchFirstError: function<A, B, C, D, E, F, Context>(\n     name: string | null,\n-    func: (A, B, C, D, E, F) => void,\n+    func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n     context: Context,\n     a: A,\n     b: B,"
    },
    {
      "message": "support assigning directly to this.state inside cwrp",
      "diff": "diff --git a/src/renderers/__tests__/ReactCompositeComponentState-test.js b/src/renderers/__tests__/ReactCompositeComponentState-test.js\nindex 90189534384f..2d9351da1ef7 100644\n--- a/src/renderers/__tests__/ReactCompositeComponentState-test.js\n+++ b/src/renderers/__tests__/ReactCompositeComponentState-test.js\n@@ -414,4 +414,30 @@ describe('ReactCompositeComponent-state', () => {\n       'scu from a,b to a,b,c',\n     ]);\n   });\n+\n+  it('should treat assigning to this.state inside cWRP as a replaceState, with a warning', () => {\n+    let ops = [];\n+    class Test extends React.Component {\n+      state = { step: 1, extra: true };\n+      componentWillReceiveProps() {\n+        this.setState({ step: 2 }, () => {\n+          // Tests that earlier setState callbacks are not dropped\n+          ops.push(`step: ${this.state.step}, extra: ${!!this.state.extra}`);\n+        });\n+        // Treat like replaceState\n+        this.state = { step: 3 };\n+      }\n+      render() {\n+        return null;\n+      }\n+    }\n+\n+    // Mount\n+    const container = document.createElement('div');\n+    ReactDOM.render(<Test />, container);\n+    // Update\n+    ReactDOM.render(<Test />, container);\n+\n+    expect(ops).toEqual(['step: 3, extra: false']);\n+  });\n });\ndiff --git a/src/renderers/shared/fiber/ReactFiberClassComponent.js b/src/renderers/shared/fiber/ReactFiberClassComponent.js\nindex 87f3426099e4..13b6d7801033 100644\n--- a/src/renderers/shared/fiber/ReactFiberClassComponent.js\n+++ b/src/renderers/shared/fiber/ReactFiberClassComponent.js\n@@ -408,6 +408,10 @@ module.exports = function(\n     if (oldProps !== newProps || oldContext !== newContext) {\n       if (typeof instance.componentWillReceiveProps === 'function') {\n         instance.componentWillReceiveProps(newProps, newContext);\n+\n+        if (instance.state !== workInProgress.memoizedState) {\n+          updater.enqueueReplaceState(instance, instance.state, null);\n+        }\n       }\n     }"
    },
    {
      "message": "revert \"fix createnodemock doc to avoid invariant violation\"",
      "diff": "diff --git a/docs/_posts/2016-11-16-react-v15.4.0.md b/docs/_posts/2016-11-16-react-v15.4.0.md\nindex ee34c69529ed..d07691a04e83 100644\n--- a/docs/_posts/2016-11-16-react-v15.4.0.md\n+++ b/docs/_posts/2016-11-16-react-v15.4.0.md\n@@ -75,7 +75,6 @@ import renderer from 'react-test-renderer';\n function createNodeMock(element) {\n   if (element.type === 'input') {\n     return {\n-      nodeType: 1,\n       focus() {},\n     };\n   }"
    },
    {
      "message": "fix createnodemock doc to avoid invariant violation",
      "diff": "diff --git a/docs/_posts/2016-11-16-react-v15.4.0.md b/docs/_posts/2016-11-16-react-v15.4.0.md\nindex d07691a04e83..ee34c69529ed 100644\n--- a/docs/_posts/2016-11-16-react-v15.4.0.md\n+++ b/docs/_posts/2016-11-16-react-v15.4.0.md\n@@ -75,6 +75,7 @@ import renderer from 'react-test-renderer';\n function createNodeMock(element) {\n   if (element.type === 'input') {\n     return {\n+      nodeType: 1,\n       focus() {},\n     };\n   }"
    },
    {
      "message": "change the order between function declaration and object assignment",
      "diff": "diff --git a/src/renderers/shared/stack/reconciler/instantiateReactComponent.js b/src/renderers/shared/stack/reconciler/instantiateReactComponent.js\nindex 651d16982e77..ae9581294614 100644\n--- a/src/renderers/shared/stack/reconciler/instantiateReactComponent.js\n+++ b/src/renderers/shared/stack/reconciler/instantiateReactComponent.js\n@@ -23,13 +23,6 @@ var warning = require('warning');\n var ReactCompositeComponentWrapper = function(element) {\n   this.construct(element);\n };\n-Object.assign(\n-  ReactCompositeComponentWrapper.prototype,\n-  ReactCompositeComponent,\n-  {\n-    _instantiateReactComponent: instantiateReactComponent,\n-  }\n-);\n \n function getDeclarationErrorAddendum(owner) {\n   if (owner) {\n@@ -157,4 +150,12 @@ function instantiateReactComponent(node, shouldHaveDebugID) {\n   return instance;\n }\n \n+Object.assign(\n+  ReactCompositeComponentWrapper.prototype,\n+  ReactCompositeComponent,\n+  {\n+    _instantiateReactComponent: instantiateReactComponent,\n+  }\n+);\n+\n module.exports = instantiateReactComponent;"
    },
    {
      "message": "add extra invalid element info to invariant message",
      "diff": "diff --git a/src/renderers/dom/fiber/ReactDOMFiber.js b/src/renderers/dom/fiber/ReactDOMFiber.js\nindex 8708b20a0e4d..278e4e62e2ed 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiber.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiber.js\n@@ -368,7 +368,20 @@ var ReactDOM = {\n       // allows arrays.\n       invariant(\n         isValidElement(element),\n-        'render(): Invalid component element.'\n+        'ReactDOM.render(): Invalid component element.%s',\n+        (\n+          typeof element === 'string' ?\n+            ' Instead of passing a string like \\'div\\', pass ' +\n+            'React.createElement(\\'div\\') or <div />.' :\n+          typeof element === 'function' ?\n+            ' Instead of passing a class like Foo, pass ' +\n+            'React.createElement(Foo) or <Foo />.' :\n+          // Check if it quacks like an element\n+          element != null && element.props !== undefined ?\n+            ' This may be caused by unintentionally loading two independent ' +\n+            'copies of React.' :\n+            ''\n+        )\n       );\n     }"
    },
    {
      "message": "loosen assertion so it matches any production error",
      "diff": "diff --git a/scripts/fiber/tests-failing.txt b/scripts/fiber/tests-failing.txt\nindex 06137eac0491..1319d7e65f4d 100644\n--- a/scripts/fiber/tests-failing.txt\n+++ b/scripts/fiber/tests-failing.txt\n@@ -1,9 +1,6 @@\n src/isomorphic/classic/__tests__/ReactContextValidator-test.js\n * should pass previous context to lifecycles\n \n-src/renderers/dom/__tests__/ReactDOMProduction-test.js\n-* should throw with an error code in production\n-\n src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\n * should clean up input value tracking\n * should clean up input textarea tracking\ndiff --git a/scripts/fiber/tests-passing.txt b/scripts/fiber/tests-passing.txt\nindex 3b85124db568..79e051261e82 100644\n--- a/scripts/fiber/tests-passing.txt\n+++ b/scripts/fiber/tests-passing.txt\n@@ -523,6 +523,7 @@ src/renderers/dom/__tests__/ReactDOMProduction-test.js\n * should use prod React\n * should handle a simple flow\n * should call lifecycle methods\n+* should throw with an error code in production\n * should keep track of namespace across portals in production\n \n src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\ndiff --git a/src/renderers/dom/__tests__/ReactDOMProduction-test.js b/src/renderers/dom/__tests__/ReactDOMProduction-test.js\nindex 67807e863553..6414948871d1 100644\n--- a/src/renderers/dom/__tests__/ReactDOMProduction-test.js\n+++ b/src/renderers/dom/__tests__/ReactDOMProduction-test.js\n@@ -185,12 +185,7 @@ describe('ReactDOMProduction', () => {\n \n       var container = document.createElement('div');\n       ReactDOM.render(<Component />, container);\n-    }).toThrowError(\n-      'Minified React error #109; visit ' +\n-      'http://facebook.github.io/react/docs/error-decoder.html?invariant=109&args[]=Component' +\n-      ' for the full message or use the non-minified dev environment' +\n-      ' for full errors and additional helpful warnings.'\n-    );\n+    }).toThrowError('Minified React error #');\n   });\n \n   if (ReactDOMFeatureFlags.useFiber) {"
    },
    {
      "message": "warn when rendering into react-rendered child that isn't a root",
      "diff": "diff --git a/src/renderers/dom/fiber/ReactDOMFiber.js b/src/renderers/dom/fiber/ReactDOMFiber.js\nindex 803054e4dc95..5a8ba571f786 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiber.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiber.js\n@@ -386,6 +386,15 @@ var ReactDOM = {\n     }\n \n     if (__DEV__) {\n+      warning(\n+        !ReactDOMComponentTree.getInstanceFromNode(container) ||\n+        container._reactRootContainer,\n+        'render(...): Replacing React-rendered children with a new root ' +\n+        'component. If you intended to update the children of this node, ' +\n+        'you should instead have the existing children update their state ' +\n+        'and render the new components instead of calling ReactDOM.render.'\n+      );\n+\n       warning(\n         !container.tagName || container.tagName.toUpperCase() !== 'BODY',\n         'render(): Rendering components directly into document.body is ' +"
    },
    {
      "message": "refer to object by name instead of function call context",
      "diff": "diff --git a/src/renderers/dom/shared/DOMPropertyOperations.js b/src/renderers/dom/shared/DOMPropertyOperations.js\nindex 895a7ec71ed2..aa8010640c73 100644\n--- a/src/renderers/dom/shared/DOMPropertyOperations.js\n+++ b/src/renderers/dom/shared/DOMPropertyOperations.js\n@@ -138,7 +138,7 @@ var DOMPropertyOperations = {\n       if (mutationMethod) {\n         mutationMethod(node, value);\n       } else if (shouldIgnoreValue(propertyInfo, value)) {\n-        this.deleteValueForProperty(node, name);\n+        DOMPropertyOperations.deleteValueForProperty(node, name);\n         return;\n       } else if (propertyInfo.mustUseProperty) {\n         // Contrary to `setAttribute`, object properties are properly"
    },
    {
      "message": "add missing portal case to updateslot switch statement",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactChildFiber.js b/src/renderers/shared/fiber/ReactChildFiber.js\nindex e96f04d02680..ac8a4b2acbfd 100644\n--- a/src/renderers/shared/fiber/ReactChildFiber.js\n+++ b/src/renderers/shared/fiber/ReactChildFiber.js\n@@ -508,6 +508,14 @@ function ChildReconciler(shouldClone, shouldTrackSideEffects) {\n             return null;\n           }\n         }\n+\n+        case REACT_PORTAL_TYPE: {\n+          if (newChild.key === key) {\n+            return updatePortal(returnFiber, oldFiber, newChild, priority);\n+          } else {\n+            return null;\n+          }\n+        }\n       }\n \n       if (isArray(newChild) || getIteratorFn(newChild)) {"
    },
    {
      "message": "replace 2 occurrences of string in type reacttestrendererjson",
      "diff": "diff --git a/src/renderers/testing/ReactTestRendererFiber.js b/src/renderers/testing/ReactTestRendererFiber.js\nindex e9db09a3ce3d..2ce0d7978814 100644\n--- a/src/renderers/testing/ReactTestRendererFiber.js\n+++ b/src/renderers/testing/ReactTestRendererFiber.js\n@@ -21,7 +21,7 @@ import type { TestRendererOptions } from 'ReactTestMount';\n \n type ReactTestRendererJSON = {|\n   type : string,\n-  props : {[propName: string] : string },\n+  props : {[propName: string] : any },\n   children : null | Array<ReactTestRendererNode>,\n   $$typeof ?: Symbol, // Optional because we add it with defineProperty().\n |};\ndiff --git a/src/renderers/testing/stack/ReactTestRendererStack.js b/src/renderers/testing/stack/ReactTestRendererStack.js\nindex 5e4ad70b3a23..e0a9355e331f 100644\n--- a/src/renderers/testing/stack/ReactTestRendererStack.js\n+++ b/src/renderers/testing/stack/ReactTestRendererStack.js\n@@ -27,11 +27,12 @@ var invariant = require('invariant');\n \n import type { ReactElement } from 'ReactElementType';\n import type { ReactInstance } from 'ReactInstanceType';\n+import type { ReactText } from 'ReactTypes';\n \n type ReactTestRendererJSON = {\n   type: string,\n-  props: { [propName: string]: string },\n-  children: null | Array<string | ReactTestRendererJSON>,\n+  props: { [propName: string]: any },\n+  children: null | Array<ReactText | ReactTestRendererJSON>,\n   $$typeof?: any\n }"
    },
    {
      "message": "add unit test to onlychild to ensure onlychild returns child element",
      "diff": "diff --git a/src/isomorphic/children/__tests__/onlyChild-test.js b/src/isomorphic/children/__tests__/onlyChild-test.js\nindex 8de1c9b8073a..9dad017e3982 100644\n--- a/src/isomorphic/children/__tests__/onlyChild-test.js\n+++ b/src/isomorphic/children/__tests__/onlyChild-test.js\n@@ -83,15 +83,12 @@ describe('onlyChild', () => {\n     }).not.toThrow();\n   });\n \n-\n   it('should return the only child', () => {\n-    expect(function() {\n-      var instance =\n-        <WrapComponent>\n-          <span />\n-        </WrapComponent>;\n-      onlyChild(instance.props.children);\n-    }).not.toThrow();\n+    var instance =\n+      <WrapComponent>\n+        <span />\n+      </WrapComponent>;\n+    expect(onlyChild(instance.props.children)).toEqual(<span />);\n   });\n \n });"
    },
    {
      "message": "add feature flag to disable fiber-specific features",
      "diff": "diff --git a/src/renderers/shared/utils/ReactFeatureFlags.js b/src/renderers/shared/utils/ReactFeatureFlags.js\nindex 5bd9651aed15..ce0a442c11bc 100644\n--- a/src/renderers/shared/utils/ReactFeatureFlags.js\n+++ b/src/renderers/shared/utils/ReactFeatureFlags.js\n@@ -18,6 +18,7 @@ var ReactFeatureFlags = {\n   // timeline profiles in Chrome, for example.\n   logTopLevelRenders: false,\n   prepareNewChildrenBeforeUnmountInStack: true,\n+  disableNewFiberFeatures: false,\n };\n \n module.exports = ReactFeatureFlags;"
    },
    {
      "message": "throw if undefined is returned from a composite component",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactChildFiber.js b/src/renderers/shared/fiber/ReactChildFiber.js\nindex 115134e6b907..1a8fc6a45990 100644\n--- a/src/renderers/shared/fiber/ReactChildFiber.js\n+++ b/src/renderers/shared/fiber/ReactChildFiber.js\n@@ -61,8 +61,10 @@ const {\n const isArray = Array.isArray;\n \n const {\n+  FunctionalComponent,\n   ClassComponent,\n   HostText,\n+  HostRoot,\n   HostPortal,\n   CoroutineComponent,\n   YieldComponent,\n@@ -1197,6 +1199,25 @@ function ChildReconciler(shouldClone, shouldTrackSideEffects) {\n       }\n     }\n \n+    if (typeof newChild === 'undefined') {\n+      switch (returnFiber.tag) {\n+        case HostRoot:\n+          // TODO: Top-level render\n+          break;\n+        case ClassComponent:\n+        case FunctionalComponent: {\n+          const Component = returnFiber.type;\n+          invariant(\n+            false,\n+            '%s: Nothing was returned from render. This usually means a ' +\n+            'return statement is missing. Or, to render nothing, ' +\n+            'return null.',\n+            Component.displayName || Component.name || 'Component'\n+          );\n+        }\n+      }\n+    }\n+\n     // Remaining cases are all treated as empty.\n     return deleteRemainingChildren(returnFiber, currentFirstChild);\n   }"
    },
    {
      "message": "add a test for stateless components returning undefined",
      "diff": "diff --git a/src/renderers/shared/shared/__tests__/ReactStatelessComponent-test.js b/src/renderers/shared/shared/__tests__/ReactStatelessComponent-test.js\nindex 060ec461373b..8b3728b19812 100644\n--- a/src/renderers/shared/shared/__tests__/ReactStatelessComponent-test.js\n+++ b/src/renderers/shared/shared/__tests__/ReactStatelessComponent-test.js\n@@ -138,6 +138,20 @@ describe('ReactStatelessComponent', () => {\n     );\n   });\n \n+  it('should warn when stateless component returns undefined', () => {\n+    spyOn(console, 'error');\n+    function NotAComponent() {\n+    }\n+    expect(function() {\n+      ReactTestUtils.renderIntoDocument(<div><NotAComponent /></div>);\n+    }).toThrow();\n+    expectDev(console.error.calls.count()).toBe(1);\n+    expectDev(console.error.calls.argsFor(0)[0]).toContain(\n+      'NotAComponent(...): A valid React element (or null) must be returned. ' +\n+      'You may have returned undefined, an array or some other invalid object.'\n+    );\n+  });\n+\n   it('should throw on string refs in pure functions', () => {\n     function Child() {\n       return <div ref=\"me\" />;"
    },
    {
      "message": "use absolute paths for resolve.root in webpack packaging fixtures",
      "diff": "diff --git a/fixtures/packaging/webpack-alias/config.js b/fixtures/packaging/webpack-alias/config.js\nindex 26812b8129d1..c480c7ddabf6 100644\n--- a/fixtures/packaging/webpack-alias/config.js\n+++ b/fixtures/packaging/webpack-alias/config.js\n@@ -1,10 +1,12 @@\n+var path = require('path');\n+\n module.exports = {\n   entry: './input',\n   output: {\n     filename: 'output.js',\n   },\n   resolve: {\n-    root: '../../../build/packages',\n+    root: path.resolve('../../../build/packages'),\n     alias: {\n       'react': 'react/dist/react-with-addons',\n       'react-dom': 'react-dom/dist/react-dom',\ndiff --git a/fixtures/packaging/webpack/config.js b/fixtures/packaging/webpack/config.js\nindex 000a6864879d..e895e8485065 100644\n--- a/fixtures/packaging/webpack/config.js\n+++ b/fixtures/packaging/webpack/config.js\n@@ -1,9 +1,11 @@\n+var path = require('path');\n+\n module.exports = {\n   entry: './input',\n   output: {\n     filename: 'output.js',\n   },\n   resolve: {\n-    root: '../../../build/packages/',\n+    root: path.resolve('../../../build/packages/'),\n   },\n };"
    },
    {
      "message": "remove one extraneous backtick from line 116 of 'codebase-overview.md' .",
      "diff": "diff --git a/docs/contributing/codebase-overview.md b/docs/contributing/codebase-overview.md\nindex 328f77e15a7c..d0062cf331b7 100644\n--- a/docs/contributing/codebase-overview.md\n+++ b/docs/contributing/codebase-overview.md\n@@ -113,7 +113,7 @@ One way to think about it is that the condition should reflect the normal situat\n \n It is a good idea to avoid spamming the console with duplicate warnings:\n \n-````js\n+```js\n var warning = require('warning');\n \n var didWarnAboutMath = false;"
    },
    {
      "message": "fix relative reference to build folder in dom fixtures",
      "diff": "diff --git a/fixtures/dom/package.json b/fixtures/dom/package.json\nindex 8677f5d70b80..099b4791220a 100644\n--- a/fixtures/dom/package.json\n+++ b/fixtures/dom/package.json\n@@ -12,7 +12,7 @@\n   },\n   \"scripts\": {\n     \"start\": \"react-scripts start\",\n-    \"prestart\": \"cp ../build/{react,react-dom}.js public/\",\n+    \"prestart\": \"cp ../../build/{react,react-dom}.js public/\",\n     \"build\": \"react-scripts build\",\n     \"test\": \"react-scripts test --env=jsdom\",\n     \"eject\": \"react-scripts eject\""
    },
    {
      "message": "add test prompt message when no fixture is selected",
      "diff": "diff --git a/fixtures/src/components/fixtures/index.js b/fixtures/src/components/fixtures/index.js\nindex 763939d28ff2..876a4a5044f0 100644\n--- a/fixtures/src/components/fixtures/index.js\n+++ b/fixtures/src/components/fixtures/index.js\n@@ -20,7 +20,7 @@ const FixturesPage = React.createClass({\n       case '/textareas':\n         return <TextAreaFixtures />;\n       default:\n-        return <span />;\n+        return <p>Please select a text fixture.</p>\n     }\n   },\n });"
    },
    {
      "message": "display the help at startup, otherwise it's hard to figure out what to do",
      "diff": "diff --git a/scripts/release-manager/cli.js b/scripts/release-manager/cli.js\nindex 350aa468bb5e..7269382d6dc5 100755\n--- a/scripts/release-manager/cli.js\n+++ b/scripts/release-manager/cli.js\n@@ -125,10 +125,12 @@ const app = {\n       vorpal.use(require(`./commands/${command}`)(vorpal, app));\n     });\n \n-    vorpal\n+    var v = vorpal\n       .history('react-release-manager')\n-      .delimiter('rrm \\u2234')\n-      .show();\n+      .delimiter('rrm \\u2234');\n+    v.exec('help');\n+    v.show();\n+\n   },\n };"
    },
    {
      "message": "fix stable-prs command so it updates milestone correctly",
      "diff": "diff --git a/scripts/release-manager/commands/stable-prs.js b/scripts/release-manager/commands/stable-prs.js\nindex 24309ac314e0..abfe6756b2d8 100644\n--- a/scripts/release-manager/commands/stable-prs.js\n+++ b/scripts/release-manager/commands/stable-prs.js\n@@ -178,11 +178,8 @@ module.exports = function(vorpal, app) {\n               });\n           });\n         })\n-        .then(({successful, skipped, didAbort}) => {\n-          console.log(successful.length, skipped.length, didAbort);\n-        })\n         // Update the milestone on successful PRs\n-        // // TODO: maybe handle didAbort and git reset --hard to a rev we read when we start the process?\n+        // TODO: maybe handle didAbort and git reset --hard to a rev we read when we start the process?\n         .then(({successful, aborted, didAbort}) => {\n           if (didAbort) {\n             return undefined;"
    },
    {
      "message": "update to account for new react-test-renderer package",
      "diff": "diff --git a/scripts/release-manager/commands/utils/npm.js b/scripts/release-manager/commands/utils/npm.js\nindex 06ab2d035f33..5a9bf235fc02 100644\n--- a/scripts/release-manager/commands/utils/npm.js\n+++ b/scripts/release-manager/commands/utils/npm.js\n@@ -14,6 +14,7 @@ const PACKAGES = [\n   'react-addons-update',\n   'react-dom',\n   'react-native-renderer',\n+  'react-test-renderer',\n   'react',\n ];\n \ndiff --git a/scripts/release-manager/commands/version.js b/scripts/release-manager/commands/version.js\nindex 9f4ed6a5ac82..3d69595b8fed 100644\n--- a/scripts/release-manager/commands/version.js\n+++ b/scripts/release-manager/commands/version.js\n@@ -17,6 +17,7 @@ const chalk = require('chalk');\n //    - packages/react-addons/package.json (version, peerDependencies.react)\n //    - packages/react-dom/package.json (version, peerDependencies.react)\n //    - packages/react-native-renderer/package.json (version, peerDependencies.react)\n+//    - packages/react-native-renderer/package.json (version, peerDependencies.react)\n //    - src/ReactVersion.js (module.exports)\n // 4. Commit?\n \n@@ -111,6 +112,10 @@ module.exports = function(vorpal, app) {\n             file: 'packages/react-native-renderer/package.json',\n             fields: ['version', 'dependencies.react'],\n           },\n+          {\n+            file: 'packages/react-test-renderer/package.json',\n+            fields: ['version', 'peerDependencies.react'],\n+          },\n         ].forEach((opts) => {\n           updateJSON.apply(this, [path.join(app.PATH_TO_REPO, opts.file), opts.fields, newVersion]);\n         });"
    },
    {
      "message": "throw when attempting to unmount at an invalid node",
      "diff": "diff --git a/scripts/fiber/tests-failing.txt b/scripts/fiber/tests-failing.txt\nindex 46e114bb2454..ae1b00f2df5a 100644\n--- a/scripts/fiber/tests-failing.txt\n+++ b/scripts/fiber/tests-failing.txt\n@@ -26,7 +26,6 @@ src/renderers/dom/shared/__tests__/ReactDOMTextComponent-test.js\n * can reconcile text arbitrarily split into multiple nodes on some substitutions only\n \n src/renderers/dom/shared/__tests__/ReactMount-test.js\n-* throws when given a non-node\n * throws when given a string\n * throws when given a factory\n * tracks root instances\ndiff --git a/scripts/fiber/tests-passing.txt b/scripts/fiber/tests-passing.txt\nindex 495ab14b83f0..ab34e726913f 100644\n--- a/scripts/fiber/tests-passing.txt\n+++ b/scripts/fiber/tests-passing.txt\n@@ -752,6 +752,7 @@ src/renderers/dom/shared/__tests__/ReactEventListener-test.js\n * should not fire duplicate events for a React DOM tree\n \n src/renderers/dom/shared/__tests__/ReactMount-test.js\n+* throws when given a non-node\n * should render different components in same root\n * should unmount and remount if the key changes\n * should reuse markup if rendering to the same target twice\ndiff --git a/src/renderers/dom/fiber/ReactDOMFiber.js b/src/renderers/dom/fiber/ReactDOMFiber.js\nindex ed27da5ee98a..79ad9a28decc 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiber.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiber.js\n@@ -352,6 +352,10 @@ var ReactDOM = {\n   },\n \n   unmountComponentAtNode(container : DOMContainerElement) {\n+    invariant(\n+      isValidContainer(container),\n+      'unmountComponentAtNode(...): Target container is not a DOM element.'\n+    );\n     warnAboutUnstableUse();\n     if (container._reactRootContainer) {\n       // Unmount should not be batched."
    },
    {
      "message": "fix typo in proposing a change section in how-to-contribute.md",
      "diff": "diff --git a/docs/contributing/how-to-contribute.md b/docs/contributing/how-to-contribute.md\nindex 736b6b3cf458..4beaabeac90b 100644\n--- a/docs/contributing/how-to-contribute.md\n+++ b/docs/contributing/how-to-contribute.md\n@@ -54,7 +54,7 @@ There is also [an active community of React users on the Discord chat platform](\n \n ### Proposing a Change\n \n-If you intend to change to the public API, or make any non-trivial changes to the implementation, we recommend [filing an issue](https://github.com/facebook/react/issues/new). This lets us reach an agreement on your proposal before you put significant effort into it.\n+If you intend to change the public API, or make any non-trivial changes to the implementation, we recommend [filing an issue](https://github.com/facebook/react/issues/new). This lets us reach an agreement on your proposal before you put significant effort into it.\n \n If you're only fixing a bug, it's fine to submit a pull request right away but we still recommend to file an issue detailing what you're fixing. This is helpful in case we don't accept that specific fix but want to keep track of the issue."
    },
    {
      "message": "avoid reading the same stackcursor current multiple times",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberHostContext.js b/src/renderers/shared/fiber/ReactFiberHostContext.js\nindex f49f41ea95cc..a10688aa7f89 100644\n--- a/src/renderers/shared/fiber/ReactFiberHostContext.js\n+++ b/src/renderers/shared/fiber/ReactFiberHostContext.js\n@@ -48,10 +48,11 @@ module.exports = function<T, P, I, TI, C, CX>(\n   let rootInstanceStackCursor : StackCursor<?C> = createCursor((null: ?C));\n \n   function getRootHostContainer() : C {\n-    if (rootInstanceStackCursor.current == null) {\n+    const rootInstance = rootInstanceStackCursor.current;\n+    if (rootInstance == null) {\n       throw new Error('Expected root container to exist.');\n     }\n-    return rootInstanceStackCursor.current;\n+    return rootInstance;\n   }\n \n   function pushHostContainer(fiber : Fiber, nextRootInstance : C) {\n@@ -74,20 +75,20 @@ module.exports = function<T, P, I, TI, C, CX>(\n   }\n \n   function getHostContext() : CX {\n-    if (contextStackCursor.current == null) {\n+    const context = contextStackCursor.current;\n+    if (context == null) {\n       throw new Error('Expected host context to exist.');\n     }\n-\n-    return contextStackCursor.current;\n+    return context;\n   }\n \n   function pushHostContext(fiber : Fiber) : void {\n-    if (rootInstanceStackCursor.current == null) {\n+    const rootInstance = rootInstanceStackCursor.current;\n+    if (rootInstance == null) {\n       throw new Error('Expected root host context to exist.');\n     }\n \n     const context = contextStackCursor.current || emptyObject;\n-    const rootInstance = rootInstanceStackCursor.current;\n     const nextContext = getChildHostContext(context, fiber.type, rootInstance);\n \n     // Don't push this Fiber's context unless it's unique."
    },
    {
      "message": "make requestidlecallback and requestanimationframe shims async",
      "diff": "diff --git a/scripts/fiber/tests-passing.txt b/scripts/fiber/tests-passing.txt\nindex 36bfeaa2c86e..40d2350c562d 100644\n--- a/scripts/fiber/tests-passing.txt\n+++ b/scripts/fiber/tests-passing.txt\n@@ -541,6 +541,7 @@ src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n * findDOMNode should find dom element after expanding a fragment\n * should bubble events from the portal to the parent\n * should not onMouseLeave when staying in the portal\n+* should not crash encountering low-priority tree\n \n src/renderers/dom/shared/__tests__/CSSProperty-test.js\n * should generate browser prefixes for its `isUnitlessNumber`\ndiff --git a/scripts/jest/environment.js b/scripts/jest/environment.js\nindex 6b0c38fe49d7..98aa77b5591c 100644\n--- a/scripts/jest/environment.js\n+++ b/scripts/jest/environment.js\n@@ -1,11 +1,13 @@\n /* eslint-disable */\n global.__DEV__ = true;\n \n-// For testing DOM Fiber, we synchronously invoke all the scheduling.\n+// For testing DOM Fiber.\n global.requestAnimationFrame = function(callback) {\n-  callback();\n+  setTimeout(callback);\n };\n \n global.requestIdleCallback = function(callback) {\n-  callback({ timeRemaining() { return Infinity; } });\n+  setTimeout(() => {\n+    callback({ timeRemaining() { return Infinity; } });\n+  });\n };\ndiff --git a/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js b/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\nindex 990ad069d1e1..9abec3eedd1b 100644\n--- a/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n+++ b/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n@@ -993,5 +993,14 @@ describe('ReactDOMFiber', () => {\n         'leave parent', // Only when we leave the portal does onMouseLeave fire.\n       ]);\n     });\n+\n+    it('should not crash encountering low-priority tree', () => {\n+      ReactDOM.render(\n+        <div hidden={true}>\n+          <div />\n+        </div>,\n+        container\n+      );\n+    });\n   }\n });"
    },
    {
      "message": "simplify test for whether we should flush a pending commit",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberScheduler.js b/src/renderers/shared/fiber/ReactFiberScheduler.js\nindex 316edeaa1830..9eff3bfcf9e2 100644\n--- a/src/renderers/shared/fiber/ReactFiberScheduler.js\n+++ b/src/renderers/shared/fiber/ReactFiberScheduler.js\n@@ -680,17 +680,9 @@ module.exports = function<T, P, I, TI, C, CX>(config : HostConfig<T, P, I, TI, C\n       }\n \n       // Before starting any work, check to see if there are any pending\n-      // commits from the previous frame. An exception is if we're flushing\n-      // Task work in a deferred batch and the pending commit does not\n-      // have Task priority.\n-      if (pendingCommit) {\n-        const isFlushingTaskWorkInDeferredBatch =\n-          priorityLevel === TaskPriority &&\n-          isPerformingDeferredWork &&\n-          pendingCommit.pendingWorkPriority !== TaskPriority;\n-        if (!isFlushingTaskWorkInDeferredBatch) {\n-          commitAllWork(pendingCommit);\n-        }\n+      // commits from the previous frame.\n+      if (pendingCommit && !deadlineHasExpired) {\n+        commitAllWork(pendingCommit);\n       }\n \n       // Nothing in performWork should be allowed to throw. All unsafe"
    },
    {
      "message": "test top-level callback when re-rendering with same element",
      "diff": "diff --git a/scripts/fiber/tests-passing.txt b/scripts/fiber/tests-passing.txt\nindex e48c182712b3..2c127f082de0 100644\n--- a/scripts/fiber/tests-passing.txt\n+++ b/scripts/fiber/tests-passing.txt\n@@ -505,6 +505,7 @@ src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n * should render strings as children\n * should render numbers as children\n * should be called a callback argument\n+* should call a callback argument when the same element is re-rendered\n * should render a component returning strings directly from render\n * should render a component returning numbers directly from render\n * finds the DOM Text node of a string child\ndiff --git a/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js b/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\nindex 6dd314654110..990ad069d1e1 100644\n--- a/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n+++ b/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n@@ -64,6 +64,35 @@ describe('ReactDOMFiber', () => {\n     expect(called).toEqual(true);\n   });\n \n+  it('should call a callback argument when the same element is re-rendered', () => {\n+    class Foo extends React.Component {\n+      render() {\n+        return <div>Foo</div>;\n+      }\n+    }\n+    const element = <Foo />;\n+\n+    // mounting phase\n+    let called = false;\n+    ReactDOM.render(\n+      element,\n+      container,\n+      () => called = true\n+    );\n+    expect(called).toEqual(true);\n+\n+    // updating phase\n+    called = false;\n+    ReactDOM.unstable_batchedUpdates(() => {\n+      ReactDOM.render(\n+        element,\n+        container,\n+        () => called = true\n+      );\n+    });\n+    expect(called).toEqual(true);\n+  });\n+\n   if (ReactDOMFeatureFlags.useFiber) {\n     it('should render a component returning strings directly from render', () => {\n       const Text = ({value}) => value;"
    },
    {
      "message": "hostroot no longer pops context provider in complete phase",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberCompleteWork.js b/src/renderers/shared/fiber/ReactFiberCompleteWork.js\nindex 84af8a456d84..2cd438812480 100644\n--- a/src/renderers/shared/fiber/ReactFiberCompleteWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberCompleteWork.js\n@@ -202,7 +202,6 @@ module.exports = function<T, P, I, TI, C, CX>(\n         return null;\n       case HostRoot: {\n         workInProgress.memoizedProps = workInProgress.pendingProps;\n-        popContextProvider();\n         const fiberRoot = (workInProgress.stateNode : FiberRoot);\n         if (fiberRoot.pendingContext) {\n           fiberRoot.context = fiberRoot.pendingContext;\ndiff --git a/src/renderers/shared/fiber/ReactFiberContext.js b/src/renderers/shared/fiber/ReactFiberContext.js\nindex 2479939e9b39..4fdb8e2ec31d 100644\n--- a/src/renderers/shared/fiber/ReactFiberContext.js\n+++ b/src/renderers/shared/fiber/ReactFiberContext.js\n@@ -77,6 +77,7 @@ function isContextProvider(fiber : Fiber) : boolean {\n exports.isContextProvider = isContextProvider;\n \n function popContextProvider() : void {\n+  invariant(index > -1, 'Unexpected context pop');\n   contextStack[index] = emptyObject;\n   didPerformWorkStack[index] = false;\n   index--;"
    },
    {
      "message": "tweak yarn installation to not run if it's already installed",
      "diff": "diff --git a/circle.yml b/circle.yml\nindex 0c81a0fd91be..45ab5c3cc5db 100644\n--- a/circle.yml\n+++ b/circle.yml\n@@ -12,17 +12,19 @@ machine:\n     version: 2.2.3\n   environment:\n     TRAVIS_REPO_SLUG: facebook/react\n+    YARN_VERSION: 0.17.8\n+    PATH: \"${PATH}:${HOME}/.yarn/bin\"\n \n dependencies:\n   pre:\n     # This is equivalent to $TRAVIS_COMMIT_RANGE\n     # Need to figure out how to bail early if this is a \"docs only\" build\n     - echo $CIRCLE_COMPARE_URL | cut -d/ -f7\n-    # install yarn\n-    - sudo apt-key adv --fetch-keys http://dl.yarnpkg.com/debian/pubkey.gpg\n-    - echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\n-    - sudo apt-get update -qq\n-    - sudo apt-get install -y -qq yarn\n+    # install yarn if it's not already installed\n+    - |\n+      if [[ ! -e ~/.yarn/bin/yarn || $(yarn --version) != \"${YARN_VERSION}\" ]]; then\n+        curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION\n+      fi\n   override:\n     - bundle install --gemfile=docs/Gemfile --deployment --path=vendor/bundle --jobs=3 --retry=3\n     - yarn install\n@@ -33,6 +35,7 @@ dependencies:\n     - docs/vendor/bundle\n     - .grunt # Show size comparisons between builds\n     - ~/react-gh-pages # docs checkout\n+    - ~/.yarn\n     - ~/.yarn-cache\n \n test:"
    },
    {
      "message": "add dependencies to react-test-renderer and react-addons",
      "diff": "diff --git a/packages/react-addons/package.json b/packages/react-addons/package.json\nindex 80f2250f3618..6db871b19b95 100644\n--- a/packages/react-addons/package.json\n+++ b/packages/react-addons/package.json\n@@ -8,7 +8,10 @@\n     \"react-addon\"\n   ],\n   \"license\": \"BSD-3-Clause\",\n-  \"dependencies\": {},\n+  \"dependencies\": {\n+    \"fbjs\": \"^0.8.4\",\n+    \"object-assign\": \"^4.1.0\"\n+  },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0-alpha\"\n   },\ndiff --git a/packages/react-test-renderer/package.json b/packages/react-test-renderer/package.json\nindex 7e89c811b6a7..8b25228147cf 100644\n--- a/packages/react-test-renderer/package.json\n+++ b/packages/react-test-renderer/package.json\n@@ -14,6 +14,10 @@\n     \"url\": \"https://github.com/facebook/react/issues\"\n   },\n   \"homepage\": \"https://facebook.github.io/react/\",\n+  \"dependencies\": {\n+    \"fbjs\": \"^0.8.4\",\n+    \"object-assign\": \"^4.1.0\"\n+  },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0-alpha\"\n   },"
    },
    {
      "message": "assert that we always find a parent for dom mutations",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberCommitWork.js b/src/renderers/shared/fiber/ReactFiberCommitWork.js\nindex 9e00ff045734..0fe3c232bd28 100644\n--- a/src/renderers/shared/fiber/ReactFiberCommitWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberCommitWork.js\n@@ -66,7 +66,7 @@ module.exports = function<T, P, I, TI, C>(\n     }\n   }\n \n-  function getHostParent(fiber : Fiber) : null | I | C {\n+  function getHostParent(fiber : Fiber) : I | C {\n     let parent = fiber.return;\n     while (parent) {\n       switch (parent.tag) {\n@@ -79,7 +79,7 @@ module.exports = function<T, P, I, TI, C>(\n       }\n       parent = parent.return;\n     }\n-    return null;\n+    throw new Error('Expected to find a host parent.');\n   }\n \n   function isHostParent(fiber : Fiber) : boolean {\n@@ -134,9 +134,6 @@ module.exports = function<T, P, I, TI, C>(\n   function commitInsertion(finishedWork : Fiber) : void {\n     // Recursively insert all host nodes into the parent.\n     const parent = getHostParent(finishedWork);\n-    if (!parent) {\n-      return;\n-    }\n     const before = getHostSibling(finishedWork);\n     // We only have the top Fiber that was inserted but we need recurse down its\n     // children to find all the terminal nodes.\n@@ -208,9 +205,7 @@ module.exports = function<T, P, I, TI, C>(\n         commitNestedUnmounts(node);\n         // After all the children have unmounted, it is now safe to remove the\n         // node from the tree.\n-        if (parent) {\n-          removeChild(parent, node.stateNode);\n-        }\n+        removeChild(parent, node.stateNode);\n       } else if (node.tag === Portal) {\n         // If this is a portal, then the parent is actually the portal itself.\n         // We need to keep track of which parent we're removing from."
    },
    {
      "message": "fix rendersubtreeintocontainer with non-context-provider parent",
      "diff": "diff --git a/src/addons/__tests__/renderSubtreeIntoContainer-test.js b/src/addons/__tests__/renderSubtreeIntoContainer-test.js\nindex 1ee3bd6a939b..7ed20edeeaf7 100644\n--- a/src/addons/__tests__/renderSubtreeIntoContainer-test.js\n+++ b/src/addons/__tests__/renderSubtreeIntoContainer-test.js\n@@ -196,4 +196,23 @@ describe('renderSubtreeIntoContainer', () => {\n     expect(portal.firstChild.innerHTML).toBe('changed-changed');\n   });\n \n+  it('should render portal with non-context-provider parent', () => {\n+    var container = document.createElement('div');\n+    document.body.appendChild(container);\n+    var portal = document.createElement('div');\n+\n+    class Parent extends React.Component {\n+      render() {\n+        return null;\n+      }\n+\n+      componentDidMount() {\n+        renderSubtreeIntoContainer(this, <div>hello</div>, portal);\n+      }\n+    }\n+\n+    ReactDOM.render(<Parent bar=\"initial\" />, container);\n+    expect(portal.firstChild.innerHTML).toBe('hello');\n+  });\n+\n });\ndiff --git a/src/renderers/shared/fiber/ReactFiberReconciler.js b/src/renderers/shared/fiber/ReactFiberReconciler.js\nindex a97271fc0aa0..15b415f88d7a 100644\n--- a/src/renderers/shared/fiber/ReactFiberReconciler.js\n+++ b/src/renderers/shared/fiber/ReactFiberReconciler.js\n@@ -19,6 +19,7 @@ import type { PriorityLevel } from 'ReactPriorityLevel';\n \n var {\n   findCurrentUnmaskedContext,\n+  isContextProvider,\n   processChildContext,\n } = require('ReactFiberContext');\n var { createFiberRoot } = require('ReactFiberRoot');\n@@ -91,7 +92,10 @@ export type Reconciler<C, I, TI> = {\n };\n \n getContextForSubtree._injectFiber(function(fiber : Fiber) {\n-  return processChildContext(fiber, findCurrentUnmaskedContext(fiber));\n+  const parentContext = findCurrentUnmaskedContext(fiber);\n+  return isContextProvider(fiber) ?\n+    processChildContext(fiber, parentContext) :\n+    parentContext;\n });\n \n module.exports = function<T, P, I, TI, C>(config : HostConfig<T, P, I, TI, C>) : Reconciler<C, I, TI> {"
    },
    {
      "message": "add a couple missing svg tags to dom elements docs",
      "diff": "diff --git a/docs/docs/reference-dom-elements.md b/docs/docs/reference-dom-elements.md\nindex a3f627a076fc..660e04a52f03 100644\n--- a/docs/docs/reference-dom-elements.md\n+++ b/docs/docs/reference-dom-elements.md\n@@ -168,7 +168,7 @@ underlineThickness unicode unicodeBidi unicodeRange unitsPerEm vAlphabetic\n vHanging vIdeographic vMathematical values vectorEffect version vertAdvY\n vertOriginX vertOriginY viewBox viewTarget visibility widths wordSpacing\n writingMode x x1 x2 xChannelSelector xHeight xlinkActuate xlinkArcrole\n-xlinkHref xlinkRole xlinkShow xlinkTitle xlinkType xmlBase xmlLang xmlSpace\n-y y1 y2 yChannelSelector z zoomAndPan\n+xlinkHref xlinkRole xlinkShow xlinkTitle xlinkType xmlns xmlnsXlink xmlBase\n+xmlLang xmlSpace y y1 y2 yChannelSelector z zoomAndPan\n \n ```"
    },
    {
      "message": "exclude data-reactroot from tests when using fiber",
      "diff": "diff --git a/src/renderers/dom/shared/wrappers/__tests__/ReactDOMInput-test.js b/src/renderers/dom/shared/wrappers/__tests__/ReactDOMInput-test.js\nindex c82fb121ed4a..46392d306089 100644\n--- a/src/renderers/dom/shared/wrappers/__tests__/ReactDOMInput-test.js\n+++ b/src/renderers/dom/shared/wrappers/__tests__/ReactDOMInput-test.js\n@@ -952,7 +952,7 @@ describe('ReactDOMInput', () => {\n \n     ReactTestUtils.renderIntoDocument(<input value=\"0\" type=\"range\" min=\"0\" max=\"100\" step=\"1\" />);\n     expect(log).toEqual([\n-      'set data-reactroot',\n+      ...(ReactDOMFeatureFlags.useFiber ? [] : ['set data-reactroot']),\n       'set type',\n       'set step',\n       'set min',\n@@ -1019,7 +1019,7 @@ describe('ReactDOMInput', () => {\n \n     ReactTestUtils.renderIntoDocument(<input type=\"date\" defaultValue=\"1980-01-01\" />);\n     expect(log).toEqual([\n-      'node.setAttribute(\"data-reactroot\", \"\")',\n+      ...(ReactDOMFeatureFlags.useFiber ? [] : ['node.setAttribute(\"data-reactroot\", \"\")']),\n       'node.setAttribute(\"type\", \"date\")',\n       'node.setAttribute(\"value\", \"1980-01-01\")',\n       'node.value = \"\"',"
    },
    {
      "message": "fix up flow annotations to be a bit more explicit where the unsoundness is",
      "diff": "diff --git a/src/renderers/dom/fiber/ReactDOMFiberComponent.js b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\nindex 37eb47a100f1..186d2f0b5f32 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n@@ -159,7 +159,7 @@ var mediaEvents = {\n   topWaiting: 'waiting',\n };\n \n-function trapClickOnNonInteractiveElement(node : any) {\n+function trapClickOnNonInteractiveElement(node : HTMLElement) {\n   // Mobile Safari does not fire properly bubble click events on\n   // non-interactive elements, which means delegated click listeners do not\n   // fire. The workaround for this bug involves attaching an empty click\n@@ -496,7 +496,7 @@ var ReactDOMFiberComponent = {\n         var div = ownerDocument.createElement('div');\n         div.innerHTML = '<script></script>';\n         // This is guaranteed to yield a script element.\n-        var firstChild = ((div.firstChild : any) : Element);\n+        var firstChild = ((div.firstChild : any) : HTMLScriptElement);\n         domElement = div.removeChild(firstChild);\n       } else if (props.is) {\n         domElement = ownerDocument.createElement(tag, props.is);\n@@ -622,7 +622,8 @@ var ReactDOMFiberComponent = {\n         break;\n       default:\n         if (typeof props.onClick === 'function') {\n-          trapClickOnNonInteractiveElement(domElement);\n+          // TODO: This cast may not be sound for SVG, MathML or custom elements.\n+          trapClickOnNonInteractiveElement(((domElement : any) : HTMLElement));\n         }\n         break;\n     }\n@@ -655,7 +656,8 @@ var ReactDOMFiberComponent = {\n       default:\n         if (typeof lastProps.onClick !== 'function' &&\n             typeof nextProps.onClick === 'function') {\n-          trapClickOnNonInteractiveElement(domElement);\n+          // TODO: This cast may not be sound for SVG, MathML or custom elements.\n+          trapClickOnNonInteractiveElement(((domElement : any) : HTMLElement));\n         }\n         break;\n     }"
    },
    {
      "message": "satisfy flow by assuming value is an array for multi-select",
      "diff": "diff --git a/src/renderers/dom/fiber/wrappers/ReactDOMFiberSelect.js b/src/renderers/dom/fiber/wrappers/ReactDOMFiberSelect.js\nindex a970755dc729..1d23f7cbc648 100644\n--- a/src/renderers/dom/fiber/wrappers/ReactDOMFiberSelect.js\n+++ b/src/renderers/dom/fiber/wrappers/ReactDOMFiberSelect.js\n@@ -68,13 +68,14 @@ function checkSelectPropTypes(inst, props) {\n   }\n }\n \n-function updateOptions(inst : Fiber, multiple : boolean, propValue : string | Array<string>) {\n+function updateOptions(inst : Fiber, multiple : boolean, propValue : any) {\n   var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n \n   if (multiple) {\n+    let selectedValues = (propValue : Array<string>);\n     let selectedValue = {};\n-    for (let i = 0; i < propValue.length; i++) {\n-      selectedValue['' + propValue[i]] = true;\n+    for (let i = 0; i < selectedValues.length; i++) {\n+      selectedValue['' + selectedValues[i]] = true;\n     }\n     for (let i = 0; i < options.length; i++) {\n       var selected = selectedValue.hasOwnProperty(options[i].value);\n@@ -85,7 +86,7 @@ function updateOptions(inst : Fiber, multiple : boolean, propValue : string | Ar\n   } else {\n     // Do not set `select.value` as exact behavior isn't consistent across all\n     // browsers for all cases.\n-    let selectedValue = '' + propValue;\n+    let selectedValue = '' + (propValue : string);\n     for (let i = 0; i < options.length; i++) {\n       if (options[i].value === selectedValue) {\n         options[i].selected = true;"
    },
    {
      "message": "fix reactcomponentexpect.tobedomcomponentwithchildcount regression",
      "diff": "diff --git a/src/test/reactComponentExpect.js b/src/test/reactComponentExpect.js\nindex 1959bea86c56..48d9092dbbd4 100644\n--- a/src/test/reactComponentExpect.js\n+++ b/src/test/reactComponentExpect.js\n@@ -157,8 +157,8 @@ Object.assign(reactComponentExpectInternal.prototype, {\n       if (count > 0) {\n         expect(renderedChildren).toBeTruthy();\n         expect(Object.keys(renderedChildren).length).toBe(count);\n-      } else {\n-        expect(renderedChildren).toBeFalsy();\n+      } else if (renderedChildren) {\n+        expect(Object.keys(renderedChildren).length).toBe(0);\n       }\n     }\n     return this;"
    },
    {
      "message": "support slot attribute on dom elements for v1 shadowdom named slots p\u2026",
      "diff": "diff --git a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\nindex ec288be9eae3..da0ca9b44936 100644\n--- a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n+++ b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n@@ -139,6 +139,8 @@ var HTMLDOMPropertyConfig = {\n     shape: 0,\n     size: HAS_POSITIVE_NUMERIC_VALUE,\n     sizes: 0,\n+    // support for projecting regular DOM Elements via V1 named slots ( shadow dom )\n+    slot: 0,\n     span: HAS_POSITIVE_NUMERIC_VALUE,\n     spellCheck: 0,\n     src: 0,\ndiff --git a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\nindex 36d284170084..00d0bd445d49 100644\n--- a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\n+++ b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\n@@ -245,6 +245,24 @@ describe('ReactDOMComponent', () => {\n       expect(stubStyle.display).toEqual('');\n     });\n \n+    it('should allow named slot projection on both web components and regular DOM elements', () => {\n+      var container = document.createElement('div');\n+\n+      ReactDOM.render(\n+        <my-component>\n+          <my-second-component slot=\"first\"></my-second-component>\n+          <button slot=\"second\">Hello</button>\n+        </my-component>,\n+        container\n+      );\n+\n+      var lightDOM = container.firstChild.childNodes;\n+\n+      expect(lightDOM[0].getAttribute('slot')).toBe('first');\n+      expect(lightDOM[1].getAttribute('slot')).toBe('second');\n+\n+    } );\n+\n     it('should skip reserved props on web components', () => {\n       var container = document.createElement('div');"
    },
    {
      "message": "ensure first iteration of performanimationwork loop has right priority",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberScheduler.js b/src/renderers/shared/fiber/ReactFiberScheduler.js\nindex fd236dbfce55..44af01cb34ae 100644\n--- a/src/renderers/shared/fiber/ReactFiberScheduler.js\n+++ b/src/renderers/shared/fiber/ReactFiberScheduler.js\n@@ -425,17 +425,16 @@ module.exports = function<T, P, I, TI, C>(config : HostConfig<T, P, I, TI, C>) {\n     // Always start from the root\n     nextUnitOfWork = findNextUnitOfWork();\n     while (nextUnitOfWork &&\n-           nextPriorityLevel !== NoWork) {\n+           nextPriorityLevel !== NoWork &&\n+           nextPriorityLevel <= AnimationPriority) {\n       nextUnitOfWork = performUnitOfWork(nextUnitOfWork, false);\n       if (!nextUnitOfWork) {\n         // Keep searching for animation work until there's no more left\n         nextUnitOfWork = findNextUnitOfWork();\n       }\n-      // Stop if the next unit of work is low priority\n-      if (nextPriorityLevel > AnimationPriority) {\n-        scheduleDeferredCallback(performDeferredWork);\n-        return;\n-      }\n+    }\n+    if (nextUnitOfWork && nextPriorityLevel > AnimationPriority) {\n+      scheduleDeferredCallback(performDeferredWork);\n     }\n   }"
    },
    {
      "message": "assign reacttypeofsideeffect to reactfiber.fiber.effecttag correctly",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactChildFiber.js b/src/renderers/shared/fiber/ReactChildFiber.js\nindex 4468c28aed4c..ba4adbadc4ac 100644\n--- a/src/renderers/shared/fiber/ReactChildFiber.js\n+++ b/src/renderers/shared/fiber/ReactChildFiber.js\n@@ -23,7 +23,6 @@ var {\n } = require('ReactCoroutine');\n \n var ReactFiber = require('ReactFiber');\n-var ReactPriorityLevel = require('ReactPriorityLevel');\n var ReactReifiedYield = require('ReactReifiedYield');\n var ReactTypeOfSideEffect = require('ReactTypeOfSideEffect');\n var ReactTypeOfWork = require('ReactTypeOfWork');\n@@ -56,10 +55,7 @@ const {\n } = ReactTypeOfWork;\n \n const {\n-  NoWork,\n-} = ReactPriorityLevel;\n-\n-const {\n+  NoEffect,\n   Placement,\n   Deletion,\n } = ReactTypeOfSideEffect;\n@@ -179,7 +175,7 @@ function ChildReconciler(shouldClone, shouldTrackSideEffects) {\n       // we're reconciling at a lower priority that means that this was\n       // down-prioritized.\n       fiber.pendingWorkPriority = priority;\n-      fiber.effectTag = NoWork;\n+      fiber.effectTag = NoEffect;\n       fiber.index = 0;\n       fiber.sibling = null;\n       return fiber;\ndiff --git a/src/renderers/shared/fiber/ReactFiberScheduler.js b/src/renderers/shared/fiber/ReactFiberScheduler.js\nindex b334d12924f3..fd236dbfce55 100644\n--- a/src/renderers/shared/fiber/ReactFiberScheduler.js\n+++ b/src/renderers/shared/fiber/ReactFiberScheduler.js\n@@ -137,7 +137,7 @@ module.exports = function<T, P, I, TI, C>(config : HostConfig<T, P, I, TI, C>) {\n           commitInsertion(effectfulFiber);\n           // Clear the effect tag so that we know that this is inserted, before\n           // any life-cycles like componentDidMount gets called.\n-          effectfulFiber.effectTag = NoWork;\n+          effectfulFiber.effectTag = NoEffect;\n           break;\n         }\n         case PlacementAndUpdate: {"
    },
    {
      "message": "update-unknown-warning-page - add a reason for the warning",
      "diff": "diff --git a/docs/warnings/unknown-prop.md b/docs/warnings/unknown-prop.md\nindex 9f030a82003c..eb7585f650d1 100644\n--- a/docs/warnings/unknown-prop.md\n+++ b/docs/warnings/unknown-prop.md\n@@ -13,6 +13,8 @@ There are a couple of likely reasons this warning could be appearing:\n \n 3. React does not yet recognize the attribute you specified. This will likely be fixed in a future version of React. However, React currently strips all unknown attributes, so specifying them in your React app will not cause them to be rendered.\n \n+4. You are using a React component without an upper case. React interprets it as a DOM tag because [React JSX transform uses the upper vs. lower case convention to distinguish between user-defined components and DOM tags](/react/docs/jsx-in-depth.html#user-defined-components-must-be-capitalized).\n+\n ---\n \n To fix this, composite components should \"consume\" any prop that is intended for the composite component and not intended for the child component. Example:"
    },
    {
      "message": "remove unneeded else branches from documentation examples",
      "diff": "diff --git a/docs/docs/conditional-rendering.md b/docs/docs/conditional-rendering.md\nindex cb120a894771..c73720629563 100644\n--- a/docs/docs/conditional-rendering.md\n+++ b/docs/docs/conditional-rendering.md\n@@ -30,9 +30,8 @@ function Greeting(props) {\n   const isLoggedIn = props.isLoggedIn;\n   if (isLoggedIn) {\n     return <UserGreeting />;\n-  } else {\n-    return <GuestGreeting />;\n   }\n+  return <GuestGreeting />;\n }\n \n ReactDOM.render(\ndiff --git a/docs/docs/introducing-jsx.md b/docs/docs/introducing-jsx.md\nindex 56e7b98e8582..75b9a5622d4a 100644\n--- a/docs/docs/introducing-jsx.md\n+++ b/docs/docs/introducing-jsx.md\n@@ -60,9 +60,8 @@ This means that you can use JSX inside of `if` statements and `for` loops, assig\n function getGreeting(user) {\n   if (user) {\n     return <h1>Hello, {formatName(user)}!</h1>;\n-  } else {\n-    return <h1>Hello, Stranger.</h1>;\n   }\n+  return <h1>Hello, Stranger.</h1>;\n }\n ```\n \ndiff --git a/docs/docs/lifting-state-up.md b/docs/docs/lifting-state-up.md\nindex 912ee89cdbc9..6b75c4ce7fae 100644\n--- a/docs/docs/lifting-state-up.md\n+++ b/docs/docs/lifting-state-up.md\n@@ -16,9 +16,8 @@ We will start with a component called `BoilingVerdict`. It accepts the `celsius`\n function BoilingVerdict(props) {\n   if (props.celsius >= 100) {\n     return <p>The water would boil.</p>;\n-  } else {\n-    return <p>The water would not boil.</p>;\n   }\n+  return <p>The water would not boil.</p>;\n }\n ```"
    },
    {
      "message": "fix an argument name of testutils.renderintodocument",
      "diff": "diff --git a/docs/docs/addons-test-utils.md b/docs/docs/addons-test-utils.md\nindex 18c23371ad74..83918c60490a 100644\n--- a/docs/docs/addons-test-utils.md\n+++ b/docs/docs/addons-test-utils.md\n@@ -122,10 +122,10 @@ ReactTestUtils.Simulate.keyDown(node, {key: \"Enter\", keyCode: 13, which: 13});\n ### `renderIntoDocument()`\n \n ```javascript\n-renderIntoDocument(instance)\n+renderIntoDocument(element)\n ```\n \n-Render a component into a detached DOM node in the document. **This function requires a DOM.**\n+Render a React element into a detached DOM node in the document. **This function requires a DOM.**\n \n > Note:\n >\ndiff --git a/src/test/ReactTestUtils.js b/src/test/ReactTestUtils.js\nindex 0dde835e4012..a5c3b31d2316 100644\n--- a/src/test/ReactTestUtils.js\n+++ b/src/test/ReactTestUtils.js\n@@ -77,14 +77,14 @@ function findAllInRenderedTreeInternal(inst, test) {\n  * @lends ReactTestUtils\n  */\n var ReactTestUtils = {\n-  renderIntoDocument: function(instance) {\n+  renderIntoDocument: function(element) {\n     var div = document.createElement('div');\n     // None of our tests actually require attaching the container to the\n     // DOM, and doing so creates a mess that we rely on test isolation to\n     // clean up, so we're going to stop honoring the name of this method\n     // (and probably rename it eventually) if no problems arise.\n     // document.documentElement.appendChild(div);\n-    return ReactDOM.render(instance, div);\n+    return ReactDOM.render(element, div);\n   },\n \n   isElement: function(element) {"
    },
    {
      "message": "update website on travis when only new files are added",
      "diff": "diff --git a/.travis.yml b/.travis.yml\nindex e2271f6e5d68..82ecf2cc87b3 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -39,7 +39,7 @@ script:\n         bundle exec rake release\n         cd $GH_PAGES_DIR\n         git status\n-        if ! git diff-index --quiet HEAD --; then\n+        if test -n \"$(git status --porcelain)\"; then\n           git add -A .\n           git commit -m \"Rebuild website\"\n           git push origin gh-pages"
    },
    {
      "message": "inject the previous batching strategy when rendering to string",
      "diff": "diff --git a/src/renderers/dom/server/ReactServerRendering.js b/src/renderers/dom/server/ReactServerRendering.js\nindex ff08fe8ff09f..ea4d8d9db452 100644\n--- a/src/renderers/dom/server/ReactServerRendering.js\n+++ b/src/renderers/dom/server/ReactServerRendering.js\n@@ -12,7 +12,6 @@\n \n var React = require('React');\n var ReactDOMContainerInfo = require('ReactDOMContainerInfo');\n-var ReactDefaultBatchingStrategy = require('ReactDefaultBatchingStrategy');\n var ReactInstrumentation = require('ReactInstrumentation');\n var ReactMarkupChecksum = require('ReactMarkupChecksum');\n var ReactReconciler = require('ReactReconciler');\n@@ -33,7 +32,9 @@ var pendingTransactions = 0;\n  */\n function renderToStringImpl(element, makeStaticMarkup) {\n   var transaction;\n+  var previousBatchingStrategy;\n   try {\n+    previousBatchingStrategy = ReactUpdates.injection.getBatchingStrategy();\n     ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n \n     transaction = ReactServerRenderingTransaction.getPooled(makeStaticMarkup);\n@@ -67,7 +68,7 @@ function renderToStringImpl(element, makeStaticMarkup) {\n     // currently share these stateful modules.\n     if (!pendingTransactions) {\n       ReactUpdates.injection.injectBatchingStrategy(\n-        ReactDefaultBatchingStrategy\n+        previousBatchingStrategy\n       );\n     }\n   }\ndiff --git a/src/renderers/shared/stack/reconciler/ReactUpdates.js b/src/renderers/shared/stack/reconciler/ReactUpdates.js\nindex d605c5881e2e..643b4ea426c5 100644\n--- a/src/renderers/shared/stack/reconciler/ReactUpdates.js\n+++ b/src/renderers/shared/stack/reconciler/ReactUpdates.js\n@@ -272,6 +272,10 @@ var ReactUpdatesInjection = {\n     );\n     batchingStrategy = _batchingStrategy;\n   },\n+\n+  getBatchingStrategy: function() {\n+    return batchingStrategy;\n+  },\n };\n \n var ReactUpdates = {"
    },
    {
      "message": "update readme.md to use jsx for syntax highlighting",
      "diff": "diff --git a/README.md b/README.md\nindex 2bba0361d328..44bbf811ab2d 100644\n--- a/README.md\n+++ b/README.md\n@@ -12,7 +12,7 @@ React is a JavaScript library for building user interfaces.\n \n We have several examples [on the website](https://facebook.github.io/react/). Here is the first one to get you started:\n \n-```js\n+```jsx\n class HelloMessage extends React.Component {\n   render() {\n     return <div>Hello {this.props.name}</div>;"
    },
    {
      "message": "add unknown property warning for use of `autofocus`",
      "diff": "diff --git a/src/renderers/dom/shared/DOMProperty.js b/src/renderers/dom/shared/DOMProperty.js\nindex 068638ad6b7c..8496fb7acf89 100644\n--- a/src/renderers/dom/shared/DOMProperty.js\n+++ b/src/renderers/dom/shared/DOMProperty.js\n@@ -193,9 +193,13 @@ var DOMProperty = {\n   /**\n    * Mapping from lowercase property names to the properly cased version, used\n    * to warn in the case of missing properties. Available only in __DEV__.\n+   *\n+   * autofocus is predefined, because adding it to the property whitelist\n+   * causes unintended side effects.\n+   *\n    * @type {Object}\n    */\n-  getPossibleStandardName: __DEV__ ? {} : null,\n+  getPossibleStandardName: __DEV__ ? {autofocus: 'autoFocus'} : null,\n \n   /**\n    * All of the isCustomAttribute() functions that have been injected.\ndiff --git a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\nindex 0c09b11baf5c..8060769ef688 100644\n--- a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\n+++ b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\n@@ -1495,5 +1495,22 @@ describe('ReactDOMComponent', () => {\n       //since hard coding the line number would make test too brittle\n       expect(parseInt(previousLine, 10) + 12).toBe(parseInt(currentLine, 10));\n     });\n+\n+    it('should suggest property name if available', () => {\n+      spyOn(console, 'error');\n+\n+      ReactTestUtils.renderIntoDocument(React.createElement('label', {for: 'test'}));\n+      ReactTestUtils.renderIntoDocument(React.createElement('input', {type: 'text', autofocus: true}));\n+\n+      expect(console.error.calls.count()).toBe(2);\n+\n+      expect(console.error.calls.argsFor(0)[0]).toBe(\n+        'Warning: Unknown DOM property for. Did you mean htmlFor?\\n    in label'\n+      );\n+\n+      expect(console.error.calls.argsFor(1)[0]).toBe(\n+        'Warning: Unknown DOM property autofocus. Did you mean autoFocus?\\n    in input'\n+      );\n+    });\n   });\n });"
    },
    {
      "message": "update travis.yml to use $github_user_name and $github_user_email",
      "diff": "diff --git a/.travis.yml b/.travis.yml\nindex f5725a14cb98..b924f25cb412 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -28,8 +28,8 @@ script:\n \n         GH_PAGES_DIR=\"$TRAVIS_BUILD_DIR\"/../react-gh-pages\n         echo \"machine github.com login reactjs-bot password $GITHUB_TOKEN\" >~/.netrc\n-        git config --global user.name \"Travis CI\"\n-        git config --global user.email \"travis@reactjs.org\"\n+        git config --global user.name \"$GITHUB_USER_NAME\"\n+        git config --global user.email \"$GITHUB_USER_EMAIL\"\n \n         git clone --branch gh-pages --depth=50 \\\n           https://reactjs-bot@github.com/facebook/react.git \\"
    },
    {
      "message": "change  from \"tutorial.html\" to \"tutorial-zh-cn.html\"",
      "diff": "diff --git a/docs/docs/getting-started.zh-CN.md b/docs/docs/getting-started.zh-CN.md\nindex 54c80ba377f3..da006ff20eaf 100644\n--- a/docs/docs/getting-started.zh-CN.md\n+++ b/docs/docs/getting-started.zh-CN.md\n@@ -161,7 +161,7 @@ ReactDOM.render(\n \n ## \u4e0b\u4e00\u6b65\n \n-\u53bb\u770b\u770b[\u5165\u95e8\u6559\u7a0b](/react/docs/tutorial.html) \u548c\u5165\u95e8\u6559\u7a0b\u5305 `examples` \u76ee\u5f55\u4e0b\u7684\u5176\u5b83\u4f8b\u5b50\u5b66\u4e60\u66f4\u591a\u3002\n+\u53bb\u770b\u770b[\u5165\u95e8\u6559\u7a0b](/react/docs/tutorial-zh-CN.html) \u548c\u5165\u95e8\u6559\u7a0b\u5305 `examples` \u76ee\u5f55\u4e0b\u7684\u5176\u5b83\u4f8b\u5b50\u5b66\u4e60\u66f4\u591a\u3002\n \n \u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u793e\u533a\u5f00\u53d1\u8005\u5171\u5efa\u7684 Wiki\uff1a[workflows, UI-components, routing, data management etc.](https://github.com/facebook/react/wiki/Complementary-Tools)"
    },
    {
      "message": "change  from \"top-level-api.html\" to \"top-level-api-zh-cn.html\"",
      "diff": "diff --git a/docs/docs/tutorial.zh-CN.md b/docs/docs/tutorial.zh-CN.md\nindex 15ac1ced8a33..f76633fd6c9e 100755\n--- a/docs/docs/tutorial.zh-CN.md\n+++ b/docs/docs/tutorial.zh-CN.md\n@@ -783,4 +783,4 @@ var CommentBox = React.createClass({\n \n ### \u795d\u8d3a!\n \n-\u4f60\u521a\u521a\u901a\u8fc7\u51e0\u4e2a\u7b80\u5355\u7684\u6b65\u9aa4\u5efa\u7acb\u4e86\u4e00\u4e2a\u8bc4\u8bba\u6846\u3002\u5b66\u4e60\u66f4\u591a\u5173\u4e8e[\u4e3a\u4ec0\u4e48\u4f7f\u7528 React](/react/docs/why-react-zh-CN.html), \u6216\u8005\u6df1\u5165 [API \u53c2\u8003](/react/docs/top-level-api.html) \u5f00\u59cb\u94bb\u7814\uff01\u795d\u4f60\u597d\u8fd0\uff01\n+\u4f60\u521a\u521a\u901a\u8fc7\u51e0\u4e2a\u7b80\u5355\u7684\u6b65\u9aa4\u5efa\u7acb\u4e86\u4e00\u4e2a\u8bc4\u8bba\u6846\u3002\u5b66\u4e60\u66f4\u591a\u5173\u4e8e[\u4e3a\u4ec0\u4e48\u4f7f\u7528 React](/react/docs/why-react-zh-CN.html), \u6216\u8005\u6df1\u5165 [API \u53c2\u8003](/react/docs/top-level-api-zh-CN.html) \u5f00\u59cb\u94bb\u7814\uff01\u795d\u4f60\u597d\u8fd0\uff01"
    },
    {
      "message": "adjust code to handle more availability of function.name",
      "diff": "diff --git a/src/isomorphic/classic/class/ReactClass.js b/src/isomorphic/classic/class/ReactClass.js\nindex 810a05ecb8bb..f880e579a060 100644\n--- a/src/isomorphic/classic/class/ReactClass.js\n+++ b/src/isomorphic/classic/class/ReactClass.js\n@@ -24,6 +24,12 @@ import type { ReactPropTypeLocations } from 'ReactPropTypeLocations';\n \n var MIXINS_KEY = 'mixins';\n \n+// Helper function to allow the creation of anonymous functions which do not\n+// have .name set to the name of the variable being assigned to.\n+function identity(fn) {\n+  return fn;\n+}\n+\n /**\n  * Policies that describe methods in `ReactClassInterface`.\n  */\n@@ -762,7 +768,10 @@ var ReactClass = {\n    * @public\n    */\n   createClass: function(spec) {\n-    var Constructor = function(props, context, updater) {\n+    // To keep our warnings more understandable, we'll use a little hack here to\n+    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n+    // unnecessarily identify a class without displayName as 'Constructor'.\n+    var Constructor = identity(function(props, context, updater) {\n       // This constructor gets overridden by mocks. The argument is used\n       // by mocks to assert on what gets mounted.\n \n@@ -806,7 +815,7 @@ var ReactClass = {\n       );\n \n       this.state = initialState;\n-    };\n+    });\n     Constructor.prototype = new ReactClassComponent();\n     Constructor.prototype.constructor = Constructor;\n     Constructor.prototype.__reactAutoBindPairs = [];"
    },
    {
      "message": "fix russian translation of  introduction to be more technical",
      "diff": "diff --git a/docs/tips/01-introduction.ru-RU.md b/docs/tips/01-introduction.ru-RU.md\nindex fdf0983ebd1a..650d53382b11 100644\n--- a/docs/tips/01-introduction.ru-RU.md\n+++ b/docs/tips/01-introduction.ru-RU.md\n@@ -6,8 +6,8 @@ permalink: tips/introduction-ru-RU.html\n next: inline-styles.html\n ---\n \n-\u0414\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0437\u0434\u0435\u043b \u0441\u043e\u0432\u0435\u0442\u043e\u0432 \u043f\u043e React \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u0440\u0430\u0442\u043a\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c \u043d\u0430 \u043c\u043d\u043e\u0433\u0438\u0435 \u0432\u0430\u0448\u0438 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0438 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0435\u0440\u0435\u0447\u044c \u0432\u0430\u0441 \u043e\u0442 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0445 \u043e\u0448\u0438\u0431\u043e\u043a.\n+\u0414\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0437\u0434\u0435\u043b \u0441\u043e\u0432\u0435\u0442\u043e\u0432 \u043f\u043e React \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u0440\u0430\u0442\u043a\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c \u043d\u0430 \u043c\u043d\u043e\u0433\u0438\u0435 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u0438 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0435\u0440\u0435\u0447\u044c \u043e\u0442 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0445 \u043e\u0448\u0438\u0431\u043e\u043a.\n \n-## \u041a\u0430\u043a \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u0443\u0447\u0430\u0441\u0442\u0438\u0435\n+## \u041f\u0440\u0438\u043d\u044f\u0442\u0438\u0435 \u0443\u0447\u0430\u0441\u0442\u0438\u044f\n \n-\u041e\u0442\u043f\u0440\u0430\u0432\u044c\u0442\u0435 pull request \u0432 [\u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 React](https://github.com/facebook/react) \u0441\u043b\u0435\u0434\u0443\u044f [\u0434\u0430\u043d\u043d\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438](https://github.com/facebook/react/tree/master/docs). \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0443\u0436\u0434\u0430\u0435\u0442\u0441\u044f \u0432 \u043e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u0438 \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a \u0441\u0434\u0435\u043b\u0430\u0442\u044c PR, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u0437\u0430 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043d\u0430 [#reactjs \u043a\u0430\u043d\u0430\u043b \u043d\u0430 freenode](irc://chat.freenode.net/reactjs) \u0438\u043b\u0438 [discuss.reactjs.org \u0444\u043e\u0440\u0443\u043c](https://discuss.reactjs.org/).\n+\u0427\u0442\u043e\u0431\u044b \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u0443\u0447\u0430\u0441\u0442\u0438\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c pull request \u0432 [\u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 React](https://github.com/facebook/react) \u0441\u043b\u0435\u0434\u0443\u044f [\u0434\u0430\u043d\u043d\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438](https://github.com/facebook/react/tree/master/docs). \u0415\u0441\u043b\u0438 \u0435\u0441\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0443\u0436\u0434\u0430\u0435\u0442\u0441\u044f \u0432 \u043e\u0431\u0441\u0443\u0436\u0434\u0435\u043d\u0438\u0438 \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c \u043a\u0430\u043a \u0441\u0434\u0435\u043b\u0430\u0442\u044c PR, \u043c\u043e\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u0437\u0430 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043d\u0430 [#reactjs \u043a\u0430\u043d\u0430\u043b \u043d\u0430 freenode](irc://chat.freenode.net/reactjs) \u0438\u043b\u0438 [discuss.reactjs.org \u0444\u043e\u0440\u0443\u043c](https://discuss.reactjs.org/)."
    },
    {
      "message": "ensure that setstate update function's context is undefined",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberStateQueue.js b/src/renderers/shared/fiber/ReactFiberStateQueue.js\nindex beceeb07dd27..d410f8d0d69a 100644\n--- a/src/renderers/shared/fiber/ReactFiberStateQueue.js\n+++ b/src/renderers/shared/fiber/ReactFiberStateQueue.js\n@@ -53,9 +53,13 @@ exports.mergeStateQueue = function(queue : ?StateQueue, prevState : any, props :\n   }\n   let state = Object.assign({}, prevState);\n   do {\n-    const partialState = typeof node.partialState === 'function' ?\n-      node.partialState(state, props) :\n-      node.partialState;\n+    let partialState;\n+    if (typeof node.partialState === 'function') {\n+      const updateFn = node.partialState;\n+      partialState = updateFn(state, props);\n+    } else {\n+      partialState = node.partialState;\n+    }\n     state = Object.assign(state, partialState);\n   } while (node = node.next);\n   return state;"
    },
    {
      "message": "add shouldcomponentupdate to functional components",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberBeginWork.js b/src/renderers/shared/fiber/ReactFiberBeginWork.js\nindex 9b2ec521fcc6..ddcf88f32af0 100644\n--- a/src/renderers/shared/fiber/ReactFiberBeginWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberBeginWork.js\n@@ -72,6 +72,16 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {\n     var fn = workInProgress.type;\n     var props = workInProgress.pendingProps;\n \n+    // TODO: Disable this before release, since it is not part of the public API\n+    // I use this for testing to compare the relative overhead of classes.\n+    if (typeof fn.shouldComponentUpdate === 'function') {\n+      if (workInProgress.memoizedProps !== null) {\n+        if (!fn.shouldComponentUpdate(workInProgress.memoizedProps, props)) {\n+          return bailoutOnAlreadyFinishedWork(current, workInProgress);\n+        }\n+      }\n+    }\n+\n     var nextChildren = fn(props);\n     reconcileChildren(current, workInProgress, nextChildren);\n     return workInProgress.child;"
    },
    {
      "message": "explain why reactfiber is a pojo instead of constructor",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiber.js b/src/renderers/shared/fiber/ReactFiber.js\nindex 9703905cb6e8..453ee56d5ff1 100644\n--- a/src/renderers/shared/fiber/ReactFiber.js\n+++ b/src/renderers/shared/fiber/ReactFiber.js\n@@ -103,6 +103,19 @@ export type Fiber = Instance & {\n \n };\n \n+// This is a constructor of a POJO instead of a constructor function for a few\n+// reasons:\n+// 1) Nobody should add any instance methods on this. Instance methods can be\n+//    more difficult to predict when they get optimized and they are almost\n+//    never inlined properly in static compilers.\n+// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n+//    always know when it is a fiber.\n+// 3) We can easily go from a createFiber call to calling a constructor if that\n+//    is faster. The opposite is not true.\n+// 4) We might want to experiment with using numeric keys since they are easier\n+//    to optimize in a non-JIT environment.\n+// 5) It should be easy to port this to a C struct and keep a C implementation\n+//    compatible.\n var createFiber = function(tag : TypeOfWork, key : null | string) : Fiber {\n   return {"
    },
    {
      "message": "use proper render method in static markup event listener test",
      "diff": "diff --git a/src/renderers/dom/server/__tests__/ReactServerRendering-test.js b/src/renderers/dom/server/__tests__/ReactServerRendering-test.js\nindex 075947a6f4e1..51e1bac972a7 100644\n--- a/src/renderers/dom/server/__tests__/ReactServerRendering-test.js\n+++ b/src/renderers/dom/server/__tests__/ReactServerRendering-test.js\n@@ -326,7 +326,7 @@ describe('ReactServerRendering', function() {\n       var EventPluginHub = require('EventPluginHub');\n       var cb = jest.fn();\n \n-      ReactServerRendering.renderToString(\n+      ReactServerRendering.renderToStaticMarkup(\n         <span onClick={cb}>hello world</span>\n       );\n       expect(EventPluginHub.__getListenerBank()).toEqual({});"
    },
    {
      "message": "remove the flow experimental.strict_type_args option",
      "diff": "diff --git a/.flowconfig b/.flowconfig\nindex 81372434d1cb..3448b44cb788 100644\n--- a/.flowconfig\n+++ b/.flowconfig\n@@ -21,8 +21,6 @@ module.system=haste\n esproposal.class_static_fields=enable\n esproposal.class_instance_fields=enable\n \n-experimental.strict_type_args=true\n-\n munge_underscores=false\n \n suppress_type=$FlowIssue"
    },
    {
      "message": "add more specific link to react-addons-shallow-compare readme",
      "diff": "diff --git a/grunt/tasks/npm-react-addons.js b/grunt/tasks/npm-react-addons.js\nindex cc712ff8b8ac..c0818ff75fe6 100644\n--- a/grunt/tasks/npm-react-addons.js\n+++ b/grunt/tasks/npm-react-addons.js\n@@ -52,6 +52,7 @@ var addons = {\n     peerDependency: 'react',\n     module: 'shallowCompare',\n     name: 'shallow-compare',\n+    docs: 'shallow-compare',\n   },\n   updates: {\n     peerDependency: 'react',"
    },
    {
      "message": "copy all svg child nodes when using setting innerhtml in ie",
      "diff": "diff --git a/src/renderers/dom/client/utils/__tests__/setInnerHTML.js b/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js\nsimilarity index 89%\nrename from src/renderers/dom/client/utils/__tests__/setInnerHTML.js\nrename to src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js\nindex 2f4eccec4e8e..32756c6d5ef7 100644\n--- a/src/renderers/dom/client/utils/__tests__/setInnerHTML.js\n+++ b/src/renderers/dom/client/utils/__tests__/setInnerHTML-test.js\n@@ -25,7 +25,9 @@ describe('setInnerHTML', function() {\n   });\n \n   describe('when the node does not have an innerHTML property', () => {\n-    it('sets innerHTML on it', function() {\n+    // Disabled. JSDOM doesn't seem to remove nodes when using appendChild to\n+    // move existing nodes.\n+    xit('sets innerHTML on it', function() {\n       // Create a mock node that looks like an SVG in IE (without innerHTML)\n       var node = {\n         namespaceURI: DOMNamespaces.svg,\ndiff --git a/src/renderers/dom/client/utils/setInnerHTML.js b/src/renderers/dom/client/utils/setInnerHTML.js\nindex 59348fe3c3f7..616d37fc325e 100644\n--- a/src/renderers/dom/client/utils/setInnerHTML.js\n+++ b/src/renderers/dom/client/utils/setInnerHTML.js\n@@ -38,9 +38,9 @@ var setInnerHTML = createMicrosoftUnsafeLocalFunction(\n     if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n       reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n       reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n-      var newNodes = reusableSVGContainer.firstChild.childNodes;\n-      for (var i = 0; i < newNodes.length; i++) {\n-        node.appendChild(newNodes[i]);\n+      var svgNode = reusableSVGContainer.firstChild;\n+      while (svgNode.firstChild) {\n+        node.appendChild(svgNode.firstChild);\n       }\n     } else {\n       node.innerHTML = html;"
    },
    {
      "message": "add checkpoint/rollback to reactnativereconciletransaction",
      "diff": "diff --git a/src/renderers/native/ReactNativeReconcileTransaction.js b/src/renderers/native/ReactNativeReconcileTransaction.js\nindex ca2e5a034966..de34a657b5db 100644\n--- a/src/renderers/native/ReactNativeReconcileTransaction.js\n+++ b/src/renderers/native/ReactNativeReconcileTransaction.js\n@@ -97,6 +97,19 @@ var Mixin = {\n     return ReactUpdateQueue;\n   },\n \n+  /**\n+   * Save current transaction state -- if the return value from this method is\n+   * passed to `rollback`, the transaction will be reset to that state.\n+   */\n+  checkpoint: function() {\n+    // reactMountReady is the our only stateful wrapper\n+    return this.reactMountReady.checkpoint();\n+  },\n+\n+  rollback: function(checkpoint) {\n+    this.reactMountReady.rollback(checkpoint);\n+  },\n+\n   /**\n    * `PooledClass` looks for this, and will invoke this before allowing this\n    * instance to be reused."
    },
    {
      "message": "add propstypes and defaultprops example for stateless functions",
      "diff": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex 89d16b83174e..f3182582aa30 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -294,7 +294,19 @@ ReactDOM.render(<HelloMessage name=\"Sebastian\" />, mountNode);\n ```\n \n This simplified component API is intended for components that are pure functions of their props. These components must not retain internal state, do not have backing instances, and do not have the component lifecycle methods. They are pure functional transforms of their input, with zero boilerplate.\n-However, you may still specify `.propTypes` and `.defaultProps` by setting them as properties on the function, just as you would set them on an ES6 class.\n+\n+However, you may still specify `.propTypes` and `.defaultProps` by setting them as properties on the function, just as you would set them on an ES6 class:\n+\n+```javascript\n+const HelloMessage = (props) => <div>Hello, {props.name}</div>;\n+HelloMessage.propTypes = {\n+  name: React.PropTypes.string\n+}\n+HelloMessage.defaultProps = {\n+  name: 'John Doe'\n+}\n+ReactDOM.render(<HelloMessage name=\"M\u0103d\u0103lina\"/>, mountNode);\n+```\n \n > NOTE:\n >"
    },
    {
      "message": "fix reactcomponenttreehook.getregisteredids to work with inlined content",
      "diff": "diff --git a/src/renderers/dom/shared/ReactDOMComponent.js b/src/renderers/dom/shared/ReactDOMComponent.js\nindex e97ea68c85d4..8db1b8f5956a 100644\n--- a/src/renderers/dom/shared/ReactDOMComponent.js\n+++ b/src/renderers/dom/shared/ReactDOMComponent.js\n@@ -259,7 +259,8 @@ if (__DEV__) {\n   setContentChildForInstrumentation = function(content) {\n     var hasExistingContent = this._contentDebugID != null;\n     var debugID = this._debugID;\n-    var contentDebugID = debugID + '#text';\n+    // This ID represents the inlined child that has no backing instance:\n+    var contentDebugID = -debugID;\n \n     if (content == null) {\n       if (hasExistingContent) {\ndiff --git a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js\nindex 28f3d931a14d..e2d1ba77e67c 100644\n--- a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js\n+++ b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js\n@@ -1721,6 +1721,16 @@ describe('ReactComponentTreeHook', () => {\n     expect(ReactComponentTreeTestUtils.getRegisteredDisplayNames()).toEqual([]);\n   });\n \n+  it('registers inlined text nodes', () => {\n+    var node = document.createElement('div');\n+\n+    ReactDOM.render(<div>hi</div>, node);\n+    expect(ReactComponentTreeTestUtils.getRegisteredDisplayNames()).toEqual(['div', '#text']);\n+\n+    ReactDOM.unmountComponentAtNode(node);\n+    expect(ReactComponentTreeTestUtils.getRegisteredDisplayNames()).toEqual([]);\n+  });\n+\n   describe('stack addenda', () => {\n     it('gets created', () => {\n       function getAddendum(element) {"
    },
    {
      "message": "change `trackedtouchcount` invariant into a console.error",
      "diff": "diff --git a/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js b/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js\nindex 33cc332bf2e3..366bb93cf265 100644\n--- a/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js\n+++ b/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js\n@@ -18,7 +18,6 @@ var ResponderSyntheticEvent = require('ResponderSyntheticEvent');\n var ResponderTouchHistoryStore = require('ResponderTouchHistoryStore');\n \n var accumulate = require('accumulate');\n-var invariant = require('invariant');\n var keyOf = require('keyOf');\n \n var isStartish = EventPluginUtils.isStartish;\n@@ -489,11 +488,14 @@ var ResponderEventPlugin = {\n     if (isStartish(topLevelType)) {\n       trackedTouchCount += 1;\n     } else if (isEndish(topLevelType)) {\n-      trackedTouchCount -= 1;\n-      invariant(\n-        trackedTouchCount >= 0,\n-        'Ended a touch event which was not counted in trackedTouchCount.'\n-      );\n+      if (trackedTouchCount >= 0) {\n+        trackedTouchCount -= 1;\n+      } else {\n+        console.error(\n+          'Ended a touch event which was not counted in `trackedTouchCount`.'\n+        );\n+        return null;\n+      }\n     }\n \n     ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);"
    },
    {
      "message": "remove comment about pooledclass destructors being optional",
      "diff": "diff --git a/src/shared/utils/PooledClass.js b/src/shared/utils/PooledClass.js\nindex 5000ca726fc0..5ffc255ae9e6 100644\n--- a/src/shared/utils/PooledClass.js\n+++ b/src/shared/utils/PooledClass.js\n@@ -94,7 +94,7 @@ var DEFAULT_POOLER = oneArgumentPooler;\n  * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n  * itself (statically) not adding any prototypical fields. Any CopyConstructor\n  * you give this may have a `poolSize` property, and will look for a\n- * prototypical `destructor` on instances (optional).\n+ * prototypical `destructor` on instances.\n  *\n  * @param {Function} CopyConstructor Constructor that can be used to reset.\n  * @param {Function} pooler Customizable pooler."
    },
    {
      "message": "get rid of ugly and difficult to follow breaks in switch",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberCompleteWork.js b/src/renderers/shared/fiber/ReactFiberCompleteWork.js\nindex f4d72e3d10c1..179e050848b0 100644\n--- a/src/renderers/shared/fiber/ReactFiberCompleteWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberCompleteWork.js\n@@ -95,14 +95,14 @@ exports.completeWork = function(current : ?Fiber, workInProgress : Fiber) : ?Fib\n     case FunctionalComponent:\n       console.log('/functional component', workInProgress.type.name);\n       transferOutput(workInProgress.child, workInProgress);\n-      break;\n+      return null;\n     case ClassComponent:\n       console.log('/class component', workInProgress.type.name);\n       transferOutput(workInProgress.child, workInProgress);\n-      break;\n+      return null;\n     case HostComponent:\n       console.log('/host component', workInProgress.type);\n-      break;\n+      return null;\n     case CoroutineComponent:\n       console.log('/coroutine component', workInProgress.input.handler.name);\n       return moveCoroutineToHandlerPhase(current, workInProgress);\n@@ -110,10 +110,10 @@ exports.completeWork = function(current : ?Fiber, workInProgress : Fiber) : ?Fib\n       transferOutput(workInProgress.stateNode, workInProgress);\n       // Reset the tag to now be a first phase coroutine.\n       workInProgress.tag = CoroutineComponent;\n-      break;\n+      return null;\n     case YieldComponent:\n       // Does nothing.\n-      break;\n+      return null;\n \n     // Error cases\n     case IndeterminateComponent:\n@@ -121,5 +121,4 @@ exports.completeWork = function(current : ?Fiber, workInProgress : Fiber) : ?Fib\n     default:\n       throw new Error('Unknown unit of work tag');\n   }\n-  return null;\n };"
    },
    {
      "message": "add autofocus to list of whitelisted dom element props.",
      "diff": "diff --git a/src/renderers/dom/shared/devtools/ReactDOMUnknownPropertyDevtool.js b/src/renderers/dom/shared/devtools/ReactDOMUnknownPropertyDevtool.js\nindex d9eccd1da566..8d25523efa4e 100644\n--- a/src/renderers/dom/shared/devtools/ReactDOMUnknownPropertyDevtool.js\n+++ b/src/renderers/dom/shared/devtools/ReactDOMUnknownPropertyDevtool.js\n@@ -24,6 +24,7 @@ if (__DEV__) {\n     key: true,\n     ref: true,\n \n+    autoFocus: true,\n     defaultValue: true,\n     valueLink: true,\n     defaultChecked: true,"
    },
    {
      "message": "standardise format of the three \"state\" questions.",
      "diff": "diff --git a/docs/docs/thinking-in-react.md b/docs/docs/thinking-in-react.md\nindex 812bbb5e60a1..811bfc9905c8 100644\n--- a/docs/docs/thinking-in-react.md\n+++ b/docs/docs/thinking-in-react.md\n@@ -93,8 +93,8 @@ Think of all of the pieces of data in our example application. We have:\n Let's go through each one and figure out which one is state. Simply ask three questions about each piece of data:\n \n   1. Is it passed in from a parent via props? If so, it probably isn't state.\n-  2. Does it change over time? If not, it probably isn't state.\n-  3. Can you compute it based on any other state or props in your component? If so, it's not state.\n+  2. Does it remain unchanged over time? If so, it probably isn't state.\n+  3. Can you compute it based on any other state or props in your component? If so, it isn't state.\n \n The original list of products is passed in as props, so that's not state. The search text and the checkbox seem to be state since they change over time and can't be computed from anything. And finally, the filtered list of products isn't state because it can be computed by combining the original list of products with the search text and value of the checkbox."
    },
    {
      "message": "add symbol to identify a reacttestcomponent instance.",
      "diff": "diff --git a/src/renderers/testing/ReactTestRenderer.js b/src/renderers/testing/ReactTestRenderer.js\nindex 56785d7f972c..ba6659fc4f6f 100644\n--- a/src/renderers/testing/ReactTestRenderer.js\n+++ b/src/renderers/testing/ReactTestRenderer.js\n@@ -74,11 +74,15 @@ ReactTestComponent.prototype.toJSON = function() {\n       childrenJSON.push(json);\n     }\n   }\n-  return {\n+  var object = {\n     type: this._currentElement.type,\n     props: props,\n     children: childrenJSON.length ? childrenJSON : null,\n   };\n+  Object.defineProperty(object, '$$typeof', {\n+    value: Symbol.for('react.test.json'),\n+  });\n+  return object;\n };\n Object.assign(ReactTestComponent.prototype, ReactMultiChild.Mixin);\n \ndiff --git a/src/renderers/testing/__tests__/ReactTestRenderer-test.js b/src/renderers/testing/__tests__/ReactTestRenderer-test.js\nindex 5e233226b390..1d789c9ffcae 100644\n--- a/src/renderers/testing/__tests__/ReactTestRenderer-test.js\n+++ b/src/renderers/testing/__tests__/ReactTestRenderer-test.js\n@@ -28,6 +28,22 @@ describe('ReactTestRenderer', function() {\n     });\n   });\n \n+  it('exposes a type flag', function() {\n+    function Link() {\n+      return <a role=\"link\" />;\n+    }\n+    var renderer = ReactTestRenderer.create(<Link />);\n+    var object = renderer.toJSON();\n+    expect(object.$$typeof).toBe(Symbol.for('react.test.json'));\n+\n+    // $$typeof should not be enumerable.\n+    for (var key in object) {\n+      if (Object.prototype.hasOwnProperty.call(object, key)) {\n+        expect(key).not.toBe('$$typeof');\n+      }\n+    }\n+  });\n+\n   it('renders some basics with an update', function() {\n     var renders = 0;\n     var Component = React.createClass({"
    },
    {
      "message": "fix the typo in the documentaion pages for shallowcompare",
      "diff": "diff --git a/docs/docs/10.10-shallow-compare.md b/docs/docs/10.10-shallow-compare.md\nindex 4ce3ee4107ec..08f30c5b1872 100644\n--- a/docs/docs/10.10-shallow-compare.md\n+++ b/docs/docs/10.10-shallow-compare.md\n@@ -26,7 +26,7 @@ export class SampleComponent extends React.Component {\n ```\n \n `shallowCompare` performs a shallow equality check on the current `props` and `nextProps` objects as well as the current `state` and `nextState` objects.  \n-It does this by iterating on the keys of the objects being compared and returning false when the value of a key in each object are not strictly equal.\n+It does this by iterating on the keys of the objects being compared and returning true when the values of a key in each object are not strictly equal.\n \n `shallowCompare` returns `true` if the shallow comparison for props or state fails and therefore the component should update.  \n `shallowCompare` returns `false` if the shallow comparison for props and state both pass and therefore the component does not need to update."
    },
    {
      "message": "improve error message for components in bad states",
      "diff": "diff --git a/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js b/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js\nindex 7a02c1904a7f..75f5dc7922d2 100644\n--- a/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js\n+++ b/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js\n@@ -741,6 +741,13 @@ var ReactCompositeComponentMixin = {\n     nextUnmaskedContext\n   ) {\n     var inst = this._instance;\n+    invariant(\n+      inst != null,\n+      'Attempted to update component `%s` that has already been unmounted ' +\n+      '(or failed to mount).',\n+      this.getName() || 'ReactCompositeComponent'\n+    );\n+\n     var willReceive = false;\n     var nextContext;\n     var nextProps;"
    },
    {
      "message": "get rid of ugly and difficult to follow breaks in switch",
      "diff": "diff --git a/src/renderers/shared/fiber/ReactFiberBeginWork.js b/src/renderers/shared/fiber/ReactFiberBeginWork.js\nindex 6b534789ab68..24ec08db9079 100644\n--- a/src/renderers/shared/fiber/ReactFiberBeginWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberBeginWork.js\n@@ -97,16 +97,16 @@ function beginWork(current : ?Fiber, workInProgress : Fiber) : ?Fiber {\n   switch (workInProgress.tag) {\n     case IndeterminateComponent:\n       mountIndeterminateComponent(current, workInProgress);\n-      break;\n+      return workInProgress.child;\n     case FunctionalComponent:\n       updateFunctionalComponent(current, workInProgress);\n-      break;\n+      return workInProgress.child;\n     case ClassComponent:\n       console.log('class component', workInProgress.input.type.name);\n-      break;\n+      return workInProgress.child;\n     case HostComponent:\n       updateHostComponent(current, workInProgress);\n-      break;\n+      return workInProgress.child;\n     case CoroutineHandlerPhase:\n       // This is a restart. Reset the tag to the initial phase.\n       workInProgress.tag = CoroutineComponent;\n@@ -121,7 +121,7 @@ function beginWork(current : ?Fiber, workInProgress : Fiber) : ?Fiber {\n           workInProgress.child\n         );\n       }\n-      break;\n+      return workInProgress.child;\n     case YieldComponent:\n       // A yield component is just a placeholder, we can just run through the\n       // next one immediately.\n@@ -135,7 +135,6 @@ function beginWork(current : ?Fiber, workInProgress : Fiber) : ?Fiber {\n     default:\n       throw new Error('Unknown unit of work tag');\n   }\n-  return workInProgress.child;\n }\n \n exports.beginWork = beginWork;"
    },
    {
      "message": "revert \"fallback to legacy set/get in old versions of ff\"",
      "diff": "diff --git a/src/renderers/dom/client/inputValueTracking.js b/src/renderers/dom/client/inputValueTracking.js\nindex 6cdc754d2d71..d69f31b383fa 100644\n--- a/src/renderers/dom/client/inputValueTracking.js\n+++ b/src/renderers/dom/client/inputValueTracking.js\n@@ -58,28 +58,10 @@ var inputValueTracking = {\n \n     var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n     var valueField = isCheckable(node) ? 'checked' : 'value';\n-    var descriptor;\n-    try {\n-      // Accessing quick-stubbed properties of prototypes in older versions of\n-      // Firefox will throw a NS_ERROR_XPC_BAD_OP_ON_WN_PROTO exception\n-      descriptor = Object.getOwnPropertyDescriptor(\n-        node.constructor.prototype,\n-        valueField\n-      );\n-    } catch (e) {\n-      var proto = node.constructor.prototype;\n-      // Attempt to fall back to Firefox's deprecated setters / getters\n-      if (\n-        typeof proto.__lookupSetter__ === 'function' &&\n-        typeof proto.__lookupGetter__ === 'function'\n-      ) {\n-        descriptor = {\n-          enumerable: true,\n-          get: proto.__lookupGetter__(valueField),\n-          set: proto.__lookupSetter__(valueField),\n-        };\n-      }\n-    }\n+    var descriptor = Object.getOwnPropertyDescriptor(\n+      node.constructor.prototype,\n+      valueField\n+    );\n \n     var currentValue = '' + node[valueField];"
    },
    {
      "message": "update link and description of typescript support.",
      "diff": "diff --git a/docs/docs/09.1-language-tooling.md b/docs/docs/09.1-language-tooling.md\nindex d9e187a440dd..31fcc5fc4e0d 100644\n--- a/docs/docs/09.1-language-tooling.md\n+++ b/docs/docs/09.1-language-tooling.md\n@@ -74,6 +74,9 @@ Flow is a JavaScript type checker released by Facebook, and it supports JSX. For\n \n ## TypeScript\n \n-Microsoft TypeScript now supports JSX. For more info, check out the [TypeScript JSX Documentation](http://www.typescriptlang.org/docs/handbook/jsx.html) or their guide on [getting started with react+webpack](https://github.com/Microsoft/TypeScript-Handbook/blob/master/pages/tutorials/React%20%26%20Webpack.md).\n+TypeScript is a type-checker and transpiler that supports type-checking React and JSX.\n+For more info, check out their guide on [getting started with React and Webpack](https://www.typescriptlang.org/docs/handbook/react-&-webpack.html), or learn more about [TypeScript's JSX support](https://www.typescriptlang.org/docs/handbook/jsx.html).\n+\n+To learn more about TypeScript in general, visit the [TypeScript homepage](https://www.typescriptlang.org/)."
    },
    {
      "message": "fix $flowfixme broken by comment spanning multiple lines",
      "diff": "diff --git a/src/renderers/native/ReactNativeAttributePayload.js b/src/renderers/native/ReactNativeAttributePayload.js\nindex 54912f354682..8882f1131d56 100644\n--- a/src/renderers/native/ReactNativeAttributePayload.js\n+++ b/src/renderers/native/ReactNativeAttributePayload.js\n@@ -394,9 +394,9 @@ function diffProperties(\n       // default: fallthrough case when nested properties are defined\n       removedKeys = null;\n       removedKeyCount = 0;\n-      // $FlowFixMe - We think that attributeConfig is not\n-      // CustomAttributeConfiguration at this point so we assume\n-      // it must be AttributeConfiguration.\n+      // We think that attributeConfig is not CustomAttributeConfiguration at\n+      // this point so we assume it must be AttributeConfiguration.\n+      // $FlowFixMe\n       updatePayload = diffNestedProperty(\n         updatePayload,\n         prevProp,"
    },
    {
      "message": "upgrade to flow 0.26 & match internal config with strict args",
      "diff": "diff --git a/.flowconfig b/.flowconfig\nindex 7e631856fa2d..94ffcb54a2ef 100644\n--- a/.flowconfig\n+++ b/.flowconfig\n@@ -1,5 +1,6 @@\n [ignore]\n \n+.*/examples/.*\n .*/build/.*\n .*/node_modules/y18n/.*\n .*/__mocks__/.*\n@@ -20,6 +21,8 @@ module.system=haste\n esproposal.class_static_fields=enable\n esproposal.class_instance_fields=enable\n \n+experimental.strict_type_args=true\n+\n munge_underscores=false\n \n suppress_type=$FlowIssue\n@@ -31,4 +34,4 @@ suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowIssue\\\\((\\\\(>=0\\\\.\\\\(2[0-4]\\\\|1[0-9]\\\\|[0-9\n suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowFixedInNextDeploy\n \n [version]\n-^0.24.0\n+^0.26.0\ndiff --git a/package.json b/package.json\nindex c8d41013c8e8..72adfbb42835 100644\n--- a/package.json\n+++ b/package.json\n@@ -43,7 +43,7 @@\n     \"eslint-plugin-react-internal\": \"file:eslint-rules\",\n     \"fbjs\": \"^0.8.1\",\n     \"fbjs-scripts\": \"^0.6.0\",\n-    \"flow-bin\": \"^0.24.0\",\n+    \"flow-bin\": \"^0.26.0\",\n     \"glob\": \"^6.0.1\",\n     \"grunt\": \"^0.4.5\",\n     \"grunt-cli\": \"^0.1.13\","
    },
    {
      "message": "update tutorial with reference to autobinding docs",
      "diff": "diff --git a/docs/docs/tutorial.md b/docs/docs/tutorial.md\nindex 0e76f67fb27d..a2fb533f4430 100755\n--- a/docs/docs/tutorial.md\n+++ b/docs/docs/tutorial.md\n@@ -524,6 +524,8 @@ var CommentForm = React.createClass({\n \n React attaches event handlers to components using a camelCase naming convention. We attach `onChange` handlers to the two `<input>` elements. Now, as the user enters text into the `<input>` fields, the attached `onChange` callbacks are fired and the `state` of the component is modified. Subsequently, the rendered value of the `input` element will be updated to reflect the current component `state`.\n \n+(The astute reader may be surprised that these event handlers work as described, given that the method references are not explicitly bound to `this`. `React.createClass(...)` [automatically binds](/react/docs/interactivity-and-dynamic-uis.html#under-the-hood-autobinding-and-event-delegation) each method to its component instance, obviating the need for explicit binding.)\n+\n #### Submitting the form\n \n Let's make the form interactive. When the user submits the form, we should clear it, submit a request to the server, and refresh the list of comments. To start, let's listen for the form's submit event and clear it."
    },
    {
      "message": "add link to reactjs.net on server-side environments page",
      "diff": "diff --git a/docs/docs/09.3-environments.md b/docs/docs/09.3-environments.md\nindex ec3dbc3908ad..eb3c2e1b9b58 100644\n--- a/docs/docs/09.3-environments.md\n+++ b/docs/docs/09.3-environments.md\n@@ -29,6 +29,11 @@ If you use JSX, you may want to pre-compile your components. Alternatively you m\n >\n > Some versions of Node.js have an `Object.assign` implementation that does not preserve key order. This can cause errors when validating the markup, creating a warning that says \"React attempted to reuse markup in a container but the checksum was invalid\". If you run into this issue, you can override `Object.assign` to use a polyfill that preserves key order. For more details, see [Issue #6451](https://github.com/facebook/react/issues/6451).\n \n+C#\n+==\n+\n+Support for server-side component rendering and JSX compilation (via Babel) in a .NET Framework / ASP.NET environment is provided through our [ReactJS.NET](http://reactjs.net/) project.\n+\n \n ## Nashorn"
    },
    {
      "message": "stop passing null as second argument to document.createelement",
      "diff": "diff --git a/src/renderers/dom/shared/ReactDOMComponent.js b/src/renderers/dom/shared/ReactDOMComponent.js\nindex dd260e64b517..dd16e9b775d8 100644\n--- a/src/renderers/dom/shared/ReactDOMComponent.js\n+++ b/src/renderers/dom/shared/ReactDOMComponent.js\n@@ -621,8 +621,10 @@ ReactDOMComponent.Mixin = {\n           var type = this._currentElement.type;\n           div.innerHTML = `<${type}></${type}>`;\n           el = div.removeChild(div.firstChild);\n+        } else if (props.is) {\n+          el = ownerDocument.createElement(this._currentElement.type, props.is);\n         } else {\n-          el = ownerDocument.createElement(this._currentElement.type, props.is || null);\n+          el = ownerDocument.createElement(this._currentElement.type);\n         }\n       } else {\n         el = ownerDocument.createElementNS("
    },
    {
      "message": "make sure cloneelement supports prototype-less config",
      "diff": "diff --git a/src/isomorphic/classic/element/ReactElement.js b/src/isomorphic/classic/element/ReactElement.js\nindex b0a6648870de..64ac67125d38 100644\n--- a/src/isomorphic/classic/element/ReactElement.js\n+++ b/src/isomorphic/classic/element/ReactElement.js\n@@ -311,7 +311,7 @@ ReactElement.cloneElement = function(element, config, children) {\n       defaultProps = element.type.defaultProps;\n     }\n     for (propName in config) {\n-      if (config.hasOwnProperty(propName) &&\n+      if (hasOwnProperty.call(config, propName) &&\n           !RESERVED_PROPS.hasOwnProperty(propName)) {\n         if (config[propName] === undefined && defaultProps !== undefined) {\n           // Resolve default props\ndiff --git a/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js b/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js\nindex ab57c8cae2fe..1414bdce34f8 100644\n--- a/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js\n+++ b/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js\n@@ -78,6 +78,11 @@ describe('ReactElementClone', function() {\n     );\n   });\n \n+  it('does not fail if config has no prototype', function() {\n+    var config = Object.create(null, {foo: {value: 1, enumerable: true}});\n+    React.cloneElement(<div />, config);\n+  });\n+\n   it('should keep the original ref if it is not overridden', function() {\n     var Grandparent = React.createClass({\n       render: function() {"
    },
    {
      "message": "remove indirection when determining valid config and ref",
      "diff": "diff --git a/src/isomorphic/classic/element/ReactElement.js b/src/isomorphic/classic/element/ReactElement.js\nindex fe3c6b6a2c57..49039be3df78 100644\n--- a/src/isomorphic/classic/element/ReactElement.js\n+++ b/src/isomorphic/classic/element/ReactElement.js\n@@ -32,17 +32,20 @@ var RESERVED_PROPS = {\n \n var specialPropKeyWarningShown, specialPropRefWarningShown;\n \n-function isValidConfigRefOrKey(config, name) {\n+function hasValidRef(config) {\n   if (__DEV__) {\n-    return hasOwnProperty.call(config, name) &&\n-      !Object.getOwnPropertyDescriptor(config, name).get;\n+    return hasOwnProperty.call(config, 'ref') &&\n+      !Object.getOwnPropertyDescriptor(config, 'ref').get;\n   }\n-\n-  return config[name] !== undefined;\n+  return config.ref !== undefined;\n }\n \n-function getConfigKey(config) {\n-  return '' + config.key;\n+function hasValidKey(config) {\n+  if (__DEV__) {\n+    return hasOwnProperty.call(config, 'key') &&\n+      !Object.getOwnPropertyDescriptor(config, 'key').get;\n+  }\n+  return config.key !== undefined;\n }\n \n /**\n@@ -153,12 +156,11 @@ ReactElement.createElement = function(type, config, children) {\n       );\n     }\n \n-    if (isValidConfigRefOrKey(config, 'ref')) {\n+    if (hasValidRef(config)) {\n       ref = config.ref;\n     }\n-\n-    if (isValidConfigRefOrKey(config, 'key')) {\n-      key = getConfigKey(config);\n+    if (hasValidKey(config)) {\n+      key = '' + config.key;\n     }\n \n     self = config.__self === undefined ? null : config.__self;\n@@ -313,14 +315,13 @@ ReactElement.cloneElement = function(element, config, children) {\n       );\n     }\n \n-    if (isValidConfigRefOrKey(config, 'ref')) {\n+    if (hasValidRef(config)) {\n       // Silently steal the ref from the parent.\n       ref = config.ref;\n       owner = ReactCurrentOwner.current;\n     }\n-\n-    if (isValidConfigRefOrKey(config, 'key')) {\n-      key = getConfigKey(config);\n+    if (hasValidKey(config)) {\n+      key = '' + config.key;\n     }\n \n     // Remaining properties override existing props"
    },
    {
      "message": "revert \"update shallowcompare to accept nextcontext\"",
      "diff": "diff --git a/src/addons/ReactComponentWithPureRenderMixin.js b/src/addons/ReactComponentWithPureRenderMixin.js\nindex 33541852572c..cf00d7cb3deb 100644\n--- a/src/addons/ReactComponentWithPureRenderMixin.js\n+++ b/src/addons/ReactComponentWithPureRenderMixin.js\n@@ -40,8 +40,8 @@ var shallowCompare = require('shallowCompare');\n  * See https://facebook.github.io/react/docs/pure-render-mixin.html\n  */\n var ReactComponentWithPureRenderMixin = {\n-  shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n-    return shallowCompare(this, nextProps, nextState, nextContext);\n+  shouldComponentUpdate: function(nextProps, nextState) {\n+    return shallowCompare(this, nextProps, nextState);\n   },\n };\n \ndiff --git a/src/addons/shallowCompare.js b/src/addons/shallowCompare.js\nindex 4e25aa7654de..a6b7a1095de4 100644\n--- a/src/addons/shallowCompare.js\n+++ b/src/addons/shallowCompare.js\n@@ -18,11 +18,10 @@ var shallowEqual = require('shallowEqual');\n  * See ReactComponentWithPureRenderMixin\n  * See also https://facebook.github.io/react/docs/shallow-compare.html\n  */\n-function shallowCompare(instance, nextProps, nextState, nextContext) {\n+function shallowCompare(instance, nextProps, nextState) {\n   return (\n     !shallowEqual(instance.props, nextProps) ||\n-    !shallowEqual(instance.state, nextState) ||\n-    !shallowEqual(instance.context, nextContext)\n+    !shallowEqual(instance.state, nextState)\n   );\n }"
    },
    {
      "message": "add hacks to make react art not warn from devtools",
      "diff": "diff --git a/src/renderers/shared/stack/reconciler/ReactMultiChild.js b/src/renderers/shared/stack/reconciler/ReactMultiChild.js\nindex 01014e80f92c..70e39bcbffcf 100644\n--- a/src/renderers/shared/stack/reconciler/ReactMultiChild.js\n+++ b/src/renderers/shared/stack/reconciler/ReactMultiChild.js\n@@ -12,6 +12,7 @@\n 'use strict';\n \n var ReactComponentEnvironment = require('ReactComponentEnvironment');\n+var ReactInstanceMap = require('ReactInstanceMap');\n var ReactInstrumentation = require('ReactInstrumentation');\n var ReactMultiChildUpdateTypes = require('ReactMultiChildUpdateTypes');\n \n@@ -142,14 +143,28 @@ function processQueue(inst, updateQueue) {\n var setParentForInstrumentation = emptyFunction;\n var setChildrenForInstrumentation = emptyFunction;\n if (__DEV__) {\n+  var getDebugID = function(inst) {\n+    if (!inst._debugID) {\n+      // Check for ART-like instances. TODO: This is silly/gross.\n+      var internal;\n+      if ((internal = ReactInstanceMap.get(inst))) {\n+        inst = internal;\n+      }\n+    }\n+    return inst._debugID;\n+  };\n   setParentForInstrumentation = function(child) {\n+    invariant(child._debugID != null, 'mooooooooooooooooooo');\n     if (child._debugID !== 0) {\n-      ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);\n+      ReactInstrumentation.debugTool.onSetParent(\n+        child._debugID,\n+        getDebugID(this._debugID)\n+      );\n     }\n   };\n   setChildrenForInstrumentation = function(children) {\n     ReactInstrumentation.debugTool.onSetChildren(\n-      this._debugID,\n+      getDebugID(this),\n       children ? Object.keys(children).map(key => children[key]._debugID) : []\n     );\n   };"
    },
    {
      "message": "remove unnecessary require causing excess memory usage",
      "diff": "diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\nindex d3cdf3c399d3..967c52a494a4 100644\n--- a/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\n+++ b/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\n@@ -173,10 +173,9 @@ Object.assign(SyntheticEvent.prototype, {\n       this[shouldBeReleasedProperties[i]] = null;\n     }\n     if (__DEV__) {\n-      var noop = require('emptyFunction');\n       Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n-      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', noop));\n-      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', noop));\n+      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n+      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n     }\n   },"
    },
    {
      "message": "require modules from react native as node modules.",
      "diff": "diff --git a/gulpfile.js b/gulpfile.js\nindex c3db76382cc4..452d0362c3c6 100644\n--- a/gulpfile.js\n+++ b/gulpfile.js\n@@ -29,27 +29,21 @@ var paths = {\n   },\n };\n \n-var fbjsModuleMap = require('fbjs/module-map');\n-var moduleMap = {};\n-for (var key in fbjsModuleMap) {\n-  moduleMap[key] = fbjsModuleMap[key];\n-}\n-var whiteListNames = [\n-  'deepDiffer',\n-  'deepFreezeAndThrowOnMutationInDev',\n-  'flattenStyle',\n-  'InitializeJavaScriptAppEngine',\n-  'RCTEventEmitter',\n-  'TextInputState',\n-  'UIManager',\n-  'View',\n-];\n-\n-whiteListNames.forEach(function(name) {\n-  moduleMap[name] = name;\n-});\n-\n-moduleMap['object-assign'] = 'object-assign';\n+var moduleMap = Object.assign(\n+  {'object-assign': 'object-assign'},\n+  require('fbjs/module-map'),\n+  {\n+    deepDiffer: 'react-native/lib/deepDiffer',\n+    deepFreezeAndThrowOnMutationInDev: 'react-native/lib/deepFreezeAndThrowOnMutationInDev',\n+    flattenStyle: 'react-native/lib/flattenStyle',\n+    InitializeJavaScriptAppEngine: 'react-native/lib/InitializeJavaScriptAppEngine',\n+    RCTEventEmitter: 'react-native/lib/RCTEventEmitter',\n+    TextInputState: 'react-native/lib/TextInputState',\n+    UIManager: 'react-native/lib/UIManager',\n+    UIManagerStatTracker: 'react-native/lib/UIManagerStatTracker',\n+    View: 'react-native/lib/View',\n+  }\n+);\n \n var babelOpts = {\n   plugins: ["
    },
    {
      "message": "fix severe perf problems in component tree devtool",
      "diff": "diff --git a/src/isomorphic/devtools/ReactComponentTreeDevtool.js b/src/isomorphic/devtools/ReactComponentTreeDevtool.js\nindex 353b743e1b01..c0347a3246e5 100644\n--- a/src/isomorphic/devtools/ReactComponentTreeDevtool.js\n+++ b/src/isomorphic/devtools/ReactComponentTreeDevtool.js\n@@ -14,7 +14,8 @@\n var invariant = require('invariant');\n \n var tree = {};\n-var rootIDs = [];\n+var unmountedIDs = {};\n+var rootIDs = {};\n \n function updateTree(id, update) {\n   if (!tree[id]) {\n@@ -28,6 +29,10 @@ function updateTree(id, update) {\n       isMounted: false,\n       updateCount: 0,\n     };\n+    // TODO: We need to do this awkward dance because TopLevelWrapper \"never\n+    // gets mounted\" but its display name gets set in instantiateReactComponent\n+    // before its debug ID is set to 0.\n+    unmountedIDs[id] = true;\n   }\n   update(tree[id]);\n }\n@@ -99,10 +104,11 @@ var ReactComponentTreeDevtool = {\n \n   onMountComponent(id) {\n     updateTree(id, item => item.isMounted = true);\n+    delete unmountedIDs[id];\n   },\n \n   onMountRootComponent(id) {\n-    rootIDs.push(id);\n+    rootIDs[id] = true;\n   },\n \n   onUpdateComponent(id) {\n@@ -111,7 +117,8 @@ var ReactComponentTreeDevtool = {\n \n   onUnmountComponent(id) {\n     updateTree(id, item => item.isMounted = false);\n-    rootIDs = rootIDs.filter(rootID => rootID !== id);\n+    unmountedIDs[id] = true;\n+    delete rootIDs[id];\n   },\n \n   purgeUnmountedComponents() {\n@@ -120,9 +127,10 @@ var ReactComponentTreeDevtool = {\n       return;\n     }\n \n-    Object.keys(tree)\n-      .filter(id => !tree[id].isMounted)\n-      .forEach(purgeDeep);\n+    for (var id in unmountedIDs) {\n+      purgeDeep(id);\n+    }\n+    unmountedIDs = {};\n   },\n \n   isMounted(id) {\n@@ -168,7 +176,7 @@ var ReactComponentTreeDevtool = {\n   },\n \n   getRootIDs() {\n-    return rootIDs;\n+    return Object.keys(rootIDs);\n   },\n \n   getRegisteredIDs() {"
    },
    {
      "message": "fix remaining onnativeoperation \u2192 onhostoperation rename",
      "diff": "diff --git a/src/renderers/dom/shared/DOMPropertyOperations.js b/src/renderers/dom/shared/DOMPropertyOperations.js\nindex cb9dbc520dff..c242f4b0ed9c 100644\n--- a/src/renderers/dom/shared/DOMPropertyOperations.js\n+++ b/src/renderers/dom/shared/DOMPropertyOperations.js\n@@ -216,7 +216,7 @@ var DOMPropertyOperations = {\n     node.removeAttribute(name);\n     if (__DEV__) {\n       ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);\n-      ReactInstrumentation.debugTool.onNativeOperation(\n+      ReactInstrumentation.debugTool.onHostOperation(\n         ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n         'remove attribute',\n         name"
    },
    {
      "message": "remove the protective clause that is now unnecessary",
      "diff": "diff --git a/src/isomorphic/ReactPerf.js b/src/isomorphic/ReactPerf.js\nindex f89de6764c1a..4c631a7f13e4 100644\n--- a/src/isomorphic/ReactPerf.js\n+++ b/src/isomorphic/ReactPerf.js\n@@ -236,17 +236,11 @@ function getWasted(flushHistory = getFlushHistory()) {\n \n function getOperations(flushHistory = getFlushHistory()) {\n   var stats = [];\n-\n   flushHistory.forEach((flush, flushIndex) => {\n     var {operations, treeSnapshot} = flush;\n-\n     operations.forEach(operation => {\n       var {instanceID, type, payload} = operation;\n-      var {displayName, ownerID} = instanceID !== 0 ?\n-        treeSnapshot[instanceID] :\n-        // Empty components may appear in some operation logs.\n-        {displayName: '#empty', ownerID: null};\n-\n+      var {displayName, ownerID} = treeSnapshot[instanceID];\n       var owner = treeSnapshot[ownerID];\n       var key = (owner ? owner.displayName + ' > ' : '') + displayName;"
    },
    {
      "message": "add link to create-fragment from react.children.map docs",
      "diff": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex 926995357fde..31aa0f92dd8b 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -98,7 +98,7 @@ Verifies the object is a ReactElement.\n array React.Children.map(object children, function fn [, object thisArg])\n ```\n \n-Invoke `fn` on every immediate child contained within `children` with `this` set to `thisArg`. If `children` is a keyed fragment or array it will be traversed: `fn` will never be passed the container objects. If children is `null` or `undefined` returns `null` or `undefined` rather than an array.\n+Invoke `fn` on every immediate child contained within `children` with `this` set to `thisArg`. If `children` is a [keyed fragment](/react/docs/create-fragment.html) or array it will be traversed: `fn` will never be passed the container objects. If children is `null` or `undefined` returns `null` or `undefined` rather than an array.\n \n #### React.Children.forEach"
    },
    {
      "message": "allow empty components in the native operation logs",
      "diff": "diff --git a/src/isomorphic/ReactPerf.js b/src/isomorphic/ReactPerf.js\nindex 4c631a7f13e4..f89de6764c1a 100644\n--- a/src/isomorphic/ReactPerf.js\n+++ b/src/isomorphic/ReactPerf.js\n@@ -236,11 +236,17 @@ function getWasted(flushHistory = getFlushHistory()) {\n \n function getOperations(flushHistory = getFlushHistory()) {\n   var stats = [];\n+\n   flushHistory.forEach((flush, flushIndex) => {\n     var {operations, treeSnapshot} = flush;\n+\n     operations.forEach(operation => {\n       var {instanceID, type, payload} = operation;\n-      var {displayName, ownerID} = treeSnapshot[instanceID];\n+      var {displayName, ownerID} = instanceID !== 0 ?\n+        treeSnapshot[instanceID] :\n+        // Empty components may appear in some operation logs.\n+        {displayName: '#empty', ownerID: null};\n+\n       var owner = treeSnapshot[ownerID];\n       var key = (owner ? owner.displayName + ' > ' : '') + displayName;"
    },
    {
      "message": "remove mention of 'nested object' as an allowed children in react.children.map",
      "diff": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex 24252f8e732c..926995357fde 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -98,7 +98,7 @@ Verifies the object is a ReactElement.\n array React.Children.map(object children, function fn [, object thisArg])\n ```\n \n-Invoke `fn` on every immediate child contained within `children` with `this` set to `thisArg`. If `children` is a nested object or array it will be traversed: `fn` will never be passed the container objects. If children is `null` or `undefined` returns `null` or `undefined` rather than an array.\n+Invoke `fn` on every immediate child contained within `children` with `this` set to `thisArg`. If `children` is a keyed fragment or array it will be traversed: `fn` will never be passed the container objects. If children is `null` or `undefined` returns `null` or `undefined` rather than an array.\n \n #### React.Children.forEach"
    },
    {
      "message": "add getlastmeasurements as it is documented as public api",
      "diff": "diff --git a/src/isomorphic/ReactPerf.js b/src/isomorphic/ReactPerf.js\nindex 7c93a02490fc..596ca6e900d0 100644\n--- a/src/isomorphic/ReactPerf.js\n+++ b/src/isomorphic/ReactPerf.js\n@@ -342,7 +342,7 @@ function stop() {\n }\n \n var ReactPerfAnalysis = {\n-  getFlushHistory,\n+  getLastMeasurements: getFlushHistory,\n   getExclusive,\n   getInclusive,\n   getWasted,"
    },
    {
      "message": "revert \"merge pull request #6458 from mondaychen/master\"",
      "diff": "diff --git a/src/renderers/dom/shared/dangerousStyleValue.js b/src/renderers/dom/shared/dangerousStyleValue.js\nindex f0ed355178ee..8aa2e49607fa 100644\n--- a/src/renderers/dom/shared/dangerousStyleValue.js\n+++ b/src/renderers/dom/shared/dangerousStyleValue.js\n@@ -44,7 +44,7 @@ function dangerousStyleValue(name, value, component) {\n   }\n \n   var isNonNumeric = isNaN(value);\n-  if (isNonNumeric || value === 0 || value === '0' ||\n+  if (isNonNumeric || value === 0 ||\n       isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n     return '' + value; // cast to string\n   }"
    },
    {
      "message": "bail out of dedupe logic in cases where there is an incomplete value descriptor",
      "diff": "diff --git a/src/renderers/dom/client/inputValueTracking.js b/src/renderers/dom/client/inputValueTracking.js\nindex 3b877be63ec7..d69f31b383fa 100644\n--- a/src/renderers/dom/client/inputValueTracking.js\n+++ b/src/renderers/dom/client/inputValueTracking.js\n@@ -65,10 +65,15 @@ var inputValueTracking = {\n \n     var currentValue = '' + node[valueField];\n \n-    // if someone has already defined a value bail and don't track value\n-    // will cause over reporting of changes, but it's better then a hard failure\n-    // (needed for certain tests that spyOn input values)\n-    if (node.hasOwnProperty(valueField)) {\n+    // if someone has already defined a value or Safari, then bail\n+    // and don't track value will cause over reporting of changes,\n+    // but it's better then a hard failure\n+    // (needed for certain tests that spyOn input values and Safari)\n+    if (\n+      node.hasOwnProperty(valueField) ||\n+      typeof descriptor.get !== 'function' ||\n+      typeof descriptor.set !== 'function'\n+    ) {\n       return;\n     }"
    },
    {
      "message": "ignore events fired on missing react native instances",
      "diff": "diff --git a/src/renderers/native/ReactNative/ReactNativeEventEmitter.js b/src/renderers/native/ReactNative/ReactNativeEventEmitter.js\nindex add29ce39d26..bf7179c2aeb3 100644\n--- a/src/renderers/native/ReactNative/ReactNativeEventEmitter.js\n+++ b/src/renderers/native/ReactNative/ReactNativeEventEmitter.js\n@@ -120,6 +120,11 @@ var ReactNativeEventEmitter = merge(ReactEventEmitterMixin, {\n   ) {\n     var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;\n     var inst = ReactNativeComponentTree.getInstanceFromNode(rootNodeID);\n+    if (!inst) {\n+      // If the original instance is already gone, we don't have to dispatch\n+      // any events.\n+      return;\n+    }\n     ReactUpdates.batchedUpdates(function() {\n       ReactNativeEventEmitter.handleTopLevel(\n         topLevelType,"
    },
    {
      "message": "flip the warning condition in reactdebugtool and reactdomdebugtool",
      "diff": "diff --git a/src/isomorphic/ReactDebugTool.js b/src/isomorphic/ReactDebugTool.js\nindex ea89a936414f..24f70dd75844 100644\n--- a/src/isomorphic/ReactDebugTool.js\n+++ b/src/isomorphic/ReactDebugTool.js\n@@ -26,7 +26,7 @@ function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {\n         }\n       } catch (e) {\n         warning(\n-          !handlerDoesThrowForEvent[handlerFunctionName],\n+          handlerDoesThrowForEvent[handlerFunctionName],\n           'exception thrown by devtool while handling %s: %s',\n           handlerFunctionName,\n           e.message\ndiff --git a/src/renderers/dom/shared/ReactDOMDebugTool.js b/src/renderers/dom/shared/ReactDOMDebugTool.js\nindex b90c1224503d..25d72c7ee005 100644\n--- a/src/renderers/dom/shared/ReactDOMDebugTool.js\n+++ b/src/renderers/dom/shared/ReactDOMDebugTool.js\n@@ -27,7 +27,7 @@ function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {\n         }\n       } catch (e) {\n         warning(\n-          !handlerDoesThrowForEvent[handlerFunctionName],\n+          handlerDoesThrowForEvent[handlerFunctionName],\n           'exception thrown by devtool while handling %s: %s',\n           handlerFunctionName,\n           e.message"
    },
    {
      "message": "fix reactnativecomponentenvironment providesmodule",
      "diff": "diff --git a/src/renderers/native/ReactNative/ReactNativeBaseComponentEnvironment.js b/src/renderers/native/ReactNative/ReactNativeComponentEnvironment.js\nsimilarity index 100%\nrename from src/renderers/native/ReactNative/ReactNativeBaseComponentEnvironment.js\nrename to src/renderers/native/ReactNative/ReactNativeComponentEnvironment.js"
    },
    {
      "message": "ensure validatedomnesting catches nested body elements",
      "diff": "diff --git a/src/renderers/dom/client/__tests__/validateDOMNesting-test.js b/src/renderers/dom/client/__tests__/validateDOMNesting-test.js\nindex e0bdfe959f2b..dec17ae4ba28 100644\n--- a/src/renderers/dom/client/__tests__/validateDOMNesting-test.js\n+++ b/src/renderers/dom/client/__tests__/validateDOMNesting-test.js\n@@ -83,5 +83,7 @@ describe('ReactContextValidator', function() {\n     expect(isTagStackValid(['table', 'tr'])).toBe(false);\n     expect(isTagStackValid(['div', 'ul', 'li', 'div', 'li'])).toBe(false);\n     expect(isTagStackValid(['div', 'html'])).toBe(false);\n+    expect(isTagStackValid(['body', 'body'])).toBe(false);\n+    expect(isTagStackValid(['svg', 'foreignObject', 'body', 'p'])).toBe(false);\n   });\n });\ndiff --git a/src/renderers/dom/client/validateDOMNesting.js b/src/renderers/dom/client/validateDOMNesting.js\nindex 431d80fd2d5d..9422a079e146 100644\n--- a/src/renderers/dom/client/validateDOMNesting.js\n+++ b/src/renderers/dom/client/validateDOMNesting.js\n@@ -208,6 +208,7 @@ if (__DEV__) {\n       case 'rt':\n         return impliedEndTags.indexOf(parentTag) === -1;\n \n+      case 'body':\n       case 'caption':\n       case 'col':\n       case 'colgroup':"
    },
    {
      "message": "flip conditional in disabledinpututils to cut hasownproperty calls",
      "diff": "diff --git a/src/renderers/dom/client/wrappers/DisabledInputUtils.js b/src/renderers/dom/client/wrappers/DisabledInputUtils.js\nindex 06ab2dc9dc9a..37f80283514b 100644\n--- a/src/renderers/dom/client/wrappers/DisabledInputUtils.js\n+++ b/src/renderers/dom/client/wrappers/DisabledInputUtils.js\n@@ -38,7 +38,7 @@ var DisabledInputUtils = {\n     // Copy the props, except the mouse listeners\n     var nativeProps = {};\n     for (var key in props) {\n-      if (props.hasOwnProperty(key) && !disableableMouseListenerNames[key]) {\n+      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {\n         nativeProps[key] = props[key];\n       }\n     }"
    },
    {
      "message": "revert \"merge pull request #6431 from sebmarkbage/killspread\"",
      "diff": "diff --git a/src/isomorphic/React.js b/src/isomorphic/React.js\nindex 551e0a608bb2..37109d6ea13f 100644\n--- a/src/isomorphic/React.js\n+++ b/src/isomorphic/React.js\n@@ -65,6 +65,9 @@ var React = {\n   DOM: ReactDOMFactories,\n \n   version: ReactVersion,\n+\n+  // Hook for JSX spread, don't use this for anything else.\n+  __spread: Object.assign,\n };\n \n module.exports = React;"
    },
    {
      "message": "remove an unnecessary call to finddomnode in the select optgroup test.",
      "diff": "diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js\nindex 406c0306a24f..0a3f53028314 100644\n--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js\n+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js\n@@ -548,8 +548,7 @@ describe('ReactDOMSelect', function() {\n         </optgroup>\n       </select>;\n     var container = document.createElement('div');\n-    stub = ReactDOM.render(stub, container);\n-    var node = ReactDOM.findDOMNode(stub);\n+    var node = ReactDOM.render(stub, container);\n \n     expect(node.options[0].selected).toBe(false);  // a\n     expect(node.options[1].selected).toBe(true);   // b"
    },
    {
      "message": "add a null check when checking for the native parent of an option element.",
      "diff": "diff --git a/src/renderers/dom/client/wrappers/ReactDOMOption.js b/src/renderers/dom/client/wrappers/ReactDOMOption.js\nindex a7e479d7e778..221f8fc00433 100644\n--- a/src/renderers/dom/client/wrappers/ReactDOMOption.js\n+++ b/src/renderers/dom/client/wrappers/ReactDOMOption.js\n@@ -39,7 +39,7 @@ var ReactDOMOption = {\n         selectParent = selectParent._nativeParent;\n       }\n \n-      if (selectParent._tag === 'select') {\n+      if (selectParent != null && selectParent._tag === 'select') {\n         selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n       }\n     }"
    },
    {
      "message": "ensure default injection is injected for test utils",
      "diff": "diff --git a/src/test/ReactTestUtils.js b/src/test/ReactTestUtils.js\nindex 8cc08615eea8..d1365b50c541 100644\n--- a/src/test/ReactTestUtils.js\n+++ b/src/test/ReactTestUtils.js\n@@ -16,6 +16,7 @@ var EventPluginHub = require('EventPluginHub');\n var EventPluginRegistry = require('EventPluginRegistry');\n var EventPropagators = require('EventPropagators');\n var React = require('React');\n+var ReactDefaultInjection = require('ReactDefaultInjection');\n var ReactDOM = require('ReactDOM');\n var ReactDOMComponentTree = require('ReactDOMComponentTree');\n var ReactElement = require('ReactElement');\n@@ -409,6 +410,11 @@ Object.assign(\n );\n \n ReactShallowRenderer.prototype.render = function(element, context) {\n+  // Ensure we've done the default injections. This might not be true in the\n+  // case of a simple test that only requires React and the TestUtils in\n+  // conjunction with an inline-requires transform.\n+  ReactDefaultInjection.inject();\n+\n   invariant(\n     ReactElement.isValidElement(element),\n     'ReactShallowRenderer render(): Invalid component element.%s',"
    },
    {
      "message": "add documentation about empty functional components",
      "diff": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex 4c784f332bf0..9f45a9f7a887 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -299,4 +299,8 @@ However, you may still specify `.propTypes` and `.defaultProps` by setting them\n >\n > Because stateless functions don't have a backing instance, you can't attach a ref to a stateless function component. Normally this isn't an issue, since stateless functions do not provide an imperative API. Without an imperative API, there isn't much you could do with an instance anyway. However, if a user wants to find the DOM node of a stateless function component, they must wrap the component in a stateful component (eg. ES6 class component) and attach the ref to the stateful wrapper component.\n \n+> NOTE:\n+>\n+> Due to some implementation details, returning `null` or `false` to indicate you don't want to render anything won't work in a functional component (see [react/4599](https://github.com/facebook/react/issues/4599) for details). Consider returning `<noscript />` instead.\n+\n In an ideal world, most of your components would be stateless functions because in the future we\u2019ll also be able to make performance optimizations specific to these components by avoiding unnecessary checks and memory allocations. This is the recommended pattern, when possible."
    },
    {
      "message": "fix missing semicolon, unexpected spaces and trailing comma",
      "diff": "diff --git a/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js b/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js\nindex eea4b7577a74..bfd6f8a410cb 100644\n--- a/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js\n+++ b/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js\n@@ -808,14 +808,14 @@ describe('ReactPropTypes', function() {\n       );\n       typeCheckFail(\n         PropTypes.symbol,\n-        function () { },\n+        function() { },\n         'Invalid prop `testProp` of type `function` supplied to ' +\n         '`testComponent`, expected `symbol`.'\n       );\n       typeCheckFail(\n         PropTypes.symbol,\n         {\n-          '@@toStringTag': 'Katana'\n+          '@@toStringTag': 'Katana',\n         },\n         'Invalid prop `testProp` of type `object` supplied to ' +\n         '`testComponent`, expected `symbol`.'\n@@ -826,8 +826,8 @@ describe('ReactPropTypes', function() {\n       var ES6Symbol = require('es6-symbol/polyfill');\n       var CoreSymbol = require('core-js/library/es6/symbol');\n \n-      typeCheckPass(PropTypes.symbol, ES6Symbol('es6-symbol'))\n-      typeCheckPass(PropTypes.symbol, CoreSymbol('core-js'))\n+      typeCheckPass(PropTypes.symbol, ES6Symbol('es6-symbol'));\n+      typeCheckPass(PropTypes.symbol, CoreSymbol('core-js'));\n     });\n   });"
    },
    {
      "message": "remove another 0.14 changelog entry for 15 rc1 release notes",
      "diff": "diff --git a/docs/_posts/2016-03-07-react-v15-rc1.md b/docs/_posts/2016-03-07-react-v15-rc1.md\nindex 932ae0988700..85a054ead7c1 100644\n--- a/docs/_posts/2016-03-07-react-v15-rc1.md\n+++ b/docs/_posts/2016-03-07-react-v15-rc1.md\n@@ -90,6 +90,5 @@ Each of these changes will continue to work as before with a new warning until t\n - Input events are handled more reliably in IE 10 and IE 11; spurious events no longer fire when using a placeholder.\n - React DOM now supports the `cite` and `profile` HTML attributes.\n - React DOM now supports the `onAnimationStart`, `onAnimationEnd`, `onAnimationIteration`, `onTransitionEnd`, and `onInvalid` events. Support for `onLoad` has been added to `object` elements.\n-- Add-Ons: ReactTransitionGroup now correctly handles multiple nodes being removed simultaneously.\n - `Object.is` is used in a number of places to compare values, which leads to fewer false positives, especially involving `NaN`. In particular, this affects the `shallowCompare` add-on.\n - React DOM now defaults to using DOM attributes instead of properties, which fixes a few edge case bugs. Additionally the nullification of values (ex: `href={null}`) now results in the forceful removal, no longer trying to set to the default value used by browsers in the absence of a value."
    },
    {
      "message": "remove 15 rc1 changelog entry that was fixed in 0.14",
      "diff": "diff --git a/docs/_posts/2016-03-07-react-v15-rc1.md b/docs/_posts/2016-03-07-react-v15-rc1.md\nindex 3eb8fb296fcf..932ae0988700 100644\n--- a/docs/_posts/2016-03-07-react-v15-rc1.md\n+++ b/docs/_posts/2016-03-07-react-v15-rc1.md\n@@ -87,7 +87,6 @@ Each of these changes will continue to work as before with a new warning until t\n ### Notable bug fixes\n \n - Fixed multiple small memory leaks\n-- Click events are handled by React DOM more reliably in mobile browsers, particularly in Mobile Safari.\n - Input events are handled more reliably in IE 10 and IE 11; spurious events no longer fire when using a placeholder.\n - React DOM now supports the `cite` and `profile` HTML attributes.\n - React DOM now supports the `onAnimationStart`, `onAnimationEnd`, `onAnimationIteration`, `onTransitionEnd`, and `onInvalid` events. Support for `onLoad` has been added to `object` elements."
    },
    {
      "message": "clarify that reactperf.getlastmeasurements is now opaque",
      "diff": "diff --git a/docs/docs/10.9-perf.md b/docs/docs/10.9-perf.md\nindex 1e66f48a21ae..8b8da062584a 100644\n--- a/docs/docs/10.9-perf.md\n+++ b/docs/docs/10.9-perf.md\n@@ -57,24 +57,6 @@ This method has been renamed to `printOperations()` which is described in the pr\n The above print methods use `Perf.getLastMeasurements()` to pretty-print the result.\n \n ### `Perf.getLastMeasurements()`\n-Get the measurements array from the last start-stop session. The array contains objects, each of which looks like this:\n-\n-```js\n-{\n-  // The term \"inclusive\" and \"exclusive\" are explained below\n-  \"exclusive\": {},\n-  // '.0.0' is the React ID of the node\n-  \"inclusive\": {\".0.0\": 0.0670000008540228, \".0\": 0.3259999939473346},\n-  \"render\": {\".0\": 0.036999990697950125, \".0.0\": 0.010000003385357559},\n-  // Number of instances\n-  \"counts\": {\".0\": 1, \".0.0\": 1},\n-  // DOM touches\n-  \"writes\": {},\n-  // Extra debugging info\n-  \"displayNames\": {\n-    \".0\": {\"current\": \"App\", \"owner\": \"<root>\"},\n-    \".0.0\": {\"current\": \"Box\", \"owner\": \"App\"}\n-  },\n-  \"totalTime\": 0.48499999684281647\n-}\n-```\n+Get the opaque data structure describing measurements from the last start-stop session. You can save it and pass it to the methods above to analyze past measurements.\n+\n+Don't rely on the exact format of the return value because it may change in minor releases. We will update the documentation if the return value format becomes a supported part of the public API."
    },
    {
      "message": "rename example package.json command for consistency with readme",
      "diff": "diff --git a/examples/basic-commonjs/package.json b/examples/basic-commonjs/package.json\nindex 5dce6907d19e..2be4124487e6 100644\n--- a/examples/basic-commonjs/package.json\n+++ b/examples/basic-commonjs/package.json\n@@ -4,13 +4,13 @@\n   \"main\": \"index.js\",\n   \"dependencies\": {\n     \"babelify\": \"^6.3.0\",\n+    \"browserify\": \"^11.0.1\",\n     \"react\": \"^0.14.0-rc1\",\n     \"react-dom\": \"^0.14.0-rc1\",\n-    \"watchify\": \"^3.4.0\",\n-    \"browserify\": \"^11.0.1\"\n+    \"watchify\": \"^3.4.0\"\n   },\n   \"scripts\": {\n     \"build\": \"browserify ./index.js -t babelify -o bundle.js\",\n-    \"watch\": \"watchify ./index.js -v -t babelify -o bundle.js\"\n+    \"start\": \"watchify ./index.js -v -t babelify -o bundle.js\"\n   }\n }"
    },
    {
      "message": "fix reactperf.printoperations test to work with createelement = false",
      "diff": "diff --git a/src/test/__tests__/ReactDefaultPerf-test.js b/src/test/__tests__/ReactDefaultPerf-test.js\nindex afa7770aabf6..cc16c8846215 100644\n--- a/src/test/__tests__/ReactDefaultPerf-test.js\n+++ b/src/test/__tests__/ReactDefaultPerf-test.js\n@@ -14,6 +14,7 @@\n describe('ReactDefaultPerf', function() {\n   var React;\n   var ReactDOM;\n+  var ReactDOMFeatureFlags;\n   var ReactDefaultPerf;\n   var ReactTestUtils;\n   var ReactDefaultPerfAnalysis;\n@@ -35,6 +36,7 @@ describe('ReactDefaultPerf', function() {\n \n     React = require('React');\n     ReactDOM = require('ReactDOM');\n+    ReactDOMFeatureFlags = require('ReactDOMFeatureFlags');\n     ReactDefaultPerf = require('ReactDefaultPerf');\n     ReactTestUtils = require('ReactTestUtils');\n     ReactDefaultPerfAnalysis = require('ReactDefaultPerfAnalysis');\n@@ -248,7 +250,9 @@ describe('ReactDefaultPerf', function() {\n     expect(console.table.argsForCall[0][0]).toEqual([{\n       'data-reactid': '',\n       type: 'set innerHTML',\n-      args: '{\"node\":\"<not serializable>\",\"children\":[],\"html\":null,\"text\":null}',\n+      args: ReactDOMFeatureFlags.useCreateElement ?\n+        '{\"node\":\"<not serializable>\",\"children\":[],\"html\":null,\"text\":null}' :\n+        '\"<div data-reactroot=\\\\\"\\\\\" data-reactid=\\\\\"1\\\\\">hey</div>\"',\n     }]);\n   });"
    },
    {
      "message": "add beginner friendly resource for learning how to pr",
      "diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md\nindex 1037324842b0..58b2b52664d5 100644\n--- a/CONTRIBUTING.md\n+++ b/CONTRIBUTING.md\n@@ -30,6 +30,8 @@ Just make sure to run the whole test suite before submitting a pull request!\n \n ### Pull Requests\n \n+**Working on your first Pull Request?** You can learn how from this *free* series [How to Contribute to an Open Source Project on GitHub](https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github)\n+\n The core team will be monitoring for pull requests. When we get one, we'll run some Facebook-specific integration tests on it first. From here, we'll need to get another person to sign off on the changes and then merge the pull request. For API changes we may need to fix internal uses, which could cause some delay. We'll do our best to provide updates and feedback throughout the process.\n \n *Before* submitting a pull request, please make sure the following is done\u2026"
    },
    {
      "message": "try disabling coverage on master to prevent travis crashes",
      "diff": "diff --git a/.travis.yml b/.travis.yml\nindex 56e53a91b271..821d36f165cf 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -66,13 +66,7 @@ script:\n           $SERVER\n       fi\n     elif [ \"$TEST_TYPE\" = test ]; then\n-      if [ \"$TRAVIS_PULL_REQUEST\" = false ]; then\n-        set -e\n-        ./node_modules/.bin/grunt jest:coverage\n-        cat ./coverage/lcov.info | ./node_modules/.bin/coveralls\n-      else\n-        ./node_modules/.bin/grunt jest:normal\n-      fi\n+      ./node_modules/.bin/grunt jest:normal\n       echo 'Testing in server-render (HTML generation) mode...'\n       printf '\\nmodule.exports.useCreateElement = false;\\n' \\\n         >> src/renderers/dom/shared/ReactDOMFeatureFlags.js"
    },
    {
      "message": "fix the reactdefaultperf test to match changes in #6286",
      "diff": "diff --git a/src/test/__tests__/ReactDefaultPerf-test.js b/src/test/__tests__/ReactDefaultPerf-test.js\nindex 42c32518e4f2..716cbdf06b77 100644\n--- a/src/test/__tests__/ReactDefaultPerf-test.js\n+++ b/src/test/__tests__/ReactDefaultPerf-test.js\n@@ -58,7 +58,7 @@ describe('ReactDefaultPerf', function() {\n     ReactDefaultPerf.start();\n     fn();\n     ReactDefaultPerf.stop();\n-    return ReactDefaultPerf.getLastMeasurements();\n+    return ReactDefaultPerf.getLastMeasurements().__unstable_this_format_will_change;\n   }\n \n   it('should count no-op update as waste', function() {"
    },
    {
      "message": "update domlazytree fragments comment to reflect reality",
      "diff": "diff --git a/src/renderers/dom/client/utils/DOMLazyTree.js b/src/renderers/dom/client/utils/DOMLazyTree.js\nindex 520a06c5f976..249eb475c5c4 100644\n--- a/src/renderers/dom/client/utils/DOMLazyTree.js\n+++ b/src/renderers/dom/client/utils/DOMLazyTree.js\n@@ -53,9 +53,10 @@ function insertTreeChildren(tree) {\n \n var insertTreeBefore = createMicrosoftUnsafeLocalFunction(\n   function(parentNode, tree, referenceNode) {\n-    // Document Fragments in IE11, Edge (and possibly others) won't update\n-    // correctly if they are already inserted. So we have to break out of our\n-    // lazy approach and append children to the fragment before inserting it.\n+    // DocumentFragments aren't actually part of the DOM after insertion so\n+    // appending children won't update the DOM. We need to ensure the fragment\n+    // is properly populated first, breaking out of our lazy approach for just\n+    // this level.\n     if (tree.node.nodeType === 11) {\n       insertTreeChildren(tree);\n       parentNode.insertBefore(tree.node, referenceNode);"
    },
    {
      "message": "revert \"merge pull request #5736 from gaearon/document-svg-passthrough\"",
      "diff": "diff --git a/docs/docs/ref-04-tags-and-attributes.md b/docs/docs/ref-04-tags-and-attributes.md\nindex 8481c75b1c43..6cb7207239a2 100644\n--- a/docs/docs/ref-04-tags-and-attributes.md\n+++ b/docs/docs/ref-04-tags-and-attributes.md\n@@ -86,6 +86,13 @@ There is also the React-specific attribute `dangerouslySetInnerHTML` ([more here\n \n ### SVG Attributes\n \n-Any attributes passed to SVG tags are passed through without changes.\n-\n-React used to support special camelCase aliases for certain SVG attributes, such as `clipPath`. If you use them now you'll see a deprecation warning. These aliases will be removed in the next version in favor of their real names from the SVG specification, such as `clip-path`. Attributes that have a camelCase name in the spec, such as `gradientTransform`, will keep their names.\n+```\n+clipPath cx cy d dx dy fill fillOpacity fontFamily\n+fontSize fx fy gradientTransform gradientUnits markerEnd\n+markerMid markerStart offset opacity patternContentUnits\n+patternUnits points preserveAspectRatio r rx ry spreadMethod\n+stopColor stopOpacity stroke  strokeDasharray strokeLinecap\n+strokeOpacity strokeWidth textAnchor transform version\n+viewBox x1 x2 x xlinkActuate xlinkArcrole xlinkHref xlinkRole\n+xlinkShow xlinkTitle xlinkType xmlBase xmlLang xmlSpace y1 y2 y\n+```"
    },
    {
      "message": "set value property explicitly for \"option\" element even if value is empty",
      "diff": "diff --git a/src/renderers/dom/shared/DOMPropertyOperations.js b/src/renderers/dom/shared/DOMPropertyOperations.js\nindex dc0c3fb7f9ee..fab11be6a24c 100644\n--- a/src/renderers/dom/shared/DOMPropertyOperations.js\n+++ b/src/renderers/dom/shared/DOMPropertyOperations.js\n@@ -179,6 +179,11 @@ var DOMPropertyOperations = {\n           // Contrary to `setAttribute`, object properties are properly\n           // `toString`ed by IE8/9.\n           node[propName] = value;\n+        } else if (node.nodeName && node.nodeName.toLowerCase() === 'option' &&\n+            !node.hasAttribute('value')) {\n+          // set empty \"value\" attribute to OPTION element\n+          // if it is provided, but not yet set\n+          node[propName] = value;\n         }\n       } else {\n         var attributeName = propertyInfo.attributeName;"
    },
    {
      "message": "add a warning for adding properties into respondersyntheticevent",
      "diff": "diff --git a/src/renderers/shared/event/eventPlugins/ResponderSyntheticEvent.js b/src/renderers/shared/event/eventPlugins/ResponderSyntheticEvent.js\nindex ca2b8ecfe717..f1cf77feacfc 100644\n--- a/src/renderers/shared/event/eventPlugins/ResponderSyntheticEvent.js\n+++ b/src/renderers/shared/event/eventPlugins/ResponderSyntheticEvent.js\n@@ -31,7 +31,7 @@ var ResponderEventInterface = {\n  * @extends {SyntheticEvent}\n  */\n function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n-  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n+  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n }\n \n SyntheticEvent.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);"
    },
    {
      "message": "upgrade to work with babel 6, fetch remote babel-browser for now",
      "diff": "diff --git a/docs/Rakefile b/docs/Rakefile\nindex ff61fc6cf32d..546f7dba12be 100644\n--- a/docs/Rakefile\n+++ b/docs/Rakefile\n@@ -1,10 +1,18 @@\n require('rubygems')\n require('json')\n require('yaml')\n+require('open-uri')\n+\n+desc \"download babel-browser\"\n+task :fetch_remotes do\n+  IO.copy_stream(\n+    open('https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.34/browser.min.js'),\n+    'js/babel-browser.min.js'\n+  )\n+end\n \n desc \"generate js from jsx\"\n task :js do\n-  system \"cp ../node_modules/babel/node_modules/babel-core/browser.min.js ./js/babel-browser.min.js\"\n   system \"../node_modules/.bin/babel _js --out-dir=js\"\n end\n \n@@ -54,7 +62,7 @@ task :update_acknowledgements do\n end\n \n desc \"build into ../../react-gh-pages\"\n-task :release => [:update_version, :default] do\n+task :release => [:update_version, :js, :fetch_remotes] do\n   system \"jekyll build -d ../../react-gh-pages\"\n end\n \ndiff --git a/package.json b/package.json\nindex cb4c380de5a8..a33bd953127e 100644\n--- a/package.json\n+++ b/package.json\n@@ -4,6 +4,7 @@\n   \"version\": \"0.15.0-alpha.1\",\n   \"devDependencies\": {\n     \"async\": \"^1.5.0\",\n+    \"babel-cli\": \"^6.6.5\",\n     \"babel-core\": \"^6.0.0\",\n     \"babel-eslint\": \"^5.0.0\",\n     \"babel-plugin-check-es2015-constants\": \"^6.5.0\","
    },
    {
      "message": "extend the correct object in the syntheticevent proxy",
      "diff": "diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\nindex 40461186c310..daad64d18e2c 100644\n--- a/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\n+++ b/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\n@@ -190,7 +190,7 @@ if (__DEV__) {\n     /*eslint-disable no-func-assign */\n     SyntheticEvent = new Proxy(SyntheticEvent, {\n       construct: function(target, args) {\n-        return this.apply(target, {}, args);\n+        return this.apply(target, Object.create(target.prototype), args);\n       },\n       apply: function(constructor, that, args) {\n         return new Proxy(constructor.apply(that, args), {"
    },
    {
      "message": "disable viewportmetrics unless mouseevent lacks support for pagex/pagey",
      "diff": "diff --git a/src/renderers/dom/client/ReactBrowserEventEmitter.js b/src/renderers/dom/client/ReactBrowserEventEmitter.js\nindex 7f203aace9c6..00cc48902497 100644\n--- a/src/renderers/dom/client/ReactBrowserEventEmitter.js\n+++ b/src/renderers/dom/client/ReactBrowserEventEmitter.js\n@@ -74,6 +74,7 @@ var isEventSupported = require('isEventSupported');\n  *    React Core     .  General Purpose Event Plugin System\n  */\n \n+var hasEventPageXY;\n var alreadyListeningTo = {};\n var isMonitoringScrollValue = false;\n var reactTopListenersCounter = 0;\n@@ -345,12 +346,19 @@ var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n    * Listens to window scroll and resize events. We cache scroll values so that\n    * application code can access them without triggering reflows.\n    *\n+   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n+   * pageX/pageY isn't supported (legacy browsers).\n+   *\n    * NOTE: Scroll events do not bubble.\n    *\n    * @see http://www.quirksmode.org/dom/events/scroll.html\n    */\n-  ensureScrollValueMonitoring: function() {\n-    if (!isMonitoringScrollValue) {\n+  ensureScrollValueMonitoring: function(){\n+    if (hasEventPageXY === undefined) {\n+      hasEventPageXY =\n+        document.createEvent && 'pageX' in document.createEvent('MouseEvent');\n+    }\n+    if (!hasEventPageXY && !isMonitoringScrollValue) {\n       var refresh = ViewportMetrics.refreshScrollValues;\n       ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n       isMonitoringScrollValue = true;"
    },
    {
      "message": "add \"cite\" attribute to whitelist for <blockquote> elements",
      "diff": "diff --git a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\nindex 618c5c966b58..b71aafc78a33 100644\n--- a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n+++ b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n@@ -48,6 +48,7 @@ var HTMLDOMPropertyConfig = {\n     charSet: null,\n     challenge: null,\n     checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n+    cite: null,\n     classID: null,\n     className: null,\n     cols: HAS_POSITIVE_NUMERIC_VALUE,"
    },
    {
      "message": "change script src for htmltojsx.min.js to referral target to fix https error",
      "diff": "diff --git a/docs/html-jsx.md b/docs/html-jsx.md\nindex 76bb67edc390..56e84c47bbec 100644\n--- a/docs/html-jsx.md\n+++ b/docs/html-jsx.md\n@@ -6,6 +6,6 @@ id: html-jsx\n <div class=\"jsxCompiler\">\n   <h1>HTML to JSX Compiler</h1>\n   <div id=\"jsxCompiler\"></div>\n-  <script src=\"https://reactjs.github.io/react-magic/htmltojsx.min.js\"></script>\n+  <script src=\"https://reactcommunity.org/react-magic/htmltojsx.min.js\"></script>\n   <script src=\"js/html-jsx.js\"></script>\n </div>"
    },
    {
      "message": "remove instance of invoking reactelement with new operator",
      "diff": "diff --git a/src/renderers/dom/client/ReactMount.js b/src/renderers/dom/client/ReactMount.js\nindex b044b363ea12..f4fc86611995 100644\n--- a/src/renderers/dom/client/ReactMount.js\n+++ b/src/renderers/dom/client/ReactMount.js\n@@ -405,7 +405,7 @@ var ReactMount = {\n       'for your app.'\n     );\n \n-    var nextWrappedElement = new ReactElement(\n+    var nextWrappedElement = ReactElement(\n       TopLevelWrapper,\n       null,\n       null,"
    },
    {
      "message": "clarify stateless function component optimizations.",
      "diff": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex 0808d1028f5d..de9a5b03cf0a 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -254,4 +254,4 @@ However, you may still specify `.propTypes` and `.defaultProps` by setting them\n >\n > Because stateless functions don't have a backing instance, you can't attach a ref to a stateless function component. Normally this isn't an issue, since stateless functions do not provide an imperative API. Without an imperative API, there isn't much you could do with an instance anyway. However, if a user wants to find the DOM node of a stateless function component, they must wrap the component in a stateful component (eg. ES6 class component) and attach the ref to the stateful wrapper component.\n \n-In an ideal world, most of your components would be stateless functions because these stateless components can follow a faster code path within the React core. This is the recommended pattern, when possible.\n+In an ideal world, most of your components would be stateless functions because in the future we\u2019ll also be able to make performance optimizations specific to these components by avoiding unnecessary checks and memory allocations. This is the recommended pattern, when possible."
    },
    {
      "message": "remove the recommendation to use `ismounted` from beginner docs",
      "diff": "diff --git a/docs/tips/12-initial-ajax.md b/docs/tips/12-initial-ajax.md\nindex a6e0e70fa696..c28835c57625 100644\n--- a/docs/tips/12-initial-ajax.md\n+++ b/docs/tips/12-initial-ajax.md\n@@ -9,7 +9,7 @@ next: false-in-jsx.html\n \n Fetch data in `componentDidMount`. When the response arrives, store the data in state, triggering a render to update your UI.\n \n-When processing the response of an asynchronous request, be sure to check that the component is still mounted before updating its state by using `this.isMounted()`.\n+When fetching data asynchronously, use `componentWillUnmount` to cancel any outstanding requests before the component is unmounted.\n \n This example fetches the desired Github user's latest gist:\n \n@@ -23,15 +23,19 @@ var UserGist = React.createClass({\n   },\n \n   componentDidMount: function() {\n-    $.get(this.props.source, function(result) {\n-      var lastGist = result[0];\n-      if (this.isMounted()) {\n+    this.setState({\n+      serverRequest: $.get(this.props.source, function(result) {\n+        var lastGist = result[0];\n         this.setState({\n           username: lastGist.owner.login,\n           lastGistUrl: lastGist.html_url\n         });\n-      }\n-    }.bind(this));\n+      }.bind(this))\n+    });\n+  },\n+  \n+  componentWillUnmount: function() {\n+    this.state.serverRequest.abort();\n   },\n \n   render: function() {"
    },
    {
      "message": "update react example basic-jsx-precompile comand line on markdown file,new version of babel needed a react presets dependency.",
      "diff": "diff --git a/examples/basic-jsx-precompile/index.html b/examples/basic-jsx-precompile/index.html\nindex f74a7379a668..53a84f876425 100644\n--- a/examples/basic-jsx-precompile/index.html\n+++ b/examples/basic-jsx-precompile/index.html\n@@ -11,9 +11,10 @@ <h1>Basic Example with Precompiled JSX</h1>\n       <p>\n         If you can see this, React is not running. Try running:\n       </p>\n-      <pre>npm install -g babel\n+      <pre>npm install -g babel-cli\n cd examples/basic-jsx-precompile/\n-babel example.js --out-dir=build</pre>\n+npm install babel-preset-react\n+babel example.js --presets react --out-dir=build</pre>\n     </div>\n     <h4>Example Details</h4>\n     <p>This is written with JSX in a separate file and precompiled to vanilla JS by running:</p>\n@@ -25,8 +26,8 @@ <h4>Example Details</h4>\n \n \t<p><i>With Babel 6.0 or higher</i></p>\n     <pre>npm install -g babel-cli\n-npm install babel-preset-react\n cd examples/basic-jsx-precompile/\n+npm install babel-preset-react\n babel example.js --presets react --out-dir=build</pre>\n     <p>\n       Learn more about React at"
    },
    {
      "message": "remove dom functions from top-level isomorphic api",
      "diff": "diff --git a/src/React.js b/src/React.js\nindex c354fbdf8c8f..5aa15e8c8bc4 100644\n--- a/src/React.js\n+++ b/src/React.js\n@@ -16,54 +16,12 @@ var ReactDOMServer = require('ReactDOMServer');\n var ReactIsomorphic = require('ReactIsomorphic');\n \n var assign = require('Object.assign');\n-var deprecated = require('deprecated');\n \n // `version` will be added here by ReactIsomorphic.\n var React = {};\n \n assign(React, ReactIsomorphic);\n \n-assign(React, {\n-  // ReactDOM\n-  findDOMNode: deprecated(\n-    'findDOMNode',\n-    'ReactDOM',\n-    'react-dom',\n-    ReactDOM,\n-    ReactDOM.findDOMNode\n-  ),\n-  render: deprecated(\n-    'render',\n-    'ReactDOM',\n-    'react-dom',\n-    ReactDOM,\n-    ReactDOM.render\n-  ),\n-  unmountComponentAtNode: deprecated(\n-    'unmountComponentAtNode',\n-    'ReactDOM',\n-    'react-dom',\n-    ReactDOM,\n-    ReactDOM.unmountComponentAtNode\n-  ),\n-\n-  // ReactDOMServer\n-  renderToString: deprecated(\n-    'renderToString',\n-    'ReactDOMServer',\n-    'react-dom/server',\n-    ReactDOMServer,\n-    ReactDOMServer.renderToString\n-  ),\n-  renderToStaticMarkup: deprecated(\n-    'renderToStaticMarkup',\n-    'ReactDOMServer',\n-    'react-dom/server',\n-    ReactDOMServer,\n-    ReactDOMServer.renderToStaticMarkup\n-  ),\n-});\n-\n React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\n React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;"
    },
    {
      "message": "support onload synthetic event attribute on 'object' tags - useful for telling when svgs embedded as objects have loaded",
      "diff": "diff --git a/src/renderers/dom/shared/ReactDOMComponent.js b/src/renderers/dom/shared/ReactDOMComponent.js\nindex e5098b83f379..3da2c9336340 100644\n--- a/src/renderers/dom/shared/ReactDOMComponent.js\n+++ b/src/renderers/dom/shared/ReactDOMComponent.js\n@@ -265,6 +265,7 @@ function trapBubbledEventsLocal() {\n \n   switch (inst._tag) {\n     case 'iframe':\n+    case 'object':\n       inst._wrapperState.listeners = [\n         ReactBrowserEventEmitter.trapBubbledEvent(\n           EventConstants.topLevelTypes.topLoad,\n@@ -465,6 +466,7 @@ ReactDOMComponent.Mixin = {\n \n     switch (this._tag) {\n       case 'iframe':\n+      case 'object':\n       case 'img':\n       case 'form':\n       case 'video':\n@@ -1022,6 +1024,7 @@ ReactDOMComponent.Mixin = {\n   unmountComponent: function() {\n     switch (this._tag) {\n       case 'iframe':\n+      case 'object':\n       case 'img':\n       case 'form':\n       case 'video':"
    },
    {
      "message": "fix wording to make it more clear that checkbox  supports defaultchecked",
      "diff": "diff --git a/docs/docs/07-forms.md b/docs/docs/07-forms.md\nindex af75d4b23d91..c452940d6a0b 100644\n--- a/docs/docs/07-forms.md\n+++ b/docs/docs/07-forms.md\n@@ -95,7 +95,7 @@ If you want to initialize the component with a non-empty value, you can supply a\n \n This example will function much like the **Uncontrolled Components** example above.\n \n-Likewise, `<input>` supports `defaultChecked` and `<select>` supports `defaultValue`.\n+Likewise, `<input type=\"checkbox\">` and `<input type=\"radio\">` support `defaultChecked`, and `<select>` supports `defaultValue`.\n \n > Note:\n >"
    },
    {
      "message": "update a few changelog things forgotten in 3f355d99",
      "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex e005f5a809a0..4ccf90d97fc1 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -3,6 +3,13 @@\n ### React\n - Minor internal changes for better compatibility with React Native\n \n+### React DOM\n+- The `autoCapitalize` and `autoCorrect` props are now set as attributes in the DOM instead of properties to improve cross-browser compatibility\n+- Fixed bug with controlled `<select>` elements not handling updates properly\n+\n+### React Perf Add-on\n+- Some DOM operation names have been updated for clarity in the output of `.printDOM()`\n+\n \n ## 0.14.3 (November 18, 2015)"
    },
    {
      "message": "fix the incorrect jest watch command in contributing",
      "diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md\nindex f1002fb1847b..d1de57cb57c2 100644\n--- a/CONTRIBUTING.md\n+++ b/CONTRIBUTING.md\n@@ -22,9 +22,9 @@ This command is just a facade to [Jest](https://facebook.github.io/jest/). You m\n \n For example, `jest --watch` lets you automatically run the test suite on every file change.\n \n-You can also run a subset of tests by passing a prefix to `jest`. For example, `jest ReactDOMSVG` will only run tests in the files that start with `ReactDOMSVG`, such as `ReactDOMSVG-test.js`.\n+You can also run a subset of tests by passing a prefix to `jest`. For instance, `jest ReactDOMSVG` will only run tests in the files that start with `ReactDOMSVG`, such as `ReactDOMSVG-test.js`.\n \n-When you know which tests you want to run, you can achieve a fast feedback loop by using these two features together. For example, `jest --watch ReactDOMSVG` will re-run only the matching tests on every change.\n+When you know which tests you want to run, you can achieve a fast feedback loop by using these two features together. For example, `jest ReactDOMSVG --watch` will re-run only the matching tests on every change.\n \n Just make sure to run the whole test suite before submitting a pull request!"
    },
    {
      "message": "mention that jest can be used directly in contributing",
      "diff": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md\nindex 5ced38bb0abe..5bc39592ae7f 100644\n--- a/CONTRIBUTING.md\n+++ b/CONTRIBUTING.md\n@@ -14,6 +14,14 @@ Some of the core team will be working directly on GitHub. These changes will be\n \n We will do our best to keep `master` in good shape, with tests passing at all times. But in order to move fast, we will make API changes that your application might not be compatible with. We will do our best to communicate these changes and always version appropriately so you can lock into a specific version if need be.\n \n+### Test Suite\n+\n+Use `grunt test` to run the full test suite with PhantomJS.\n+\n+This command is just a facade to [Jest](https://facebook.github.io/jest/). You may optionally `npm install -g jest-cli` run and use Jest commands directly to have more control over how tests are executed.\n+\n+For example, `jest --watch` lets you automatically run the test suite on every file change.\n+\n ### Pull Requests\n \n The core team will be monitoring for pull requests. When we get one, we'll run some Facebook-specific integration tests on it first. From here, we'll need to get another person to sign off on the changes and then merge the pull request. For API changes we may need to fix internal uses, which could cause some delay. We'll do our best to provide updates and feedback throughout the process."
    },
    {
      "message": "fix children to be a prop in the blog post example",
      "diff": "diff --git a/docs/_posts/2015-12-18-react-components-elements-and-instances.md b/docs/_posts/2015-12-18-react-components-elements-and-instances.md\nindex a69abdaae4d1..29ce23addc32 100644\n--- a/docs/_posts/2015-12-18-react-components-elements-and-instances.md\n+++ b/docs/_posts/2015-12-18-react-components-elements-and-instances.md\n@@ -70,7 +70,9 @@ When an element\u2019s `type` is a string, it represents a DOM node with that tag n\n     className: 'button button-blue',\n     children: {\n       type: 'b',\n-      children: 'OK!'\n+      props: {\n+        children: 'OK!'\n+      }\n     }\n   }\n }\n@@ -191,7 +193,9 @@ React will ask `Button` what it renders to. The `Button` will return this elemen\n     className: 'button button-blue',\n     children: {\n       type: 'b',\n-      children: 'OK!'\n+      props: {\n+        children: 'OK!'\n+      }\n     }\n   }\n }"
    },
    {
      "message": "make sure div > html nesting is considered invalid",
      "diff": "diff --git a/src/renderers/dom/client/__tests__/validateDOMNesting-test.js b/src/renderers/dom/client/__tests__/validateDOMNesting-test.js\nindex 7f671c61f847..2c18a89d6181 100644\n--- a/src/renderers/dom/client/__tests__/validateDOMNesting-test.js\n+++ b/src/renderers/dom/client/__tests__/validateDOMNesting-test.js\n@@ -67,6 +67,7 @@ describe('ReactContextValidator', function() {\n     expect(isTagStackValid(['div', 'a', 'object', 'a'])).toBe(true);\n     expect(isTagStackValid(['div', 'p', 'button', 'p'])).toBe(true);\n     expect(isTagStackValid(['p', 'svg', 'foreignObject', 'p'])).toBe(true);\n+    expect(isTagStackValid(['html', 'body', 'div'])).toBe(true);\n \n     // Invalid, but not changed by browser parsing so we allow them\n     expect(isTagStackValid(['div', 'ul', 'ul', 'li'])).toBe(true);\n@@ -81,5 +82,6 @@ describe('ReactContextValidator', function() {\n     expect(isTagStackValid(['p', 'p'])).toBe(false);\n     expect(isTagStackValid(['table', 'tr'])).toBe(false);\n     expect(isTagStackValid(['div', 'ul', 'li', 'div', 'li'])).toBe(false);\n+    expect(isTagStackValid(['div', 'html'])).toBe(false);\n   });\n });\ndiff --git a/src/renderers/dom/client/validateDOMNesting.js b/src/renderers/dom/client/validateDOMNesting.js\nindex d853990b01ae..69e69845a1aa 100644\n--- a/src/renderers/dom/client/validateDOMNesting.js\n+++ b/src/renderers/dom/client/validateDOMNesting.js\n@@ -186,6 +186,8 @@ if (__DEV__) {\n       // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n       case 'html':\n         return tag === 'head' || tag === 'body';\n+      case '#document':\n+        return tag === 'html';\n     }\n \n     // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n@@ -212,6 +214,7 @@ if (__DEV__) {\n       case 'colgroup':\n       case 'frame':\n       case 'head':\n+      case 'html':\n       case 'tbody':\n       case 'td':\n       case 'tfoot':"
    },
    {
      "message": "improve documentation for using react with webpack",
      "diff": "diff --git a/docs/docs/getting-started.md b/docs/docs/getting-started.md\nindex 5a388495e341..d9e4431895b7 100644\n--- a/docs/docs/getting-started.md\n+++ b/docs/docs/getting-started.md\n@@ -34,7 +34,7 @@ $ npm install --save react react-dom babelify babel-preset-react\n $ browserify -t [ babelify --presets [ react ] ] main.js -o bundle.js\n ```\n \n-To install React DOM and build your bundle with webpack:  \n+To install React DOM and build your bundle with webpack:\n \n ```sh\n $ npm install --save react react-dom babel-preset-react\n@@ -45,6 +45,15 @@ $ webpack\n >\n > If you are using ES2015, you will want to also use the `babel-preset-es2015` package.\n \n+**Note:** by default, React will be in development mode, which is slower, and not advised for production. To use React in production mode, set the environment variable `NODE_ENV` to `production` (using envify or webpack's DefinePlugin). For example:\n+\n+```js\n+new webpack.DefinePlugin({\n+  \"process.env\": {\n+    NODE_ENV: JSON.stringify(\"production\")\n+  }\n+});\n+```\n \n ## Quick Start Without npm"
    },
    {
      "message": "rephrase comment to better describe use of `warning`",
      "diff": "diff --git a/src/isomorphic/classic/class/ReactClass.js b/src/isomorphic/classic/class/ReactClass.js\nindex f3f545c0aeca..632a30130739 100644\n--- a/src/isomorphic/classic/class/ReactClass.js\n+++ b/src/isomorphic/classic/class/ReactClass.js\n@@ -389,7 +389,7 @@ function validateTypeDef(Constructor, typeDef, location) {\n   for (var propName in typeDef) {\n     if (typeDef.hasOwnProperty(propName)) {\n       // use a warning instead of an invariant so components\n-      // don't show up in prod but not in __DEV__\n+      // don't show up in prod but only in __DEV__\n       warning(\n         typeof typeDef[propName] === 'function',\n         '%s: %s type `%s` is invalid; it must be a function, usually from ' +"
    },
    {
      "message": "clarify usage of `.proptypes` and `.defaultprops` when using stateless functional components",
      "diff": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex 337796b0c39f..62b6295bfb73 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -249,6 +249,7 @@ ReactDOM.render(<HelloMessage name=\"Sebastian\" />, mountNode);\n ```\n \n This simplified component API is intended for components that are pure functions of their props. These components must not retain internal state, do not have backing instances, and do not have the component lifecycle methods. They are pure functional transforms of their input, with zero boilerplate.\n+However, you may still specify `.propTypes` and `.defaultProps` by setting them as properties on the function, just as you would set them on an ES6 class.\n \n > NOTE:\n >"
    },
    {
      "message": "transform rest and spread properties using babel 6",
      "diff": "diff --git a/docs/docs/06-transferring-props.md b/docs/docs/06-transferring-props.md\nindex 972b567cd418..955bf98340e6 100644\n--- a/docs/docs/06-transferring-props.md\n+++ b/docs/docs/06-transferring-props.md\n@@ -143,7 +143,7 @@ z; // { a: 3, b: 4 }\n \n > Note:\n >\n-> This proposal has reached stage 2 and is now enabled by default in Babel. Older versions of Babel may need to explicitly enable this transform with `babel --optional es7.objectRestSpread`\n+> To transform rest and spread properties using Babel 6, you need to install the [`es2015`](https://babeljs.io/docs/plugins/preset-es2015/) preset, the [`transform-object-rest-spread`](https://babeljs.io/docs/plugins/transform-object-rest-spread/) plugin and configure them in the `.babelrc` file.\n \n ## Transferring with Underscore"
    },
    {
      "message": "add missing sections to events reference page in it and cn",
      "diff": "diff --git a/docs/docs/ref-05-events.it-IT.md b/docs/docs/ref-05-events.it-IT.md\nindex bbf88f45002f..563714733d32 100644\n--- a/docs/docs/ref-05-events.it-IT.md\n+++ b/docs/docs/ref-05-events.it-IT.md\n@@ -81,6 +81,22 @@ DOMDataTransfer clipboardData\n ```\n \n \n+### Eventi di Composizione\n+\n+Nomi degli eventi:\n+\n+```\n+onCompositionEnd onCompositionStart onCompositionUpdate\n+```\n+\n+Propriet\u00e0:\n+\n+```javascript\n+string data\n+\n+```\n+\n+\n ### Eventi di Tastiera\n \n Nomi degli eventi:\n@@ -165,6 +181,15 @@ boolean shiftKey\n ```\n \n \n+### Eventi di Selezione\n+\n+Nomi degli eventi:\n+\n+```\n+onSelect\n+```\n+\n+\n ### Eventi del Tocco\n \n Nomi degli eventi:\ndiff --git a/docs/docs/ref-05-events.md b/docs/docs/ref-05-events.md\nindex edb425690339..50c8641658c3 100644\n--- a/docs/docs/ref-05-events.md\n+++ b/docs/docs/ref-05-events.md\n@@ -183,7 +183,7 @@ boolean shiftKey\n ```\n \n \n-### Selection events\n+### Selection Events\n \n Event names:\n \n@@ -192,7 +192,7 @@ onSelect\n ```\n \n \n-### Touch events\n+### Touch Events\n \n Event names:\n \ndiff --git a/docs/docs/ref-05-events.zh-CN.md b/docs/docs/ref-05-events.zh-CN.md\nindex 6e16a53601b9..5c747ca3b586 100644\n--- a/docs/docs/ref-05-events.zh-CN.md\n+++ b/docs/docs/ref-05-events.zh-CN.md\n@@ -138,6 +138,15 @@ boolean shiftKey\n ```\n \n \n+### Selection Events\n+\n+\u4e8b\u4ef6\u540d\u79f0:\n+\n+```\n+onSelect\n+```\n+\n+\n ### \u89e6\u63a7\u4e8b\u4ef6\n \n \u4e8b\u4ef6\u540d\u79f0\uff1a\n@@ -192,3 +201,19 @@ number deltaX\n number deltaY\n number deltaZ\n ```\n+\n+### Media Events\n+\n+\u4e8b\u4ef6\u540d\u79f0:\n+\n+```\n+onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting\n+```\n+\n+### Image Events\n+\n+\u4e8b\u4ef6\u540d\u79f0:\n+\n+```\n+onLoad onError\n+```"
    },
    {
      "message": "remove unreachable return from shouldupdatereactcomponent",
      "diff": "diff --git a/src/renderers/shared/reconciler/shouldUpdateReactComponent.js b/src/renderers/shared/reconciler/shouldUpdateReactComponent.js\nindex 3ffb75625edb..a5d37f79f22c 100644\n--- a/src/renderers/shared/reconciler/shouldUpdateReactComponent.js\n+++ b/src/renderers/shared/reconciler/shouldUpdateReactComponent.js\n@@ -41,7 +41,6 @@ function shouldUpdateReactComponent(prevElement, nextElement) {\n       prevElement.key === nextElement.key\n     );\n   }\n-  return false;\n }\n \n module.exports = shouldUpdateReactComponent;"
    },
    {
      "message": "update dom_operation_types mappings for reactdefaultperfanalysis",
      "diff": "diff --git a/src/test/ReactDefaultPerfAnalysis.js b/src/test/ReactDefaultPerfAnalysis.js\nindex 0134a839ae29..5fcfbc0b4351 100644\n--- a/src/test/ReactDefaultPerfAnalysis.js\n+++ b/src/test/ReactDefaultPerfAnalysis.js\n@@ -25,7 +25,9 @@ var DOM_OPERATION_TYPES = {\n   'setValueForProperty': 'update attribute',\n   'setValueForAttribute': 'update attribute',\n   'deleteValueForProperty': 'remove attribute',\n-  'dangerouslyReplaceNodeWithMarkupByID': 'replace',\n+  'setValueForStyles': 'update styles',\n+  'replaceNodeWithMarkup': 'replace',\n+  'updateTextContent': 'set textContent',\n };\n \n function getTotalTime(measurements) {"
    },
    {
      "message": "state that math.random is not a good way to generate keys",
      "diff": "diff --git a/docs/docs/ref-08-reconciliation.md b/docs/docs/ref-08-reconciliation.md\nindex 25d20b283257..54e40d37006b 100644\n--- a/docs/docs/ref-08-reconciliation.md\n+++ b/docs/docs/ref-08-reconciliation.md\n@@ -129,5 +129,5 @@ Because we rely on two heuristics, if the assumptions behind them are not met, p\n \n 1. The algorithm will not try to match sub-trees of different components classes. If you see yourself alternating between two components classes with very similar output, you may want to make it the same class. In practice, we haven't found this to be an issue.\n \n-2. If you don't provide stable keys (by using Math.random() for example), all the sub-trees are going to be re-rendered every single time. By giving the users the choice to choose the key, they have the ability to shoot themselves in the foot.\n+2. Keys should be stable, predictable, and unique. Unstable keys (like those produced by Math.random()) will cause many nodes to be unnecessarily re-created, which can cause performance degradation and lost state in child components."
    },
    {
      "message": "fix shallowrenderer.getrenderoutput return type in docs",
      "diff": "diff --git a/docs/docs/10.4-test-utils.md b/docs/docs/10.4-test-utils.md\nindex f7205b7e1f65..cbbaa9d933f6 100644\n--- a/docs/docs/10.4-test-utils.md\n+++ b/docs/docs/10.4-test-utils.md\n@@ -217,7 +217,7 @@ shallowRenderer.render(\n Similar to `ReactDOM.render`.\n \n ```javascript\n-ReactComponent shallowRenderer.getRenderOutput()\n+ReactElement shallowRenderer.getRenderOutput()\n ```\n \n After `render` has been called, returns shallowly rendered output. You can then begin to assert facts about the output. For example, if your component's render method returns:"
    },
    {
      "message": "use a custom event type for our event dispatching in reacterrorutils",
      "diff": "diff --git a/src/shared/utils/ReactErrorUtils.js b/src/shared/utils/ReactErrorUtils.js\nindex d55f82784099..4d1ee4ad7a42 100644\n--- a/src/shared/utils/ReactErrorUtils.js\n+++ b/src/shared/utils/ReactErrorUtils.js\n@@ -67,11 +67,12 @@ if (__DEV__) {\n     var fakeNode = document.createElement('react');\n     ReactErrorUtils.invokeGuardedCallback = function(name, func, a, b) {\n       var boundFunc = func.bind(null, a, b);\n-      fakeNode.addEventListener(name, boundFunc, false);\n+      var evtType = `react-${name}`;\n+      fakeNode.addEventListener(evtType, boundFunc, false);\n       var evt = document.createEvent('Event');\n-      evt.initEvent(name, false, false);\n+      evt.initEvent(evtType, false, false);\n       fakeNode.dispatchEvent(evt);\n-      fakeNode.removeEventListener(name, boundFunc, false);\n+      fakeNode.removeEventListener(evtType, boundFunc, false);\n     };\n   }\n }"
    },
    {
      "message": "add non-standard property for supporting safari mask-icon.",
      "diff": "diff --git a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\nindex e486b85146f5..5f0a88a64a29 100644\n--- a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n+++ b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n@@ -193,6 +193,8 @@ var HTMLDOMPropertyConfig = {\n     autoCorrect: null,\n     // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n     autoSave: null,\n+    // color is for Safari mask-icon link\n+    color: null,\n     // itemProp, itemScope, itemType are for\n     // Microdata support. See http://schema.org/docs/gs.html\n     itemProp: MUST_USE_ATTRIBUTE,"
    },
    {
      "message": "specify focus events work on all elements in the react dom",
      "diff": "diff --git a/docs/docs/ref-05-events.md b/docs/docs/ref-05-events.md\nindex 8d6fb5fce710..edb425690339 100644\n--- a/docs/docs/ref-05-events.md\n+++ b/docs/docs/ref-05-events.md\n@@ -138,6 +138,7 @@ Properties:\n DOMEventTarget relatedTarget\n ```\n \n+These focus events work on all elements in the React DOM, not just form elements.\n \n ### Form Events"
    },
    {
      "message": "update enqueuecallback invariant to more specifically explain what caused error",
      "diff": "diff --git a/src/renderers/shared/reconciler/ReactUpdateQueue.js b/src/renderers/shared/reconciler/ReactUpdateQueue.js\nindex 0c5e325a8d35..52bbd6a1198a 100644\n--- a/src/renderers/shared/reconciler/ReactUpdateQueue.js\n+++ b/src/renderers/shared/reconciler/ReactUpdateQueue.js\n@@ -109,8 +109,10 @@ var ReactUpdateQueue = {\n     invariant(\n       typeof callback === 'function',\n       'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n-      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n-      'isn\\'t callable.'\n+      '`setState`, `replaceState`, or `forceUpdate` with a callback of type ' +\n+      '%s. A function is expected',\n+      typeof callback === 'object' && Object.keys(callback).length && Object.keys(callback).length < 20 ?\n+        typeof callback + ' (keys: ' + Object.keys(callback) + ')' : typeof callback\n     );\n     var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n \n@@ -139,8 +141,10 @@ var ReactUpdateQueue = {\n     invariant(\n       typeof callback === 'function',\n       'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +\n-      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +\n-      'isn\\'t callable.'\n+      '`setState`, `replaceState`, or `forceUpdate` with a callback of type ' +\n+      '%s. A function is expected',\n+      typeof callback === 'object' && Object.keys(callback).length && Object.keys(callback).length < 20 ?\n+        typeof callback + ' (keys: ' + Object.keys(callback) + ')' : typeof callback\n     );\n     if (internalInstance._pendingCallbacks) {\n       internalInstance._pendingCallbacks.push(callback);"
    },
    {
      "message": "add srclang and kind to better support track elements",
      "diff": "diff --git a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\nindex 009ca37a6157..b36b2c5126a2 100644\n--- a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n+++ b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n@@ -107,6 +107,7 @@ var HTMLDOMPropertyConfig = {\n     is: MUST_USE_ATTRIBUTE,\n     keyParams: MUST_USE_ATTRIBUTE,\n     keyType: MUST_USE_ATTRIBUTE,\n+    kind: null,\n     label: null,\n     lang: null,\n     list: MUST_USE_ATTRIBUTE,\n@@ -152,6 +153,7 @@ var HTMLDOMPropertyConfig = {\n     spellCheck: null,\n     src: null,\n     srcDoc: MUST_USE_PROPERTY,\n+    srcLang: null,\n     srcSet: MUST_USE_ATTRIBUTE,\n     start: HAS_NUMERIC_VALUE,\n     step: null,"
    },
    {
      "message": "add test to show `this` is indeed undefined - closes #3613",
      "diff": "diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js\nindex e13691969c13..affc51a259be 100644\n--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js\n+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js\n@@ -279,6 +279,17 @@ describe('ReactDOMInput', function() {\n     expect(console.error.argsForCall.length).toBe(1);\n   });\n \n+  it('should have a this value of undefined if bind is not used', function() {\n+    var unboundInputOnChange = function() {\n+      expect(this).toBe(undefined);\n+    };\n+\n+    var instance = <input type=\"text\" onChange={unboundInputOnChange} />;\n+    instance = ReactTestUtils.renderIntoDocument(instance);\n+\n+    ReactTestUtils.Simulate.change(instance);\n+  });\n+\n   it('should throw if both value and valueLink are provided', function() {\n     var node = document.createElement('div');\n     var link = new ReactLink('yolo', mocks.getMockFunction());"
    },
    {
      "message": "move escapetextcontentforbrowser and quoteattributevalueforbrowser to dom directory",
      "diff": "diff --git a/src/shared/utils/__tests__/escapeTextContentForBrowser-test.js b/src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js\nsimilarity index 100%\nrename from src/shared/utils/__tests__/escapeTextContentForBrowser-test.js\nrename to src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js\ndiff --git a/src/shared/utils/__tests__/quoteAttributeValueForBrowser-test.js b/src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js\nsimilarity index 100%\nrename from src/shared/utils/__tests__/quoteAttributeValueForBrowser-test.js\nrename to src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js\ndiff --git a/src/shared/utils/escapeTextContentForBrowser.js b/src/renderers/dom/shared/escapeTextContentForBrowser.js\nsimilarity index 100%\nrename from src/shared/utils/escapeTextContentForBrowser.js\nrename to src/renderers/dom/shared/escapeTextContentForBrowser.js\ndiff --git a/src/shared/utils/quoteAttributeValueForBrowser.js b/src/renderers/dom/shared/quoteAttributeValueForBrowser.js\nsimilarity index 100%\nrename from src/shared/utils/quoteAttributeValueForBrowser.js\nrename to src/renderers/dom/shared/quoteAttributeValueForBrowser.js"
    },
    {
      "message": "update pure render mixin docs to point to new npm package",
      "diff": "diff --git a/docs/docs/10.8-pure-render-mixin.md b/docs/docs/10.8-pure-render-mixin.md\nindex fc01ab17d366..bd5143c7e382 100644\n--- a/docs/docs/10.8-pure-render-mixin.md\n+++ b/docs/docs/10.8-pure-render-mixin.md\n@@ -11,7 +11,7 @@ If your React component's render function is \"pure\" (in other words, it renders\n Example:\n \n ```js\n-var PureRenderMixin = require('react/addons').addons.PureRenderMixin;\n+var PureRenderMixin = require('react-addons-pure-render-mixin');\n React.createClass({\n   mixins: [PureRenderMixin],"
    },
    {
      "message": "rename rendersubtreeintocontainer.js to rendersubtreeintocontainer-test.js",
      "diff": "diff --git a/src/addons/__tests__/renderSubtreeIntoContainer.js b/src/addons/__tests__/renderSubtreeIntoContainer-test.js\nsimilarity index 100%\nrename from src/addons/__tests__/renderSubtreeIntoContainer.js\nrename to src/addons/__tests__/renderSubtreeIntoContainer-test.js"
    },
    {
      "message": "fix isdefaultprevented and ispropagationstopped methods of syntheticevent notation",
      "diff": "diff --git a/docs/docs/ref-05-events.ko-KR.md b/docs/docs/ref-05-events.ko-KR.md\nindex 985d80d53e4c..00435470390d 100644\n--- a/docs/docs/ref-05-events.ko-KR.md\n+++ b/docs/docs/ref-05-events.ko-KR.md\n@@ -21,9 +21,9 @@ number eventPhase\n boolean isTrusted\n DOMEvent nativeEvent\n void preventDefault()\n-void isDefaultPrevented()\n+boolean isDefaultPrevented()\n void stopPropagation()\n-void isPropagationStopped()\n+boolean isPropagationStopped()\n DOMEventTarget target\n number timeStamp\n string type\ndiff --git a/docs/docs/ref-05-events.md b/docs/docs/ref-05-events.md\nindex 313d2bfd62e9..d1a804d8917c 100644\n--- a/docs/docs/ref-05-events.md\n+++ b/docs/docs/ref-05-events.md\n@@ -21,9 +21,9 @@ number eventPhase\n boolean isTrusted\n DOMEvent nativeEvent\n void preventDefault()\n-void isDefaultPrevented()\n+boolean isDefaultPrevented()\n void stopPropagation()\n-void isPropagationStopped()\n+boolean isPropagationStopped()\n DOMEventTarget target\n number timeStamp\n string type\ndiff --git a/docs/docs/ref-05-events.zh-CN.md b/docs/docs/ref-05-events.zh-CN.md\nindex 095749dc27c3..6708cbe5ddec 100644\n--- a/docs/docs/ref-05-events.zh-CN.md\n+++ b/docs/docs/ref-05-events.zh-CN.md\n@@ -21,7 +21,9 @@ Number eventPhase\n boolean isTrusted\n DOMEvent nativeEvent\n void preventDefault()\n+boolean isDefaultPrevented()\n void stopPropagation()\n+boolean isPropagationStopped()\n DOMEventTarget target\n Date timeStamp\n String type"
    },
    {
      "message": "clarify that events work for elements not for components",
      "diff": "diff --git a/docs/docs/ref-05-events.md b/docs/docs/ref-05-events.md\nindex 313d2bfd62e9..779ab75a63f7 100644\n--- a/docs/docs/ref-05-events.md\n+++ b/docs/docs/ref-05-events.md\n@@ -144,7 +144,7 @@ onDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave\n onMouseMove onMouseOut onMouseOver onMouseUp\n ```\n \n-The `onMouseEnter` and `onMouseLeave` events propagate from the component being left to the one being entered instead of ordinary bubbling and do not have a capture phase.\n+The `onMouseEnter` and `onMouseLeave` events propagate from the element being left to the one being entered instead of ordinary bubbling and do not have a capture phase.\n \n Properties:"
    },
    {
      "message": "remove jsxtransformer, react-tools from downloads page",
      "diff": "diff --git a/docs/downloads.md b/docs/downloads.md\nindex 6b8f61bf1661..eb5da226e87f 100644\n--- a/docs/downloads.md\n+++ b/docs/downloads.md\n@@ -48,25 +48,10 @@ The compressed, production version of React with [add-ons](/react/docs/addons.ht\n <script src=\"https://fb.me/react-with-addons-{{site.react_version}}.min.js\"></script>\n ```\n \n-#### <a href=\"https://fb.me/JSXTransformer-{{site.react_version}}.js\">JSX Transformer</a>\n-The JSX transformer used to support [XML syntax](/react/docs/jsx-in-depth.html) in JavaScript.\n-\n-```html\n-<script src=\"https://fb.me/JSXTransformer-{{site.react_version}}.js\"></script>\n-```\n-\n All scripts are also available via [CDNJS](https://cdnjs.com/libraries/react/).\n \n ## npm\n \n-To install the JSX transformer on your computer, run:\n-\n-```sh\n-$ npm install -g react-tools\n-```\n-\n-For more info about the `jsx` binary, see the [Getting Started](/react/docs/getting-started.html#offline-transform) guide.\n-\n If you're using an npm-compatible packaging system like browserify or webpack, you can use the `react` package. After installing it using `npm install react` or adding `react` to `package.json`, you can use React:\n \n ```js"
    },
    {
      "message": "fix reactdomselection to avoid erroring on firefox's anonymous divs",
      "diff": "diff --git a/src/renderers/dom/client/ReactDOMSelection.js b/src/renderers/dom/client/ReactDOMSelection.js\nindex 31912ae2ff4d..b483c2aea71c 100644\n--- a/src/renderers/dom/client/ReactDOMSelection.js\n+++ b/src/renderers/dom/client/ReactDOMSelection.js\n@@ -76,6 +76,22 @@ function getModernOffsets(node) {\n \n   var currentRange = selection.getRangeAt(0);\n \n+  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n+  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n+  // divs do not seem to expose properties, triggering a \"Permission denied\n+  // error\" if any of its properties are accessed. The only seemingly possible\n+  // way to avoid erroring is to access a property that typically works for\n+  // non-anonymous divs and catch any error that may otherwise arise. See\n+  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n+  try {\n+    /* eslint-disable no-unused-expressions */\n+    currentRange.startContainer.nodeType;\n+    currentRange.endContainer.nodeType;\n+    /* eslint-enable no-unused-expressions */\n+  } catch (e) {\n+    return null;\n+  }\n+\n   // If the node and offset values are the same, the selection is collapsed.\n   // `Selection.isCollapsed` is available natively, but IE sometimes gets\n   // this value wrong."
    },
    {
      "message": "use same type of markdown as everywhere else for glossary",
      "diff": "diff --git a/docs/docs/ref-09-glossary.md b/docs/docs/ref-09-glossary.md\nindex 3179cc1f7dc4..5c0e460d1fb5 100644\n--- a/docs/docs/ref-09-glossary.md\n+++ b/docs/docs/ref-09-glossary.md\n@@ -44,7 +44,7 @@ var root = <ul className=\"my-list\">\n React.render(root, document.getElementById('example'));\n ```\n \n-__Factories__\n+### Factories\n \n A `ReactElement`-factory is simply a function that generates a `ReactElement` with a particular `type` property. React has a built-in helper for you to create factories. It's effectively just:\n \n@@ -105,7 +105,7 @@ When this constructor is invoked it is expected to return an object with at leas\n var component = new MyComponent(props); // never do this\n ```\n \n-Other than for testing, you would normally __never__ call this constructor yourself. React calls it for you.\n+Other than for testing, you would normally *never* call this constructor yourself. React calls it for you.\n \n Instead, you pass the `ReactComponent` Class to `createElement` you get a `ReactElement`.\n \n@@ -140,13 +140,13 @@ The `render` method of a `ReactComponent` is expected to return another `ReactEl\n \n ## Formal Type Definitions\n \n-__Entry Point__\n+### Entry Point\n \n ```\n React.render = (ReactElement, HTMLElement | SVGElement) => ReactComponent;\n ```\n \n-__Nodes and Elements__\n+### Nodes and Elements\n \n ```\n type ReactNode = ReactElement | ReactFragment | ReactText;\n@@ -180,7 +180,7 @@ type ReactText = string | number;\n type ReactEmpty = null | undefined | boolean;\n ```\n \n-__Classes and Components__\n+### Classes and Components\n \n ```\n type ReactClass<TProps> = (TProps) => ReactComponent<TProps>;"
    },
    {
      "message": "maintain why-react-zh-cn sync to the current why-react",
      "diff": "diff --git a/docs/docs/01-why-react.zh-CN.md b/docs/docs/01-why-react.zh-CN.md\nindex 029923a7f7a1..9954f48997fd 100644\n--- a/docs/docs/01-why-react.zh-CN.md\n+++ b/docs/docs/01-why-react.zh-CN.md\n@@ -7,7 +7,7 @@ next: displaying-data-zh-CN.html\n \n React \u662f\u4e00\u4e2a Facebook \u548c Instagram \u7528\u6765\u521b\u5efa\u7528\u6237\u754c\u9762\u7684 JavaScript \u5e93\u3002\u5f88\u4eba\u591a\u8ba4\u4e3a React \u662f **[MVC](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller)** \u4e2d\u7684 **V**\uff08\u89c6\u56fe\uff09\u3002\n \n-\u6211\u4eec\u521b\u9020 React \u662f\u4e3a\u4e86\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\uff1a**\u6784\u5efa\u968f\u7740\u65f6\u95f4\u6570\u636e\u4e0d\u65ad\u53d8\u5316\u7684\u5927\u89c4\u6a21\u5e94\u7528\u7a0b\u5e8f**\u3002\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u6807\uff0cReact \u91c7\u7528\u4e0b\u9762\u4e24\u4e2a\u4e3b\u8981\u7684\u601d\u60f3\u3002\n+\u6211\u4eec\u521b\u9020 React \u662f\u4e3a\u4e86\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\uff1a**\u6784\u5efa\u968f\u7740\u65f6\u95f4\u6570\u636e\u4e0d\u65ad\u53d8\u5316\u7684\u5927\u89c4\u6a21\u5e94\u7528\u7a0b\u5e8f**\u3002\n \n ### \u7b80\u5355"
    },
    {
      "message": "pre-fill tag when asking a stack overflow question",
      "diff": "diff --git a/docs/support.md b/docs/support.md\nindex 0c9e5690d0ed..4915455927da 100644\n--- a/docs/support.md\n+++ b/docs/support.md\n@@ -8,7 +8,7 @@ id: support\n \n ## Stack Overflow\n \n-Many members of the community use Stack Overflow to ask questions. Read through the [existing questions](http://stackoverflow.com/questions/tagged/reactjs) tagged with **reactjs** or [ask your own](http://stackoverflow.com/questions/ask)!\n+Many members of the community use Stack Overflow to ask questions. Read through the [existing questions](http://stackoverflow.com/questions/tagged/reactjs) tagged with **reactjs** or [ask your own](http://stackoverflow.com/questions/ask?tags=reactjs)!\n \n ## Discussion forum"
    },
    {
      "message": "simplify valid attribute regex in dompropertyoperations",
      "diff": "diff --git a/src/renderers/dom/shared/DOMPropertyOperations.js b/src/renderers/dom/shared/DOMPropertyOperations.js\nindex d594bfa4ea96..2e0b00dd6cac 100644\n--- a/src/renderers/dom/shared/DOMPropertyOperations.js\n+++ b/src/renderers/dom/shared/DOMPropertyOperations.js\n@@ -18,7 +18,7 @@ var quoteAttributeValueForBrowser = require('quoteAttributeValueForBrowser');\n var warning = require('warning');\n \n // Simplified subset\n-var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][a-zA-Z_\\.\\-\\d]*$/;\n+var VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\\w\\.\\-]*$/;\n var illegalAttributeNameCache = {};\n var validatedAttributeNameCache = {};"
    },
    {
      "message": "remove leftover env variable logic in pre-commit hook",
      "diff": "diff --git a/scripts/git/pre-commit b/scripts/git/pre-commit\nindex 70118a96a754..3c405899301c 100755\n--- a/scripts/git/pre-commit\n+++ b/scripts/git/pre-commit\n@@ -2,14 +2,6 @@\n #\n # To enable this hook, symlink or copy this file to .git/hooks/pre-commit.\n \n-if git rev-parse --verify HEAD >/dev/null 2>&1\n-then\n-\tagainst=HEAD\n-else\n-\t# Initial commit: diff against an empty tree object\n-\tagainst=4b825dc642cb6eb9a060e54bf8d69288fbee4904\n-fi\n-\n # Redirect output to stderr.\n exec 1>&2"
    },
    {
      "message": "fix diverging behavior of reactfragment in `__dev__`",
      "diff": "diff --git a/src/addons/ReactFragment.js b/src/addons/ReactFragment.js\nindex d5862dd97277..2c19261550f1 100644\n--- a/src/addons/ReactFragment.js\n+++ b/src/addons/ReactFragment.js\n@@ -46,24 +46,23 @@ var ReactFragment = {\n   // Wrap a keyed object in an opaque proxy that warns you if you access any\n   // of its properties.\n   create: function(object) {\n-    if (__DEV__) {\n-      if (typeof object !== 'object' || !object || Array.isArray(object)) {\n-        warning(\n-          false,\n-          'React.addons.createFragment only accepts a single object. Got: %s',\n-          object\n-        );\n-        return object;\n-      }\n-      if (ReactElement.isValidElement(object)) {\n-        warning(\n-          false,\n-          'React.addons.createFragment does not accept a ReactElement ' +\n-          'without a wrapper object.'\n-        );\n-        return object;\n-      }\n+    if (typeof object !== 'object' || !object || Array.isArray(object)) {\n+      warning(\n+        false,\n+        'React.addons.createFragment only accepts a single object. Got: %s',\n+        object\n+      );\n+      return object;\n     }\n+    if (ReactElement.isValidElement(object)) {\n+      warning(\n+        false,\n+        'React.addons.createFragment does not accept a ReactElement ' +\n+        'without a wrapper object.'\n+      );\n+      return object;\n+    }\n+\n     invariant(\n       object.nodeType !== 1,\n       'React.addons.createFragment(...): Encountered an invalid child; DOM ' +"
    },
    {
      "message": "add deprecation notice for react.addons.batchedupdates",
      "diff": "diff --git a/src/addons/ReactWithAddons.js b/src/addons/ReactWithAddons.js\nindex a0f8975762e2..0a5a1b48c4d2 100644\n--- a/src/addons/ReactWithAddons.js\n+++ b/src/addons/ReactWithAddons.js\n@@ -30,6 +30,9 @@ var ReactUpdates = require('ReactUpdates');\n var cloneWithProps = require('cloneWithProps');\n var shallowCompare = require('shallowCompare');\n var update = require('update');\n+var warning = require('warning');\n+\n+var warnedAboutBatchedUpdates = false;\n \n React.addons = {\n   CSSTransitionGroup: ReactCSSTransitionGroup,\n@@ -37,7 +40,17 @@ React.addons = {\n   PureRenderMixin: ReactComponentWithPureRenderMixin,\n   TransitionGroup: ReactTransitionGroup,\n \n-  batchedUpdates: ReactUpdates.batchedUpdates,\n+  batchedUpdates: function() {\n+    if (__DEV__) {\n+      warning(\n+        warnedAboutBatchedUpdates,\n+        'React.addons.batchedUpdates is deprecated. Use ' +\n+        'ReactDOM.unstable_batchedUpdates instead.'\n+      );\n+      warnedAboutBatchedUpdates = true;\n+    }\n+    return ReactUpdates.batchedUpdates.apply(this, arguments);\n+  },\n   cloneWithProps: cloneWithProps,\n   createFragment: ReactFragment.create,\n   shallowCompare: shallowCompare,"
    },
    {
      "message": "update advanced performance code examples so they would output values",
      "diff": "diff --git a/docs/docs/11-advanced-performance.md b/docs/docs/11-advanced-performance.md\nindex 1b6fe29d85ee..e85932213f3c 100644\n--- a/docs/docs/11-advanced-performance.md\n+++ b/docs/docs/11-advanced-performance.md\n@@ -54,7 +54,7 @@ React.createClass({\n   },\n \n   render: function() {\n-    return <div>this.props.value</div>;\n+    return <div>{this.props.value}</div>;\n   }\n });\n ```\n@@ -78,7 +78,7 @@ React.createClass({\n   },\n \n   render: function() {\n-    return <div>this.props.value.foo</div>;\n+    return <div>{this.props.value.foo}</div>;\n   }\n });\n ```"
    },
    {
      "message": "remove footnote reference asterisk, no longer needed",
      "diff": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex eefa55133841..6f7bac5b6358 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -89,7 +89,7 @@ If the optional callback is provided, it will be executed after the component is\n \n > Note:\n >\n-> `React.render()` controls the contents of the container node you pass in*. Any existing DOM elements\n+> `React.render()` controls the contents of the container node you pass in. Any existing DOM elements\n > inside are replaced when first called. Later calls use React\u2019s DOM diffing algorithm for efficient\n > updates.\n >"
    },
    {
      "message": "add tests for react.addons.testutils.simulate.change",
      "diff": "diff --git a/src/test/__tests__/ReactTestUtils-test.js b/src/test/__tests__/ReactTestUtils-test.js\nindex ba5fe25d3980..b2f1929a121d 100644\n--- a/src/test/__tests__/ReactTestUtils-test.js\n+++ b/src/test/__tests__/ReactTestUtils-test.js\n@@ -309,4 +309,39 @@ describe('ReactTestUtils', function() {\n     expect(ReactTestUtils.isDOMComponent(component.refs.head)).toBe(true);\n     expect(ReactTestUtils.isDOMComponent(component.refs.body)).toBe(true);\n   });\n+\n+  it('should change the value of an input field', function() {\n+    var handler = jasmine.createSpy('spy');\n+    var container = document.createElement('div');\n+    var instance = React.render(<input type=\"text\" onChange={handler} />, container);\n+\n+    var node = React.findDOMNode(instance);\n+    node.value = 'giraffe';\n+    ReactTestUtils.Simulate.change(node);\n+\n+    expect(handler).toHaveBeenCalledWith(jasmine.objectContaining({target: node}));\n+  });\n+\n+  it('should change the value of an input field in a component', function() {\n+    var SomeComponent = React.createClass({\n+      render: function() {\n+        return (\n+          <div>\n+            <input type=\"text\" ref=\"input\" onChange={this.props.handleChange} />\n+          </div>\n+        );\n+      },\n+    });\n+\n+    var handler = jasmine.createSpy('spy');\n+    var container = document.createElement('div');\n+    var instance = React.render(<SomeComponent handleChange={handler} />, container);\n+\n+    var node = React.findDOMNode(instance.refs.input);\n+    node.value = 'zebra';\n+    ReactTestUtils.Simulate.change(node);\n+\n+    expect(handler).toHaveBeenCalledWith(jasmine.objectContaining({target: node}));\n+  });\n+\n });"
    },
    {
      "message": "use old event propagation if path is not reasonable .  fixes #4452",
      "diff": "diff --git a/src/renderers/dom/client/ReactEventListener.js b/src/renderers/dom/client/ReactEventListener.js\nindex 1cec1ff95593..d1e867db30b5 100644\n--- a/src/renderers/dom/client/ReactEventListener.js\n+++ b/src/renderers/dom/client/ReactEventListener.js\n@@ -62,7 +62,7 @@ PooledClass.addPoolingTo(\n );\n \n function handleTopLevelImpl(bookKeeping) {\n-  if (bookKeeping.nativeEvent.path) {\n+  if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\n     // New browsers have a path attribute on native events\n     handleTopLevelWithPath(bookKeeping);\n   } else {"
    },
    {
      "message": "upgrade babel, babel-eslint; remove babel-core dep",
      "diff": "diff --git a/package.json b/package.json\nindex 9efdfda878aa..1332d833b1fb 100644\n--- a/package.json\n+++ b/package.json\n@@ -3,8 +3,8 @@\n   \"description\": \"A set of complementary tools to React, including the JSX transformer.\",\n   \"version\": \"0.14.0-beta1\",\n   \"keywords\": [\n-    \"react\",\n     \"jsx\",\n+    \"react\",\n     \"transformer\",\n     \"view\"\n   ],\n@@ -12,8 +12,8 @@\n   \"bugs\": \"https://github.com/facebook/react/issues\",\n   \"license\": \"BSD-3-Clause\",\n   \"files\": [\n-    \"main.js\",\n     \"bin/jsx\",\n+    \"main.js\",\n     \"src/\"\n   ],\n   \"main\": \"main.js\",\n@@ -29,9 +29,8 @@\n     \"jstransform\": \"^11.0.0\"\n   },\n   \"devDependencies\": {\n-    \"babel\": \"~5.6.23\",\n-    \"babel-core\": \"~5.6.20\",\n-    \"babel-eslint\": \"^3.1.14\",\n+    \"babel\": \"^5.8.3\",\n+    \"babel-eslint\": \"^3.1.25\",\n     \"benchmark\": \"^1.0.0\",\n     \"browserify\": \"^9.0.3\",\n     \"bundle-collapser\": \"^1.1.1\",\n@@ -66,30 +65,30 @@\n     \"version\": 7\n   },\n   \"scripts\": {\n-    \"test\": \"jest\",\n+    \"build\": \"grunt build\",\n     \"jest\": \"jest\",\n-    \"lint\": \"grunt lint\",\n     \"linc\": \"git diff --name-only --diff-filter=ACMRTUB `git merge-base HEAD master` | grep '\\\\.js$' | xargs eslint --\",\n-    \"build\": \"grunt build\"\n+    \"lint\": \"grunt lint\",\n+    \"test\": \"jest\"\n   },\n   \"jest\": {\n+    \"modulePathIgnorePatterns\": [\n+      \"/.module-cache/\",\n+      \"/node_modules/\",\n+      \"/react/build/\"\n+    ],\n+    \"persistModuleRegistryBetweenSpecs\": true,\n     \"rootDir\": \"\",\n     \"scriptPreprocessor\": \"jest/preprocessor.js\",\n     \"setupEnvScriptFile\": \"jest/environment.js\",\n-    \"persistModuleRegistryBetweenSpecs\": true,\n     \"testFileExtensions\": [\n-      \"js\",\n       \"coffee\",\n+      \"js\",\n       \"ts\"\n     ],\n-    \"modulePathIgnorePatterns\": [\n-      \"/react/build/\",\n-      \"/node_modules/\",\n-      \"/.module-cache/\"\n-    ],\n     \"testPathDirs\": [\n-      \"<rootDir>/src\",\n-      \"<rootDir>/eslint-rules\"\n+      \"<rootDir>/eslint-rules\",\n+      \"<rootDir>/src\"\n     ],\n     \"unmockedModulePathPatterns\": [\n       \"\""
    },
    {
      "message": "fix typo in removecomponentasreffrom error message.",
      "diff": "diff --git a/src/renderers/shared/reconciler/ReactOwner.js b/src/renderers/shared/reconciler/ReactOwner.js\nindex 4b91f9117e86..89d5cd39955c 100644\n--- a/src/renderers/shared/reconciler/ReactOwner.js\n+++ b/src/renderers/shared/reconciler/ReactOwner.js\n@@ -92,7 +92,7 @@ var ReactOwner = {\n     invariant(\n       ReactOwner.isValidOwner(owner),\n       'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +\n-      'usually means that you\\'re trying to remove a ref to a component that ' +\n+      'usually means that you\\'re trying to remove a ref from a component that ' +\n       'doesn\\'t have an owner (that is, was not created inside of another ' +\n       'component\\'s `render` method). Try rendering this component inside of ' +\n       'a new top-level component which will hold the ref.'"
    },
    {
      "message": "translate 10.3-class-name-manipulation.md to japanese",
      "diff": "diff --git a/docs/docs/10.3-class-name-manipulation.ja-JP.md b/docs/docs/10.3-class-name-manipulation.ja-JP.md\nnew file mode 100644\nindex 000000000000..d96ecb44f01f\n--- /dev/null\n+++ b/docs/docs/10.3-class-name-manipulation.ja-JP.md\n@@ -0,0 +1,61 @@\n+---\n+id: class-name-manipulation\n+title: \u30af\u30e9\u30b9\u540d\u306e\u64cd\u4f5c\n+permalink: class-name-manipulation-ja-JP.html\n+prev: two-way-binding-helpers-ja-JP.html\n+next: test-utils-ja-JP.html\n+---\n+\n+> \u6ce8\u610f:\n+> \u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u73fe\u5728[JedWatson/classnames](https://github.com/JedWatson/classnames)\u306b\u72ec\u7acb\u3057\u3066\u5b58\u5728\u3057\u3066\u304a\u308a\u3001React\u306f\u5909\u66f4\u3092\u691c\u77e5\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u3053\u3061\u3089\u306f\u5c06\u6765\u524a\u9664\u3055\u308c\u308b\u4e88\u5b9a\u3067\u3059\u3002\n+\n+`classSet()` \u306fDOM\u306e `class` \u6587\u5b57\u5217\u3092\u7c21\u5358\u306b\u64cd\u4f5c\u3059\u308b\u3059\u3063\u304d\u308a\u3068\u3057\u305f\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u3059\u3002\n+\n+\u4ee5\u4e0b\u306f\u3001 `classSet()` \u3092\u4f7f\u7528\u3057\u306a\u3044\u5171\u901a\u306a\u30b7\u30ca\u30ea\u30aa\u3068\u89e3\u6c7a\u7b56\u3067\u3059\u3002\n+\n+```javascript\n+// `<Message />` \u306a\u3069\u306e\u4e2d\u306eReact\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n+render: function() {\n+  var classString = 'message';\n+  if (this.props.isImportant) {\n+    classString += ' message-important';\n+  }\n+  if (this.props.isRead) {\n+    classString += ' message-read';\n+  }\n+  // 'message message-important message-read'\n+  return <div className={classString}>Great, I'll be there.</div>;\n+}\n+```\n+\n+\u4e0a\u8a18\u306f\u3001\u30af\u30e9\u30b9\u540d\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u9762\u5012\u3067\u3001\u8aad\u307f\u306b\u304f\u304f\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001 `classSet()` \u3092\u4f7f\u7528\u3059\u308b\u3068\u3053\u306e\u554f\u984c\u304c\u89e3\u6c7a\u3057\u307e\u3059\u3002\n+\n+```javascript\n+render: function() {\n+  var cx = React.addons.classSet;\n+  var classes = cx({\n+    'message': true,\n+    'message-important': this.props.isImportant,\n+    'message-read': this.props.isRead\n+  });\n+  // \u540c\u69d8\u306b\u6700\u7d42\u7684\u306b\u306f\u6587\u5b57\u5217\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u30af\u30ea\u30a2\u306b\u306f\u306a\u308a\u307e\u3059\n+  return <div className={classes}>Great, I'll be there.</div>;\n+}\n+```\n+\n+ `classSet()` \u3092\u4f7f\u7528\u3059\u308b\u969b\u306b\u306f\u3001\u30ad\u30fc\u3068\u3001\u5fc5\u8981\u3067\u3042\u3063\u305f\u308a\u3001\u5fc5\u8981\u3067\u306a\u3044CSS\u306e\u30af\u30e9\u30b9\u540d\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5024\u304c\u771f\u3067\u3042\u308b\u3082\u306e\u306f\u30ad\u30fc\u3068\u306a\u308a\u3001\u6700\u7d42\u7684\u306b\u306f\u6587\u5b57\u5217\u306e\u4e00\u90e8\u306b\u306a\u308a\u307e\u3059\u3002\n+\n+`classSet()` \u3082\u307e\u305f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u9023\u7d50\u3057\u305f\u6587\u5b57\u5217\u306e\u5f15\u6570\u3068\u3057\u3066\u30af\u30e9\u30b9\u540d\u3092\u6e21\u3057\u307e\u3059\u3002\n+\n+```javascript\n+render: function() {\n+  var cx = React.addons.classSet;\n+  var importantModifier = 'message-important';\n+  var readModifier = 'message-read';\n+  var classes = cx('message', importantModifier, readModifier);\n+  // \u6700\u7d42\u7684\u306a\u6587\u5b57\u5217\u306f 'message message-important message-read'\n+  return <div className={classes}>Great, I'll be there.</div>;\n+}\n+```\n+\n+\u6587\u5b57\u5217\u306e\u9023\u7d50\u3092\u624b\u3067\u66f8\u304f\u306e\u306f\u3084\u3081\u307e\u3057\u3087\u3046\uff01"
    },
    {
      "message": "add warning for protocol sandboxing near pain point in getting started",
      "diff": "diff --git a/docs/docs/getting-started.md b/docs/docs/getting-started.md\nindex f6b758643ab3..40049bbf9d74 100644\n--- a/docs/docs/getting-started.md\n+++ b/docs/docs/getting-started.md\n@@ -64,6 +64,8 @@ Then reference it from `helloworld.html`:\n <script type=\"text/jsx\" src=\"src/helloworld.js\"></script>\n ```\n \n+Note that some browsers (Chrome, e.g.) will fail to load the file unless it's served via HTTP.\n+\n ### Offline Transform\n \n First install the command-line tools (requires [npm](https://www.npmjs.com/)):"
    },
    {
      "message": "remove controll character from 02-displaying-data.ja-jp.md",
      "diff": "diff --git a/docs/docs/02-displaying-data.ja-JP.md b/docs/docs/02-displaying-data.ja-JP.md\nindex 7aef1f05c062..fd8d8f02505c 100644\n--- a/docs/docs/02-displaying-data.ja-JP.md\n+++ b/docs/docs/02-displaying-data.ja-JP.md\n@@ -58,7 +58,7 @@ setInterval(function() {\n \n ## \u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\n \n-`hello-react.html` \u3092\u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u3067\b\u958b\u304d\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3042\u306a\u305f\u306e\u540d\u524d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002React\u306fUI\u306e\u3046\u3061\u3001\u6642\u9593\u306e\u6587\u5b57\u5217\u3057\u304b\u5909\u66f4\u3057\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3042\u306a\u305f\u304c\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5165\u529b\u3057\u305f\u3082\u306e\u306f\u6b8b\u3063\u3066\u3044\u307e\u3059\u3002\u3042\u306a\u305f\u306f\u305d\u3046\u3044\u3063\u305f\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u306a\u3044\u306e\u306b\u3082\u95a2\u308f\u3089\u305a\u3067\u3059\u3002React\u306f\u3042\u306a\u305f\u306e\u3053\u3068\u3092\u7406\u89e3\u3057\u3066\u304a\u308a\u3001\u6b63\u3057\u3044\u3053\u3068\u3092\u884c\u3044\u307e\u3059\u3002\n+`hello-react.html` \u3092\u30a6\u30a7\u30d6\u30d6\u30e9\u30a6\u30b6\u3067\u958b\u304d\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u3042\u306a\u305f\u306e\u540d\u524d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002React\u306fUI\u306e\u3046\u3061\u3001\u6642\u9593\u306e\u6587\u5b57\u5217\u3057\u304b\u5909\u66f4\u3057\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3042\u306a\u305f\u304c\u30c6\u30ad\u30b9\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5165\u529b\u3057\u305f\u3082\u306e\u306f\u6b8b\u3063\u3066\u3044\u307e\u3059\u3002\u3042\u306a\u305f\u306f\u305d\u3046\u3044\u3063\u305f\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u306a\u3044\u306e\u306b\u3082\u95a2\u308f\u3089\u305a\u3067\u3059\u3002React\u306f\u3042\u306a\u305f\u306e\u3053\u3068\u3092\u7406\u89e3\u3057\u3066\u304a\u308a\u3001\u6b63\u3057\u3044\u3053\u3068\u3092\u884c\u3044\u307e\u3059\u3002\n \n \u3053\u306e\u3053\u3068\u306b\u3064\u3044\u3066\u79c1\u305f\u3061\u304c\u7406\u89e3\u3067\u304d\u308b\u65b9\u6cd5\u306f\u3001React\u306f\u5fc5\u8981\u306b\u306a\u308b\u307e\u3067\u3001DOM\u306e\u64cd\u4f5c\u3092\u884c\u308f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002 **React\u306f\u3001DOM\u306e\u5909\u5316\u3092\u8868\u73fe\u3057\u3001\u3042\u306a\u305f\u306b\u3082\u3063\u3068\u3082\u52b9\u7387\u7684\u306aDOM\u306e\u5909\u5316\u3092\u898b\u7a4d\u3082\u308b\u305f\u3081\u306b\u65e9\u3044\u3001\u5185\u90e8\u306e\u30e2\u30c3\u30af\u306eDOM\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002**"
    },
    {
      "message": "remove the unexpected character in reacteventlistener",
      "diff": "diff --git a/src/renderers/dom/client/ReactEventListener.js b/src/renderers/dom/client/ReactEventListener.js\nindex 2f2e721939ba..1cec1ff95593 100644\n--- a/src/renderers/dom/client/ReactEventListener.js\n+++ b/src/renderers/dom/client/ReactEventListener.js\n@@ -126,7 +126,7 @@ function handleTopLevelWithPath(bookKeeping) {\n       );\n \n       // Jump to the root of this React render tree\n-      while (currentPathElementID\u0001 !== newRootID) {\n+      while (currentPathElementID !== newRootID) {\n         i++;\n         currentPathElement = path[i];\n         currentPathElementID = ReactMount.getID(currentPathElement);"
    },
    {
      "message": "fix checksum hash attribute insertion for self-closing root tags.  fixes #4323",
      "diff": "diff --git a/src/renderers/dom/server/ReactMarkupChecksum.js b/src/renderers/dom/server/ReactMarkupChecksum.js\nindex 01d72cc438d8..0d40c65d4d1b 100644\n--- a/src/renderers/dom/server/ReactMarkupChecksum.js\n+++ b/src/renderers/dom/server/ReactMarkupChecksum.js\n@@ -22,9 +22,11 @@ var ReactMarkupChecksum = {\n    */\n   addChecksumToMarkup: function(markup) {\n     var checksum = adler32(markup);\n+\n+    // Add checksum (handle both parent tags and self-closing tags)\n     return markup.replace(\n-      '>',\n-      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\">'\n+      /\\/?>/,\n+      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&'\n     );\n   },\n \ndiff --git a/src/renderers/dom/server/__tests__/ReactServerRendering-test.js b/src/renderers/dom/server/__tests__/ReactServerRendering-test.js\nindex 386bc8523b07..9d4de665e54d 100644\n--- a/src/renderers/dom/server/__tests__/ReactServerRendering-test.js\n+++ b/src/renderers/dom/server/__tests__/ReactServerRendering-test.js\n@@ -57,6 +57,16 @@ describe('ReactServerRendering', function() {\n       );\n     });\n \n+    it('should generate simple markup for self-closing tags', function() {\n+      var response = ReactServerRendering.renderToString(\n+        <img />\n+      );\n+      expect(response).toMatch(\n+        '<img ' + ID_ATTRIBUTE_NAME + '=\"[^\"]+\" ' +\n+          ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"[^\"]+\"/>'\n+      );\n+    });\n+\n     it('should not register event listeners', function() {\n       var EventPluginHub = require('EventPluginHub');\n       var cb = mocks.getMockFunction();"
    },
    {
      "message": "respect node_env environment variable if set when building",
      "diff": "diff --git a/grunt/config/browserify.js b/grunt/config/browserify.js\nindex ad54483a3f38..30e63dcfbab6 100644\n--- a/grunt/config/browserify.js\n+++ b/grunt/config/browserify.js\n@@ -56,7 +56,7 @@ var basic = {\n   outfile: './build/react.js',\n   debug: false,\n   standalone: 'React',\n-  transforms: [envify({NODE_ENV: 'development'})],\n+  transforms: [envify({NODE_ENV: process.env.NODE_ENV || 'development'})],\n   plugins: [collapser],\n   after: [derequire, simpleBannerify],\n };\n@@ -68,7 +68,7 @@ var min = {\n   outfile: './build/react.min.js',\n   debug: false,\n   standalone: 'React',\n-  transforms: [envify({NODE_ENV: 'production'}), uglifyify],\n+  transforms: [envify({NODE_ENV: process.env.NODE_ENV || 'production'}), uglifyify],\n   plugins: [collapser],\n   // No need to derequire because the minifier will mangle\n   // the \"require\" calls.\n@@ -100,7 +100,7 @@ var addons = {\n   debug: false,\n   standalone: 'React',\n   packageName: 'React (with addons)',\n-  transforms: [envify({NODE_ENV: 'development'})],\n+  transforms: [envify({NODE_ENV: process.env.NODE_ENV || 'development'})],\n   plugins: [collapser],\n   after: [derequire, simpleBannerify],\n };\n@@ -113,7 +113,7 @@ var addonsMin = {\n   debug: false,\n   standalone: 'React',\n   packageName: 'React (with addons)',\n-  transforms: [envify({NODE_ENV: 'production'}), uglifyify],\n+  transforms: [envify({NODE_ENV: process.env.NODE_ENV || 'production'}), uglifyify],\n   plugins: [collapser],\n   // No need to derequire because the minifier will mangle\n   // the \"require\" calls.\n@@ -129,7 +129,7 @@ var withCodeCoverageLogging = {\n   debug: true,\n   standalone: 'React',\n   transforms: [\n-    envify({NODE_ENV: 'development'}),\n+    envify({NODE_ENV: process.env.NODE_ENV || 'development'}),\n     require('coverify'),\n   ],\n   plugins: [collapser],"
    },
    {
      "message": "concatenate warning message, due to parsing issues",
      "diff": "diff --git a/packages/react/addons.js b/packages/react/addons.js\nindex d5d95c64df84..7de797ab3cf9 100644\n--- a/packages/react/addons.js\n+++ b/packages/react/addons.js\n@@ -1,8 +1,8 @@\n var warning = require('./lib/warning');\n warning(\n   false,\n-  \"require('react/addons') is deprecated. \" +\n-  \"Access using require('react-addons-{addon}') instead.\"\n+  'require' + \"('react/addons') is deprecated. \" +\n+  'Access using require' + \"('react-addons-{addon}') instead.\"\n );\n \n module.exports = require('./lib/ReactWithAddons');"
    },
    {
      "message": "rename react-addons-updates to react-addons-update",
      "diff": "diff --git a/grunt/tasks/npm-react-addons.js b/grunt/tasks/npm-react-addons.js\nindex 4a427092c27f..28608cda9787 100644\n--- a/grunt/tasks/npm-react-addons.js\n+++ b/grunt/tasks/npm-react-addons.js\n@@ -36,8 +36,8 @@ var addons = {\n     name: 'shallow-compare',\n   },\n   updates: {\n-    module: 'updates',\n-    name: 'updates',\n+    module: 'update',\n+    name: 'update',\n   },\n };"
    },
    {
      "message": "add ie-only security attr to htmldompropertyconfig",
      "diff": "diff --git a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\nindex c35551ed7d87..6ae478cb3842 100644\n--- a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n+++ b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n@@ -183,6 +183,9 @@ var HTMLDOMPropertyConfig = {\n     itemRef: MUST_USE_ATTRIBUTE,\n     // property is supported for OpenGraph in meta tags.\n     property: null,\n+    // IE-only attribute that specifies security restrictions on an iframe\n+    // as an alternative to the sandbox attribute on IE<10\n+    security: MUST_USE_ATTRIBUTE,\n     // IE-only attribute that controls focus behavior\n     unselectable: MUST_USE_ATTRIBUTE,\n   },"
    },
    {
      "message": "add site title to first code snippet of getting started",
      "diff": "diff --git a/docs/docs/getting-started.ja-JP.md b/docs/docs/getting-started.ja-JP.md\nindex 0719cba3facd..7de3305a803a 100644\n--- a/docs/docs/getting-started.ja-JP.md\n+++ b/docs/docs/getting-started.ja-JP.md\n@@ -29,6 +29,7 @@ React \u3067\u306e\u30cf\u30c3\u30ad\u30f3\u30b0\u3092\u59cb\u3081\u308b\u306b\u3042\u305f\u308a\u3001\u4e00\u756a\u7c21\u5358\u306a\u3082\u306e\u3068\n <!DOCTYPE html>\n <html>\n   <head>\n+    <title>Hello React!</title>\n     <script src=\"build/react.js\"></script>\n     <script src=\"build/JSXTransformer.js\"></script>\n   </head>\ndiff --git a/docs/docs/getting-started.ko-KR.md b/docs/docs/getting-started.ko-KR.md\nindex 6b96ececf38d..a80be6bdaf19 100644\n--- a/docs/docs/getting-started.ko-KR.md\n+++ b/docs/docs/getting-started.ko-KR.md\n@@ -29,6 +29,7 @@ React\ub97c \uc2dc\uc791\ud558\ub294 \uac00\uc7a5 \ube60\ub978 \ubc29\ubc95\uc740 \ub2e4\uc74c\uc758 Hello World JSFiddle \uc608\n <!DOCTYPE html>\n <html>\n   <head>\n+    <title>Hello React!</title>\n     <script src=\"build/react.js\"></script>\n     <script src=\"build/JSXTransformer.js\"></script>\n   </head>\ndiff --git a/docs/docs/getting-started.zh-CN.md b/docs/docs/getting-started.zh-CN.md\nindex 70a5e84b2dec..7555ed34d94a 100644\n--- a/docs/docs/getting-started.zh-CN.md\n+++ b/docs/docs/getting-started.zh-CN.md\n@@ -29,6 +29,7 @@ redirect_from: \"docs/index-zh-CN.html\"\n <!DOCTYPE html>\n <html>\n   <head>\n+    <title>Hello React!</title>\n     <script src=\"build/react.js\"></script>\n     <script src=\"build/JSXTransformer.js\"></script>\n   </head>"
    },
    {
      "message": "check for warning when testing to see if error is thrown when render not defined",
      "diff": "diff --git a/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js b/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js\nindex e1c876bc71c7..1be3f9cf95a6 100644\n--- a/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js\n+++ b/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js\n@@ -55,8 +55,16 @@ describe('ReactES6Class', function() {\n   });\n \n   it('throws if no render function is defined', function() {\n+    spyOn(console, 'error');\n     class Foo extends React.Component { }\n     expect(() => React.render(<Foo />, container)).toThrow();\n+    expect(console.error.calls[0].args[0]).toBe(\n+      'Warning: Foo(...): ' +\n+      'No `render` method found on the returned component instance: you may ' +\n+      'have forgotten to define `render` in your component or you may have ' +\n+      'accidentally tried to render an element whose type is a function that ' +\n+      'isn\\'t a React component.'\n+    );\n   });\n \n   it('renders a simple stateless component with prop', function() {"
    },
    {
      "message": "add site title to first code snippet of getting started",
      "diff": "diff --git a/docs/docs/getting-started.md b/docs/docs/getting-started.md\nindex 5feb95284eff..d8ccf33e8658 100644\n--- a/docs/docs/getting-started.md\n+++ b/docs/docs/getting-started.md\n@@ -28,6 +28,7 @@ In the root directory of the starter kit, create a `helloworld.html` with the fo\n <!DOCTYPE html>\n <html>\n   <head>\n+    <title>Hello React!</title>\n     <script src=\"build/react.js\"></script>\n     <script src=\"build/JSXTransformer.js\"></script>\n   </head>"
    },
    {
      "message": "add a comment about why the string is split up. for future readers of this file.",
      "diff": "diff --git a/src/shared/utils/deprecated.js b/src/shared/utils/deprecated.js\nindex e73613301d77..85eb17a1e54a 100644\n--- a/src/shared/utils/deprecated.js\n+++ b/src/shared/utils/deprecated.js\n@@ -30,6 +30,9 @@ function deprecated(fnName, newModule, ctx, fn) {\n     var newFn = function() {\n       warning(\n         warned,\n+        // Require examples in this string must be split to prevent React's\n+        // build tools from mistaking them for real requires.\n+        // Otherwise the build tools will attempt to build a '%s' module.\n         '`require' + '(\"react\").%s` is deprecated. Please use `require' + '(\"%s\").%s` ' +\n         'instead.',\n         fnName,"
    },
    {
      "message": "move rendersubtreeintocontainer into reactdomclient",
      "diff": "diff --git a/src/addons/ReactWithAddons.js b/src/addons/ReactWithAddons.js\nindex 04f327a14bd5..a0f8975762e2 100644\n--- a/src/addons/ReactWithAddons.js\n+++ b/src/addons/ReactWithAddons.js\n@@ -28,7 +28,6 @@ var ReactTransitionGroup = require('ReactTransitionGroup');\n var ReactUpdates = require('ReactUpdates');\n \n var cloneWithProps = require('cloneWithProps');\n-var renderSubtreeIntoContainer = require('renderSubtreeIntoContainer');\n var shallowCompare = require('shallowCompare');\n var update = require('update');\n \n@@ -41,7 +40,6 @@ React.addons = {\n   batchedUpdates: ReactUpdates.batchedUpdates,\n   cloneWithProps: cloneWithProps,\n   createFragment: ReactFragment.create,\n-  renderSubtreeIntoContainer: renderSubtreeIntoContainer,\n   shallowCompare: shallowCompare,\n   update: update,\n };\ndiff --git a/src/renderers/dom/ReactDOMClient.js b/src/renderers/dom/ReactDOMClient.js\nindex 03609f1e5e69..6d35c7f1cc92 100644\n--- a/src/renderers/dom/ReactDOMClient.js\n+++ b/src/renderers/dom/ReactDOMClient.js\n@@ -22,6 +22,7 @@ var ReactPerf = require('ReactPerf');\n var ReactReconciler = require('ReactReconciler');\n \n var findDOMNode = require('findDOMNode');\n+var renderSubtreeIntoContainer = require('renderSubtreeIntoContainer');\n var warning = require('warning');\n \n ReactDefaultInjection.inject();\n@@ -34,6 +35,7 @@ var React = {\n   findDOMNode: findDOMNode,\n   render: render,\n   unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n+  _renderSubtreeIntoContainer: renderSubtreeIntoContainer,\n };\n \n // Inject the runtime into a devtools global hook regardless of browser."
    },
    {
      "message": "update getmarkupwrap with list of svg supported in reactdom",
      "diff": "diff --git a/src/shared/vendor/core/getMarkupWrap.js b/src/shared/vendor/core/getMarkupWrap.js\nindex a13e7f3d432c..9e4a5c6ff270 100644\n--- a/src/shared/vendor/core/getMarkupWrap.js\n+++ b/src/shared/vendor/core/getMarkupWrap.js\n@@ -67,13 +67,16 @@ var svgElements = [\n   'g',\n   'line',\n   'linearGradient',\n+  'mask',\n   'path',\n+  'pattern',\n   'polygon',\n   'polyline',\n   'radialGradient',\n   'rect',\n   'stop',\n   'text',\n+  'tspan',\n ];\n svgElements.forEach((nodeName) => {\n   markupWrap[nodeName] = svgWrap;"
    },
    {
      "message": "update 2015-06-12-deprecating-jstransform-and-react-tools.md",
      "diff": "diff --git a/docs/_posts/2015-06-12-deprecating-jstransform-and-react-tools.md b/docs/_posts/2015-06-12-deprecating-jstransform-and-react-tools.md\nindex 0f0c074db786..b376f6606bb7 100644\n--- a/docs/_posts/2015-06-12-deprecating-jstransform-and-react-tools.md\n+++ b/docs/_posts/2015-06-12-deprecating-jstransform-and-react-tools.md\n@@ -21,6 +21,8 @@ We've been working with the Babel team as we started making use of it and we're\n \n As a result of no longer maintaining JSTransform, we no longer have a need to maintain our Esprima fork ([esprima-fb](https://github.com/facebook/esprima/)). The upstream Esprima and other esprima-based forks, like Espree, have been doing an excellent job of supporting new language features recently. If you have a need of an esprima-based parser, we encourage you to look into using one of those.\n \n+Alternatively, if you need to parse JSX, take a look at [acorn](https://github.com/marijnh/acorn) parser in combination with [acorn-jsx](https://github.com/RReverser/acorn-jsx) plugin which is used inside of Babel and thus always supports the latest syntax.\n+\n ### JSXTransformer\n JSXTransformer is another tool we built specifically for consuming JSX in the browser. It was always intended as a quick way to prototype code before setting up a build process. It would look for `<script>` tags with `type=\"text/jsx\"` and then transform and run. This ran the same code that react-tools ran on the server. Babel ships with [a nearly identical tool](https://babeljs.io/docs/usage/browser/), which has already been integrated into [JS Bin](https://jsbin.com/)."
    },
    {
      "message": "remove stray call to reactdomtextarea.unmountwrapper",
      "diff": "diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js\nindex 6a8174613719..56bcdbc27ded 100644\n--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js\n+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js\n@@ -251,4 +251,10 @@ describe('ReactDOMTextarea', function() {\n     expect(link.requestChange.mock.calls.length).toBe(1);\n     expect(link.requestChange.mock.calls[0][0]).toEqual('test');\n   });\n+\n+  it('should unmount', function() {\n+    var container = document.createElement('div');\n+    renderTextarea(<textarea />, container);\n+    React.unmountComponentAtNode(container);\n+  });\n });\ndiff --git a/src/renderers/dom/shared/ReactDOMComponent.js b/src/renderers/dom/shared/ReactDOMComponent.js\nindex 0e8a0667ca54..60bcc899eca5 100644\n--- a/src/renderers/dom/shared/ReactDOMComponent.js\n+++ b/src/renderers/dom/shared/ReactDOMComponent.js\n@@ -787,9 +787,6 @@ ReactDOMComponent.Mixin = {\n       case 'input':\n         ReactDOMInput.unmountWrapper(this);\n         break;\n-      case 'textarea':\n-        ReactDOMTextarea.unmountWrapper(this);\n-        break;\n       case 'html':\n       case 'head':\n       case 'body':"
    },
    {
      "message": "use the public render api in reactdomcomponent-test",
      "diff": "diff --git a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\nindex 6bb3599e874c..9df6bca4aa6a 100644\n--- a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\n+++ b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\n@@ -445,24 +445,10 @@ describe('ReactDOMComponent', function() {\n       require('mock-modules').dumpCache();\n \n       React = require('React');\n-      var ReactMultiChild = require('ReactMultiChild');\n-      var ReactDOMComponent = require('ReactDOMComponent');\n-      var ReactReconcileTransaction = require('ReactReconcileTransaction');\n-\n-      var StubNativeComponent = function(element) {\n-        this._currentElement = element;\n-      };\n-      assign(StubNativeComponent.prototype, ReactDOMComponent.Mixin);\n-      assign(StubNativeComponent.prototype, ReactMultiChild.Mixin);\n \n       mountComponent = function(props) {\n-        var transaction = new ReactReconcileTransaction();\n-        var stubComponent = new StubNativeComponent({\n-          type: StubNativeComponent,\n-          props: props,\n-          _owner: null,\n-        });\n-        return stubComponent.mountComponent('test', transaction, {});\n+        var container = document.createElement('div');\n+        React.render(<div {...props} />, container);\n       };\n     });"
    },
    {
      "message": "fix my embarrassing amount of typos in this 4 line change",
      "diff": "diff --git a/npm-react/README.md b/npm-react/README.md\nindex 6e222d7b4411..1e452c898e97 100644\n--- a/npm-react/README.md\n+++ b/npm-react/README.md\n@@ -20,5 +20,5 @@ var immutabilityHelpers = require('react/addons/updates');\n var CSSTransitionGroup = require('react/addons/CSSTransitionGroup');\n ```\n \n-For a complete list of addons vist the [addons documention page](https://facebook.github.io/react/docs/addons.html)\n+For a complete list of addons visit the [addons documentation page](https://facebook.github.io/react/docs/addons.html)"
    },
    {
      "message": "use correct location when running linkedvalueutils proptype checks",
      "diff": "diff --git a/src/renderers/dom/client/wrappers/LinkedValueUtils.js b/src/renderers/dom/client/wrappers/LinkedValueUtils.js\nindex 5b62d79a048e..49b746e107fa 100644\n--- a/src/renderers/dom/client/wrappers/LinkedValueUtils.js\n+++ b/src/renderers/dom/client/wrappers/LinkedValueUtils.js\n@@ -13,6 +13,7 @@\n 'use strict';\n \n var ReactPropTypes = require('ReactPropTypes');\n+var ReactPropTypeLocations = require('ReactPropTypeLocations');\n \n var invariant = require('invariant');\n var warning = require('warning');\n@@ -105,7 +106,12 @@ var LinkedValueUtils = {\n   checkPropTypes: function (tagName, props, owner) {\n     for (var propName in propTypes) {\n       if (propTypes.hasOwnProperty(propName)) {\n-        var error = propTypes[propName](props, propName, tagName, location);\n+        var error = propTypes[propName](\n+          props,\n+          propName,\n+          tagName,\n+          ReactPropTypeLocations.prop\n+        );\n       }\n       if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n         // Only monitor this failure once because there tends to be a lot of the"
    },
    {
      "message": "use babel to transform js in docs, update other calls",
      "diff": "diff --git a/bin/jsx-internal b/bin/jsx-internal\nindex 6e62b6993d1b..b642f9bed3f9 100755\n--- a/bin/jsx-internal\n+++ b/bin/jsx-internal\n@@ -3,7 +3,7 @@\n // vim: set ft=javascript :\n \"use strict\";\n \n-var babel = require('babel-core');\n+var babel = require('babel');\n \n var constants = require('../vendor/constants')(babel);\n \ndiff --git a/docs/Rakefile b/docs/Rakefile\nindex 6a7454bad1c5..a454da6fde53 100644\n--- a/docs/Rakefile\n+++ b/docs/Rakefile\n@@ -4,12 +4,12 @@ require('yaml')\n \n desc \"generate js from jsx\"\n task :js do\n-  system \"../bin/jsx --harmony _js js\"\n+  system \"../node_modules/.bin/babel _js --out-dir=js\"\n end\n \n desc \"watch js\"\n task :watch do\n-  Process.spawn \"../bin/jsx --watch --harmony _js js\"\n+  Process.spawn \"../node_modules/.bin/babel _js --out-dir=js --watch\"\n   Process.waitall\n end\n \ndiff --git a/jest/preprocessor.js b/jest/preprocessor.js\nindex ab2ce321412d..29fee899b027 100644\n--- a/jest/preprocessor.js\n+++ b/jest/preprocessor.js\n@@ -1,6 +1,6 @@\n 'use strict';\n \n-var babel = require('babel-core');\n+var babel = require('babel');\n var coffee = require('coffee-script');\n \n var tsPreprocessor = require('./ts-preprocessor');\ndiff --git a/package.json b/package.json\nindex 35c12d946ced..87e1013ea46e 100644\n--- a/package.json\n+++ b/package.json\n@@ -29,7 +29,7 @@\n     \"jstransform\": \"^11.0.0\"\n   },\n   \"devDependencies\": {\n-    \"babel-core\": \"^5.2.7\",\n+    \"babel\": \"^5.3.3\",\n     \"benchmark\": \"~1.0.0\",\n     \"browserify\": \"^9.0.3\",\n     \"bundle-collapser\": \"^1.1.1\","
    },
    {
      "message": "add wikipedia link to cross-site scripting on \"xss attack\" string",
      "diff": "diff --git a/docs/docs/tutorial.md b/docs/docs/tutorial.md\nindex c87175a076b2..13e43fb9bfe7 100644\n--- a/docs/docs/tutorial.md\n+++ b/docs/docs/tutorial.md\n@@ -249,7 +249,7 @@ All we're doing here is calling the marked library. We need to convert `this.pro\n \n But there's a problem! Our rendered comments look like this in the browser: \"`<p>`This is `<em>`another`</em>` comment`</p>`\". We want those tags to actually render as HTML.\n \n-That's React protecting you from an XSS attack. There's a way to get around it but the framework warns you not to use it:\n+That's React protecting you from an [XSS attack](http://en.wikipedia.org/wiki/Cross-site_scripting). There's a way to get around it but the framework warns you not to use it:\n \n ```javascript{4,10}\n // tutorial7.js"
    },
    {
      "message": "allow reactcsstransitiongroup to also take in object containing classnames instead of relying on manipulation of the transitionname property",
      "diff": "diff --git a/src/addons/transitions/ReactCSSTransitionGroup.js b/src/addons/transitions/ReactCSSTransitionGroup.js\nindex 069935843365..d67a5de53053 100644\n--- a/src/addons/transitions/ReactCSSTransitionGroup.js\n+++ b/src/addons/transitions/ReactCSSTransitionGroup.js\n@@ -27,7 +27,19 @@ var ReactCSSTransitionGroup = React.createClass({\n   displayName: 'ReactCSSTransitionGroup',\n \n   propTypes: {\n-    transitionName: React.PropTypes.string.isRequired,\n+    transitionName: React.PropTypes.oneOfType([\n+      React.PropTypes.string,\n+      React.PropTypes.shape({\n+        enter: React.PropTypes.string,\n+        leave: React.PropTypes.string\n+      }),\n+      React.PropTypes.shape({\n+        enter: React.PropTypes.string,\n+        enterActive: React.PropTypes.string,\n+        leave: React.PropTypes.string,\n+        leaveActive: React.PropTypes.string\n+      })\n+    ]).isRequired,\n     transitionAppear: React.PropTypes.bool,\n     transitionEnter: React.PropTypes.bool,\n     transitionLeave: React.PropTypes.bool\ndiff --git a/src/addons/transitions/ReactCSSTransitionGroupChild.js b/src/addons/transitions/ReactCSSTransitionGroupChild.js\nindex 179a00029d45..dd4e1bf98428 100644\n--- a/src/addons/transitions/ReactCSSTransitionGroupChild.js\n+++ b/src/addons/transitions/ReactCSSTransitionGroupChild.js\n@@ -48,8 +48,8 @@ var ReactCSSTransitionGroupChild = React.createClass({\n \n   transition: function(animationType, finishCallback) {\n     var node = React.findDOMNode(this);\n-    var className = this.props.name + '-' + animationType;\n-    var activeClassName = className + '-active';\n+    var className = this.props.name[animationType] || this.props.name + '-' + animationType;\n+    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';\n     var noEventTimeout = null;\n \n     var endListener = function(e) {"
    },
    {
      "message": "update changelog for 0.13 to mention jsxtransfomer change",
      "diff": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 077c8ca68f9c..8fe82f61876b 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -104,6 +104,12 @@\n   * `es3` restores the previous default behavior. An additional transform is added here to ensure the use of reserved words as properties is safe (eg `this.static` will become `this['static']` for IE8 compatibility).\n * The transform for the call spread operator has also been enabled.\n \n+### JSXTransformer\n+\n+#### Breaking Changes\n+\n+* The return value of `transform` now contains `sourceMap` as a JS object already, not an instance of `SourceMapGenerator`.\n+\n ### JSX\n \n #### Breaking Changes"
    },
    {
      "message": "replace hasownproperty in child processing with typeof undefined check",
      "diff": "diff --git a/src/utils/ReactChildren.js b/src/utils/ReactChildren.js\nindex 4109557dde91..0589c8eafe4e 100644\n--- a/src/utils/ReactChildren.js\n+++ b/src/utils/ReactChildren.js\n@@ -81,7 +81,7 @@ function mapSingleChildIntoContext(traverseContext, child, name, i) {\n   var mapBookKeeping = traverseContext;\n   var mapResult = mapBookKeeping.mapResult;\n \n-  var keyUnique = !mapResult.hasOwnProperty(name);\n+  var keyUnique = ('undefined' === typeof mapResult[name]);\n   if (__DEV__) {\n     warning(\n       keyUnique,\ndiff --git a/src/utils/flattenChildren.js b/src/utils/flattenChildren.js\nindex 5d8ee72b4456..21dc674d8148 100644\n--- a/src/utils/flattenChildren.js\n+++ b/src/utils/flattenChildren.js\n@@ -22,7 +22,7 @@ var warning = require('warning');\n function flattenSingleChildIntoContext(traverseContext, child, name) {\n   // We found a component instance.\n   var result = traverseContext;\n-  var keyUnique = !result.hasOwnProperty(name);\n+  var keyUnique = ('undefined' === typeof result[name]);\n   if (__DEV__) {\n     warning(\n       keyUnique,"
    },
    {
      "message": "add webkitdirectory and nwdirectory attributes for input file",
      "diff": "diff --git a/src/browser/ui/dom/HTMLDOMPropertyConfig.js b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\nindex b814f3b61193..de1fa50b3050 100644\n--- a/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n@@ -181,7 +181,9 @@ var HTMLDOMPropertyConfig = {\n     // property is supported for OpenGraph in meta tags.\n     property: null,\n     // IE-only attribute that controls focus behavior\n-    unselectable: MUST_USE_ATTRIBUTE\n+    unselectable: MUST_USE_ATTRIBUTE,\n+    webkitdirectory: null,\n+    nwdirectory: null\n   },\n   DOMAttributeNames: {\n     acceptCharset: 'accept-charset',"
    },
    {
      "message": "revert \"add webkitdirectory and nwdirectory attributes for input file\"",
      "diff": "diff --git a/src/browser/ui/dom/HTMLDOMPropertyConfig.js b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\nindex de1fa50b3050..b814f3b61193 100644\n--- a/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n@@ -181,9 +181,7 @@ var HTMLDOMPropertyConfig = {\n     // property is supported for OpenGraph in meta tags.\n     property: null,\n     // IE-only attribute that controls focus behavior\n-    unselectable: MUST_USE_ATTRIBUTE,\n-    webkitdirectory: null,\n-    nwdirectory: null\n+    unselectable: MUST_USE_ATTRIBUTE\n   },\n   DOMAttributeNames: {\n     acceptCharset: 'accept-charset',"
    },
    {
      "message": "use 'foreach' instead of 'map' when clearing intervals",
      "diff": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex cd1fbfa66969..bca317057a7d 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -155,7 +155,7 @@ var SetIntervalMixin = {\n     this.intervals.push(setInterval.apply(null, arguments));\n   },\n   componentWillUnmount: function() {\n-    this.intervals.map(clearInterval);\n+    this.intervals.forEach(clearInterval);\n   }\n };"
    },
    {
      "message": "rename 19--dangerouslysetinnerhtml.md -> 19-dangerously-set-inner-html.md",
      "diff": "diff --git a/docs/tips/19--dangerouslySetInnerHTML.md b/docs/tips/19-dangerously-set-inner-html.md\nsimilarity index 100%\nrename from docs/tips/19--dangerouslySetInnerHTML.md\nrename to docs/tips/19-dangerously-set-inner-html.md"
    },
    {
      "message": "clarify that react.proptypes.node accepts fragments",
      "diff": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex b4159ac97fe0..cd1fbfa66969 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -26,7 +26,7 @@ React.createClass({\n     optionalString: React.PropTypes.string,\n \n     // Anything that can be rendered: numbers, strings, elements or an array\n-    // containing these types.\n+    // (or fragment) containing these types.\n     optionalNode: React.PropTypes.node,\n \n     // A React element."
    },
    {
      "message": "add scoped property to the list of dom standard properties",
      "diff": "diff --git a/docs/docs/ref-04-tags-and-attributes.md b/docs/docs/ref-04-tags-and-attributes.md\nindex f4d2a6dfdc62..dbff8d2ec6ca 100644\n--- a/docs/docs/ref-04-tags-and-attributes.md\n+++ b/docs/docs/ref-04-tags-and-attributes.md\n@@ -60,7 +60,7 @@ formAction formEncType formMethod formNoValidate formTarget frameBorder height\n hidden href hrefLang htmlFor httpEquiv icon id label lang list loop manifest\n marginHeight marginWidth max maxLength media mediaGroup method min multiple\n muted name noValidate open pattern placeholder poster preload radioGroup\n-readOnly rel required role rows rowSpan sandbox scope scrolling seamless\n+readOnly rel required role rows rowSpan sandbox scope scoped scrolling seamless\n selected shape size sizes span spellCheck src srcDoc srcSet start step style\n tabIndex target title type useMap value width wmode\n ```\ndiff --git a/src/browser/ui/dom/HTMLDOMPropertyConfig.js b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\nindex 0cd3aa369c9e..18a34dd83a45 100644\n--- a/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n@@ -134,6 +134,7 @@ var HTMLDOMPropertyConfig = {\n     rowSpan: null,\n     sandbox: null,\n     scope: null,\n+    scoped: HAS_BOOLEAN_VALUE,\n     scrolling: null,\n     seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n     selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\ndiff --git a/src/browser/ui/dom/__tests__/DOMPropertyOperations-test.js b/src/browser/ui/dom/__tests__/DOMPropertyOperations-test.js\nindex 564437256bce..8cadb40d1f9b 100644\n--- a/src/browser/ui/dom/__tests__/DOMPropertyOperations-test.js\n+++ b/src/browser/ui/dom/__tests__/DOMPropertyOperations-test.js\n@@ -89,6 +89,11 @@ describe('DOMPropertyOperations', function() {\n         'checked',\n         false\n       )).toBe('');\n+\n+      expect(DOMPropertyOperations.createMarkupForProperty(\n+        'scoped',\n+        true\n+      )).toBe('scoped=\"\"');\n     });\n \n     it('should create markup for booleanish properties', function() {"
    },
    {
      "message": "treat flexpositive/negative/boxflex as unitless styles",
      "diff": "diff --git a/docs/tips/06-style-props-value-px.md b/docs/tips/06-style-props-value-px.md\nindex aeb2cb3e3f92..5f0991130cb1 100644\n--- a/docs/tips/06-style-props-value-px.md\n+++ b/docs/tips/06-style-props-value-px.md\n@@ -18,11 +18,14 @@ See [Inline Styles](/react/tips/inline-styles.html) for more info.\n \n Sometimes you _do_ want to keep the CSS properties unitless. Here's a list of properties that won't get the automatic \"px\" suffix:\n \n+- `boxFlex`\n - `columnCount`\n - `fillOpacity`\n - `flex`\n - `flexGrow`\n+- `flexPositive`\n - `flexShrink`\n+- `flexNegative`\n - `fontWeight`\n - `lineClamp`\n - `lineHeight`\ndiff --git a/src/browser/ui/dom/CSSProperty.js b/src/browser/ui/dom/CSSProperty.js\nindex 05f764ba95c5..f8e3c2624de1 100644\n--- a/src/browser/ui/dom/CSSProperty.js\n+++ b/src/browser/ui/dom/CSSProperty.js\n@@ -20,7 +20,9 @@ var isUnitlessNumber = {\n   columnCount: true,\n   flex: true,\n   flexGrow: true,\n+  flexPositive: true,\n   flexShrink: true,\n+  flexNegative: true,\n   fontWeight: true,\n   lineClamp: true,\n   lineHeight: true,"
    },
    {
      "message": "ensure fullpagecomponents are treated as dom components",
      "diff": "diff --git a/src/browser/ui/dom/components/createFullPageComponent.js b/src/browser/ui/dom/components/createFullPageComponent.js\nindex 5176cfe05ead..ea4a692a7784 100644\n--- a/src/browser/ui/dom/components/createFullPageComponent.js\n+++ b/src/browser/ui/dom/components/createFullPageComponent.js\n@@ -33,6 +33,7 @@ function createFullPageComponent(tag) {\n   var elementFactory = ReactElement.createFactory(tag);\n \n   var FullPageComponent = ReactClass.createClass({\n+    tagName: tag.toUpperCase(),\n     displayName: 'ReactFullPageComponent' + tag,\n \n     componentWillUnmount: function() {\ndiff --git a/src/test/__tests__/ReactTestUtils-test.js b/src/test/__tests__/ReactTestUtils-test.js\nindex 53db1c856b9b..08789cda29e7 100644\n--- a/src/test/__tests__/ReactTestUtils-test.js\n+++ b/src/test/__tests__/ReactTestUtils-test.js\n@@ -206,4 +206,28 @@ describe('ReactTestUtils', function() {\n \n     expect(console.warn.calls.length).toBe(0);\n   });\n+\n+  it('should support injected wrapper components as DOM components', function() {\n+    var injectedDOMComponents = [\n+      'button',\n+      'form',\n+      'iframe',\n+      'img',\n+      'input',\n+      'option',\n+      'select',\n+      'textarea',\n+      'html',\n+      'head',\n+      'body'\n+    ];\n+\n+    injectedDOMComponents.forEach(function(type) {\n+      var component = ReactTestUtils.renderIntoDocument(\n+        React.createElement(type)\n+      );\n+      expect(component.tagName).toBe(type.toUpperCase());\n+      expect(ReactTestUtils.isDOMComponent(component)).toBe(true);\n+    });\n+  });\n });"
    },
    {
      "message": "add back \\n-to-be-eaten for the plain-text elements",
      "diff": "diff --git a/src/browser/ui/ReactDOMComponent.js b/src/browser/ui/ReactDOMComponent.js\nindex d596315a39b9..aa8a181b56a1 100644\n--- a/src/browser/ui/ReactDOMComponent.js\n+++ b/src/browser/ui/ReactDOMComponent.js\n@@ -306,14 +306,17 @@ ReactDOMComponent.Mixin = {\n        || this._tag === 'textarea')\n       && ret.charAt(0) === '\\n'\n     ) {\n-      // Add an invisible node that's not a newline, because the HTML syntax\n-      // ignores the first character in these tags if it's a newline\n+      // text/html ignores the first character in these tags if it's a newline\n+      // Prefer to break application/xml over text/html (for now) by adding\n+      // a newline specifically to get eaten by the parser.\n+      // (Alternately for textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten,\n+      // and the first \\r is normalized out by HTMLTextAreaElement#value.)\n       // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n       // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n       // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n       // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n       //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n-      return '<!---->' + ret;\n+      return '\\n' + ret;\n     } else {\n       return ret;\n     }"
    },
    {
      "message": "fix incorrect update of style when props.style transitions from null to non-null",
      "diff": "diff --git a/src/browser/ui/ReactDOMComponent.js b/src/browser/ui/ReactDOMComponent.js\nindex a1c8bc23489a..cf93f29b86d0 100644\n--- a/src/browser/ui/ReactDOMComponent.js\n+++ b/src/browser/ui/ReactDOMComponent.js\n@@ -367,6 +367,7 @@ ReactDOMComponent.Mixin = {\n             styleUpdates[styleName] = '';\n           }\n         }\n+        this._previousStyleCopy = null;\n       } else if (registrationNameModules.hasOwnProperty(propKey)) {\n         if (lastProps[propKey]) {\n           // Only call deleteListener if there was a listener previously or\ndiff --git a/src/browser/ui/__tests__/ReactDOMComponent-test.js b/src/browser/ui/__tests__/ReactDOMComponent-test.js\nindex aabc6393bcd1..2f99e484531d 100644\n--- a/src/browser/ui/__tests__/ReactDOMComponent-test.js\n+++ b/src/browser/ui/__tests__/ReactDOMComponent-test.js\n@@ -152,6 +152,17 @@ describe('ReactDOMComponent', function() {\n       expect(stubStyle.color).toEqual('');\n     });\n \n+    it(\"should update styles when 'style' changes from null to object\", function() {\n+      var container = document.createElement('div');\n+      var styles = {color: 'red'};\n+      React.render(<div style={styles} />, container);\n+      React.render(<div />, container);\n+      React.render(<div style={styles} />, container);\n+\n+      var stubStyle = container.firstChild.style;\n+      expect(stubStyle.color).toEqual('red');\n+    });\n+\n     it(\"should empty element when removing innerHTML\", function() {\n       var container = document.createElement('div');\n       React.render(<div dangerouslySetInnerHTML={{__html: ':)'}} />, container);"
    },
    {
      "message": "allow null and undefined values in non-frag object passed to proptypes.node",
      "diff": "diff --git a/src/classic/types/ReactPropTypes.js b/src/classic/types/ReactPropTypes.js\nindex e8f913f57301..8e2e9f112a18 100644\n--- a/src/classic/types/ReactPropTypes.js\n+++ b/src/classic/types/ReactPropTypes.js\n@@ -292,6 +292,7 @@ function isNode(propValue) {\n   switch (typeof propValue) {\n     case 'number':\n     case 'string':\n+    case 'undefined':\n       return true;\n     case 'boolean':\n       return !propValue;\n@@ -299,7 +300,7 @@ function isNode(propValue) {\n       if (Array.isArray(propValue)) {\n         return propValue.every(isNode);\n       }\n-      if (ReactElement.isValidElement(propValue)) {\n+      if (propValue === null || ReactElement.isValidElement(propValue)) {\n         return true;\n       }\n       propValue = ReactFragment.extractIfFragment(propValue);\ndiff --git a/src/classic/types/__tests__/ReactPropTypes-test.js b/src/classic/types/__tests__/ReactPropTypes-test.js\nindex c3d9a49d8ca0..f87856491a36 100644\n--- a/src/classic/types/__tests__/ReactPropTypes-test.js\n+++ b/src/classic/types/__tests__/ReactPropTypes-test.js\n@@ -384,7 +384,9 @@ describe('ReactPropTypes', function() {\n           k30: <MyComponent />,\n           k31: frag({k310: <a />}),\n           k32: 'Another string'\n-        })\n+        }),\n+        k4: null,\n+        k5: undefined\n       }));\n       expect(console.warn.calls).toEqual([]);\n \n@@ -397,7 +399,9 @@ describe('ReactPropTypes', function() {\n           k30: <MyComponent />,\n           k31: {k310: <a />},\n           k32: 'Another string'\n-        }\n+        },\n+        k4: null,\n+        k5: undefined\n       });\n     });"
    },
    {
      "message": "add warning when using non-component element types",
      "diff": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex cd20f3a569b0..f91b3c119b23 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -133,6 +133,20 @@ var ReactCompositeComponentMixin = {\n \n     // Initialize the public class\n     var inst = new Component(publicProps, publicContext);\n+\n+    if (__DEV__) {\n+      // This will throw later in _renderValidatedComponent, but add an early\n+      // warning now to help debugging\n+      warning(\n+        inst.render != null,\n+        '%s(...): No `render` method found on the returned component ' +\n+        'instance: you may have forgotten to define `render` in your ' +\n+        'component or you may have accidentally tried to render an element ' +\n+        'whose type is a function that isn\\'t a React component.',\n+        Component.displayName || Component.name || 'Component'\n+      );\n+    }\n+\n     // These should be set up in the constructor, but as a convenience for\n     // simpler class abstractions, we set them up after the fact.\n     inst.props = publicProps;\ndiff --git a/src/core/__tests__/ReactCompositeComponent-test.js b/src/core/__tests__/ReactCompositeComponent-test.js\nindex 6b8a56bb9cb5..c2fa177ff22d 100644\n--- a/src/core/__tests__/ReactCompositeComponent-test.js\n+++ b/src/core/__tests__/ReactCompositeComponent-test.js\n@@ -954,4 +954,17 @@ describe('ReactCompositeComponent', function() {\n     expect(a).toBe(b);\n   });\n \n+  it('should warn when using non-React functions in JSX', function() {\n+    function NotAComponent() {\n+      return [<div />, <div />];\n+    }\n+    expect(function() {\n+      ReactTestUtils.renderIntoDocument(<div><NotAComponent /></div>);\n+    }).toThrow();  // has no method 'render'\n+    expect(console.warn.calls.length).toBe(1);\n+    expect(console.warn.calls[0].args[0]).toContain(\n+      'NotAComponent(...): No `render` method found'\n+    );\n+  });\n+\n });"
    },
    {
      "message": "upgrade package dependencies for new esprima/jstransform",
      "diff": "diff --git a/package.json b/package.json\nindex 53b777234525..155f2b193e7c 100644\n--- a/package.json\n+++ b/package.json\n@@ -28,7 +28,7 @@\n   },\n   \"dependencies\": {\n     \"commoner\": \"^0.10.0\",\n-    \"jstransform\": \"^9.1.1\"\n+    \"jstransform\": \"^10.0.0\"\n   },\n   \"devDependencies\": {\n     \"benchmark\": \"~1.0.0\",\n@@ -41,7 +41,7 @@\n     \"es3ify\": \"~0.1.2\",\n     \"es5-shim\": \"^4.0.0\",\n     \"eslint\": \"^0.14.1\",\n-    \"esprima-fb\": \"^12001.1.0-dev-harmony-fb\",\n+    \"esprima-fb\": \"^13001.1.0-dev-harmony-fb\",\n     \"grunt\": \"~0.4.2\",\n     \"grunt-cli\": \"~0.1.9\",\n     \"grunt-compare-size\": \"~0.4.0\","
    },
    {
      "message": "add a code format in 2015-02-24-react-v0.13-rc1.md",
      "diff": "diff --git a/docs/_posts/2015-02-24-react-v0.13-rc1.md b/docs/_posts/2015-02-24-react-v0.13-rc1.md\nindex 7c4af04d9b10..48dc941adb5e 100644\n--- a/docs/_posts/2015-02-24-react-v0.13-rc1.md\n+++ b/docs/_posts/2015-02-24-react-v0.13-rc1.md\n@@ -42,7 +42,7 @@ We've also published version `0.13.0-rc1` of the `react` and `react-tools` packa\n * Support for using ES6 classes to build React components; see the [v0.13.0 beta 1 notes](http://facebook.github.io/react/blog/2015/01/27/react-v0.13.0-beta-1.html) for details\n * Added new top-level API `React.findDOMNode(component)`, which should be used in place of `component.getDOMNode()`. The base class for ES6-based components will not have `getDOMNode`. This change will enable some more patterns moving forward.\n * New `ref` style, allowing a callback to be used in place of a name: `<Photo ref={(c) => this._photo = c} />` allows you to reference the component with `this._photo` (as opposed to `ref=\"photo\"` which gives `this.refs.photo`)\n-* `this.setState()` can now take a function as the first argument for transactional state updates, such as `this.setState((state, props) => ({count: state.count + 1}));` -- this means that you no longer need to use this._pendingState, which is now gone.\n+* `this.setState()` can now take a function as the first argument for transactional state updates, such as `this.setState((state, props) => ({count: state.count + 1}));` -- this means that you no longer need to use `this._pendingState`, which is now gone.\n * Support for iterators and immutable-js sequences as children\n \n #### Deprecations"
    },
    {
      "message": "add mention of go and php server implementations in react tutorial",
      "diff": "diff --git a/docs/docs/tutorial.md b/docs/docs/tutorial.md\nindex 68ef54534256..1f1efad29e2a 100644\n--- a/docs/docs/tutorial.md\n+++ b/docs/docs/tutorial.md\n@@ -25,7 +25,7 @@ It'll also have a few neat features:\n \n ### Running a server\n \n-While it's not necessary to get started with this tutorial, later on we'll be adding functionality that requires `POST`ing to a running server. If this is something you are intimately familiar with and want to create your own server, please do. For the rest of you who might want to focus on learning about React without having to worry about the server-side aspects, we have written simple servers in a number of languages - JavaScript (using Node.js), Python, and Ruby. These are all available on GitHub. You can [view the source](https://github.com/reactjs/react-tutorial/) or [download a zip file](https://github.com/reactjs/react-tutorial/archive/master.zip) to get started.\n+While it's not necessary to get started with this tutorial, later on we'll be adding functionality that requires `POST`ing to a running server. If this is something you are intimately familiar with and want to create your own server, please do. For the rest of you who might want to focus on learning about React without having to worry about the server-side aspects, we have written simple servers in a number of languages - JavaScript (using Node.js), Python, Ruby, Go, and PHP. These are all available on GitHub. You can [view the source](https://github.com/reactjs/react-tutorial/) or [download a zip file](https://github.com/reactjs/react-tutorial/archive/master.zip) to get started.\n \n To get started using the tutorial download, just start editing `public/index.html`."
    },
    {
      "message": "fix comment to reflect the new  way of accessing a class type.",
      "diff": "diff --git a/src/classic/element/ReactElement.js b/src/classic/element/ReactElement.js\nindex c582f95a6ac5..5d03547c2859 100644\n--- a/src/classic/element/ReactElement.js\n+++ b/src/classic/element/ReactElement.js\n@@ -203,7 +203,7 @@ ReactElement.createElement = function(type, config, children) {\n ReactElement.createFactory = function(type) {\n   var factory = ReactElement.createElement.bind(null, type);\n   // Expose the type on the factory and the prototype so that it can be\n-  // easily accessed on elements. E.g. <Foo />.type === Foo.type.\n+  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n   // This should not be named `constructor` since this may not be the function\n   // that created the element, and it may not even be a constructor.\n   // Legacy hook TODO: Warn if this is accessed"
    },
    {
      "message": "allow rendering into document fragments. fixes #840",
      "diff": "diff --git a/src/browser/ui/ReactMount.js b/src/browser/ui/ReactMount.js\nindex 4d206d0e9340..3fe9bb41370f 100644\n--- a/src/browser/ui/ReactMount.js\n+++ b/src/browser/ui/ReactMount.js\n@@ -41,6 +41,7 @@ var nodeCache = {};\n \n var ELEMENT_NODE_TYPE = 1;\n var DOC_NODE_TYPE = 9;\n+var DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n \n /** Mapping from reactRootID to React component instance. */\n var instancesByReactRootID = {};\n@@ -355,7 +356,8 @@ var ReactMount = {\n     invariant(\n       container && (\n         container.nodeType === ELEMENT_NODE_TYPE ||\n-        container.nodeType === DOC_NODE_TYPE\n+        container.nodeType === DOC_NODE_TYPE ||\n+        container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE\n       ),\n       '_registerComponent(...): Target container is not a DOM element.'\n     );\n@@ -578,7 +580,8 @@ var ReactMount = {\n     invariant(\n       container && (\n         container.nodeType === ELEMENT_NODE_TYPE ||\n-        container.nodeType === DOC_NODE_TYPE\n+        container.nodeType === DOC_NODE_TYPE ||\n+        container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE\n       ),\n       'unmountComponentAtNode(...): Target container is not a DOM element.'\n     );\n@@ -790,7 +793,8 @@ var ReactMount = {\n     invariant(\n       container && (\n         container.nodeType === ELEMENT_NODE_TYPE ||\n-          container.nodeType === DOC_NODE_TYPE\n+        container.nodeType === DOC_NODE_TYPE ||\n+        container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE\n       ),\n       'mountComponentIntoNode(...): Target container is not valid.'\n     );"
    },
    {
      "message": "fix sourcemap filenames when using transformwithdetails. fixes #3140",
      "diff": "diff --git a/main.js b/main.js\nindex 8d0714103991..bcea00055d9d 100644\n--- a/main.js\n+++ b/main.js\n@@ -26,6 +26,9 @@ module.exports = {\n     if (options && options.sourceMap) {\n       result.sourceMap = output.sourceMap.toJSON();\n     }\n+    if (options && options.sourceFilename) {\n+      result.sourceMap.sources = [options.sourceFilename];\n+    }\n     return result;\n   }\n };\n@@ -46,6 +49,9 @@ function innerTransform(input, options) {\n   }\n \n   var visitorList = visitors.getVisitorsBySet(visitorSets);\n+  if (options.sourceFilename) {\n+    options.filename = options.sourceFilename;\n+  }\n   return transform(visitorList, input, options);\n }"
    },
    {
      "message": "update license for jsx_orphaned_brackets_transformer",
      "diff": "diff --git a/npm-jsx_orphaned_brackets_transformer/package.json b/npm-jsx_orphaned_brackets_transformer/package.json\nindex c16466c2bebd..2761d5eabc59 100644\n--- a/npm-jsx_orphaned_brackets_transformer/package.json\n+++ b/npm-jsx_orphaned_brackets_transformer/package.json\n@@ -13,6 +13,6 @@\n   \"bin\": {\n     \"jsx_orphaned_brackets_transformer\": \"./run.js\"\n   },\n-  \"license\": \"Apache-2.0\",\n+  \"license\": \"BSD-3-Clause\",\n   \"preferGlobal\": true\n }"
    },
    {
      "message": "add --es6module and --non-strict-es6module flags to jsx bin",
      "diff": "diff --git a/bin/jsx b/bin/jsx\nindex af7cc1f1d951..2389579b7924 100755\n--- a/bin/jsx\n+++ b/bin/jsx\n@@ -1,6 +1,6 @@\n #!/usr/bin/env node\n // -*- mode: js -*-\n-\"use strict\";\n+'use strict';\n \n var transform = require('../main').transform;\n \n@@ -14,15 +14,33 @@ require('commoner').version(\n ).option(\n   '--strip-types',\n   'Strips out type annotations.'\n+).option(\n+  '--es6module',\n+  'Parses the file as a valid ES6 module. ' +\n+  '(Note that this means implicit strict mode)'\n+).option(\n+  '--non-strict-es6module',\n+  'Parses the file as an ES6 module, except disables implicit strict-mode. ' +\n+  '(This is useful if you\\'re porting non-ES6 modules to ES6, but haven\\'t ' +\n+  'yet verified that they are strict-mode safe yet)'\n ).option(\n   '--source-map-inline',\n   'Embed inline sourcemap in transformed source'\n ).process(function(id, source) {\n+  var sourceType;\n+  if (this.options.es6module) {\n+    sourceType = 'module';\n+  }\n+  if (this.options.nonStrictEs6module) {\n+    sourceType = 'nonStrictModule';\n+  }\n+\n   // This is where JSX, ES6, etc. desugaring happens.\n   var options = {\n     harmony: this.options.harmony,\n     sourceMap: this.options.sourceMapInline,\n-    stripTypes: this.options.stripTypes\n+    stripTypes: this.options.stripTypes,\n+    sourceType: sourceType,\n   };\n   return transform(source, options);\n });"
    },
    {
      "message": "warn if a non-object value is used in reactfragment.create",
      "diff": "diff --git a/src/addons/ReactFragment.js b/src/addons/ReactFragment.js\nindex e6afbd75f4ff..f811ee568aa8 100644\n--- a/src/addons/ReactFragment.js\n+++ b/src/addons/ReactFragment.js\n@@ -96,6 +96,14 @@ var ReactFragment = {\n   // of its properties.\n   create: function(object) {\n     if (__DEV__) {\n+      if (typeof object !== 'object' || !object) {\n+        warning(\n+          false,\n+          'React.addons.createFragment only accepts a single object. Not %s',\n+          object\n+        );\n+        return object;\n+      }\n       if (canWarnForReactFragment) {\n         var proxy = {};\n         Object.defineProperty(proxy, fragmentKey, {\ndiff --git a/src/addons/__tests__/ReactFragment-test.js b/src/addons/__tests__/ReactFragment-test.js\nindex d7025f8029e2..ebd918b3afd7 100644\n--- a/src/addons/__tests__/ReactFragment-test.js\n+++ b/src/addons/__tests__/ReactFragment-test.js\n@@ -73,4 +73,13 @@ describe('ReactFragment', function() {\n     );\n   });\n \n+  it('should warn if accessing any property on a fragment', function() {\n+    spyOn(console, 'warn');\n+    ReactFragment.create(null);\n+    expect(console.warn.calls.length).toBe(1);\n+    expect(console.warn.calls[0].args[0]).toContain(\n+      'React.addons.createFragment only accepts a single object. Not null'\n+    );\n+  });\n+\n });"
    },
    {
      "message": "warn only once for each class when accessing .type",
      "diff": "diff --git a/src/classic/class/ReactClass.js b/src/classic/class/ReactClass.js\nindex f02a919ef009..28595325b2b9 100644\n--- a/src/classic/class/ReactClass.js\n+++ b/src/classic/class/ReactClass.js\n@@ -714,6 +714,9 @@ var typeDeprecationDescriptor = {\n       displayName,\n       displayName\n     );\n+    Object.defineProperty(this, 'type', {\n+      value: this\n+    });\n     return this;\n   }\n };\ndiff --git a/src/classic/class/__tests__/ReactClass-test.js b/src/classic/class/__tests__/ReactClass-test.js\nindex 0fe36f968512..563171a0f4bd 100644\n--- a/src/classic/class/__tests__/ReactClass-test.js\n+++ b/src/classic/class/__tests__/ReactClass-test.js\n@@ -50,12 +50,27 @@ describe('ReactClass-spec', function() {\n         return <div />;\n       }\n     });\n+    var SecondTestComponent = React.createClass({\n+      render: function() {\n+        return <div />;\n+      }\n+    });\n     expect(TestComponent.type).toBe(TestComponent);\n     expect(console.warn.argsForCall.length).toBe(1);\n     expect(console.warn.argsForCall[0][0]).toBe(\n       'Warning: TestComponent.type is deprecated. Use TestComponent ' +\n       'directly to access the class.'\n     );\n+    // Warn once per class\n+    expect(SecondTestComponent.type).toBe(SecondTestComponent);\n+    expect(console.warn.argsForCall.length).toBe(2);\n+    expect(console.warn.argsForCall[1][0]).toBe(\n+      'Warning: SecondTestComponent.type is deprecated. Use ' +\n+      'SecondTestComponent directly to access the class.'\n+    );\n+    // Not again\n+    expect(TestComponent.type).toBe(TestComponent);\n+    expect(console.warn.argsForCall.length).toBe(2);\n   });\n \n   it('should copy prop types onto the Constructor', function() {"
    },
    {
      "message": "add note linking to up-to-date doc on flux website",
      "diff": "diff --git a/docs/_posts/2014-09-24-testing-flux-applications.md b/docs/_posts/2014-09-24-testing-flux-applications.md\nindex f2728db83e14..df830620351b 100644\n--- a/docs/_posts/2014-09-24-testing-flux-applications.md\n+++ b/docs/_posts/2014-09-24-testing-flux-applications.md\n@@ -3,6 +3,8 @@ title: \"Testing Flux Applications\"\n author: Bill Fisher\n ---\n \n+**A more up-to-date version of this post is available as part of the [Flux documentation](http://facebook.github.io/flux/docs/testing-flux-applications.html).**\n+\n [Flux](http://facebook.github.io/flux/) is the application architecture that Facebook uses to build web applications with [React](http://facebook.github.io/react/). It's based on a unidirectional data flow. In previous blog posts and documentation articles, we've shown the [basic structure and data flow](http://facebook.github.io/flux/docs/overview.html), more closely examined the [dispatcher and action creators](http://facebook.github.io/react/blog/2014/07/30/flux-actions-and-the-dispatcher.html), and shown how to put it all together with a [tutorial](http://facebook.github.io/flux/docs/todo-list.html). Now let's look at how to do formal unit testing of Flux applications with [Jest](http://facebook.github.io/jest/), Facebook's auto-mocking testing framework."
    },
    {
      "message": "add conferences section to the community resources on the website",
      "diff": "diff --git a/docs/_data/nav_docs.yml b/docs/_data/nav_docs.yml\nindex 8b4acecef57d..fcde3e374f71 100644\n--- a/docs/_data/nav_docs.yml\n+++ b/docs/_data/nav_docs.yml\n@@ -8,6 +8,8 @@\n     title: Thinking in React\n - title: Community Resources\n   items:\n+  - id: conferences\n+    title: Conferences\n   - id: videos\n     title: Videos\n   - id: complementary-tools\ndiff --git a/docs/docs/conferences.md b/docs/docs/conferences.md\nnew file mode 100644\nindex 000000000000..d2c5297e01ac\n--- /dev/null\n+++ b/docs/docs/conferences.md\n@@ -0,0 +1,19 @@\n+\ufeff---\n+id: conferences\n+title: Conferences\n+permalink: conferences.html\n+prev: thinking-in-react.html\n+next: videos.html\n+---\n+\n+### React.js Conf 2015\n+January 28 & 29\n+\n+[Website](http://conf.reactjs.com/) - [Schedule](http://conf.reactjs.com/schedule.html) - [Videos](https://www.youtube.com/playlist?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr)\n+\n+<iframe width=\"650\" height=\"315\" src=\"//www.youtube.com/embed/KVZ-P-ZI6W4?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr\" frameborder=\"0\" allowfullscreen></iframe>\n+\n+### ReactEurope 2015\n+July 2 & 3\n+\n+[Website](http://www.react-europe.org/) - [Schedule](http://www.react-europe.org/#schedule)\ndiff --git a/docs/docs/thinking-in-react.md b/docs/docs/thinking-in-react.md\nindex e5518d5b7ad7..6d2dc87cb818 100644\n--- a/docs/docs/thinking-in-react.md\n+++ b/docs/docs/thinking-in-react.md\n@@ -2,7 +2,7 @@\n id: thinking-in-react\n title: Thinking in React\n prev: tutorial.html\n-next: videos.html\n+next: conferences.html\n ---\n \n This was originally a [blog post](/react/blog/2013/11/05/thinking-in-react.html) from the [official React blog](/react/blog).\ndiff --git a/docs/docs/videos.md b/docs/docs/videos.md\nindex 8036b1045709..c15a78dad770 100644\n--- a/docs/docs/videos.md\n+++ b/docs/docs/videos.md\n@@ -2,7 +2,7 @@\n id: videos\n title: Videos\n permalink: videos.html\n-prev: thinking-in-react.html\n+prev: conferences.html\n next: complementary-tools.html\n ---"
    },
    {
      "message": "move component class instantiation into reactcompositecomponent",
      "diff": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex 35fe4e4220c9..e0c73a158a64 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -108,7 +108,6 @@ var ReactCompositeComponentMixin = {\n    */\n   construct: function(element) {\n     this._currentElement = element;\n-\n     this._rootNodeID = null;\n     this._instance = null;"
    },
    {
      "message": "disable a couple rules since rest args aren't processed right",
      "diff": "diff --git a/src/classic/class/ReactClass.js b/src/classic/class/ReactClass.js\nindex 20fac2a0a4d8..7382bc9f4660 100644\n--- a/src/classic/class/ReactClass.js\n+++ b/src/classic/class/ReactClass.js\n@@ -642,6 +642,7 @@ function bindAutoBindMethod(component, method) {\n     boundMethod.__reactBoundArguments = null;\n     var componentName = component.constructor.displayName;\n     var _bind = boundMethod.bind;\n+    /* eslint-disable block-scoped-var, no-undef */\n     boundMethod.bind = function(newThis, ...args) {\n       // User is trying to bind() an autobound method; we effectively will\n       // ignore the value of \"this\" that the user is trying to use, so\n@@ -666,6 +667,7 @@ function bindAutoBindMethod(component, method) {\n       reboundMethod.__reactBoundMethod = method;\n       reboundMethod.__reactBoundArguments = args;\n       return reboundMethod;\n+      /* eslint-enable */\n     };\n   }\n   return boundMethod;"
    },
    {
      "message": "add boxflex and boxflexgroup to css unitless properties",
      "diff": "diff --git a/src/browser/ui/dom/CSSProperty.js b/src/browser/ui/dom/CSSProperty.js\nindex b93c093ed18d..e2f113faa843 100644\n--- a/src/browser/ui/dom/CSSProperty.js\n+++ b/src/browser/ui/dom/CSSProperty.js\n@@ -15,6 +15,8 @@\n  * CSS properties which accept numbers but are not in units of \"px\".\n  */\n var isUnitlessNumber = {\n+  boxFlex: true,\n+  boxFlexGroup: true,\n   columnCount: true,\n   flex: true,\n   flexGrow: true,"
    },
    {
      "message": "apply browserify bundle collapser to all build type",
      "diff": "diff --git a/grunt/config/browserify.js b/grunt/config/browserify.js\nindex d7730a48d1e7..163b117ad35c 100644\n--- a/grunt/config/browserify.js\n+++ b/grunt/config/browserify.js\n@@ -59,6 +59,7 @@ var basic = {\n   debug: false,\n   standalone: 'React',\n   transforms: [envify({NODE_ENV: 'development'})],\n+  plugins: [collapser],\n   after: [es3ify.transform, derequire, simpleBannerify]\n };\n \n@@ -82,6 +83,7 @@ var transformer = {\n   debug: false,\n   standalone: 'JSXTransformer',\n   transforms: [],\n+  plugins: [collapser],\n   after: [es3ify.transform, derequire, simpleBannerify]\n };\n \n@@ -94,6 +96,7 @@ var addons = {\n   standalone: 'React',\n   packageName: 'React (with addons)',\n   transforms: [envify({NODE_ENV: 'development'})],\n+  plugins: [collapser],\n   after: [es3ify.transform, derequire, simpleBannerify]\n };\n \n@@ -120,7 +123,8 @@ var withCodeCoverageLogging = {\n   transforms: [\n     envify({NODE_ENV: 'development'}),\n     require('coverify')\n-  ]\n+  ],\n+  plugins: [collapser]\n };\n \n module.exports = {"
    },
    {
      "message": "update docs to indicate that componentddidupdate is fired after changes are flushed to the dom.  fixes #2796",
      "diff": "diff --git a/docs/docs/ref-03-component-specs.md b/docs/docs/ref-03-component-specs.md\nindex 20efc831cc36..0bf75261b4a1 100644\n--- a/docs/docs/ref-03-component-specs.md\n+++ b/docs/docs/ref-03-component-specs.md\n@@ -195,7 +195,7 @@ Use this as an opportunity to perform preparation before an update occurs.\n componentDidUpdate(object prevProps, object prevState)\n ```\n \n-Invoked immediately after updating occurs. This method is not called for the initial render.\n+Invoked immediately after the component's updates are flushed to the DOM. This method is not called for the initial render.\n \n Use this as an opportunity to operate on the DOM when the component has been updated."
    },
    {
      "message": "use bundle-collapser to reduce browserified file size",
      "diff": "diff --git a/grunt/config/browserify.js b/grunt/config/browserify.js\nindex 0288fa751580..d7730a48d1e7 100644\n--- a/grunt/config/browserify.js\n+++ b/grunt/config/browserify.js\n@@ -9,6 +9,7 @@ var grunt = require('grunt');\n var UglifyJS = require('uglify-js');\n var uglifyify = require('uglifyify');\n var derequire = require('derequire');\n+var collapser = require('bundle-collapser/plugin');\n \n var SIMPLE_TEMPLATE =\n '/**\\n\\\n@@ -69,6 +70,7 @@ var min = {\n   debug: false,\n   standalone: 'React',\n   transforms: [envify({NODE_ENV: 'production'}), uglifyify],\n+  plugins: [collapser],\n   after: [es3ify.transform, derequire, minify, bannerify]\n };\n \n@@ -104,6 +106,7 @@ var addonsMin = {\n   standalone: 'React',\n   packageName: 'React (with addons)',\n   transforms: [envify({NODE_ENV: 'production'}), uglifyify],\n+  plugins: [collapser],\n   after: [es3ify.transform, derequire, minify, bannerify]\n };\n \ndiff --git a/grunt/tasks/browserify.js b/grunt/tasks/browserify.js\nindex 684c1ed8b0f0..060fe8f2437d 100644\n--- a/grunt/tasks/browserify.js\n+++ b/grunt/tasks/browserify.js\n@@ -13,6 +13,7 @@ module.exports = function() {\n   // grunt.config.requires('outfile');\n   // grunt.config.requires('entries');\n   config.transforms = config.transforms || [];\n+  config.plugins = config.plugins || [];\n   config.after = config.after || [];\n \n   // create the bundle we'll work with\n@@ -31,6 +32,8 @@ module.exports = function() {\n     bundle.transform({}, transform);\n   });\n \n+  config.plugins.forEach(bundle.plugin, bundle);\n+\n   // Actually bundle it up\n   var _this = this;\n   bundle.bundle(function(err, buf) {\ndiff --git a/package.json b/package.json\nindex e68ed8b5b4ab..f8a4bcfbf8b4 100644\n--- a/package.json\n+++ b/package.json\n@@ -32,6 +32,7 @@\n   \"devDependencies\": {\n     \"benchmark\": \"~1.0.0\",\n     \"browserify\": \"^7.0.2\",\n+    \"bundle-collapser\": \"^1.1.1\",\n     \"coverify\": \"~1.0.4\",\n     \"derequire\": \"^1.2.0\",\n     \"envify\": \"^3.0.0\","
    },
    {
      "message": "fix typo in warning message for invalid reused markup",
      "diff": "diff --git a/src/browser/ui/ReactMount.js b/src/browser/ui/ReactMount.js\nindex 95bde3dad25d..4d51f02f650f 100644\n--- a/src/browser/ui/ReactMount.js\n+++ b/src/browser/ui/ReactMount.js\n@@ -769,7 +769,7 @@ var ReactMount = {\n \n         if (__DEV__) {\n           console.warn(\n-            'React attempted to use reuse markup in a container but the ' +\n+            'React attempted to reuse markup in a container but the ' +\n             'checksum was invalid. This generally means that you are ' +\n             'using server rendering and the markup generated on the ' +\n             'server was not what the client was expecting. React injected ' +"
    },
    {
      "message": "throw a caught error in the default warning module",
      "diff": "diff --git a/src/vendor/core/warning.js b/src/vendor/core/warning.js\nindex 5321055edbc0..9a2bec313ddd 100644\n--- a/src/vendor/core/warning.js\n+++ b/src/vendor/core/warning.js\n@@ -33,7 +33,14 @@ if (__DEV__) {\n \n     if (!condition) {\n       var argIndex = 0;\n-      console.warn('Warning: ' + format.replace(/%s/g, () => args[argIndex++]));\n+      var message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n+      console.warn(message);\n+      try {\n+        // --- Welcome to debugging React ---\n+        // This error was thrown as a convenience so that you can use this stack\n+        // to find the callsite that caused this warning to fire.\n+        throw new Error(message);\n+      } catch(x) {}\n     }\n   };\n }"
    },
    {
      "message": "add additional supported methods to event documentation",
      "diff": "diff --git a/docs/docs/ref-05-events.md b/docs/docs/ref-05-events.md\nindex ab3efeb1cdfe..8f22b83f68a1 100644\n--- a/docs/docs/ref-05-events.md\n+++ b/docs/docs/ref-05-events.md\n@@ -21,7 +21,9 @@ Number eventPhase\n boolean isTrusted\n DOMEvent nativeEvent\n void preventDefault()\n+void isDefaultPrevented()\n void stopPropagation()\n+void isPropagationStopped()\n DOMEventTarget target\n Date timeStamp\n String type"
    },
    {
      "message": "add top-level api docs section for react.createelement.",
      "diff": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex 7c64e1fbc3d2..39bc37b169c2 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -22,6 +22,21 @@ Create a component given a specification. A component implements a `render` meth\n For more information about the specification object, see [Component Specs and Lifecycle](/react/docs/component-specs.html).\n \n \n+### React.createElement\n+\n+```javascript\n+function createElement(\n+  string/ReactComponent type,\n+  [object props],\n+  [children ...]\n+)\n+```\n+\n+Create and return a new ReactElement of the given type. The type argument can be either an\n+html tag name string (eg. 'div', 'span', etc), or a `ReactComponent` class that was created\n+with `React.createClass`.\n+\n+\n ### React.render\n \n ```javascript"
    },
    {
      "message": "add attributes formaction, formenctype, formmethod and formtarget",
      "diff": "diff --git a/src/browser/ui/dom/HTMLDOMPropertyConfig.js b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\nindex 850f6e5bc264..0f24d99acbb5 100644\n--- a/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n@@ -88,7 +88,11 @@ var HTMLDOMPropertyConfig = {\n     draggable: null,\n     encType: null,\n     form: MUST_USE_ATTRIBUTE,\n+    formAction: MUST_USE_ATTRIBUTE,\n+    formEncType: MUST_USE_ATTRIBUTE,\n+    formMethod: MUST_USE_ATTRIBUTE,\n     formNoValidate: HAS_BOOLEAN_VALUE,\n+    formTarget: MUST_USE_ATTRIBUTE,\n     frameBorder: MUST_USE_ATTRIBUTE,\n     height: MUST_USE_ATTRIBUTE,\n     hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,"
    },
    {
      "message": "update namespaced component to adapt with the v0.12",
      "diff": "diff --git a/docs/docs/02.1-jsx-in-depth.md b/docs/docs/02.1-jsx-in-depth.md\nindex 4d65d2c7347c..cd18fd8c3753 100644\n--- a/docs/docs/02.1-jsx-in-depth.md\n+++ b/docs/docs/02.1-jsx-in-depth.md\n@@ -136,10 +136,10 @@ JSX will take care to make the things right when compile your code.\n \n ```javascript\n var App = (\n-  Form(null, \n-    Form.Row(null, \n-      Form.Label(null), \n-      Form.Input(null)\n+  React.createElement(Form, null, \n+    React.createElement(Form.Row, null, \n+      React.createElement(Form.Label, null), \n+      React.createElement(Form.Input, null)\n     )\n   )\n );"
    },
    {
      "message": "change the date and the link url to match the proper roundup",
      "diff": "diff --git a/docs/_posts/2014-10-16-community-roundup-15.md b/docs/_posts/2014-10-17-community-roundup-23.md\nsimilarity index 100%\nrename from docs/_posts/2014-10-16-community-roundup-15.md\nrename to docs/_posts/2014-10-17-community-roundup-23.md"
    },
    {
      "message": "ensure proptypes test works when warning module is replaced",
      "diff": "diff --git a/src/core/__tests__/ReactPropTypes-test.js b/src/core/__tests__/ReactPropTypes-test.js\nindex 1753d6ec32cf..3987e8e4fadf 100644\n--- a/src/core/__tests__/ReactPropTypes-test.js\n+++ b/src/core/__tests__/ReactPropTypes-test.js\n@@ -407,8 +407,32 @@ describe('ReactPropTypes', function() {\n     });\n \n     it('should still work for deprecated typechecks', function() {\n-      typeCheckPass(PropTypes.renderable, []);\n-      typeCheckPass(PropTypes.renderable.isRequired, []);\n+      // We can't use typeCheckPass here because the warning module may do\n+      // something different in some environments. Luckily they should be fine\n+      // if they detect that console.warn is spied upon.\n+      spyOn(console, 'warn');\n+\n+      // typeCheckPass(PropTypes.renderable, []);\n+      var error = PropTypes.renderable(\n+        {testProp: []},\n+        'testProp',\n+        'testComponent',\n+        ReactPropTypeLocations.prop\n+      );\n+\n+      expect(error).toBe(undefined);\n+      expect(console.warn.calls.length).toBe(1);\n+\n+      // typeCheckPass(PropTypes.renderable.isRequired, []);\n+      error = PropTypes.renderable.isRequired(\n+        {testProp: []},\n+        'testProp',\n+        'testComponent',\n+        ReactPropTypeLocations.prop\n+      );\n+\n+      expect(error).toBe(undefined);\n+      expect(console.warn.calls.length).toBe(1);\n     });\n   });"
    },
    {
      "message": "require list property to be accessed as an attribute",
      "diff": "diff --git a/src/browser/ui/dom/HTMLDOMPropertyConfig.js b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\nindex 569f445837b6..98be31d2af9b 100644\n--- a/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n@@ -106,7 +106,7 @@ var HTMLDOMPropertyConfig = {\n     id: MUST_USE_PROPERTY,\n     label: null,\n     lang: null,\n-    list: null,\n+    list: MUST_USE_ATTRIBUTE,\n     loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n     manifest: MUST_USE_ATTRIBUTE,\n     max: null,"
    },
    {
      "message": "remove reactbrowsercomponent dependency from reacttextcomponent",
      "diff": "diff --git a/src/browser/ReactTextComponent.js b/src/browser/ReactTextComponent.js\nindex 25cdd6e1bf87..2293b78a485a 100644\n--- a/src/browser/ReactTextComponent.js\n+++ b/src/browser/ReactTextComponent.js\n@@ -20,7 +20,6 @@\n \"use strict\";\n \n var DOMPropertyOperations = require('DOMPropertyOperations');\n-var ReactBrowserComponentMixin = require('ReactBrowserComponentMixin');\n var ReactComponent = require('ReactComponent');\n var ReactElement = require('ReactElement');"
    },
    {
      "message": "change the global variable to a new sample component",
      "diff": "diff --git a/docs/docs/02.1-jsx-in-depth.md b/docs/docs/02.1-jsx-in-depth.md\nindex 43ce01c5435e..1f69e765b066 100644\n--- a/docs/docs/02.1-jsx-in-depth.md\n+++ b/docs/docs/02.1-jsx-in-depth.md\n@@ -138,7 +138,7 @@ var tree = Nav(null, React.DOM.span(null));\n If you are building a component that have a lot of childrens, or if you are building your application with some categories of reusable components (like a `Form` category), to make more simple and easiest, you can use a *namespaced component* to avoid something like this:\n \n ```javascript\n-var Form = Form;\n+var Form = MyFormComponent;\n var FormRow = Form.Row;\n var FormLabel = Form.Label;\n var FormInput = Form.Input;\n@@ -156,7 +156,7 @@ var App = (\n Instead of declare a bunch of variables at the top, you'll get just one component that have other components as attributes.\n \n ```javascript\n-var Form = Form;\n+var Form = MyFormComponent;\n \n var App = (\n   <Form>\n@@ -171,11 +171,11 @@ var App = (\n For doing this, you just need to create your *\"sub-components\"* as attributes of the main component:\n \n ```javascript\n-var Form = React.createClass({ ... });\n+var MyFormComponent = React.createClass({ ... });\n \n-Form.Row = React.createClass({ ... });\n-Form.Label = React.createClass({ ... });\n-Form.Input = React.createClass({ ... });\n+MyFormComponent.Row = React.createClass({ ... });\n+MyFormComponent.Label = React.createClass({ ... });\n+MyFormComponent.Input = React.createClass({ ... });\n ```\n \n JSX will take care to make the things right when compile your code."
    },
    {
      "message": "acknowledge projectmoon for allowing us to use the flux name on npm",
      "diff": "diff --git a/docs/acknowledgements.md b/docs/acknowledgements.md\nindex cf5495156028..98f7b8e0608c 100644\n--- a/docs/acknowledgements.md\n+++ b/docs/acknowledgements.md\n@@ -16,4 +16,4 @@ We'd like to thank all of our contributors:\n   {% endfor %}\n </div>\n \n-In addition, we're grateful to [Jeff Barczewski](https://github.com/jeffbski) for allowing us to use the [react](https://www.npmjs.org/package/react) package name on npm and to [Christopher Aue](http://christopheraue.net/) for letting us use the [reactjs.com](http://reactjs.com/) domain name and the [@reactjs](https://twitter.com/reactjs) username on Twitter.\n+In addition, we're grateful to [Jeff Barczewski](https://github.com/jeffbski) for allowing us to use the [react](https://www.npmjs.org/package/react) package name on npm and to [Christopher Aue](http://christopheraue.net/) for letting us use the [reactjs.com](http://reactjs.com/) domain name and the [@reactjs](https://twitter.com/reactjs) username on Twitter.  We'd also like to thank [ProjectMoon](https://github.com/ProjectMoon) for letting us use the [flux](https://www.npmjs.org/package/flux) package name on npm."
    },
    {
      "message": "remove non-attribute scrollleft and scrolltop from htmldompropertyconfig",
      "diff": "diff --git a/src/browser/ui/dom/HTMLDOMPropertyConfig.js b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\nindex 52fbf32ecef4..fadea2ae090a 100644\n--- a/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n@@ -132,9 +132,7 @@ var HTMLDOMPropertyConfig = {\n     rowSpan: null,\n     sandbox: null,\n     scope: null,\n-    scrollLeft: MUST_USE_PROPERTY,\n     scrolling: null,\n-    scrollTop: MUST_USE_PROPERTY,\n     seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n     selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n     shape: null,"
    },
    {
      "message": "explain where to provide the key for dynamic children.",
      "diff": "diff --git a/docs/docs/04-multiple-components.md b/docs/docs/04-multiple-components.md\nindex eb04cfd3f44d..0b3d9bf6b4a9 100644\n--- a/docs/docs/04-multiple-components.md\n+++ b/docs/docs/04-multiple-components.md\n@@ -133,6 +133,46 @@ The situation gets more complicated when the children are shuffled around (as in\n \n When React reconciles the keyed children, it will ensure that any child with `key` will be reordered (instead of clobbered) or destroyed (instead of reused).\n \n+The `key` should *always* be supplied directly to the components in the array, not to the container HTML child of each component in the array:\n+\n+```javascript\n+// WRONG!\n+var ListItemWrapper = React.createClass({\n+  render: function() {\n+    return <li key={this.props.data.id}>{this.props.data.text}</li>;\n+  }\n+});\n+var MyComponent = React.createClass({\n+  render: function() {\n+    return (\n+      <ul>\n+        {this.props.results.map(function(result) {\n+          return <ListItemWrapper data={result}/>;\n+        })}\n+      </ul>\n+    );\n+  }\n+});\n+\n+// Correct :)\n+var ListItemWrapper = React.createClass({\n+  render: function() {\n+    return <li>{this.props.data.text}</li>;\n+  }\n+});\n+var MyComponent = React.createClass({\n+  render: function() {\n+    return (\n+      <ul>\n+        {this.props.results.map(function(result) {\n+           return <ListItemWrapper key={result.id} data={result}/>;\n+        })}\n+      </ul>\n+    );\n+  }\n+});\n+```\n+\n You can also key children by passing an object. The object keys will be used as `key` for each value. However it is important to remember that JavaScript does not guarantee the ordering of properties will be preserved. In practice browsers will preserve property order **except** for properties that can be parsed as a 32-bit unsigned integers. Numeric properties will be ordered sequentially and before other properties. If this happens React will render components out of order. This can be avoided by adding a string prefix to the key:\n \n ```javascript"
    },
    {
      "message": "reduce unnecessary warning while including jsx transformer in browser",
      "diff": "diff --git a/vendor/browser-transforms.js b/vendor/browser-transforms.js\nindex c3783d085f87..3506a76934f0 100644\n--- a/vendor/browser-transforms.js\n+++ b/vendor/browser-transforms.js\n@@ -312,6 +312,10 @@ function runScripts() {\n     }\n   }\n \n+  if (jsxScripts.length < 1) {\n+    return;\n+  }\n+\n   console.warn(\n     'You are using the in-browser JSX transformer. Be sure to precompile ' +\n     'your JSX for production - ' +"
    },
    {
      "message": "fix bad merge from 04c9820694ac07bb88d3dda32bf35a063c3c61a4",
      "diff": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex 3020ccdd1c08..9d3d716b7209 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -466,6 +466,10 @@ function validateLifeCycleOnReplaceState(instance) {\n  * specification keys when building `ReactCompositeComponent` classses.\n  */\n function mixSpecIntoComponent(Constructor, spec) {\n+  if (!spec) {\n+    return;\n+  }\n+\n   invariant(\n     !ReactDescriptor.isValidFactory(spec),\n     'ReactCompositeComponent: You\\'re attempting to ' +\n@@ -483,7 +487,7 @@ function mixSpecIntoComponent(Constructor, spec) {\n   // chaining order is applied to methods with DEFINE_MANY policy, whether\n   // mixins are listed before or after these methods in the spec.\n   if (spec.hasOwnProperty(MIXINS_KEY)) {\n-    RESERVED_SPEC_KEYS.mixins(ConvenienceConstructor, spec.mixins);\n+    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n   }\n \n   for (var name in spec) {"
    },
    {
      "message": "throw if a reserved property is defined in 'statics'",
      "diff": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex 5c1e06566529..42872293d0ee 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -555,6 +555,16 @@ function mixStaticSpecIntoComponent(Constructor, statics) {\n       continue;\n     }\n \n+    var isReserved = name in RESERVED_SPEC_KEYS;\n+    invariant(\n+      !isReserved,\n+      'ReactCompositeComponent: You are attempting to define a reserved ' +\n+      'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n+      'as an instance property instead; it will still be accessible on the ' +\n+      'constructor.',\n+      name\n+    );\n+\n     var isInherited = name in Constructor;\n     invariant(\n       !isInherited,\ndiff --git a/src/core/__tests__/ReactCompositeComponent-test.js b/src/core/__tests__/ReactCompositeComponent-test.js\nindex 2deb31e912af..20c7accb698f 100644\n--- a/src/core/__tests__/ReactCompositeComponent-test.js\n+++ b/src/core/__tests__/ReactCompositeComponent-test.js\n@@ -1272,6 +1272,29 @@ describe('ReactCompositeComponent', function() {\n     expect(Component.pqr()).toBe(Component.type);\n   });\n \n+  it('should throw if a reserved property is in statics', function() {\n+    expect(function() {\n+      React.createClass({\n+        statics: {\n+          getDefaultProps: function() {\n+            return {\n+              foo: 0\n+            };\n+          }\n+        },\n+\n+        render: function() {\n+          return <span />;\n+        }\n+      });\n+    }).toThrow(\n+      'Invariant Violation: ReactCompositeComponent: You are attempting to ' +\n+      'define a reserved property, `getDefaultProps`, that shouldn\\'t be on ' +\n+      'the \"statics\" key. Define it as an instance property instead; it ' +\n+      'will still be accessible on the constructor.'\n+    );\n+  });\n+\n   it('should support statics in mixins', function() {\n     var Mixin = {\n       statics: {"
    },
    {
      "message": "add a 'note' about passing arrays into the `value` attribute",
      "diff": "diff --git a/docs/docs/06-forms.md b/docs/docs/06-forms.md\nindex 8cea0db813e6..7f61d17d5523 100644\n--- a/docs/docs/06-forms.md\n+++ b/docs/docs/06-forms.md\n@@ -146,3 +146,7 @@ The selected `<option>` in an HTML `<select>` is normally specified through that\n ```\n \n To make an uncontrolled component, `defaultValue` is used instead.\n+\n+> Note:\n+>\n+> You can pass an array into the `value` attribute, allowing you to select multiple options in a `select` tag: `<select multiple value=\"{['B', 'C']}\">`."
    },
    {
      "message": "add ={true} so it's aligned with recommended practises",
      "diff": "diff --git a/docs/docs/06-forms.md b/docs/docs/06-forms.md\nindex 7f61d17d5523..b72594ec2469 100644\n--- a/docs/docs/06-forms.md\n+++ b/docs/docs/06-forms.md\n@@ -149,4 +149,4 @@ To make an uncontrolled component, `defaultValue` is used instead.\n \n > Note:\n >\n-> You can pass an array into the `value` attribute, allowing you to select multiple options in a `select` tag: `<select multiple value=\"{['B', 'C']}\">`.\n+> You can pass an array into the `value` attribute, allowing you to select multiple options in a `select` tag: `<select multiple={true} value=\"{['B', 'C']}\">`."
    },
    {
      "message": "update 09.2-form-input-binding-sugar.md -> better checkedlink documentation",
      "diff": "diff --git a/docs/docs/09.2-form-input-binding-sugar.md b/docs/docs/09.2-form-input-binding-sugar.md\nindex eafd053b08af..0e2bc0973079 100644\n--- a/docs/docs/09.2-form-input-binding-sugar.md\n+++ b/docs/docs/09.2-form-input-binding-sugar.md\n@@ -66,9 +66,9 @@ var WithLink = React.createClass({\n \n `ReactLink` objects can be passed up and down the tree as props, so it's easy (and explicit) to set up two-way binding between a component deep in the hierarchy and state that lives higher in the hierarchy.\n \n-Note that `<input>` supports ReactLink for both `value` and `checked`. For checkboxes, you should use `checkedLink` instead of `valueLink`, as their value is fixed to `on`: \n+Note that checkboxes have a special behavior regarding their `value` attribute, which is the value that will be sent on form submit if the checkbox is checked (defaults to `on`). The `value` attribute is not updated when the checkbox is checked or unchecked. For checkboxes, you should use `checkedLink` instead of `valueLink`:\n ```\n-<input type=\"checkbox\" checkedLink=valueLink={this.linkState('booleanValue')} />\n+<input type=\"checkbox\" checkedLink={this.linkState('booleanValue')} />\n ```"
    },
    {
      "message": "remove empty textnode left behind by ie8 setinnerhtml workaround",
      "diff": "diff --git a/src/browser/ui/__tests__/ReactMount-test.js b/src/browser/ui/__tests__/ReactMount-test.js\nindex eef0b1fcde77..4dd3448e6726 100644\n--- a/src/browser/ui/__tests__/ReactMount-test.js\n+++ b/src/browser/ui/__tests__/ReactMount-test.js\n@@ -106,4 +106,12 @@ describe('ReactMount', function() {\n     expect(mockMount.mock.calls.length).toBe(2);\n     expect(mockUnmount.mock.calls.length).toBe(1);\n   });\n+\n+  it('should reuse markup if rendering to the same target twice', function() {\n+    var container = document.createElement('container');\n+    var instance1 = React.renderComponent(<div />, container);\n+    var instance2 = React.renderComponent(<div />, container);\n+\n+    expect(instance1 === instance2).toBe(true);\n+  });\n });\ndiff --git a/src/browser/ui/dom/setInnerHTML.js b/src/browser/ui/dom/setInnerHTML.js\nindex a81caa437590..ae43ce629b28 100644\n--- a/src/browser/ui/dom/setInnerHTML.js\n+++ b/src/browser/ui/dom/setInnerHTML.js\n@@ -66,7 +66,15 @@ if (ExecutionEnvironment.canUseDOM) {\n         // Recover leading whitespace by temporarily prepending any character.\n         // \\uFEFF has the potential advantage of being zero-width/invisible.\n         node.innerHTML = '\\uFEFF' + html;\n-        node.firstChild.deleteData(0, 1);\n+\n+        // deleteData leaves an empty `TextNode` which offsets the index of all\n+        // children. Definitely want to avoid this.\n+        var textNode = node.firstChild;\n+        if (textNode.data.length === 1) {\n+          node.removeChild(textNode);\n+        } else {\n+          textNode.deleteData(0, 1);\n+        }\n       } else {\n         node.innerHTML = html;\n       }"
    },
    {
      "message": "use faster cached regexps for tests in setinnerhtml",
      "diff": "diff --git a/src/browser/ui/dom/setInnerHTML.js b/src/browser/ui/dom/setInnerHTML.js\nindex a81caa437590..23da3071a01d 100644\n--- a/src/browser/ui/dom/setInnerHTML.js\n+++ b/src/browser/ui/dom/setInnerHTML.js\n@@ -20,6 +20,9 @@\n \n var ExecutionEnvironment = require('ExecutionEnvironment');\n \n+var WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\n+var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n+\n /**\n  * Set the innerHTML property of a node, ensuring that whitespace is preserved\n  * even in IE8.\n@@ -56,13 +59,8 @@ if (ExecutionEnvironment.canUseDOM) {\n       // thin air on IE8, this only happens if there is no visible text\n       // in-front of the non-visible tags. Piggyback on the whitespace fix\n       // and simply check if any non-visible tags appear in the source.\n-      if (html.match(/^[ \\r\\n\\t\\f]/) ||\n-          html[0] === '<' && (\n-            html.indexOf('<noscript') !== -1 ||\n-            html.indexOf('<script') !== -1 ||\n-            html.indexOf('<style') !== -1 ||\n-            html.indexOf('<meta') !== -1 ||\n-            html.indexOf('<link') !== -1)) {\n+      if (WHITESPACE_TEST.test(html) ||\n+          html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n         // Recover leading whitespace by temporarily prepending any character.\n         // \\uFEFF has the potential advantage of being zero-width/invisible.\n         node.innerHTML = '\\uFEFF' + html;"
    },
    {
      "message": "fix reacttestutils.mockcomponent so that mocktagname is not ignored.",
      "diff": "diff --git a/src/test/ReactTestUtils.js b/src/test/ReactTestUtils.js\nindex 7b504c01c5e3..d56ad26b31fb 100644\n--- a/src/test/ReactTestUtils.js\n+++ b/src/test/ReactTestUtils.js\n@@ -238,9 +238,10 @@ var ReactTestUtils = {\n    * @return {object} the ReactTestUtils object (for chaining)\n    */\n   mockComponent: function(module, mockTagName) {\n+    mockTagName = mockTagName || module.mockTagName || \"div\";\n+\n     var ConvenienceConstructor = React.createClass({\n       render: function() {\n-        var mockTagName = mockTagName || module.mockTagName || \"div\";\n         return ReactDOM[mockTagName](null, this.props.children);\n       }\n     });"
    },
    {
      "message": "avoid leading spaces when first argument to joinclasses is falsy.",
      "diff": "diff --git a/src/utils/joinClasses.js b/src/utils/joinClasses.js\nindex f6a5c9e4d3c4..5e610cf933bc 100644\n--- a/src/utils/joinClasses.js\n+++ b/src/utils/joinClasses.js\n@@ -35,7 +35,9 @@ function joinClasses(className/*, ... */) {\n   if (argLength > 1) {\n     for (var ii = 1; ii < argLength; ii++) {\n       nextClass = arguments[ii];\n-      nextClass && (className += ' ' + nextClass);\n+      if (nextClass) {\n+        className = (className ? className + ' ' : '') + nextClass;\n+      }\n     }\n   }\n   return className;"
    },
    {
      "message": "add note about key prop being excluded by clonewithprops",
      "diff": "diff --git a/docs/docs/09.5-clone-with-props.md b/docs/docs/09.5-clone-with-props.md\nindex 0d466adf4a26..d6a4bc0ab760 100644\n--- a/docs/docs/09.5-clone-with-props.md\n+++ b/docs/docs/09.5-clone-with-props.md\n@@ -12,3 +12,9 @@ In rare situations a component may want to change the props of a component that\n #### `ReactComponent React.addons.cloneWithProps(ReactComponent component, object? extraProps)`\n \n Do a shallow copy of `component` and merge any props provided by `extraProps`. Props are merged in the same manner as [`transferPropsTo()`](/react/docs/component-api.html#transferpropsto), so props like `className` will be merged intelligently.\n+\n+**NOTE:** `cloneWithProps` does not transfer the `key` prop to the cloned component. If you wish to preserve the key, add it to the `extraProps` object:\n+\n+```js\n+var clonedComponent = cloneWithProps(originalComponent, { key : originalComponent.props.key });\n+```"
    },
    {
      "message": "remove stale deprecation note from unmounting docs",
      "diff": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex e15975d05dbd..9a215b76ecb8 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -53,10 +53,6 @@ boolean unmountComponentAtNode(DOMElement container)\n \n Remove a mounted React component from the DOM and clean up its event handlers and state. If no component was mounted in the container, calling this function does nothing. Returns `true` if a component was unmounted and `false` if there was no component to unmount.\n \n-> Note:\n->\n-> This method was called `React.unmountAndReleaseReactRootNode` until v0.5. It still works in v0.5 but will be removed in future versions.\n-\n \n ### React.renderComponentToString"
    },
    {
      "message": "add destructuring visitor to jsx harmony transform",
      "diff": "diff --git a/vendor/fbtransform/visitors.js b/vendor/fbtransform/visitors.js\nindex 701472e0e9ce..e3e0b795598f 100644\n--- a/vendor/fbtransform/visitors.js\n+++ b/vendor/fbtransform/visitors.js\n@@ -1,6 +1,7 @@\n /*global exports:true*/\n var es6ArrowFunctions = require('jstransform/visitors/es6-arrow-function-visitors');\n var es6Classes = require('jstransform/visitors/es6-class-visitors');\n+var es6Destructuring = require('jstransform/visitors/es6-destructuring-visitors');\n var es6ObjectConciseMethod = require('jstransform/visitors/es6-object-concise-method-visitors');\n var es6ObjectShortNotation = require('jstransform/visitors/es6-object-short-notation-visitors');\n var es6RestParameters = require('jstransform/visitors/es6-rest-param-visitors');\n@@ -14,6 +15,7 @@ var reactDisplayName = require('./transforms/reactDisplayName');\n var transformVisitors = {\n   'es6-arrow-functions': es6ArrowFunctions.visitorList,\n   'es6-classes': es6Classes.visitorList,\n+  'es6-destructuring': es6Destructuring.visitorList,\n   'es6-object-concise-method': es6ObjectConciseMethod.visitorList,\n   'es6-object-short-notation': es6ObjectShortNotation.visitorList,\n   'es6-rest-params': es6RestParameters.visitorList,\n@@ -31,6 +33,7 @@ var transformRunOrder = [\n   'es6-classes',\n   'es6-rest-params',\n   'es6-templates',\n+  'es6-destructuring',\n   'react'\n ];"
    },
    {
      "message": "fix ie8 potentially throwing during restoreselection",
      "diff": "diff --git a/src/vendor/core/dom/focusNode.js b/src/vendor/core/dom/focusNode.js\nindex 9c7723e493e1..0c0ae601568e 100644\n--- a/src/vendor/core/dom/focusNode.js\n+++ b/src/vendor/core/dom/focusNode.js\n@@ -19,14 +19,15 @@\n \"use strict\";\n \n /**\n- * IE8 throws if an input/textarea is disabled and we try to focus it.\n- * Focus only when necessary.\n- *\n  * @param {DOMElement} node input/textarea to focus\n  */\n function focusNode(node) {\n-  if (!node.disabled) {\n+  // IE8 can throw \"Can't move focus to the control because it is invisible,\n+  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n+  // reasons that are too expensive and fragile to test.\n+  try {\n     node.focus();\n+  } catch(e) {\n   }\n }"
    },
    {
      "message": "add support for inline sourcemaps in jsx executable",
      "diff": "diff --git a/bin/jsx b/bin/jsx\nindex e0f6247a39aa..45009e435e23 100755\n--- a/bin/jsx\n+++ b/bin/jsx\n@@ -2,8 +2,7 @@\n // -*- mode: js -*-\n \"use strict\";\n \n-var visitors = require('../vendor/fbtransform/visitors');\n-var transform = require('jstransform').transform;\n+var transform = require('../main').transform;\n \n require('commoner').version(\n   require('../package.json').version\n@@ -12,13 +11,14 @@ require('commoner').version(\n }).option(\n   '--harmony',\n   'Turns on JS transformations such as ES6 Classes etc.'\n+).option(\n+  '--source-map-inline',\n+  'Embed inline sourcemap in transformed source'\n ).process(function(id, source) {\n   // This is where JSX, ES6, etc. desugaring happens.\n-  var visitorList;\n-  if (this.options.harmony) {\n-    visitorList = visitors.getAllVisitors();\n-  } else {\n-    visitorList = visitors.transformVisitors.react;\n-  }\n-  return transform(visitorList, source).code;\n+  var options = {\n+    harmony: this.options.harmony,\n+    sourceMap: this.options.sourceMapInline\n+  };\n+  return transform(source, options);\n });\ndiff --git a/npm-react-tools/README.md b/npm-react-tools/README.md\nindex 38a259f25fba..f2073866e87c 100644\n--- a/npm-react-tools/README.md\n+++ b/npm-react-tools/README.md\n@@ -26,6 +26,7 @@ This package installs a `jsx` executable that can be used to transform JSX into\n       --source-charset <utf8 | win1252 | ...>  Charset of source (default: utf8)\n       --output-charset <utf8 | win1252 | ...>  Charset of output (default: utf8)\n       --harmony                                Turns on JS transformations such as ES6 Classes etc.\n+      --source-map-inline                      Embed inline sourcemap in transformed source\n \n ## API"
    },
    {
      "message": "fix the disappearing footer on the todomvc-flux sample",
      "diff": "diff --git a/examples/todomvc-flux/index.html b/examples/todomvc-flux/index.html\nindex 27efd297eed3..9c884862b755 100644\n--- a/examples/todomvc-flux/index.html\n+++ b/examples/todomvc-flux/index.html\n@@ -7,7 +7,9 @@\n \t\t<link rel=\"stylesheet\" href=\"css/app.css\">\n \t</head>\n \t<body>\n-\t\t<section id=\"todoapp\" />\n+\t\t<div>\n+\t\t\t<section id=\"todoapp\" />\n+\t\t</div>\n \t\t<footer id=\"info\">\n \t\t\t<p>Double-click to edit a todo</p>\n \t\t\t<p>Created by <a href=\"http://facebook.com/bill.fisher.771\">Bill Fisher</a></p>"
    },
    {
      "message": "make invariant show formatted actual errors in all unminified environments",
      "diff": "diff --git a/src/vendor/core/invariant.js b/src/vendor/core/invariant.js\nindex 12649d5e6128..d99f3615c985 100644\n--- a/src/vendor/core/invariant.js\n+++ b/src/vendor/core/invariant.js\n@@ -29,34 +29,32 @@\n  * will remain to ensure logic does not differ in production.\n  */\n \n-var invariant = function(condition) {\n-  if (!condition) {\n-    var error = new Error(\n-      'Minified exception occured; use the non-minified dev environment for ' +\n-      'the full error message and additional helpful warnings.'\n-    );\n-    error.framesToPop = 1;\n-    throw error;\n-  }\n-};\n-\n-if (__DEV__) {\n-  invariant = function(condition, format, a, b, c, d, e, f) {\n+var invariant = function(condition, format, a, b, c, d, e, f) {\n+  if (__DEV__) {\n     if (format === undefined) {\n       throw new Error('invariant requires an error message argument');\n     }\n+  }\n \n-    if (!condition) {\n+  if (!condition) {\n+    var error;\n+    if (format === undefined) {\n+      error = new Error(\n+        'Minified exception occurred; use the non-minified dev environment ' +\n+        'for the full error message and additional helpful warnings.'\n+      );\n+    } else {\n       var args = [a, b, c, d, e, f];\n       var argIndex = 0;\n-      var error = new Error(\n+      error = new Error(\n         'Invariant Violation: ' +\n         format.replace(/%s/g, function() { return args[argIndex++]; })\n       );\n-      error.framesToPop = 1; // we don't care about invariant's own frame\n-      throw error;\n     }\n-  };\n-}\n+\n+    error.framesToPop = 1; // we don't care about invariant's own frame\n+    throw error;\n+  }\n+};\n \n module.exports = invariant;"
    },
    {
      "message": "add a note about production mode for npm installs.",
      "diff": "diff --git a/docs/downloads.md b/docs/downloads.md\nindex 0888d99f4163..769c6b6ec9f9 100644\n--- a/docs/downloads.md\n+++ b/docs/downloads.md\n@@ -76,6 +76,8 @@ React.renderComponent(...);\n \n If you'd like to use any [add-ons](/react/docs/addons.html), use `var React = require('react/addons');` instead.\n \n+**Note:** by default, React will be in development mode. To use React in production mode, set the environment variable `NODE_ENV` to `production`. For use in node, this is sufficient; if you are using browserify, the [envify](https://github.com/hughsk/envify) transform is needed to make use of environment variables. A minifier that performs dead-code elimination such as [UglifyJS](https://github.com/mishoo/UglifyJS2) is recommended to completely remove the extra code present in development mode.\n+\n ## Bower\n \n ```sh\ndiff --git a/npm-react/README.md b/npm-react/README.md\nindex e77fe6f0d9cb..b893636f4e06 100644\n--- a/npm-react/README.md\n+++ b/npm-react/README.md\n@@ -5,6 +5,9 @@ without also requiring the JSX transformer. This is especially useful for cases\n want to [`browserify`](https://github.com/substack/node-browserify) your module using\n `React`.\n \n+**Note:** by default, React will be in development mode. The development version includes extra warnings about common mistakes, whereas the production version includes extra performance optimizations and strips all error messages.\n+\n+To use React in production mode, set the environment variable `NODE_ENV` to `production`. For use in node, this is sufficient; if you are using browserify, the [envify](https://github.com/hughsk/envify) transform is needed to make use of environment variables. A minifier that performs dead-code elimination such as [UglifyJS](https://github.com/mishoo/UglifyJS2) is recommended to completely remove the extra code present in development mode.\n \n ## Example Usage"
    },
    {
      "message": "change community roundup 19's react bootstrap author to @stevoland",
      "diff": "diff --git a/docs/_posts/2014-06-27-community-roundup-19.md b/docs/_posts/2014-06-27-community-roundup-19.md\nindex 71b774f760e6..30f2b9eea3b4 100644\n--- a/docs/_posts/2014-06-27-community-roundup-19.md\n+++ b/docs/_posts/2014-06-27-community-roundup-19.md\n@@ -14,7 +14,7 @@ In case you haven't seen it, we've consolidated the tooling solution around Reac\n \n - [Ryan Florence](https://github.com/rpflorence)'s [react-nested-router](https://github.com/rpflorence/react-nested-router), which is a translation of the Ember router API to React.\n \n-- [Pieter Vanderwerff](https://github.com/pieterv)'s [React-Bootstrap](https://github.com/react-bootstrap/react-bootstrap), which wraps the popular framework with a bit of React goodness. The [website](http://react-bootstrap.github.io/components.html) features live-editable demos.\n+- [Stephen J. Collings](https://github.com/stevoland)'s [React-Bootstrap](https://github.com/react-bootstrap/react-bootstrap), which wraps the popular framework with a bit of React goodness. The [website](http://react-bootstrap.github.io/components.html) features live-editable demos.\n \n - [Andrey Popp](https://github.com/andreypopp)'s [react-quickstart](https://github.com/andreypopp/react-quickstart), which gives you a quick template for server-side rendering and routing, among other features."
    },
    {
      "message": "add missing markerstart, markermid, markerend svg attributes",
      "diff": "diff --git a/src/browser/ui/dom/SVGDOMPropertyConfig.js b/src/browser/ui/dom/SVGDOMPropertyConfig.js\nindex ca1a40345833..e9fbe129452c 100644\n--- a/src/browser/ui/dom/SVGDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/SVGDOMPropertyConfig.js\n@@ -39,6 +39,9 @@ var SVGDOMPropertyConfig = {\n     fy: MUST_USE_ATTRIBUTE,\n     gradientTransform: MUST_USE_ATTRIBUTE,\n     gradientUnits: MUST_USE_ATTRIBUTE,\n+    markerEnd: MUST_USE_ATTRIBUTE,\n+    markerMid: MUST_USE_ATTRIBUTE,\n+    markerStart: MUST_USE_ATTRIBUTE,\n     offset: MUST_USE_ATTRIBUTE,\n     opacity: MUST_USE_ATTRIBUTE,\n     patternContentUnits: MUST_USE_ATTRIBUTE,\n@@ -73,6 +76,9 @@ var SVGDOMPropertyConfig = {\n     fontSize: 'font-size',\n     gradientTransform: 'gradientTransform',\n     gradientUnits: 'gradientUnits',\n+    markerEnd: 'marker-end',\n+    markerMid: 'marker-mid',\n+    markerStart: 'marker-start',\n     patternContentUnits: 'patternContentUnits',\n     patternUnits: 'patternUnits',\n     preserveAspectRatio: 'preserveAspectRatio',"
    },
    {
      "message": "fill-opacity, font-family, font-size, opacity, stroke-opacity.",
      "diff": "diff --git a/src/browser/ui/dom/SVGDOMPropertyConfig.js b/src/browser/ui/dom/SVGDOMPropertyConfig.js\nindex d66925a9b3e6..ca1a40345833 100644\n--- a/src/browser/ui/dom/SVGDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/SVGDOMPropertyConfig.js\n@@ -32,11 +32,15 @@ var SVGDOMPropertyConfig = {\n     dx: MUST_USE_ATTRIBUTE,\n     dy: MUST_USE_ATTRIBUTE,\n     fill: MUST_USE_ATTRIBUTE,\n+    fillOpacity: MUST_USE_ATTRIBUTE,\n+    fontFamily: MUST_USE_ATTRIBUTE,\n+    fontSize: MUST_USE_ATTRIBUTE,\n     fx: MUST_USE_ATTRIBUTE,\n     fy: MUST_USE_ATTRIBUTE,\n     gradientTransform: MUST_USE_ATTRIBUTE,\n     gradientUnits: MUST_USE_ATTRIBUTE,\n     offset: MUST_USE_ATTRIBUTE,\n+    opacity: MUST_USE_ATTRIBUTE,\n     patternContentUnits: MUST_USE_ATTRIBUTE,\n     patternUnits: MUST_USE_ATTRIBUTE,\n     points: MUST_USE_ATTRIBUTE,\n@@ -50,6 +54,7 @@ var SVGDOMPropertyConfig = {\n     stroke: MUST_USE_ATTRIBUTE,\n     strokeDasharray: MUST_USE_ATTRIBUTE,\n     strokeLinecap: MUST_USE_ATTRIBUTE,\n+    strokeOpacity: MUST_USE_ATTRIBUTE,\n     strokeWidth: MUST_USE_ATTRIBUTE,\n     textAnchor: MUST_USE_ATTRIBUTE,\n     transform: MUST_USE_ATTRIBUTE,\n@@ -63,6 +68,9 @@ var SVGDOMPropertyConfig = {\n     y: MUST_USE_ATTRIBUTE\n   },\n   DOMAttributeNames: {\n+    fillOpacity: 'fill-opacity',\n+    fontFamily: 'font-family',\n+    fontSize: 'font-size',\n     gradientTransform: 'gradientTransform',\n     gradientUnits: 'gradientUnits',\n     patternContentUnits: 'patternContentUnits',\n@@ -73,6 +81,7 @@ var SVGDOMPropertyConfig = {\n     stopOpacity: 'stop-opacity',\n     strokeDasharray: 'stroke-dasharray',\n     strokeLinecap: 'stroke-linecap',\n+    strokeOpacity: 'stroke-opacity',\n     strokeWidth: 'stroke-width',\n     textAnchor: 'text-anchor',\n     viewBox: 'viewBox'"
    },
    {
      "message": "fix tests broken by undefined `window` references in reacteventlistener.",
      "diff": "diff --git a/src/browser/ui/ReactEventListener.js b/src/browser/ui/ReactEventListener.js\nindex 591e91ea60cd..5dc6683bb72a 100644\n--- a/src/browser/ui/ReactEventListener.js\n+++ b/src/browser/ui/ReactEventListener.js\n@@ -20,6 +20,7 @@\n \"use strict\";\n \n var EventListener = require('EventListener');\n+var ExecutionEnvironment = require('ExecutionEnvironment');\n var PooledClass = require('PooledClass');\n var ReactInstanceHandles = require('ReactInstanceHandles');\n var ReactMount = require('ReactMount');\n@@ -101,7 +102,7 @@ var ReactEventListener = {\n   _enabled: true,\n   _handleTopLevel: null,\n \n-  WINDOW_HANDLE: window,\n+  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n \n   setHandleTopLevel: function(handleTopLevel) {\n     ReactEventListener._handleTopLevel = handleTopLevel;"
    },
    {
      "message": "prevent null reference access when unsetting styles",
      "diff": "diff --git a/src/browser/ui/ReactDOMComponent.js b/src/browser/ui/ReactDOMComponent.js\nindex e8ecbbf23027..b9719b368601 100644\n--- a/src/browser/ui/ReactDOMComponent.js\n+++ b/src/browser/ui/ReactDOMComponent.js\n@@ -307,7 +307,7 @@ ReactDOMComponent.Mixin = {\n           // Unset styles on `lastProp` but not on `nextProp`.\n           for (styleName in lastProp) {\n             if (lastProp.hasOwnProperty(styleName) &&\n-                !nextProp.hasOwnProperty(styleName)) {\n+                (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n               styleUpdates = styleUpdates || {};\n               styleUpdates[styleName] = '';\n             }\ndiff --git a/src/browser/ui/__tests__/ReactDOMComponent-test.js b/src/browser/ui/__tests__/ReactDOMComponent-test.js\nindex d4fb44992355..72111cd5f66b 100644\n--- a/src/browser/ui/__tests__/ReactDOMComponent-test.js\n+++ b/src/browser/ui/__tests__/ReactDOMComponent-test.js\n@@ -97,6 +97,11 @@ describe('ReactDOMComponent', function() {\n       expect(stubStyle.display).toEqual('block');\n       expect(stubStyle.fontFamily).toEqual('Helvetica');\n       expect(stubStyle.lineHeight).toEqual('0.5');\n+\n+      stub.receiveComponent({props: { style: undefined }}, transaction);\n+      expect(stubStyle.display).toBe('');\n+      expect(stubStyle.fontFamily).toBe('');\n+      expect(stubStyle.lineHeight).toBe('');\n     });\n \n     it(\"should update styles if initially null\", function() {"
    },
    {
      "message": "update todo example. fixes 'create' that shouldn't happen",
      "diff": "diff --git a/examples/todomvc-flux/js/components/Header.react.js b/examples/todomvc-flux/js/components/Header.react.js\nindex cbf7b6a32a03..3c3fe59db866 100644\n--- a/examples/todomvc-flux/js/components/Header.react.js\n+++ b/examples/todomvc-flux/js/components/Header.react.js\n@@ -45,7 +45,10 @@ var Header = React.createClass({\n    * @param {string} text\n    */\n   _onSave: function(text) {\n-    TodoActions.create(text);\n+    if(text.trim()){\n+      TodoActions.create(text);\n+    }\n+    \n   }\n \n });"
    },
    {
      "message": "update link to @petehunt's react-server-rendering github repo",
      "diff": "diff --git a/docs/_posts/2013-06-05-why-react.md b/docs/_posts/2013-06-05-why-react.md\nindex 7aa3c2ddf188..07f02e1ef9a1 100644\n--- a/docs/_posts/2013-06-05-why-react.md\n+++ b/docs/_posts/2013-06-05-why-react.md\n@@ -75,7 +75,7 @@ some pretty cool things with it:\n - We've built internal prototypes that run React apps in a web worker and use\n   React to drive **native iOS views** via an Objective-C bridge.\n - You can run React\n-  [on the server](http://github.com/petehunt/react-server-rendering)\n+  [on the server](http://github.com/petehunt/react-server-rendering-example)\n   for SEO, performance, code sharing and overall flexibility.\n - Events behave in a consistent, standards-compliant way in all browsers\n   (including IE8) and automatically use"
    },
    {
      "message": "add more complicated fourth listener to appdispatcher-test",
      "diff": "diff --git a/examples/todomvc-flux/js/dispatcher/__tests__/AppDispatcher-test.js b/examples/todomvc-flux/js/dispatcher/__tests__/AppDispatcher-test.js\nindex 2866cf8e40eb..0d38552a318f 100644\n--- a/examples/todomvc-flux/js/dispatcher/__tests__/AppDispatcher-test.js\n+++ b/examples/todomvc-flux/js/dispatcher/__tests__/AppDispatcher-test.js\n@@ -24,10 +24,11 @@ describe('AppDispatcher', function() {\n \n     var listener1Done = false;\n     var listener1 = function(pl) {\n-      return AppDispatcher.waitFor([index2], function() {\n-        // Second and third listeners should have now been called\n+      return AppDispatcher.waitFor([index2, index4], function() {\n+        // Second, third, and fourth listeners should have now been called\n         expect(listener2Done).toBe(true);\n         expect(listener3Done).toBe(true);\n+        expect(listener4Done).toBe(true);\n         listener1Done = true;\n       });\n     };\n@@ -49,6 +50,15 @@ describe('AppDispatcher', function() {\n     };\n     var index3 = AppDispatcher.register(listener3);\n \n+    var listener4Done = false;\n+    var listener4 = function(pl) {\n+      return AppDispatcher.waitFor([index3], function() {\n+        expect(listener3Done).toBe(true);\n+        listener4Done = true;\n+      });\n+    };\n+    var index4 = AppDispatcher.register(listener4);\n+\n     runs(function() {\n       AppDispatcher.dispatch(payload);\n     });"
    },
    {
      "message": "load in parallel, evaluate linearly as they come in",
      "diff": "diff --git a/vendor/browser-transforms.js b/vendor/browser-transforms.js\nindex 797f233829d9..78a05c1374ad 100644\n--- a/vendor/browser-transforms.js\n+++ b/vendor/browser-transforms.js\n@@ -167,26 +167,35 @@ var load = exports.load = function(url, callback) {\n   return xhr.send(null);\n };\n \n-loadScripts = function(scripts, callback) {\n-  var result = [];\n+loadScripts = function(scripts) {\n+  var result = scripts.map(function() {\n+    return false;\n+  });\n+  var count = result.length;\n \n   var check = function() {\n-    var isComplete = result.every(function(task) {\n-      return task !== false;\n-    });\n-    if (isComplete) callback(result);\n+    var script, i;\n+\n+    for (i = 0; i < count; i++) {\n+      script = result[i];\n+\n+      if (script && !script.executed) {\n+        script.executed = true;\n+        run(script.content, script.url);\n+      } else if (!script) {\n+        break;\n+      }\n+    };\n   };\n \n   scripts.forEach(function(script, i) {\n-    result[i] = false;\n-\n     if (script.src) {\n       load(script.src, function(content, url) {\n-        result[i] = { content: content, url: url };\n+        result[i] = { executed: false, content: content, url: url };\n         check();\n       });\n     } else {\n-      result[i] = { content: script.innerHTML, url: null };\n+      result[i] = { executed: false, content: script.innerHTML, url: null };\n       check();\n     }\n   });\n@@ -205,11 +214,7 @@ runScripts = function() {\n \n   console.warn(\"You are using the in-browser JSX transformer. Be sure to precompile your JSX for production - http://facebook.github.io/react/docs/tooling-integration.html#jsx\");\n \n-  loadScripts(jsxScripts, function(results) {\n-    results.forEach(function(config) {\n-      run(config.content, config.url);\n-    });\n-  });\n+  loadScripts(jsxScripts);\n };\n \n if (typeof window !== \"undefined\" && window !== null) {"
    },
    {
      "message": "use object.prototype.hasownproperty for doc in ie8",
      "diff": "diff --git a/src/browser/ReactEventEmitter.js b/src/browser/ReactEventEmitter.js\nindex 5481c2e9b828..5f1956d7d9db 100644\n--- a/src/browser/ReactEventEmitter.js\n+++ b/src/browser/ReactEventEmitter.js\n@@ -129,7 +129,9 @@ var topEventMapping = {\n var topListenersIDKey = \"_reactListenersID\" + String(Math.random()).slice(2);\n \n function getListeningForDocument(mountAt) {\n-  if (!mountAt.hasOwnProperty(topListenersIDKey)) {\n+  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n+  // directly.\n+  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n     mountAt[topListenersIDKey] = reactTopListenersCounter++;\n     alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n   }"
    },
    {
      "message": "make sure it works when we have no css transitions",
      "diff": "diff --git a/src/addons/transitions/ReactCSSTransitionGroupChild.js b/src/addons/transitions/ReactCSSTransitionGroupChild.js\nindex a61e4ce60802..e860892965f1 100644\n--- a/src/addons/transitions/ReactCSSTransitionGroupChild.js\n+++ b/src/addons/transitions/ReactCSSTransitionGroupChild.js\n@@ -55,7 +55,7 @@ var ReactCSSTransitionGroupChild = React.createClass({\n     var noEventTimeout = null;\n \n     var endListener = function(e) {\n-      if (e.target !== node) {\n+      if (e && e.target !== node) {\n         return;\n       }\n       if (__DEV__) {"
    },
    {
      "message": "add support for jsx member expressions <react.dom.div />",
      "diff": "diff --git a/vendor/fbtransform/transforms/react.js b/vendor/fbtransform/transforms/react.js\nindex 03d4880b826e..ae149cdde96e 100644\n--- a/vendor/fbtransform/transforms/react.js\n+++ b/vendor/fbtransform/transforms/react.js\n@@ -57,18 +57,23 @@ function visitReactTag(traverse, object, path, state) {\n \n   utils.catchup(openingElement.range[0], state, trimLeft);\n \n-  if (nameObject.namespace) {\n-    throw new Error(\n-       'Namespace tags are not supported. ReactJSX is not XML.');\n+  var isFallbackTag = false;\n+\n+  if (nameObject.type === Syntax.XJSIdentifier) {\n+    if (nameObject.namespace) {\n+      throw new Error(\n+         'Namespace tags are not supported. ReactJSX is not XML.');\n+    }\n+\n+    isFallbackTag = FALLBACK_TAGS.hasOwnProperty(nameObject.name);\n   }\n \n-  var isFallbackTag = FALLBACK_TAGS.hasOwnProperty(nameObject.name);\n-  utils.append(\n-    (isFallbackTag ? jsxObjIdent + '.' : '') + (nameObject.name) + '(',\n-    state\n-  );\n+  utils.append(isFallbackTag ? jsxObjIdent + '.' : '', state);\n+\n+  utils.move(nameObject.range[0], state);\n+  utils.catchup(nameObject.range[1], state);\n \n-  utils.move(nameObject.range[1], state);\n+  utils.append('(', state);\n \n   var hasAttributes = attributesObject.length;"
    },
    {
      "message": "remove unnecessary tests from insertchildat and inline it instead",
      "diff": "diff --git a/src/browser/ui/dom/DOMChildrenOperations.js b/src/browser/ui/dom/DOMChildrenOperations.js\nindex d2bc513d68a1..e2e3de2005a7 100644\n--- a/src/browser/ui/dom/DOMChildrenOperations.js\n+++ b/src/browser/ui/dom/DOMChildrenOperations.js\n@@ -42,20 +42,14 @@ var textContentAccessor = getTextContentAccessor();\n  * @internal\n  */\n function insertChildAt(parentNode, childNode, index) {\n-  var childNodes = parentNode.childNodes;\n-  if (childNodes[index] === childNode) {\n-    return;\n-  }\n-  // If `childNode` is already a child of `parentNode`, remove it so that\n-  // computing `childNodes[index]` takes into account the removal.\n-  if (childNode.parentNode === parentNode) {\n-    parentNode.removeChild(childNode);\n-  }\n-  if (index >= childNodes.length) {\n-    parentNode.appendChild(childNode);\n-  } else {\n-    parentNode.insertBefore(childNode, childNodes[index]);\n-  }\n+  // By exploiting arrays returning `undefined` for an undefined index, we can\n+  // rely exclusively on `insertBefore(node, null)` instead of also using\n+  // `appendChild(node)`. However, using `undefined` is not allowed by all\n+  // browsers so we must replace it with `null`.\n+  parentNode.insertBefore(\n+    childNode,\n+    parentNode.childNodes[index] || null\n+  );\n }\n \n var updateTextContent;"
    },
    {
      "message": "amend \"references to components\" tip to mention descriptors.",
      "diff": "diff --git a/docs/tips/16-references-to-components.md b/docs/tips/16-references-to-components.md\nindex 38572276e61d..a8ce67eeaa96 100644\n--- a/docs/tips/16-references-to-components.md\n+++ b/docs/tips/16-references-to-components.md\n@@ -14,18 +14,20 @@ If you're using React components in a larger non-React application or transition\n var myComponent = React.renderComponent(<MyComponent />, myContainer);\n ```\n \n-If you pass a variable to 'React.renderComponent`, it's not guaranteed that the component passed in will be the one that's mounted. In cases where you construct a component before mounting it, be sure to reassign your variable:\n+Keep in mind, however, that the \"constructor\" of a component doesn't return a component instance! It's just a **descriptor**: a lightweight representation that tells React what the mounted component should look like.\n+\n+Descriptors also contain any methods that you define in the [statics](http://facebook.github.io/react/docs/component-specs.html#statics) property of the component.\n \n ```js\n /** @jsx React.DOM */\n \n-var myComponent = <MyComponent />;\n+var myComponent = <MyComponent />; // This is just a descriptor.\n \n-// Some code here...\n+// Some code here, possibly using static methods...\n \n myComponent = React.renderComponent(myComponent, myContainer);\n ```\n \n > Note:\n >\n-> This should only ever be used at the top level. Inside components, let your `props` and `state` handle communication with child components, and only reference components via `ref`s.\n+> This should only ever be used at the top level. Inside components, let your `props` and `state` handle communication with child components, and only reference components via [refs](http://facebook.github.io/react/docs/more-about-refs.html)."
    },
    {
      "message": "make eventpluginutils clear dispatchids and dispatchlisteners",
      "diff": "diff --git a/src/event/EventPluginUtils.js b/src/event/EventPluginUtils.js\nindex 5f2715ab9a72..bd7608034bb3 100644\n--- a/src/event/EventPluginUtils.js\n+++ b/src/event/EventPluginUtils.js\n@@ -135,7 +135,7 @@ function executeDispatchesInOrder(event, executeDispatch) {\n  * @return id of the first dispatch execution who's listener returns true, or\n  * null if no listener returned true.\n  */\n-function executeDispatchesInOrderStopAtTrue(event) {\n+function executeDispatchesInOrderStopAtTrueImpl(event) {\n   var dispatchListeners = event._dispatchListeners;\n   var dispatchIDs = event._dispatchIDs;\n   if (__DEV__) {\n@@ -159,6 +159,16 @@ function executeDispatchesInOrderStopAtTrue(event) {\n   return null;\n }\n \n+/**\n+ * @see executeDispatchesInOrderStopAtTrueImpl\n+ */\n+function executeDispatchesInOrderStopAtTrue(event) {\n+  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n+  event._dispatchIDs = null;\n+  event._dispatchListeners = null;\n+  return ret;\n+}\n+\n /**\n  * Execution of a \"direct\" dispatch - there must be at most one dispatch\n  * accumulated on the event or it is considered an error. It doesn't really make"
    },
    {
      "message": "remove leftovers from reacttransitiongroup rewrite",
      "diff": "diff --git a/src/addons/transitions/ReactCSSTransitionGroupChild.js b/src/addons/transitions/ReactCSSTransitionGroupChild.js\nindex 1295aeb7b78d..9e536da72d64 100644\n--- a/src/addons/transitions/ReactCSSTransitionGroupChild.js\n+++ b/src/addons/transitions/ReactCSSTransitionGroupChild.js\n@@ -84,11 +84,6 @@ var ReactCSSTransitionGroupChild = React.createClass({\n   queueClass: function(className) {\n     this.classNameQueue.push(className);\n \n-    if (this.props.runNextTick) {\n-      this.props.runNextTick(this.flushClassNameQueue);\n-      return;\n-    }\n-\n     if (!this.timeout) {\n       this.timeout = setTimeout(this.flushClassNameQueue, TICK);\n     }"
    },
    {
      "message": "fix hasownproperty check typo in mixstaticspecintocomponent",
      "diff": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex 9a3436401c27..94aa3cf1bf2e 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -505,7 +505,7 @@ function mixStaticSpecIntoComponent(ConvenienceConstructor, statics) {\n   for (var name in statics) {\n     var property = statics[name];\n     if (!statics.hasOwnProperty(name)) {\n-      return;\n+      continue;\n     }\n \n     var isInherited = name in ConvenienceConstructor;"
    },
    {
      "message": "fix docstring arg order in createdomcomponentclass",
      "diff": "diff --git a/src/browser/ReactDOM.js b/src/browser/ReactDOM.js\nindex 79947d2975b2..7600e18058a4 100644\n--- a/src/browser/ReactDOM.js\n+++ b/src/browser/ReactDOM.js\n@@ -35,8 +35,8 @@ var mapObject = require('mapObject');\n  * The `style` property functions differently from the DOM API. It accepts an\n  * object mapping of style properties to values.\n  *\n- * @param {string} tag Tag name (e.g. `div`).\n  * @param {boolean} omitClose True if the close tag should be omitted.\n+ * @param {string} tag Tag name (e.g. `div`).\n  * @private\n  */\n function createDOMComponentClass(omitClose, tag) {"
    },
    {
      "message": "add client/server mention in componentdid/willmount documentation",
      "diff": "diff --git a/docs/docs/ref-03-component-specs.md b/docs/docs/ref-03-component-specs.md\nindex 7294670c91b8..127b2ebf35eb 100644\n--- a/docs/docs/ref-03-component-specs.md\n+++ b/docs/docs/ref-03-component-specs.md\n@@ -112,7 +112,7 @@ Various methods are executed at specific points in a component's lifecycle.\n componentWillMount()\n ```\n \n-Invoked once, immediately before the initial rendering occurs. If you call `setState` within this method, `render()` will see the updated state and will be executed only once despite the state change.\n+Invoked once, both on the client and server, immediately before the initial rendering occurs. If you call `setState` within this method, `render()` will see the updated state and will be executed only once despite the state change.\n \n \n ### Mounting: componentDidMount\n@@ -121,7 +121,7 @@ Invoked once, immediately before the initial rendering occurs. If you call `setS\n componentDidMount()\n ```\n \n-Invoked immediately after rendering occurs. At this point in the lifecycle, the component has a DOM representation which you can access via `this.getDOMNode()`.\n+Invoked immediately after rendering occurs, only on the client (not on the server). At this point in the lifecycle, the component has a DOM representation which you can access via `this.getDOMNode()`.\n \n If you want to integrate with other JavaScript frameworks, set timers using `setTimeout` or `setInterval`, or send AJAX requests, perform those operations in this method."
    },
    {
      "message": "upgrade commoner to v0.9.2 to silence deprecation warnings.",
      "diff": "diff --git a/package.json b/package.json\nindex 1cd5ad4a594b..6500fd1146be 100644\n--- a/package.json\n+++ b/package.json\n@@ -33,7 +33,7 @@\n     \"url\": \"https://github.com/facebook/react\"\n   },\n   \"dependencies\": {\n-    \"commoner\": \"~0.9.1\",\n+    \"commoner\": \"^0.9.2\",\n     \"esprima-fb\": \"~3001.1.0-dev-harmony-fb\",\n     \"jstransform\": \"~3.0.0\"\n   },"
    },
    {
      "message": "fix empty jsx expressions sometimes emitting erroneous commas",
      "diff": "diff --git a/vendor/fbtransform/transforms/react.js b/vendor/fbtransform/transforms/react.js\nindex 2e50fb9b3310..9b6019a634bf 100644\n--- a/vendor/fbtransform/transforms/react.js\n+++ b/vendor/fbtransform/transforms/react.js\n@@ -130,7 +130,9 @@ function visitReactTag(traverse, object, path, state) {\n   var childrenToRender = object.children.filter(function(child) {\n     return !(child.type === Syntax.Literal\n              && typeof child.value === 'string'\n-             && child.value.match(/^[ \\t]*[\\r\\n][ \\t\\r\\n]*$/));\n+             && child.value.match(/^[ \\t]*[\\r\\n][ \\t\\r\\n]*$/)\n+             || child.type === Syntax.XJSExpressionContainer\n+             && child.expression.type === Syntax.XJSEmptyExpression);\n   });\n   if (childrenToRender.length > 0) {\n     utils.append(', ', state);"
    },
    {
      "message": "re-require `clonewithprops` as well, for consistency.",
      "diff": "diff --git a/src/utils/__tests__/cloneWithProps-test.js b/src/utils/__tests__/cloneWithProps-test.js\nindex b51e2ab03c1e..a68ed4e4968c 100644\n--- a/src/utils/__tests__/cloneWithProps-test.js\n+++ b/src/utils/__tests__/cloneWithProps-test.js\n@@ -19,16 +19,17 @@\n \n \"use strict\";\n \n-require('mock-modules').dontMock('cloneWithProps');\n+require('mock-modules')\n+  .dontMock('cloneWithProps')\n+  .dontMock('emptyObject');\n \n var mocks = require('mocks');\n \n-var cloneWithProps = require('cloneWithProps');\n-\n var React;\n var ReactTestUtils;\n \n var onlyChild;\n+var cloneWithProps;\n var emptyObject;\n \n describe('cloneWithProps', function() {\n@@ -37,6 +38,7 @@ describe('cloneWithProps', function() {\n     React = require('React');\n     ReactTestUtils = require('ReactTestUtils');\n     onlyChild = require('onlyChild');\n+    cloneWithProps = require('cloneWithProps');\n     emptyObject = require('emptyObject');\n   });"
    },
    {
      "message": "fix stale usage of emptyobject in clonewithprops-test.",
      "diff": "diff --git a/src/utils/__tests__/cloneWithProps-test.js b/src/utils/__tests__/cloneWithProps-test.js\nindex 2b1ee1132d07..b51e2ab03c1e 100644\n--- a/src/utils/__tests__/cloneWithProps-test.js\n+++ b/src/utils/__tests__/cloneWithProps-test.js\n@@ -24,12 +24,12 @@ require('mock-modules').dontMock('cloneWithProps');\n var mocks = require('mocks');\n \n var cloneWithProps = require('cloneWithProps');\n-var emptyObject = require('emptyObject');\n \n var React;\n var ReactTestUtils;\n \n var onlyChild;\n+var emptyObject;\n \n describe('cloneWithProps', function() {\n \n@@ -37,6 +37,7 @@ describe('cloneWithProps', function() {\n     React = require('React');\n     ReactTestUtils = require('ReactTestUtils');\n     onlyChild = require('onlyChild');\n+    emptyObject = require('emptyObject');\n   });\n \n   it('should clone a DOM component with new props', function() {"
    },
    {
      "message": "fix verion-check to look in right place for react.js",
      "diff": "diff --git a/grunt/tasks/version-check.js b/grunt/tasks/version-check.js\nindex ae082988ad1b..fe5747d1c12d 100644\n--- a/grunt/tasks/version-check.js\n+++ b/grunt/tasks/version-check.js\n@@ -10,7 +10,7 @@ var reactVersionExp = /\\bReact\\.version\\s*=\\s*['\"]([^'\"]+)['\"];/;\n \n module.exports = function() {\n   var reactVersion = reactVersionExp.exec(\n-    grunt.file.read('./src/browser/React.js')\n+    grunt.file.read('./src/browser/ui/React.js')\n   )[1];\n   var npmReactVersion = grunt.file.readJSON('./npm-react/package.json').version;\n   var reactToolsVersion = grunt.config.data.pkg.version;"
    },
    {
      "message": "test that node is a function before using instanceof on it",
      "diff": "diff --git a/src/vendor/core/dom/isNode.js b/src/vendor/core/dom/isNode.js\nindex 2b1043993641..d47727701e09 100644\n--- a/src/vendor/core/dom/isNode.js\n+++ b/src/vendor/core/dom/isNode.js\n@@ -23,7 +23,7 @@\n  */\n function isNode(object) {\n   return !!(object && (\n-    typeof Node !== 'undefined' ? object instanceof Node :\n+    typeof Node === 'function' ? object instanceof Node :\n       typeof object === 'object' &&\n       typeof object.nodeType === 'number' &&\n       typeof object.nodeName === 'string'"
    },
    {
      "message": "make jsx transform not break on 'constructor' attr",
      "diff": "diff --git a/vendor/fbtransform/transforms/react.js b/vendor/fbtransform/transforms/react.js\nindex 4a16cf4e2f3d..43d6c8539ebd 100644\n--- a/vendor/fbtransform/transforms/react.js\n+++ b/vendor/fbtransform/transforms/react.js\n@@ -101,7 +101,7 @@ function visitReactTag(traverse, object, path, state) {\n       utils.move(attr.name.range[1], state);\n       // Use catchupWhiteSpace to skip over the '=' in the attribute\n       utils.catchupWhiteSpace(attr.value.range[0], state);\n-      if (JSX_ATTRIBUTE_TRANSFORMS[attr.name.name]) {\n+      if (JSX_ATTRIBUTE_TRANSFORMS.hasOwnProperty(attr.name.name)) {\n         utils.append(JSX_ATTRIBUTE_TRANSFORMS[attr.name.name](attr), state);\n         utils.move(attr.value.range[1], state);\n         if (!isLast) {"
    },
    {
      "message": "simplify `mountimageintonode`'s way of putting markup in innerhtml",
      "diff": "diff --git a/src/browser/ReactComponentBrowserEnvironment.js b/src/browser/ReactComponentBrowserEnvironment.js\nindex 570e61dea284..0f6c3077522a 100644\n--- a/src/browser/ReactComponentBrowserEnvironment.js\n+++ b/src/browser/ReactComponentBrowserEnvironment.js\n@@ -133,21 +133,7 @@ var ReactComponentBrowserEnvironment = {\n           'See renderComponentToString() for server rendering.'\n       );\n \n-      // Asynchronously inject markup by ensuring that the container is not in\n-      // the document when settings its `innerHTML`.\n-      var parent = container.parentNode;\n-      if (parent) {\n-        var next = container.nextSibling;\n-        parent.removeChild(container);\n-        container.innerHTML = markup;\n-        if (next) {\n-          parent.insertBefore(container, next);\n-        } else {\n-          parent.appendChild(container);\n-        }\n-      } else {\n-        container.innerHTML = markup;\n-      }\n+      container.innerHTML = markup;\n     }\n   )\n };"
    },
    {
      "message": "upgrade commoner dependency to v0.9.1 to fix mkdirp bug.",
      "diff": "diff --git a/package.json b/package.json\nindex fb9db54842e7..f5587c6f0122 100644\n--- a/package.json\n+++ b/package.json\n@@ -32,7 +32,7 @@\n     \"url\": \"https://github.com/facebook/react\"\n   },\n   \"dependencies\": {\n-    \"commoner\": \"~0.9.0\",\n+    \"commoner\": \"~0.9.1\",\n     \"esprima-fb\": \"~3001.1.0-dev-harmony-fb\",\n     \"jstransform\": \"~3.0.0\"\n   },"
    },
    {
      "message": "remove aural css numerial styles from cssproperties",
      "diff": "diff --git a/src/browser/dom/CSSProperty.js b/src/browser/dom/CSSProperty.js\nindex e503c0ec4920..dcea5a3650c7 100644\n--- a/src/browser/dom/CSSProperty.js\n+++ b/src/browser/dom/CSSProperty.js\n@@ -33,10 +33,6 @@ var isUnitlessNumber = {\n   opacity: true,\n   order: true,\n   orphans: true,\n-  pitchRange: true,\n-  richness: true,\n-  stress: true,\n-  volume: true,\n   widows: true,\n   zIndex: true,\n   zoom: true"
    },
    {
      "message": "resolve paths relative to pwd, not npm install dir",
      "diff": "diff --git a/npm-jsx_whitespace_transform/run.js b/npm-jsx_whitespace_transform/run.js\nindex 246af42b5435..f886cf23cef3 100755\n--- a/npm-jsx_whitespace_transform/run.js\n+++ b/npm-jsx_whitespace_transform/run.js\n@@ -146,7 +146,7 @@ if (require.main === module) {\n     );\n   }\n \n-  var absPath = path.resolve(__dirname, argv._[0]);\n+  var absPath = path.resolve(argv._[0]);\n \n   fs.stat(absPath, function(err, stat) {\n     if (err) throw err;"
    },
    {
      "message": "disable source maps when defineproperty is missing",
      "diff": "diff --git a/vendor/browser-transforms.js b/vendor/browser-transforms.js\nindex 701693c34a7c..9de0bc1873f9 100644\n--- a/vendor/browser-transforms.js\n+++ b/vendor/browser-transforms.js\n@@ -25,8 +25,16 @@ var transform = require('jstransform').transform;\n var visitors = require('./fbtransform/visitors').transformVisitors;\n var docblock = require('jstransform/src/docblock');\n \n+// The source-map library relies on Object.defineProperty, but IE8 doesn't\n+// support it fully even with es5-sham. Indeed, es5-sham's defineProperty\n+// throws when Object.prototype.__defineGetter__ is missing, so we skip building\n+// the source map in that case.\n+var supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\n+\n function transformReact(source) {\n-  return transform(visitors.react, source, {sourceMap: true});\n+  return transform(visitors.react, source, {\n+    sourceMap: supportsAccessors\n+  });\n }\n \n exports.transform = transformReact;\n@@ -97,6 +105,10 @@ var transformCode = function(code, source) {\n       throw e;\n     }\n \n+    if (!transformed.sourceMap) {\n+      return transformed.code;\n+    }\n+\n     var map = transformed.sourceMap.toJSON();\n     if (source == null) {\n       source = \"Inline JSX script\";"
    },
    {
      "message": "add `novalidate` and corresponding `formnovalidate`",
      "diff": "diff --git a/src/browser/dom/DefaultDOMPropertyConfig.js b/src/browser/dom/DefaultDOMPropertyConfig.js\nindex 16a3dbd2fa53..0eba6322a262 100644\n--- a/src/browser/dom/DefaultDOMPropertyConfig.js\n+++ b/src/browser/dom/DefaultDOMPropertyConfig.js\n@@ -67,6 +67,7 @@ var DefaultDOMPropertyConfig = {\n     draggable: null,\n     encType: null,\n     form: MUST_USE_ATTRIBUTE,\n+    formNoValidate: HAS_BOOLEAN_VALUE,\n     frameBorder: MUST_USE_ATTRIBUTE,\n     height: MUST_USE_ATTRIBUTE,\n     hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n@@ -85,6 +86,7 @@ var DefaultDOMPropertyConfig = {\n     min: null,\n     multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n     name: null,\n+    noValidate: HAS_BOOLEAN_VALUE,\n     pattern: null,\n     placeholder: null,\n     poster: null,"
    },
    {
      "message": "add new lines above use strict and keep directives at the top",
      "diff": "diff --git a/src/core/ReactComponentEnvironment.js b/src/core/ReactComponentEnvironment.js\nindex e626314ae809..78bdd1b63b95 100644\n--- a/src/core/ReactComponentEnvironment.js\n+++ b/src/core/ReactComponentEnvironment.js\n@@ -15,6 +15,7 @@\n  *\n  * @providesModule ReactComponentEnvironment\n  */\n+\n \"use strict\";\n \n var ReactComponentBrowserEnvironment =\ndiff --git a/src/core/ReactMultiChildUpdateTypes.js b/src/core/ReactMultiChildUpdateTypes.js\nindex 3d9297754b9e..179dca2c3775 100644\n--- a/src/core/ReactMultiChildUpdateTypes.js\n+++ b/src/core/ReactMultiChildUpdateTypes.js\n@@ -15,6 +15,7 @@\n  *\n  * @providesModule ReactMultiChildUpdateTypes\n  */\n+\n \"use strict\";\n \n var keyMirror = require('keyMirror');\ndiff --git a/src/core/__tests__/ReactMultiChild-test.js b/src/core/__tests__/ReactMultiChild-test.js\nindex f1700384d501..914b8b173383 100644\n--- a/src/core/__tests__/ReactMultiChild-test.js\n+++ b/src/core/__tests__/ReactMultiChild-test.js\n@@ -16,6 +16,7 @@\n  * @jsx React.DOM\n  * @emails react-core\n  */\n+\n \"use strict\";\n \n var mocks = require('mocks');\ndiff --git a/src/dom/__tests__/Danger-test.js b/src/dom/__tests__/Danger-test.js\nindex 871b91ee497e..5086a8f2794a 100644\n--- a/src/dom/__tests__/Danger-test.js\n+++ b/src/dom/__tests__/Danger-test.js\n@@ -16,10 +16,10 @@\n  * @jsx React.DOM\n  * @emails react-core\n  */\n-\"use strict\";\n-\n /*jslint evil: true */\n \n+\"use strict\";\n+\n var React = require('React');\n \n describe('Danger', function() {"
    },
    {
      "message": "use lowercase \"string\" so that the documentation complies with typecheckers",
      "diff": "diff --git a/src/environment/ReactServerRendering.js b/src/environment/ReactServerRendering.js\nindex 9c67e880ea75..d0750653fcdc 100644\n--- a/src/environment/ReactServerRendering.js\n+++ b/src/environment/ReactServerRendering.js\n@@ -27,7 +27,7 @@ var invariant = require('invariant');\n \n /**\n  * @param {ReactComponent} component\n- * @return {String} the markup\n+ * @return {string} the markup\n  */\n function renderComponentToString(component) {\n   invariant("
    },
    {
      "message": "fix transaction comment from componentdidrender to componentdidupdate",
      "diff": "diff --git a/src/utils/Transaction.js b/src/utils/Transaction.js\nindex 861919d3d1dd..998d45cd1bc7 100644\n--- a/src/utils/Transaction.js\n+++ b/src/utils/Transaction.js\n@@ -67,7 +67,7 @@ var invariant = require('invariant');\n  *   while guaranteeing that afterwards, the event system is reactivated.\n  * - Flushing a queue of collected DOM mutations to the main UI thread after a\n  *   reconciliation takes place in a worker thread.\n- * - Invoking any collected `componentDidRender` callbacks after rendering new\n+ * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n  *   content.\n  * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n  *   to preserve the `scrollTop` (an automatic scroll aware DOM)."
    },
    {
      "message": "update tutorial.md to still have jquery script tag in later code sample",
      "diff": "diff --git a/docs/docs/tutorial.md b/docs/docs/tutorial.md\nindex ef9ab61a34a7..3b7636192178 100644\n--- a/docs/docs/tutorial.md\n+++ b/docs/docs/tutorial.md\n@@ -210,12 +210,13 @@ Markdown is a simple way to format your text inline. For example, surrounding te\n \n First, add the third-party **Showdown** library to your application. This is a JavaScript library which takes Markdown text and converts it to raw HTML. This requires a script tag in your head (which we have already included in the React playground):\n \n-```html{6}\n+```html{7}\n <!-- template.html -->\n <head>\n   <title>Hello React</title>\n   <script src=\"http://fb.me/react-{{site.react_version}}.js\"></script>\n   <script src=\"http://fb.me/JSXTransformer-{{site.react_version}}.js\"></script>\n+  <script src=\"http://code.jquery.com/jquery-1.10.0.min.js\"></script>\n   <script src=\"http://cdnjs.cloudflare.com/ajax/libs/showdown/0.3.1/showdown.min.js\"></script>\n </head>\n ```"
    },
    {
      "message": "use queryselectorall instead of getelementsbyname in reactdominput.",
      "diff": "diff --git a/src/dom/components/ReactDOMInput.js b/src/dom/components/ReactDOMInput.js\nindex 27148e483ba6..b461f711d848 100644\n--- a/src/dom/components/ReactDOMInput.js\n+++ b/src/dom/components/ReactDOMInput.js\n@@ -130,17 +130,24 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n     var name = this.props.name;\n     if (this.props.type === 'radio' && name != null) {\n       var rootNode = this.getDOMNode();\n+      var queryRoot = rootNode;\n+\n+      while (queryRoot.parentNode) {\n+        queryRoot = queryRoot.parentNode;\n+      }\n+\n       // If `rootNode.form` was non-null, then we could try `form.elements`,\n       // but that sometimes behaves strangely in IE8. We could also try using\n       // `form.getElementsByName`, but that will only return direct children\n       // and won't include inputs that use the HTML5 `form=` attribute. Since\n       // the input might not even be in a form, let's just use the global\n-      // `getElementsByName` to ensure we don't miss anything.\n-      var group = document.getElementsByName(name);\n+      // `querySelectorAll` to ensure we don't miss anything.\n+      var group = queryRoot.querySelectorAll(\n+        'input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n+\n       for (var i = 0, groupLen = group.length; i < groupLen; i++) {\n         var otherNode = group[i];\n         if (otherNode === rootNode ||\n-            otherNode.nodeName !== 'INPUT' || otherNode.type !== 'radio' ||\n             otherNode.form !== rootNode.form) {\n           continue;\n         }"
    },
    {
      "message": "upgrade commoner to v0.9.0 to get rid of output directory locking.",
      "diff": "diff --git a/package.json b/package.json\nindex 95ae8b72837a..1d89f67fa7fb 100644\n--- a/package.json\n+++ b/package.json\n@@ -33,7 +33,7 @@\n     \"url\": \"https://github.com/facebook/react\"\n   },\n   \"dependencies\": {\n-    \"commoner\": \"~0.8.14\",\n+    \"commoner\": \"~0.9.0\",\n     \"esprima-fb\": \"~2001.1001.0-dev-harmony-fb\",\n     \"jstransform\": \"~2.0.2\"\n   },"
    },
    {
      "message": "remove build/modules/ at beginning of `grunt` and `grunt test`.",
      "diff": "diff --git a/Gruntfile.js b/Gruntfile.js\nindex 3b87e91d71bc..d445e15fbec1 100644\n--- a/Gruntfile.js\n+++ b/Gruntfile.js\n@@ -42,6 +42,12 @@ module.exports = function(grunt) {\n \n   grunt.registerTask('download-previous-version', require('./grunt/tasks/download-previous-version.js'));\n \n+  grunt.registerTask('delete-build-modules', function() {\n+    if (grunt.file.exists('build/modules')) {\n+      grunt.file.delete('build/modules');\n+    }\n+  });\n+\n   // Register jsx:debug and :release tasks.\n   grunt.registerMultiTask('jsx', jsxTask);\n \n@@ -81,6 +87,7 @@ module.exports = function(grunt) {\n     'download-previous-version'\n   ]);\n   grunt.registerTask('build:test', [\n+    'delete-build-modules',\n     'jsx:test',\n     'version-check',\n     'populist:test'\n@@ -176,6 +183,7 @@ module.exports = function(grunt) {\n   // Optimized build task that does all of our builds. The subtasks will be run\n   // in order so we can take advantage of that and only run jsx:debug once.\n   grunt.registerTask('build', [\n+    'delete-build-modules',\n     'jsx:debug',\n     'version-check',\n     'browserify:basic',"
    },
    {
      "message": "move grunt/config/jsx/jsx.js to grunt/config/jsx.js.",
      "diff": "diff --git a/Gruntfile.js b/Gruntfile.js\nindex 0d554baa576d..3b87e91d71bc 100644\n--- a/Gruntfile.js\n+++ b/Gruntfile.js\n@@ -17,7 +17,7 @@ module.exports = function(grunt) {\n   grunt.initConfig({\n     pkg: grunt.file.readJSON('package.json'),\n     copy: require('./grunt/config/copy'),\n-    jsx: require('./grunt/config/jsx/jsx'),\n+    jsx: require('./grunt/config/jsx'),\n     browserify: require('./grunt/config/browserify'),\n     populist: require('./grunt/config/populist'),\n     connect: require('./grunt/config/server')(grunt),\ndiff --git a/grunt/config/jsx/jsx.js b/grunt/config/jsx.js\nsimilarity index 100%\nrename from grunt/config/jsx/jsx.js\nrename to grunt/config/jsx.js"
    },
    {
      "message": "add hash link for lifecycle section of working with the browser page",
      "diff": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex b3a3b6b8a864..8b2218ade6d9 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -123,7 +123,7 @@ var MyComponent = React.createClass({\n \n Components are the best way to reuse code in React, but sometimes very different components may share some common functionality. These are sometimes called [cross-cutting concerns](http://en.wikipedia.org/wiki/Cross-cutting_concern). React provides `mixins` to solve this problem.\n \n-One common use case is a component wanting to update itself on a time interval. It's easy to use `setInterval()`, but it's important to cancel your interval when you don't need it anymore to save memory. React provides [lifecycle methods](/react/docs/component-specs.html#lifecycle-methods) that let you know when a component is about to be created or destroyed. Let's create a simple mixin that uses these methods to provide an easy `setInterval()` function that will automatically get cleaned up when your component is destroyed.\n+One common use case is a component wanting to update itself on a time interval. It's easy to use `setInterval()`, but it's important to cancel your interval when you don't need it anymore to save memory. React provides [lifecycle methods](/react/docs/working-with-the-browser.html#component-lifecycle) that let you know when a component is about to be created or destroyed. Let's create a simple mixin that uses these methods to provide an easy `setInterval()` function that will automatically get cleaned up when your component is destroyed.\n \n ```javascript\n /** @jsx React.DOM */"
    },
    {
      "message": "upgrade commoner to v0.8.14 for multiple file support.",
      "diff": "diff --git a/package.json b/package.json\nindex 351ed6b58e7e..95ae8b72837a 100644\n--- a/package.json\n+++ b/package.json\n@@ -33,7 +33,7 @@\n     \"url\": \"https://github.com/facebook/react\"\n   },\n   \"dependencies\": {\n-    \"commoner\": \"~0.8.13\",\n+    \"commoner\": \"~0.8.14\",\n     \"esprima-fb\": \"~2001.1001.0-dev-harmony-fb\",\n     \"jstransform\": \"~2.0.2\"\n   },\n@@ -73,6 +73,6 @@\n   },\n   \"preferGlobal\": true,\n   \"commonerConfig\": {\n-    \"version\": 2\n+    \"version\": 3\n   }\n }"
    },
    {
      "message": "use simulate.click instead of simulate.input for simulating input on",
      "diff": "diff --git a/src/dom/components/__tests__/ReactDOMInput-test.js b/src/dom/components/__tests__/ReactDOMInput-test.js\nindex eadcc1557e65..a8f86b5c83b1 100644\n--- a/src/dom/components/__tests__/ReactDOMInput-test.js\n+++ b/src/dom/components/__tests__/ReactDOMInput-test.js\n@@ -265,7 +265,7 @@ describe('ReactDOMInput', function() {\n     expect(link.requestChange.mock.calls.length).toBe(0);\n \n     instance.getDOMNode().checked = false;\n-    ReactTestUtils.Simulate.input(instance.getDOMNode());\n+    ReactTestUtils.Simulate.click(instance.getDOMNode());\n \n     expect(link.requestChange.mock.calls.length).toBe(1);\n     expect(link.requestChange.mock.calls[0][0]).toEqual(false);"
    },
    {
      "message": "tweak frontpage first example and jsx-compiler example",
      "diff": "diff --git a/docs/_js/examples/hello.js b/docs/_js/examples/hello.js\nindex 019281bd7b29..040a04ac45ce 100644\n--- a/docs/_js/examples/hello.js\n+++ b/docs/_js/examples/hello.js\n@@ -6,7 +6,7 @@ var HELLO_COMPONENT = \"\\\n /** @jsx React.DOM */\\n\\\n var HelloMessage = React.createClass({\\n\\\n   render: function() {\\n\\\n-    return <div>{'Hello ' + this.props.name}</div>;\\n\\\n+    return <div>Hello {this.props.name}</div>;\\n\\\n   }\\n\\\n });\\n\\\n \\n\\\ndiff --git a/docs/_js/jsx-compiler.js b/docs/_js/jsx-compiler.js\nindex c98ee5b5e61e..0e703d7f8082 100644\n--- a/docs/_js/jsx-compiler.js\n+++ b/docs/_js/jsx-compiler.js\n@@ -6,7 +6,7 @@ var HELLO_COMPONENT = \"\\\n /** @jsx React.DOM */\\n\\\n var HelloMessage = React.createClass({\\n\\\n   render: function() {\\n\\\n-    return <div>{'Hello ' + this.props.name}</div>;\\n\\\n+    return <div>Hello {this.props.name}</div>;\\n\\\n   }\\n\\\n });\\n\\\n \\n\\"
    },
    {
      "message": "add span property to react defaultdompropertyconfig",
      "diff": "diff --git a/src/dom/DefaultDOMPropertyConfig.js b/src/dom/DefaultDOMPropertyConfig.js\nindex 73eaeead81c5..1fae3153fdc0 100644\n--- a/src/dom/DefaultDOMPropertyConfig.js\n+++ b/src/dom/DefaultDOMPropertyConfig.js\n@@ -101,6 +101,7 @@ var DefaultDOMPropertyConfig = {\n     scrollTop: MUST_USE_PROPERTY,\n     selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n     size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n+    span: HAS_POSITIVE_NUMERIC_VALUE,\n     spellCheck: null,\n     src: null,\n     step: null,"
    },
    {
      "message": "add `topcontextmenu` to the event dependencies for `selecteventplugin`",
      "diff": "diff --git a/src/eventPlugins/SelectEventPlugin.js b/src/eventPlugins/SelectEventPlugin.js\nindex 4126966ba6e9..cd9d65bc7a37 100644\n--- a/src/eventPlugins/SelectEventPlugin.js\n+++ b/src/eventPlugins/SelectEventPlugin.js\n@@ -38,6 +38,7 @@ var eventTypes = {\n     },\n     dependencies: [\n       topLevelTypes.topBlur,\n+      topLevelTypes.topContextMenu,\n       topLevelTypes.topFocus,\n       topLevelTypes.topKeyDown,\n       topLevelTypes.topMouseDown,"
    },
    {
      "message": "remove stray \"117\", combine lines in polyfill docs",
      "diff": "diff --git a/docs/docs/07-working-with-the-browser.md b/docs/docs/07-working-with-the-browser.md\nindex c234d4943d23..c654f9a965de 100644\n--- a/docs/docs/07-working-with-the-browser.md\n+++ b/docs/docs/07-working-with-the-browser.md\n@@ -113,9 +113,7 @@ In addition to that philosophy, we've also taken the stance that we, as authors\n \n ### Polyfills Needed to Support Older Browsers\n \n-`es5-shim.js` from [kriskowal's\n-es5-shim](https://github.com/kriskowal/es5-shim) provides the following\n-that React needs:\n+`es5-shim.js` from [kriskowal's es5-shim](https://github.com/kriskowal/es5-shim) provides the following that React needs:\n \n * `Array.isArray`\n * `Array.prototype.forEach`\n@@ -124,9 +122,7 @@ that React needs:\n * `Date.now`\n * `Function.prototype.bind`\n \n-`es5-sham.js`, also from [kriskowal's\n-117 es5-shim](https://github.com/kriskowal/es5-shim), provides the\n-following that React needs:\n+`es5-sham.js`, also from [kriskowal's es5-shim](https://github.com/kriskowal/es5-shim), provides the following that React needs:\n \n * `Object.create`"
    },
    {
      "message": "rewrite older browsers polyfill section for clarity.",
      "diff": "diff --git a/docs/docs/07-working-with-the-browser.md b/docs/docs/07-working-with-the-browser.md\nindex 39ad1cefc20e..c234d4943d23 100644\n--- a/docs/docs/07-working-with-the-browser.md\n+++ b/docs/docs/07-working-with-the-browser.md\n@@ -113,7 +113,9 @@ In addition to that philosophy, we've also taken the stance that we, as authors\n \n ### Polyfills Needed to Support Older Browsers\n \n-These six functions can be polyfilled using a combination of `es5-shim.js` and `es5-sham.js` from [kriskowal's es5-shim](https://github.com/kriskowal/es5-shim):\n+`es5-shim.js` from [kriskowal's\n+es5-shim](https://github.com/kriskowal/es5-shim) provides the following\n+that React needs:\n \n * `Array.isArray`\n * `Array.prototype.forEach`\n@@ -122,10 +124,15 @@ These six functions can be polyfilled using a combination of `es5-shim.js` and `\n * `Date.now`\n * `Function.prototype.bind`\n \n-Other required polyfills:\n+`es5-sham.js`, also from [kriskowal's\n+117 es5-shim](https://github.com/kriskowal/es5-shim), provides the\n+following that React needs:\n \n-* `Object.create` \u2013 Provided by `es5-sham.js` from [kriskowal's es5-shim](https://github.com/kriskowal/es5-shim).\n-* `console.*` \u2013 Only needed when using the unminified build. If you need to polyfill this, try [paulmillr's console-polyfill](https://github.com/paulmillr/console-polyfill).\n+* `Object.create`\n+\n+The unminified build of React needs the following from [paulmillr's console-polyfill](https://github.com/paulmillr/console-polyfill).\n+\n+* `console.*`\n \n \n ### Cross-browser Issues"
    },
    {
      "message": "update docs to mention that you need both es5-shim.js and es5-sham.js to use react with ie8.",
      "diff": "diff --git a/docs/docs/07-working-with-the-browser.md b/docs/docs/07-working-with-the-browser.md\nindex d04f1a48234b..2b2e277fdd3e 100644\n--- a/docs/docs/07-working-with-the-browser.md\n+++ b/docs/docs/07-working-with-the-browser.md\n@@ -113,7 +113,7 @@ In addition to that philosophy, we've also taken the stance that we, as authors\n \n ### Polyfills Needed to Support Older Browsers\n \n-These six functions can be polyfilled using `es5-shim.js` from [kriskowal's es5-shim](https://github.com/kriskowal/es5-shim):\n+These six functions can be polyfilled using a combintion of `es5-shim.js` and `es5-sham.js` from [kriskowal's es5-shim](https://github.com/kriskowal/es5-shim):\n \n * `Array.isArray`\n * `Array.prototype.forEach`"
    },
    {
      "message": "remove unnecessary 'na'-fallback for gettextcontentaccessor",
      "diff": "diff --git a/src/core/ReactDOMIDOperations.js b/src/core/ReactDOMIDOperations.js\nindex 7cdcc6365ae9..2a89f7ec9159 100644\n--- a/src/core/ReactDOMIDOperations.js\n+++ b/src/core/ReactDOMIDOperations.js\n@@ -47,7 +47,7 @@ var INVALID_PROPERTY_ERRORS = {\n  * @type {string}\n  * @private\n  */\n-var textContentAccessor = getTextContentAccessor() || 'NA';\n+var textContentAccessor = getTextContentAccessor();\n \n var useWhitespaceWorkaround;\n \ndiff --git a/src/dom/DOMChildrenOperations.js b/src/dom/DOMChildrenOperations.js\nindex 4786adb043cb..9e48b1ae9c36 100644\n--- a/src/dom/DOMChildrenOperations.js\n+++ b/src/dom/DOMChildrenOperations.js\n@@ -30,7 +30,7 @@ var getTextContentAccessor = require('getTextContentAccessor');\n  * @type {string}\n  * @private\n  */\n-var textContentAccessor = getTextContentAccessor() || 'NA';\n+var textContentAccessor = getTextContentAccessor();\n \n /**\n  * Inserts `childNode` as a child of `parentNode` at the `index`."
    },
    {
      "message": "change global to window in syntheticclipboardevent",
      "diff": "diff --git a/src/event/synthetic/SyntheticClipboardEvent.js b/src/event/synthetic/SyntheticClipboardEvent.js\nindex c4a2b667274e..0a2407884d39 100644\n--- a/src/event/synthetic/SyntheticClipboardEvent.js\n+++ b/src/event/synthetic/SyntheticClipboardEvent.js\n@@ -30,7 +30,7 @@ var ClipboardEventInterface = {\n     return (\n       'clipboardData' in event ?\n         event.clipboardData :\n-        global.clipboardData\n+        window.clipboardData\n     );\n   }\n };"
    },
    {
      "message": "change \u201cnot allowed\u201d back to \u201cdiscouraged\u201d since you technically *can* use props called `class` or `for`\u2026",
      "diff": "diff --git a/docs/docs/02.1-jsx-in-depth.md b/docs/docs/02.1-jsx-in-depth.md\nindex 36a503ecac2e..6c2a78d64626 100644\n--- a/docs/docs/02.1-jsx-in-depth.md\n+++ b/docs/docs/02.1-jsx-in-depth.md\n@@ -106,7 +106,7 @@ See [Multiple Components](/react/docs/multiple-components.html) to learn more ab\n \n > Note:\n >\n-> Since JSX is JavaScript, identifiers such as `class` and `for` are not allowed\n+> Since JSX is JavaScript, identifiers such as `class` and `for` are discouraged\n > as XML attribute names. Instead, React DOM components expect attributes like\n > `className` and `htmlFor`, respectively."
    },
    {
      "message": "add link to html to jsx converter to \u201cjsx in depth\u201d page",
      "diff": "diff --git a/docs/docs/02.1-jsx-in-depth.md b/docs/docs/02.1-jsx-in-depth.md\nindex aff8beee89bf..36a503ecac2e 100644\n--- a/docs/docs/02.1-jsx-in-depth.md\n+++ b/docs/docs/02.1-jsx-in-depth.md\n@@ -58,7 +58,9 @@ var app = Nav({color:\"blue\"}, Profile(null, \"click\"));\n ```\n \n Use the [JSX Compiler](/react/jsx-compiler.html) to try out JSX and see how it\n-desugars into native JavaScript.\n+desugars into native JavaScript, and the \n+[HTML to JSX converter](/react/html-jsx.html) to convert your existing HTML to\n+JSX.\n \n If you want to use JSX, the [Getting Started](/react/docs/getting-started.html) guide shows\n how to setup compilation.\n@@ -104,7 +106,7 @@ See [Multiple Components](/react/docs/multiple-components.html) to learn more ab\n \n > Note:\n >\n-> Since JSX is JavaScript, identifiers such as `class` and `for` are discouraged\n+> Since JSX is JavaScript, identifiers such as `class` and `for` are not allowed\n > as XML attribute names. Instead, React DOM components expect attributes like\n > `className` and `htmlFor`, respectively."
    },
    {
      "message": "remove the require-jsx plugin from the tooling-integration page",
      "diff": "diff --git a/docs/docs/08-tooling-integration.md b/docs/docs/08-tooling-integration.md\nindex f1e9e1fcba2f..262d2ffc63ab 100644\n--- a/docs/docs/08-tooling-integration.md\n+++ b/docs/docs/08-tooling-integration.md\n@@ -42,7 +42,6 @@ The open-source community has built tools that integrate JSX with several build\n \n * [reactify](https://github.com/andreypopp/reactify) - use JSX with [browserify](http://browserify.org/)\n * [grunt-react](https://github.com/ericclemmons/grunt-react) - [grunt](http://gruntjs.com/) task for JSX\n-* [require-jsx](https://github.com/seiffert/require-jsx) - use JSX with [require.js](http://requirejs.org/)\n * [jsx-requirejs-plugin](https://github.com/philix/jsx-requirejs-plugin) - use JSX with [require.js](http://requirejs.org/) and precompile JSX files with r.js\n * [pyReact](https://github.com/facebook/react-python) - use JSX with [Python](http://www.python.org/)\n * [react-rails](https://github.com/facebook/react-rails) - use JSX with [Ruby on Rails](http://rubyonrails.org/)"
    },
    {
      "message": "add jsx-requirejs-plugin to the tooling-integration page",
      "diff": "diff --git a/docs/docs/08-tooling-integration.md b/docs/docs/08-tooling-integration.md\nindex 148d723cb6cf..f1e9e1fcba2f 100644\n--- a/docs/docs/08-tooling-integration.md\n+++ b/docs/docs/08-tooling-integration.md\n@@ -43,6 +43,7 @@ The open-source community has built tools that integrate JSX with several build\n * [reactify](https://github.com/andreypopp/reactify) - use JSX with [browserify](http://browserify.org/)\n * [grunt-react](https://github.com/ericclemmons/grunt-react) - [grunt](http://gruntjs.com/) task for JSX\n * [require-jsx](https://github.com/seiffert/require-jsx) - use JSX with [require.js](http://requirejs.org/)\n+* [jsx-requirejs-plugin](https://github.com/philix/jsx-requirejs-plugin) - use JSX with [require.js](http://requirejs.org/) and precompile JSX files with r.js\n * [pyReact](https://github.com/facebook/react-python) - use JSX with [Python](http://www.python.org/)\n * [react-rails](https://github.com/facebook/react-rails) - use JSX with [Ruby on Rails](http://rubyonrails.org/)"
    },
    {
      "message": "make sure the mock is cleared in the eventemitter test",
      "diff": "diff --git a/src/core/__tests__/ReactEventEmitter-test.js b/src/core/__tests__/ReactEventEmitter-test.js\nindex 40e81c32b1a6..cbe794f91f7d 100644\n--- a/src/core/__tests__/ReactEventEmitter-test.js\n+++ b/src/core/__tests__/ReactEventEmitter-test.js\n@@ -86,6 +86,7 @@ function registerSimpleTestHandler() {\n describe('ReactEventEmitter', function() {\n   beforeEach(function() {\n     require('mock-modules').dumpCache();\n+    LISTENER.mockClear();\n     EventPluginHub = require('EventPluginHub');\n     TapEventPlugin = require('TapEventPlugin');\n     ReactMount = require('ReactMount');"
    },
    {
      "message": "let components specify tag for reacttestutils.mockcomponent to use.",
      "diff": "diff --git a/src/test/ReactTestUtils.js b/src/test/ReactTestUtils.js\nindex c015da739d17..ceec6ac67223 100644\n--- a/src/test/ReactTestUtils.js\n+++ b/src/test/ReactTestUtils.js\n@@ -197,18 +197,24 @@ var ReactTestUtils = {\n    * useful methods that allow it to be used as a dummy React component.\n    * Instead of rendering as usual, the component will become a simple\n    * <div> containing any provided children.\n+   *\n+   * @param {object} module the mock function object exported from a\n+   *                        module that defines the component to be mocked\n+   * @param {?string} mockTagName optional dummy root tag name to return\n+   *                              from render method (overrides\n+   *                              module.mockTagName if provided)\n+   * @return {object} the ReactTestUtils object (for chaining)\n    */\n-  mockComponent: function(module) {\n+  mockComponent: function(module, mockTagName) {\n     var ConvenienceConstructor = React.createClass({\n       render: function() {\n-        return ReactDOM.div(null, this.props.children);\n+        var mockTagName = mockTagName || module.mockTagName || \"div\";\n+        return ReactDOM[mockTagName](null, this.props.children);\n       }\n     });\n \n     copyProperties(module, ConvenienceConstructor);\n-    module.mockImplementation(function() {\n-      return ConvenienceConstructor.apply(null, arguments);\n-    });\n+    module.mockImplementation(ConvenienceConstructor);\n \n     return this;\n   },"
    },
    {
      "message": "use explicit $.ajax datatype and add error callback",
      "diff": "diff --git a/docs/docs/tutorial.md b/docs/docs/tutorial.md\nindex d9ca8729cf1a..ab49fe57273f 100644\n--- a/docs/docs/tutorial.md\n+++ b/docs/docs/tutorial.md\n@@ -383,8 +383,12 @@ var CommentBox = React.createClass({\n   getInitialState: function() {\n     $.ajax({\n       url: 'comments.json',\n+      dataType: 'json',\n       success: function(data) {\n         this.setState({data: data});\n+      }.bind(this),\n+      error: function(xhr, status, err) {\n+        console.log(\"comments.json\", status, err.toString());\n       }.bind(this)\n     });\n     return {data: []};"
    },
    {
      "message": "add unit test for transferpropsto, \"key\" should never transfer",
      "diff": "diff --git a/src/core/__tests__/ReactPropTransferer-test.js b/src/core/__tests__/ReactPropTransferer-test.js\nindex 1854ef7e959c..ea33753a7341 100644\n--- a/src/core/__tests__/ReactPropTransferer-test.js\n+++ b/src/core/__tests__/ReactPropTransferer-test.js\n@@ -110,25 +110,26 @@ describe('ReactPropTransferer', function() {\n         .toBeDOMComponentWithNoChildren();\n   });\n \n-  it('should not transfer ref', function() {\n-    var RefTestComponent = React.createClass({\n+  it('should not transfer ref or key', function() {\n+    var TestComponent = React.createClass({\n       render: function() {\n         expect(this.props.ref).toBeUndefined();\n+        expect(this.props.key).toBeUndefined();\n         return <div />;\n       }\n     });\n-    var OuterRefTestComponent = React.createClass({\n+    var OuterTestComponent = React.createClass({\n       render: function() {\n-        return this.transferPropsTo(<RefTestComponent />);\n+        return this.transferPropsTo(<TestComponent />);\n       }\n     });\n-    var OuterOuterRefTestComponent = React.createClass({\n+    var OuterOuterTestComponent = React.createClass({\n       render: function() {\n-        return <OuterRefTestComponent ref=\"testref\" />;\n+        return <OuterTestComponent ref=\"testref\" key=\"testkey\" />;\n       }\n     });\n \n-    ReactTestUtils.renderIntoDocument(<OuterOuterRefTestComponent />);\n+    ReactTestUtils.renderIntoDocument(<OuterOuterTestComponent />);\n   });\n \n   it('should not transferPropsTo() a component you don\\'t own', function() {"
    },
    {
      "message": "fix npm react having wrong version dependency for envify",
      "diff": "diff --git a/npm-react/package.json b/npm-react/package.json\nindex f14da86481b7..4641bccb1176 100644\n--- a/npm-react/package.json\n+++ b/npm-react/package.json\n@@ -28,7 +28,7 @@\n     \"node\": \">=0.10.0\"\n   },\n   \"peerDependencies\": {\n-    \"envify\": \"~0.2.0\"\n+    \"envify\": \"~1.0.1\"\n   },\n   \"browserify\": {\n     \"transform\": [\"envify\"]"
    },
    {
      "message": "make controlled components and bubbling work in ie",
      "diff": "diff --git a/src/eventPlugins/ChangeEventPlugin.js b/src/eventPlugins/ChangeEventPlugin.js\nindex ad8fa70f1202..61a9324d17f7 100644\n--- a/src/eventPlugins/ChangeEventPlugin.js\n+++ b/src/eventPlugins/ChangeEventPlugin.js\n@@ -22,6 +22,7 @@ var EventConstants = require('EventConstants');\n var EventPluginHub = require('EventPluginHub');\n var EventPropagators = require('EventPropagators');\n var ExecutionEnvironment = require('ExecutionEnvironment');\n+var ReactUpdates = require('ReactUpdates');\n var SyntheticEvent = require('SyntheticEvent');\n \n var isEventSupported = require('isEventSupported');\n@@ -73,10 +74,21 @@ function manualDispatchChangeEvent(nativeEvent) {\n   );\n   EventPropagators.accumulateTwoPhaseDispatches(event);\n \n-  // If change bubbled, we'd just bind to it like all the other events\n-  // and have it go through ReactEventTopLevelCallback. Since it doesn't, we\n-  // manually listen for the change event and so we have to enqueue and\n+  // If change and propertychange bubbled, we'd just bind to it like all the\n+  // other events and have it go through ReactEventTopLevelCallback. Since it\n+  // doesn't, we manually listen for the events and so we have to enqueue and\n   // process the abstract event manually.\n+  //\n+  // Batching is necessary here in order to ensure that all event handlers run\n+  // before the next rerender (including event handlers attached to ancestor\n+  // elements instead of directly on the input). Without this, controlled\n+  // components don't work properly in conjunction with event bubbling because\n+  // the component is rerendered and the value reverted before all the event\n+  // handlers can run. See https://github.com/facebook/react/issues/708.\n+  ReactUpdates.batchedUpdates(runEventInBatch, event);\n+}\n+\n+function runEventInBatch(event) {\n   EventPluginHub.enqueueEvents(event);\n   EventPluginHub.processEventQueue();\n }"
    },
    {
      "message": "note about react's version on the talk, since somethings have already changed since then",
      "diff": "diff --git a/docs/index.md b/docs/index.md\nindex bfb7ac373294..67d5a36ef968 100644\n--- a/docs/index.md\n+++ b/docs/index.md\n@@ -85,6 +85,7 @@ id: home\n <section class=\"home-section home-presentation\">\n   <h3>Presentation</h3>\n   <p>Watch this 30-minute presentation followed by a Q&A to learn more about React.</p>\n+  <p><strong>Note:</strong> React was at 0.3.2 by the time of this talk and somethings have already changed since then.</p>\n   <figure><iframe width=\"650\" height=\"400\" src=\"//www.youtube.com/embed/XxVg_s8xAms\" frameborder=\"0\" allowfullscreen></iframe></figure>\n </section>\n <hr class=\"home-divider\" />"
    },
    {
      "message": "define public saucelabs info for everything to use",
      "diff": "diff --git a/Gruntfile.js b/Gruntfile.js\nindex bd44eb70834f..8c8c0754e455 100644\n--- a/Gruntfile.js\n+++ b/Gruntfile.js\n@@ -13,6 +13,13 @@ var npmReactTasks = require('./grunt/tasks/npm-react');\n \n module.exports = function(grunt) {\n \n+  if (!process.env.SAUCE_USERNAME) {\n+    process.env.SAUCE_USERNAME = 'React';\n+  }\n+  if (!process.env.SAUCE_ACCESS_KEY) {\n+    process.env.SAUCE_ACCESS_KEY = '339d32ca-d594-4570-a3c2-94c50a91919b';\n+  }\n+\n   grunt.initConfig({\n     pkg: grunt.file.readJSON('package.json'),\n     copy: require('./grunt/config/copy'),\ndiff --git a/grunt/config/webdriver-jasmine.js b/grunt/config/webdriver-jasmine.js\nindex b01660ddeb81..ff5545a0ead5 100644\n--- a/grunt/config/webdriver-jasmine.js\n+++ b/grunt/config/webdriver-jasmine.js\n@@ -27,8 +27,8 @@ exports.saucelabs = {\n   webdriver: {\n     remote: {\n       /* https://github.com/admc/wd/blob/master/README.md#named-parameters */\n-      user: process.env.SAUCE_USERNAME || 'React',\n-      pwd: process.env.SAUCE_ACCESS_KEY || '339d32ca-d594-4570-a3c2-94c50a91919b',\n+      user: process.env.SAUCE_USERNAME,\n+      pwd: process.env.SAUCE_ACCESS_KEY,\n       protocol: 'http:',\n       hostname: 'ondemand.saucelabs.com',\n       port: '80',"
    },
    {
      "message": "fix reactdomtextarea missing \"rows\" and \"cols\" attribute, incorrect \"size\" property",
      "diff": "diff --git a/src/dom/DefaultDOMPropertyConfig.js b/src/dom/DefaultDOMPropertyConfig.js\nindex d78b46cdc225..270fda08a158 100644\n--- a/src/dom/DefaultDOMPropertyConfig.js\n+++ b/src/dom/DefaultDOMPropertyConfig.js\n@@ -26,6 +26,7 @@ var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\n var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\n var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\n var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;\n+var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\n \n var DefaultDOMPropertyConfig = {\n   isCustomAttribute: RegExp.prototype.test.bind(\n@@ -50,6 +51,7 @@ var DefaultDOMPropertyConfig = {\n     charSet: MUST_USE_ATTRIBUTE,\n     checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n     className: MUST_USE_PROPERTY,\n+    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n     colSpan: null,\n     content: null,\n     contentEditable: null,\n@@ -89,11 +91,12 @@ var DefaultDOMPropertyConfig = {\n     rel: null,\n     required: HAS_BOOLEAN_VALUE,\n     role: MUST_USE_ATTRIBUTE,\n+    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n     rowSpan: null,\n     scrollLeft: MUST_USE_PROPERTY,\n     scrollTop: MUST_USE_PROPERTY,\n     selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n-    size: null,\n+    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n     spellCheck: null,\n     src: null,\n     step: null,"
    },
    {
      "message": "make docs jsx compiler highlight transpiled js code",
      "diff": "diff --git a/docs/_css/react.scss b/docs/_css/react.scss\nindex c502b06b79a7..5e94c2fe0890 100644\n--- a/docs/_css/react.scss\n+++ b/docs/_css/react.scss\n@@ -459,7 +459,7 @@ section.black content {\n   }\n \n   .playgroundPreview {\n-    padding: 14px;\n+    padding: 0;\n     width: 600px;\n \n     pre {\ndiff --git a/docs/_js/live_editor.js b/docs/_js/live_editor.js\nindex 818d3b4eb9e2..e03bde05bf59 100644\n--- a/docs/_js/live_editor.js\n+++ b/docs/_js/live_editor.js\n@@ -22,7 +22,8 @@ var CodeMirrorEditor = React.createClass({\n       mode: 'javascript',\n       lineNumbers: false,\n       matchBrackets: true,\n-      theme: 'solarized-light'\n+      theme: 'solarized-light',\n+      readOnly: this.props.readOnly\n     });\n     this.editor.on('change', this.onChange);\n     this.onChange();\n@@ -82,7 +83,7 @@ var ReactPlayground = React.createClass({\n     } else if (this.state.mode === this.MODES.JS) {\n       content =\n         <div className=\"playgroundJS playgroundStage\">\n-            {this.getDesugaredCode()}\n+          {this.getDesugaredCode()}\n         </div>;\n     }\n \n@@ -111,13 +112,14 @@ var ReactPlayground = React.createClass({\n     } catch (e) { }\n \n     try {\n+      var desugaredCode = this.getDesugaredCode();\n       if (this.props.renderCode) {\n         React.renderComponent(\n-          <pre>{this.getDesugaredCode()}</pre>,\n+          <CodeMirrorEditor codeText={desugaredCode} readOnly={true} />,\n           mountNode\n         );\n       } else {\n-        eval(this.getDesugaredCode());\n+        eval(desugaredCode);\n       }\n     } catch (e) {\n       React.renderComponent("
    },
    {
      "message": "add back mocking removed to make reacteventtoplevelcallback-test pass.",
      "diff": "diff --git a/src/core/__tests__/ReactEventTopLevelCallback-test.js b/src/core/__tests__/ReactEventTopLevelCallback-test.js\nindex 8252263e2839..14b02ac1d099 100644\n--- a/src/core/__tests__/ReactEventTopLevelCallback-test.js\n+++ b/src/core/__tests__/ReactEventTopLevelCallback-test.js\n@@ -22,28 +22,23 @@ require('mock-modules')\n   .dontMock('ReactEventTopLevelCallback')\n   .dontMock('ReactMount')\n   .dontMock('ReactInstanceHandles')\n-  .dontMock('ReactDOM');\n+  .dontMock('ReactDOM')\n+  .mock('ReactEventEmitter');\n \n var EVENT_TARGET_PARAM = 1;\n \n describe('ReactEventTopLevelCallback', function() {\n-  var mocks;\n-\n   var React;\n   var ReactEventTopLevelCallback;\n   var ReactDOM;\n-  var ReactEventEmitter;\n+  var ReactEventEmitter; // mocked\n \n   beforeEach(function() {\n     require('mock-modules').dumpCache();\n-    mocks = require('mocks');\n-\n     React = require('React');\n     ReactEventTopLevelCallback = require('ReactEventTopLevelCallback');\n     ReactDOM = require('ReactDOM');\n-    ReactEventEmitter = require('ReactEventEmitter');\n-\n-    ReactEventEmitter.handleTopLevel = mocks.getMockFunction();\n+    ReactEventEmitter = require('ReactEventEmitter'); // mocked\n   });\n \n   describe('Propagation', function() {"
    },
    {
      "message": "remove rootnode from componentdidmount and componentdidupdate",
      "diff": "diff --git a/src/core/ReactMountReady.js b/src/core/ReactMountReady.js\nindex de349d347b05..c3d4fb6adbd1 100644\n--- a/src/core/ReactMountReady.js\n+++ b/src/core/ReactMountReady.js\n@@ -66,7 +66,7 @@ mixInto(ReactMountReady, {\n       for (var i = 0, l = queue.length; i < l; i++) {\n         var component = queue[i].component;\n         var callback = queue[i].callback;\n-        callback.call(component, component.getDOMNode());\n+        callback.call(component);\n       }\n       queue.length = 0;\n     }"
    },
    {
      "message": "remove transaction argument from componentwillreceiveprops",
      "diff": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex 6c61396d47f3..65786a32fd85 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -827,7 +827,7 @@ var ReactCompositeComponentMixin = {\n \n       this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_PROPS;\n       if (this.componentWillReceiveProps) {\n-        this.componentWillReceiveProps(nextProps, transaction);\n+        this.componentWillReceiveProps(nextProps);\n       }\n     }"
    },
    {
      "message": "add explination of autobind to dom event listener tip",
      "diff": "diff --git a/docs/tips/11-dom-event-listeners.md b/docs/tips/11-dom-event-listeners.md\nindex 46e577fff5e0..1695391523ee 100644\n--- a/docs/tips/11-dom-event-listeners.md\n+++ b/docs/tips/11-dom-event-listeners.md\n@@ -42,3 +42,5 @@ React.renderComponent(<Box />, mountNode);\n ```\n \n `componentDidMount` is called after the component is mounted and has a DOM representation. This is often a place where you would attach generic DOM events.\n+\n+Notice that the event callback is bound to the react component and not the original element. React automatically binds methods to the current component instance for you through a process of [autobinding](../docs/interactivity-and-dynamic-uis.html#under-the-hood-autobind-and-event-delegation)."
    },
    {
      "message": "set docs menu item to active when viewing a \u201ctips\u201d page",
      "diff": "diff --git a/docs/_layouts/default.html b/docs/_layouts/default.html\nindex f013a7286c2d..dfafaa028ecd 100644\n--- a/docs/_layouts/default.html\n+++ b/docs/_layouts/default.html\n@@ -40,7 +40,7 @@\n           React\n         </a>\n         <ul class=\"nav-site\">\n-          <li><a href=\"/react/docs/getting-started.html\"{% if page.sectionid == 'docs' %} class=\"active\"{% endif %}>docs</a></li>\n+          <li><a href=\"/react/docs/getting-started.html\"{% if page.sectionid == 'docs' or page.sectionid == 'tips' %} class=\"active\"{% endif %}>docs</a></li>\n           <li><a href=\"/react/support.html\"{% if page.id == 'support' %} class=\"active\"{% endif %}>support</a></li>\n           <li><a href=\"/react/downloads.html\"{% if page.id == 'downloads' %} class=\"active\"{% endif %}>download</a></li>\n           <li><a href=\"/react/blog/\"{% if page.sectionid == 'blog' %} class=\"active\"{% endif %}>blog</a></li>"
    },
    {
      "message": "upgrade populist version to v0.1.5 for better error reporting.",
      "diff": "diff --git a/package.json b/package.json\nindex bb21489676b8..1492113a7e67 100644\n--- a/package.json\n+++ b/package.json\n@@ -42,7 +42,7 @@\n   },\n   \"devDependencies\": {\n     \"browserify\": \"~2.34.1\",\n-    \"populist\": \"~0.1.4\",\n+    \"populist\": \"~0.1.5\",\n     \"grunt-cli\": \"~0.1.9\",\n     \"grunt\": \"~0.4.1\",\n     \"grunt-contrib-copy\": \"~0.4.1\","
    },
    {
      "message": "make bin/jsx --version output the react version according to package.json.",
      "diff": "diff --git a/bin/jsx b/bin/jsx\nindex c848f496e957..412dff72c19f 100755\n--- a/bin/jsx\n+++ b/bin/jsx\n@@ -1,10 +1,13 @@\n #!/usr/bin/env node\n+// -*- mode: js -*-\n \"use strict\";\n \n var visitors = require('../vendor/fbtransform/visitors').transformVisitors;\n var transform = require('jstransform').transform;\n \n-require(\"commoner\").resolve(function(id) {\n+require(\"commoner\").version(\n+  require(\"../package.json\").version\n+).resolve(function(id) {\n   return this.readModuleP(id);\n }).process(function(id, source) {\n   // This is where JSX, ES6, etc. desugaring happens.\ndiff --git a/bin/jsx-internal b/bin/jsx-internal\nindex 3ad9f7c40af9..7d295217dac2 100755\n--- a/bin/jsx-internal\n+++ b/bin/jsx-internal\n@@ -1,11 +1,14 @@\n #!/usr/bin/env node\n+// -*- mode: js -*-\n \"use strict\";\n \n var visitors = require('../vendor/fbtransform/visitors').transformVisitors;\n var transform = require('jstransform').transform;\n var propagate = require(\"../vendor/constants\").propagate;\n \n-require(\"commoner\").resolve(function(id) {\n+require(\"commoner\").version(\n+  require(\"../package.json\").version\n+).resolve(function(id) {\n   var context = this;\n \n   // Note that the result of context.getProvidedP() is cached for the\ndiff --git a/package.json b/package.json\nindex e86eef0a15df..de0aa349cef6 100644\n--- a/package.json\n+++ b/package.json\n@@ -36,7 +36,7 @@\n     \"test\": \"grunt build && grunt test\"\n   },\n   \"dependencies\": {\n-    \"commoner\": \"~0.8.4\",\n+    \"commoner\": \"~0.8.7\",\n     \"esprima-fb\": \"~1001.1001.2000-dev-harmony-fb\",\n     \"jstransform\": \"~1.0.1\"\n   },"
    },
    {
      "message": "move header link styling out of documentation only",
      "diff": "diff --git a/docs/_css/react.scss b/docs/_css/react.scss\nindex 78fb3d7a3313..a2e0aab3c966 100644\n--- a/docs/_css/react.scss\n+++ b/docs/_css/react.scss\n@@ -74,6 +74,24 @@ li {\n   margin-left: 20px;\n }\n \n+// Make header navigation linkable and on the screen. Used in documentation and\n+// blog posts.\n+h1, h2, h3, h4, h5, h6 {\n+  &.anchor {\n+    position: relative;\n+    top: -$navHeight;\n+    > a {\n+      color: $darkTextColor;\n+      position: relative;\n+      top: $navHeight;\n+\n+      &:hover {\n+        text-decoration: underline;\n+      }\n+    }\n+  }\n+}\n+\n // Main Nav\n \n .nav-main {\n@@ -392,22 +410,6 @@ section.black content {\n     font-size: 24px;\n   }\n \n-  h1, h2, h3, h4, h5, h6 {\n-    &.anchor {\n-      position: relative;\n-      top: -$navHeight;\n-    }\n-\n-    > a {\n-      color: $darkTextColor;\n-      position: relative;\n-      top: $navHeight;\n-\n-      &:hover {\n-        text-decoration: underline;\n-      }\n-    }\n-  }\n \n   // H2s form documentation topic dividers. Extra space helps.\n   h2 {"
    },
    {
      "message": "fix doc & example transition opacity from .99 to 1",
      "diff": "diff --git a/docs/docs/09-addons.md b/docs/docs/09-addons.md\nindex 30bacadc7796..0997336bf3fd 100644\n--- a/docs/docs/09-addons.md\n+++ b/docs/docs/09-addons.md\n@@ -67,7 +67,7 @@ You can use these classes to trigger a CSS animation or transition. For example,\n }\n \n .example-enter.example-enter-active {\n-  opacity: 0.99;\n+  opacity: 1;\n }\n ```\n \n@@ -75,7 +75,7 @@ You'll notice that when you try to remove an item `ReactTransitionGroup` keeps i\n \n ```css\n .example-leave {\n-  opacity: 0.99;\n+  opacity: 1;\n   transition: opacity .5s ease-in;\n }\n \ndiff --git a/examples/transitions/transition.css b/examples/transitions/transition.css\nindex eeaead7c4cf5..ee851d113608 100644\n--- a/examples/transitions/transition.css\n+++ b/examples/transitions/transition.css\n@@ -20,7 +20,7 @@\n .example-enter.example-enter-active,\n .example-leave {\n   margin-left: 0;\n-  opacity: 0.99;\n+  opacity: 1;\n }\n \n .animateExample {"
    },
    {
      "message": "add autocorrect to list of supported dom properties",
      "diff": "diff --git a/src/dom/DefaultDOMPropertyConfig.js b/src/dom/DefaultDOMPropertyConfig.js\nindex ed6a53206dc3..0b4c7dabcb56 100644\n--- a/src/dom/DefaultDOMPropertyConfig.js\n+++ b/src/dom/DefaultDOMPropertyConfig.js\n@@ -42,6 +42,7 @@ var DefaultDOMPropertyConfig = {\n     allowTransparency: MUST_USE_ATTRIBUTE,\n     alt: null,\n     autoComplete: null,\n+    autoCorrect: null,\n     autoFocus: HAS_BOOLEAN_VALUE,\n     autoPlay: HAS_BOOLEAN_VALUE,\n     cellPadding: null,\n@@ -156,6 +157,7 @@ var DefaultDOMPropertyConfig = {\n   DOMPropertyNames: {\n     autoCapitalize: 'autocapitalize',\n     autoComplete: 'autocomplete',\n+    autoCorrect: 'autocorrect',\n     autoFocus: 'autofocus',\n     autoPlay: 'autoplay',\n     encType: 'enctype',"
    },
    {
      "message": "undo changes to extractcode, using grunt task instead",
      "diff": "diff --git a/docs/extractCode.js b/docs/extractCode.js\nindex 8728776b97a4..b5714e3cb0f3 100644\n--- a/docs/extractCode.js\n+++ b/docs/extractCode.js\n@@ -16,24 +16,21 @@ function main(dest, filenames) {\n     if (!dest) {\n \tthrow new Error('no dest provided');\n     }\n-    console.log(filenames);\n-    \n     filenames.map(function (filename) {\n-\t\tvar content = fs.readFileSync(filename).toString('utf8');\n-\t\tvar codeSamples = content.match(CODE_SAMPLE);\n+\tvar content = fs.readFileSync(filename).toString('utf8');\n+\tvar codeSamples = content.match(CODE_SAMPLE);\n \n-\t\t\n-\t\tcodeSamples.map(function (codeSample) {\n-\t\t    // Do a little jank preprocessing\n-\t\t    codeSample = codeSample.replace('<!--', '//').replace(' -->', '');\n-\t\t    var extracted = codeSample.match(PARTS);\n-\t\t    if (!extracted) {\n-\t\t\tthrow new Error('Code sample did not match correct format in ' + filename + ': ' + truncate(codeSample));\n-\t\t    }\n-\t\t    var filename = extracted[1];\n-\t\t    var content = extracted[2].replace(/\\*\\*/g, '');\n-\t\t    fs.writeFileSync(argv.dest + '/' + filename, content);\n-\t\t});\n+\tcodeSamples.map(function (codeSample) {\n+\t    // Do a little jank preprocessing\n+\t    codeSample = codeSample.replace('<!--', '//').replace(' -->', '');\n+\t    var extracted = codeSample.match(PARTS);\n+\t    if (!extracted) {\n+\t\tthrow new Error('Code sample did not match correct format in ' + filename + ': ' + truncate(codeSample));\n+\t    }\n+\t    var filename = extracted[1];\n+\t    var content = extracted[2].replace(/\\*\\*/g, '');\n+\t    fs.writeFileSync(argv.dest + '/' + filename, content);\n+\t});\n     });\n }"
    },
    {
      "message": "make 'disabled' must_use_attribute for compatibility with css  selectors.",
      "diff": "diff --git a/src/dom/DefaultDOMPropertyConfig.js b/src/dom/DefaultDOMPropertyConfig.js\nindex a5380fa9d7b5..ed6a53206dc3 100644\n--- a/src/dom/DefaultDOMPropertyConfig.js\n+++ b/src/dom/DefaultDOMPropertyConfig.js\n@@ -57,7 +57,7 @@ var DefaultDOMPropertyConfig = {\n     data: null, // For `<object />` acts as `src`.\n     dateTime: MUST_USE_ATTRIBUTE,\n     dir: null,\n-    disabled: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n+    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n     draggable: null,\n     encType: null,\n     form: MUST_USE_ATTRIBUTE,"
    },
    {
      "message": "update api docs for unmountandreleasereactrootnode",
      "diff": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex 0805389c92fc..87c98c14253f 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -53,14 +53,18 @@ If the React component was previously rendered into `container`, this will perfo\n If the optional callback is provided, it will be executed after the component is rendered or updated.\n \n \n-### React.unmountAndReleaseReactRootNode\n+### React.unmountComponentAtNode\n \n ```javascript\n-unmountAndReleaseReactRootNode(DOMElement container)\n+unmountComponentAtNode(DOMElement container)\n ```\n \n Remove a mounted React component from the DOM and clean up its event handlers and state.\n \n+> Note:\n+>\n+> This method was called `React.unmountAndReleaseReactRootNode` until v0.5. It still works in v0.5 but will be removed in future versions.\n+\n \n ### React.renderComponentToString"
    },
    {
      "message": "add bitwise lint escape to defaultdompropertyconfig",
      "diff": "diff --git a/src/dom/DefaultDOMPropertyConfig.js b/src/dom/DefaultDOMPropertyConfig.js\nindex 09175c7ccd34..a5380fa9d7b5 100644\n--- a/src/dom/DefaultDOMPropertyConfig.js\n+++ b/src/dom/DefaultDOMPropertyConfig.js\n@@ -16,6 +16,8 @@\n  * @providesModule DefaultDOMPropertyConfig\n  */\n \n+/*jslint bitwise: true*/\n+\n \"use strict\";\n \n var DOMProperty = require('DOMProperty');"
    },
    {
      "message": "make sure react-with-addons ends up in react-source gem",
      "diff": "diff --git a/react-source.gemspec b/react-source.gemspec\nindex ead889f5bba7..acfdc53f01f1 100644\n--- a/react-source.gemspec\n+++ b/react-source.gemspec\n@@ -17,6 +17,8 @@ gemspec = Gem::Specification.new do |s|\n   s.files = Dir[\n     'build/react.js',\n     'build/react.min.js',\n+    'build/react-with-addons.js',\n+    'build/react-with-addons.min.js',\n     'build/JSXTransformer.js',\n     'lib/react/source.rb'\n   ]"
    },
    {
      "message": "expose the rendered children before they're actually mounted",
      "diff": "diff --git a/src/core/ReactMultiChild.js b/src/core/ReactMultiChild.js\nindex 501baa21ca4b..6bfe277bd6cb 100644\n--- a/src/core/ReactMultiChild.js\n+++ b/src/core/ReactMultiChild.js\n@@ -197,6 +197,7 @@ var ReactMultiChild = {\n     mountChildren: function(children, transaction) {\n       var mountImages = [];\n       var index = 0;\n+      this._renderedChildren = children;\n       for (var name in children) {\n         var child = children[name];\n         if (children.hasOwnProperty(name) && child) {\n@@ -213,7 +214,6 @@ var ReactMultiChild = {\n           index++;\n         }\n       }\n-      this._renderedChildren = children;\n       return mountImages;\n     },"
    },
    {
      "message": "change spec policy for getdefaultprops to specpolicy.define_many_merged",
      "diff": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex af3537e96985..2d4b09efd3b3 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -110,7 +110,7 @@ var ReactCompositeComponentInterface = {\n    * @return {object}\n    * @optional\n    */\n-  getDefaultProps: SpecPolicy.DEFINE_ONCE,\n+  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n \n   /**\n    * Invoked once before the component is mounted. The return value will be used"
    },
    {
      "message": "give the user a warning when using unoptimized jsx code and send the user to the correct location in the documentation to optimize.",
      "diff": "diff --git a/docs/docs/08-tooling-integration.md b/docs/docs/08-tooling-integration.md\nindex abe17706c9ee..4733f36ec3aa 100644\n--- a/docs/docs/08-tooling-integration.md\n+++ b/docs/docs/08-tooling-integration.md\n@@ -20,7 +20,7 @@ We provide CDN-hosted versions of React [on our download page](/react/downloads.\n \n We have instructions for building from `master` [in our GitHub repository](https://github.com/facebook/react). We build a tree of CommonJS modules under `build/modules` which you can drop into any environment or packaging tool that supports CommonJS.\n \n-## JSX\n+## <a id=\"jsx\">JSX</a>\n \n ### In-browser JSX Transform\n \ndiff --git a/vendor/browser-transforms.js b/vendor/browser-transforms.js\nindex b4ba305300f0..76bd7e0fd654 100644\n--- a/vendor/browser-transforms.js\n+++ b/vendor/browser-transforms.js\n@@ -51,6 +51,7 @@ var load = exports.load = function(url, callback) {\n   var xhr;\n   xhr = window.ActiveXObject ? new window.ActiveXObject('Microsoft.XMLHTTP')\n                              : new XMLHttpRequest();\n+\n   // Disable async since we need to execute scripts in the order they are in the\n   // DOM to mirror normal script loading.\n   xhr.open('GET', url, false);\n@@ -79,6 +80,10 @@ runScripts = function() {\n     return script.type === 'text/jsx';\n   });\n \n+  if(jsxScripts.length){\n+    console.warn(\"You are using unoptimized JSX (to optimize for production see: http://facebook.github.io/react/docs/tooling-integration.html#jsx)\");\n+  }\n+\n   jsxScripts.forEach(function(script) {\n     if (script.src) {\n       load(script.src);"
    },
    {
      "message": "add link to third-party `javascript .tmlanguage` in docs.",
      "diff": "diff --git a/docs/docs/02.1-jsx-in-depth.md b/docs/docs/02.1-jsx-in-depth.md\nindex 7f1d52e4589c..4c7692ae07eb 100644\n--- a/docs/docs/02.1-jsx-in-depth.md\n+++ b/docs/docs/02.1-jsx-in-depth.md\n@@ -162,10 +162,15 @@ var content = <Container>{/* this is a comment */}<Nav /></Container>;\n Beyond the compilation step, JSX does not require any special tools.\n \n * Many editors already include reasonable support for JSX (Vim, Emacs js2-mode).\n+  * JSX syntax highlighting is available for Sublime Text and other editors\n+    that support `*.tmLanguage` using the third-party\n+    [`JavaScript (JSX).tmLanguage`][1].\n * Linting provides accurate line numbers after compiling without sourcemaps.\n * Elements use standard scoping so linters can find usage of out-of-scope\n   components.\n \n+[1]: https://github.com/yungsters/sublime/blob/master/tmLanguage/JavaScript%20(JSX).tmLanguage\n+\n ## Prior Work\n \n JSX is similar to several other JavaScript embedded XML language"
    },
    {
      "message": "use a regular expression to parse out react.version.",
      "diff": "diff --git a/Gruntfile.js b/Gruntfile.js\nindex d01fcbdc3a12..6d9ce5bb3b6b 100644\n--- a/Gruntfile.js\n+++ b/Gruntfile.js\n@@ -55,8 +55,11 @@ module.exports = function(grunt) {\n   // Check that the version we're exporting is the same one we expect in the\n   // package. This is not an ideal way to do this, but makes sure that we keep\n   // them in sync.\n+  var reactVersionExp = /\\bReact\\.version\\s*=\\s*['\"]([^'\"]+)['\"];/;\n   grunt.registerTask('version-check', function() {\n-    var version = require('./build/modules/React').version;\n+    var version = reactVersionExp.exec(\n+      grunt.file.read('./build/modules/React.js')\n+    )[1];\n     var expectedVersion = grunt.config.data.pkg.version;\n     if (version !== expectedVersion) {\n       grunt.log.error('Versions do not match. Expected %s, saw %s', expectedVersion, version);"
    },
    {
      "message": "add more helpful invariant if you're updating an unrendered component",
      "diff": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex 4bb6a4fedd4a..01c1ccbb5dd0 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -726,6 +726,11 @@ var ReactCompositeComponentMixin = {\n       ReactComponent.Mixin.updateComponent.call(this, transaction, prevProps);\n       var currentComponent = this._renderedComponent;\n       var nextComponent = this._renderValidatedComponent();\n+      invariant(\n+        typeof currentComponent !== 'undefined',\n+        'updateComponent(...): You are attempting to update an unrendered ' +\n+        'component.'\n+      );\n       if (currentComponent.constructor === nextComponent.constructor) {\n         currentComponent.receiveProps(nextComponent.props, transaction);\n       } else {"
    },
    {
      "message": "change `reactmultichild` test to check for `innerhtml` descriptor.",
      "diff": "diff --git a/src/core/__tests__/ReactMultiChild-test.js b/src/core/__tests__/ReactMultiChild-test.js\nindex 845150623732..2a6d25ef2234 100644\n--- a/src/core/__tests__/ReactMultiChild-test.js\n+++ b/src/core/__tests__/ReactMultiChild-test.js\n@@ -21,14 +21,19 @@ describe('ReactMultiChild', function() {\n   var React;\n   var setInnerHTML;\n \n+  // Only run this test suite if `Element.prototype.innerHTML` can be spied on.\n+  var innerHTMLDescriptor = Object.getOwnPropertyDescriptor(\n+    Element.prototype,\n+    'innerHTML'\n+  );\n+  if (!innerHTMLDescriptor) {\n+    return;\n+  }\n+\n   beforeEach(function() {\n     require('mock-modules').dumpCache();\n     React = require('React');\n \n-    var innerHTMLDescriptor = Object.getOwnPropertyDescriptor(\n-      Element.prototype,\n-      'innerHTML'\n-    );\n     Object.defineProperty(Element.prototype, 'innerHTML', {\n       set: setInnerHTML = jasmine.createSpy().andCallFake(\n         innerHTMLDescriptor.set"
    },
    {
      "message": "send branch info from travis for continuous builds",
      "diff": "diff --git a/.travis.yml b/.travis.yml\nindex 7ff96ccb610a..252a18d6093e 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -5,7 +5,7 @@ node_js:\n after_script:\n - curl -F \"react=@build/react.js\" -F \"react.min=@build/react.min.js\" -F \"transformer=@build/JSXTransformer.js\"\n   -F \"commit=$TRAVIS_COMMIT\" -F \"date=`git log --format='%ct' -1`\" -F \"pull_request=$TRAVIS_PULL_REQUEST\"\n-  -F \"token=$SECRET_TOKEN\" $SERVER\n+  -F \"token=$SECRET_TOKEN\" -F \"branch=$TRAVIS_BRANCH\" $SERVER\n env:\n   global:\n   # SERVER"
    },
    {
      "message": "run `grunt build` with `npm test` so that we can upload all files",
      "diff": "diff --git a/package.json b/package.json\nindex 58cf9b810e3c..51540c7d5393 100644\n--- a/package.json\n+++ b/package.json\n@@ -32,7 +32,7 @@\n     \"url\": \"https://github.com/facebook/react\"\n   },\n   \"scripts\": {\n-    \"test\": \"grunt test\"\n+    \"test\": \"grunt build && grunt test\"\n   },\n   \"dependencies\": {\n     \"base62\": \"~0.1.1\","
    },
    {
      "message": "allow to execute jsxtransformer outside of browser environment",
      "diff": "diff --git a/vendor/browser-transforms.js b/vendor/browser-transforms.js\nindex c2a37c0a508a..87cc315c04d8 100644\n--- a/vendor/browser-transforms.js\n+++ b/vendor/browser-transforms.js\n@@ -18,13 +18,13 @@\n \n 'use strict';\n var runScripts;\n+var headEl;\n \n var transform = require('./fbtransform/lib/transform').transform;\n var visitors = require('./fbtransform/visitors').transformVisitors;\n var transform = transform.bind(null, visitors.react);\n var docblock = require('./fbtransform/lib/docblock');\n \n-var headEl = document.getElementsByTagName('head')[0];\n \n exports.transform = transform;\n \n@@ -45,6 +45,7 @@ var run = exports.run = function(code) {\n if (typeof window === \"undefined\" || window === null) {\n   return;\n }\n+headEl = document.getElementsByTagName('head')[0];\n \n var load = exports.load = function(url, callback) {\n   var xhr;"
    },
    {
      "message": "pull in my rewritten function.prototype.bind polyfill from upstream.",
      "diff": "diff --git a/src/test/all.js b/src/test/all.js\nindex a94a58062d67..a5c58f4bab60 100644\n--- a/src/test/all.js\n+++ b/src/test/all.js\n@@ -12,40 +12,24 @@ if (!Fp.bind) {\n   Fp.bind = function(context) {\n     var func = this;\n     var args = slice.call(arguments, 1);\n-    var bound;\n \n-    if (func.prototype) {\n-      if (args.length > 0) {\n-        bound = function() {\n-          return func.apply(\n-            !(this instanceof func) && context || this,\n-            args.concat(slice.call(arguments))\n-          );\n-        };\n-      } else {\n-        bound = function() {\n-          return func.apply(\n-            !(this instanceof func) && context || this,\n-            arguments\n-          );\n-        };\n-      }\n-\n-      bound.prototype = Object.create(func.prototype);\n-\n-    } else if (args.length > 0) {\n-      bound = function() {\n-        return func.apply(\n-          context || this,\n-          args.concat(slice.call(arguments))\n-        );\n-      };\n-    } else {\n-      bound = function() {\n-        return func.apply(context || this, arguments);\n-      };\n+    function bound() {\n+      var invokedAsConstructor = func.prototype && (this instanceof func);\n+      return func.apply(\n+        // Ignore the context parameter when invoking the bound function\n+        // as a constructor. Note that this includes not only constructor\n+        // invocations using the new keyword but also calls to base class\n+        // constructors such as BaseClass.call(this, ...) or super(...).\n+        !invokedAsConstructor && context || this,\n+        args.concat(slice.call(arguments))\n+      );\n     }\n \n+    // The bound function must share the .prototype of the unbound\n+    // function so that any object created by one constructor will count\n+    // as an instance of both constructors.\n+    bound.prototype = func.prototype;\n+\n     return bound;\n   };\n }"
    },
    {
      "message": "use getattribute instead of getattributenode in reactid.rawgetid.",
      "diff": "diff --git a/src/core/ReactID.js b/src/core/ReactID.js\nindex f6582411463a..d3a6cfad2b27 100644\n--- a/src/core/ReactID.js\n+++ b/src/core/ReactID.js\n@@ -57,13 +57,7 @@ function getID(node) {\n }\n \n function internalGetID(node) {\n-  if (node && node.getAttributeNode) {\n-    var attributeNode = node.getAttributeNode(ATTR_NAME);\n-    if (attributeNode) {\n-      return attributeNode.value || '';\n-    }\n-  }\n-  return '';\n+  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n }\n \n /**"
    },
    {
      "message": "update dom differences docs to include a note about the style attribute.",
      "diff": "diff --git a/docs/docs/09-reference.md b/docs/docs/09-reference.md\nindex 304a6c0ae200..64a1fb82a7db 100644\n--- a/docs/docs/09-reference.md\n+++ b/docs/docs/09-reference.md\n@@ -205,4 +205,5 @@ React has implemented a browser-independent events and DOM system for performanc\n * All events (including submit) bubble correctly per the W3C spec\n * All event objects conform to the W3C spec\n * All DOM properties and attributes (including event handlers) should be camelCased to be consistent with standard JavaScript style. We intentionally break with the spec here, since the spec is inconsistent.\n+* The `style` attribute accepts a JavaScript object with camelCased properties rather than a CSS string. This is consistent with the DOM `style` JavaScript property, is more efficient, and prevents XSS security holes.\n * `onChange` behaves as you would expect it to: whenever a form field is changed this event is fired rather than inconsistently on blur. We intentionally break from existing browser behavior because `onChange` is a misnomer for its behavior and React relies on this event to react to user input in real time."
    },
    {
      "message": "fix tests to silence some warnings due to autobinding",
      "diff": "diff --git a/src/core/__tests__/refs-test.js b/src/core/__tests__/refs-test.js\nindex 505c2c3fbb79..193c9554ac99 100644\n--- a/src/core/__tests__/refs-test.js\n+++ b/src/core/__tests__/refs-test.js\n@@ -36,6 +36,9 @@ var ClickCounter = React.createClass({\n   triggerReset: function() {\n     this.setState({count: this.props.initialCount});\n   },\n+  handleClick: function() {\n+    this.setState({count: this.state.count + 1});\n+  },\n   render: function() {\n     var children = [];\n     var i;\n@@ -45,10 +48,7 @@ var ClickCounter = React.createClass({\n       );\n     }\n     return (\n-      <span className=\"clickIncrementer\"\n-          onClick={function() {\n-            this.setState({count: this.state.count + 1});\n-          }.bind(this)}>\n+      <span className=\"clickIncrementer\" onClick={this.handleClick}>\n         {children}\n       </span>\n     );\n@@ -77,7 +77,7 @@ var TestRefsComponent = React.createClass({\n   render: function() {\n     return (\n       <div>\n-        <div ref=\"resetDiv\" onClick={this.doReset.bind(this)}>\n+        <div ref=\"resetDiv\" onClick={this.doReset}>\n           Reset Me By Clicking This.\n         </div>\n         <GeneralContainerComponent ref=\"myContainer\">"
    },
    {
      "message": "upgrade commoner and populist to force upgrade to graceful-fs v2.0.0.",
      "diff": "diff --git a/package.json b/package.json\nindex d35a9af1b830..da8d0bc2dacb 100644\n--- a/package.json\n+++ b/package.json\n@@ -36,7 +36,7 @@\n   },\n   \"dependencies\": {\n     \"base62\": \"~0.1.1\",\n-    \"commoner\": \"~0.8.3\",\n+    \"commoner\": \"~0.8.4\",\n     \"esprima\": \"https://github.com/facebook/esprima/tarball/a3e0ea3979eb8d54d8bfade220c272903f928b1e\",\n     \"recast\": \"~0.4.8\",\n     \"source-map\": \"~0.1.22\"\n@@ -44,7 +44,7 @@\n   \"devDependencies\": {\n     \"browserify\": \"~2.24.1\",\n     \"wrapup\": \"~0.12.0\",\n-    \"populist\": \"~0.1.2\",\n+    \"populist\": \"~0.1.3\",\n     \"grunt-cli\": \"~0.1.9\",\n     \"grunt\": \"~0.4.1\",\n     \"grunt-contrib-copy\": \"~0.4.1\","
    },
    {
      "message": "add missing argument to invariant in reactdomselect",
      "diff": "diff --git a/src/dom/components/ReactDOMSelect.js b/src/dom/components/ReactDOMSelect.js\nindex b4aca39e7999..0709eaf5b1d7 100644\n--- a/src/dom/components/ReactDOMSelect.js\n+++ b/src/dom/components/ReactDOMSelect.js\n@@ -39,13 +39,15 @@ function selectValueType(props, propName, componentName) {\n     invariant(\n       Array.isArray(props[propName]),\n       'The `%s` prop supplied to <select> must be an array if `multiple` is ' +\n-      'true.'\n+      'true.',\n+      propName\n     );\n   } else {\n     invariant(\n       !Array.isArray(props[propName]),\n       'The `%s` prop supplied to <select> must be a scalar value if ' +\n-      '`multiple` is false.'\n+      '`multiple` is false.',\n+      propName\n     );\n   }\n }"
    },
    {
      "message": "use a separate grunt/config/jsx config file for tests.",
      "diff": "diff --git a/Gruntfile.js b/Gruntfile.js\nindex fad8b47971b3..e2fdacbe4868 100644\n--- a/Gruntfile.js\n+++ b/Gruntfile.js\n@@ -56,7 +56,6 @@ module.exports = function(grunt) {\n   grunt.registerTask('build:transformer', ['jsx:debug', 'browserify:transformer']);\n   grunt.registerTask('build:min', ['jsx:release', 'browserify:min']);\n   grunt.registerTask('build:test', [\n-    'jsx:debug',\n     'jsx:jasmine',\n     'jsx:test',\n     'browserify:jasmine',\ndiff --git a/bin/jsx b/bin/jsx\nindex 76fe4aa93260..5e269cda97e2 100755\n--- a/bin/jsx\n+++ b/bin/jsx\n@@ -34,7 +34,7 @@ require(\"commoner\").resolve(function(id) {\n   // replacing constant expressions with literal (boolean) values.\n   source = propagate(constants, source);\n \n-  if (constants.__MOCK__) {\n+  if (context.config.mocking) {\n     // Make sure there is exactly one newline at the end of the module.\n     source = source.replace(/\\s+$/m, \"\\n\");\n \ndiff --git a/grunt/config/jsx/debug.json b/grunt/config/jsx/debug.json\nindex d4099010b2f1..1596c562e857 100644\n--- a/grunt/config/jsx/debug.json\n+++ b/grunt/config/jsx/debug.json\n@@ -1,7 +1,6 @@\n {\n     \"debug\": true,\n     \"constants\": {\n-        \"__MOCK__\": true,\n         \"__DEV__\": true\n     }\n }\ndiff --git a/grunt/config/jsx/jsx.js b/grunt/config/jsx/jsx.js\nindex 34fe98c16630..b8a049da92f2 100644\n--- a/grunt/config/jsx/jsx.js\n+++ b/grunt/config/jsx/jsx.js\n@@ -25,7 +25,7 @@ var test = {\n     \"test/all.js\",\n     \"**/__tests__/*.js\"\n   ]),\n-  configFile: debug.configFile,\n+  configFile: \"grunt/config/jsx/test.json\",\n   sourceDir: \"src\",\n   outputDir: \"build/modules\"\n };\ndiff --git a/grunt/config/jsx/test.json b/grunt/config/jsx/test.json\nnew file mode 100644\nindex 000000000000..e897023aabc2\n--- /dev/null\n+++ b/grunt/config/jsx/test.json\n@@ -0,0 +1,7 @@\n+{\n+    \"debug\": true,\n+    \"mocking\": true,\n+    \"constants\": {\n+        \"__DEV__\": true\n+    }\n+}"
    },
    {
      "message": "remove remaining calls to reactcompositecomponent.autobind.",
      "diff": "diff --git a/src/dom/components/ReactDOMInput.js b/src/dom/components/ReactDOMInput.js\nindex e6ba3ed3df5f..7b45aef5158f 100644\n--- a/src/dom/components/ReactDOMInput.js\n+++ b/src/dom/components/ReactDOMInput.js\n@@ -96,7 +96,7 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n     }\n   },\n \n-  handleChange: ReactCompositeComponent.autoBind(function(event) {\n+  handleChange: function(event) {\n     var returnValue;\n     if (this.props.onChange) {\n       this._isChanging = true;\n@@ -108,7 +108,7 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n       value: event.target.value\n     });\n     return returnValue;\n-  })\n+  }\n \n });\n \ndiff --git a/src/dom/components/ReactDOMTextarea.js b/src/dom/components/ReactDOMTextarea.js\nindex 776811992a7d..2d1beb7795d9 100644\n--- a/src/dom/components/ReactDOMTextarea.js\n+++ b/src/dom/components/ReactDOMTextarea.js\n@@ -122,7 +122,7 @@ var ReactDOMTextarea = ReactCompositeComponent.createClass({\n     }\n   },\n \n-  handleChange: ReactCompositeComponent.autoBind(function(event) {\n+  handleChange: function(event) {\n     var returnValue;\n     if (this.props.onChange) {\n       this._isChanging = true;\n@@ -131,7 +131,7 @@ var ReactDOMTextarea = ReactCompositeComponent.createClass({\n     }\n     this.setState({value: event.target.value});\n     return returnValue;\n-  })\n+  }\n \n });"
    },
    {
      "message": "stringify `value` in reactdominput / changeeventplugin",
      "diff": "diff --git a/src/dom/components/ReactDOMInput.js b/src/dom/components/ReactDOMInput.js\nindex 2d552fc923fd..e6ba3ed3df5f 100644\n--- a/src/dom/components/ReactDOMInput.js\n+++ b/src/dom/components/ReactDOMInput.js\n@@ -62,7 +62,8 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n   },\n \n   getValue: function() {\n-    return this.props.value != null ? this.props.value : this.state.value;\n+    // Cast `this.props.value` to a string so equality checks pass.\n+    return this.props.value != null ? '' + this.props.value : this.state.value;\n   },\n \n   render: function() {\n@@ -85,10 +86,12 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n       );\n     }\n     if (this.props.value != null) {\n+      // Cast `this.props.value` to a string so falsey values that cast to\n+      // truthy strings are not ignored.\n       DOMPropertyOperations.setValueForProperty(\n         rootNode,\n         'value',\n-        this.props.value || ''\n+        '' + this.props.value || ''\n       );\n     }\n   },\ndiff --git a/src/eventPlugins/ChangeEventPlugin.js b/src/eventPlugins/ChangeEventPlugin.js\nindex 6bb13d5e0e70..835651fecd8c 100644\n--- a/src/eventPlugins/ChangeEventPlugin.js\n+++ b/src/eventPlugins/ChangeEventPlugin.js\n@@ -169,7 +169,8 @@ var newValueProp =  {\n     return activeElementValueProp.get.call(this);\n   },\n   set: function(val) {\n-    activeElementValue = val;\n+    // Cast to a string so we can do equality checks.\n+    activeElementValue = '' + val;\n     activeElementValueProp.set.call(this, val);\n   }\n };\n@@ -231,7 +232,7 @@ function handlePropertyChange(nativeEvent) {\n /**\n  * If a `change` event should be fired, returns the target's ID.\n  */\n-function  getTargetIDForInputEvent(\n+function getTargetIDForInputEvent(\n     topLevelType,\n     topLevelTarget,\n     topLevelTargetID) {"
    },
    {
      "message": "ensure that the phantomjs binary has appropriate unix mode.",
      "diff": "diff --git a/grunt/tasks/phantom.js b/grunt/tasks/phantom.js\nindex d5c66eb2589a..740ea27aaaaf 100644\n--- a/grunt/tasks/phantom.js\n+++ b/grunt/tasks/phantom.js\n@@ -1,6 +1,7 @@\n 'use strict';\n \n var assert = require(\"assert\");\n+var fs = require(\"fs\");\n var grunt = require(\"grunt\");\n var spawn = grunt.util.spawn;\n var semver = require(\"semver\");\n@@ -58,11 +59,13 @@ module.exports = function() {\n   var config = this.data;\n   var done = this.async();\n \n-  spawn({\n-    cmd: phantomjs,\n-    args: [\"--version\"]\n-  }, function(error, result, code) {\n-    checkVersion(error, result, code);\n-    run(config, done);\n+  fs.chmod(phantomjs, 755, function(err) {\n+    spawn({\n+      cmd: phantomjs,\n+      args: [\"--version\"]\n+    }, function(error, result, code) {\n+      checkVersion(error, result, code);\n+      run(config, done);\n+    });\n   });\n };"
    },
    {
      "message": "make reactmount.findcomponentroot breadth-first & non-recursive.",
      "diff": "diff --git a/src/core/ReactInstanceHandles.js b/src/core/ReactInstanceHandles.js\nindex 02ea765e0ab3..df3d2e8f5bcd 100644\n--- a/src/core/ReactInstanceHandles.js\n+++ b/src/core/ReactInstanceHandles.js\n@@ -284,18 +284,30 @@ var ReactInstanceHandles = {\n    * @internal\n    */\n   findComponentRoot: function(ancestorNode, id) {\n-    var child = ancestorNode.firstChild;\n-    while (child) {\n-      var childID = ReactID.getID(child);\n-      if (childID) {\n-        if (id === childID) {\n-          return child;\n-        } else if (isAncestorIDOf(childID, id)) {\n-          return ReactInstanceHandles.findComponentRoot(child, id);\n+    var firstChildren = [ancestorNode.firstChild];\n+    var childIndex = 0;\n+\n+    while (childIndex < firstChildren.length) {\n+      var child = firstChildren[childIndex++];\n+      while (child) {\n+        var childID = ReactID.getID(child);\n+        if (childID) {\n+          if (id === childID) {\n+            return child;\n+          } else if (isAncestorIDOf(childID, id)) {\n+            // If we find a child whose ID is an ancestor of the given ID,\n+            // then we can be sure that we only want to search the subtree\n+            // rooted at this child, so we can throw out the rest of the\n+            // search state.\n+            firstChildren.length = childIndex = 0;\n+            firstChildren.push(child.firstChild);\n+            break;\n+          }\n         }\n+        child = child.nextSibling;\n       }\n-      child = child.nextSibling;\n     }\n+\n     global.console && console.error && console.error(\n       'Error while invoking `findComponentRoot` with the following ' +\n       'ancestor node:',"
    },
    {
      "message": "upgrade commoner to --watch directories instead of individual files.",
      "diff": "diff --git a/package.json b/package.json\nindex 7eb7e5780106..c45f9364def0 100644\n--- a/package.json\n+++ b/package.json\n@@ -36,7 +36,7 @@\n   },\n   \"dependencies\": {\n     \"base62\": \"~0.1.1\",\n-    \"commoner\": \"~0.8.0\",\n+    \"commoner\": \"~0.8.3\",\n     \"esprima\": \"https://github.com/facebook/esprima/tarball/a3e0ea3979eb8d54d8bfade220c272903f928b1e\",\n     \"recast\": \"~0.4.8\",\n     \"source-map\": \"~0.1.22\""
    },
    {
      "message": "fix `reactdominput` and `reactdomtextarea` race condition",
      "diff": "diff --git a/src/dom/components/ReactDOMInput.js b/src/dom/components/ReactDOMInput.js\nindex ad3c500ef191..2d552fc923fd 100644\n--- a/src/dom/components/ReactDOMInput.js\n+++ b/src/dom/components/ReactDOMInput.js\n@@ -52,6 +52,11 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n     };\n   },\n \n+  shouldComponentUpdate: function() {\n+    // Defer any updates to this component during the `onChange` handler.\n+    return !this._isChanging;\n+  },\n+\n   getChecked: function() {\n     return this.props.checked != null ? this.props.checked : this.state.checked;\n   },\n@@ -91,7 +96,9 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n   handleChange: ReactCompositeComponent.autoBind(function(event) {\n     var returnValue;\n     if (this.props.onChange) {\n+      this._isChanging = true;\n       returnValue = this.props.onChange(event);\n+      this._isChanging = false;\n     }\n     this.setState({\n       checked: event.target.checked,\ndiff --git a/src/dom/components/ReactDOMTextarea.js b/src/dom/components/ReactDOMTextarea.js\nindex ddba826a2399..84e2132a90be 100644\n--- a/src/dom/components/ReactDOMTextarea.js\n+++ b/src/dom/components/ReactDOMTextarea.js\n@@ -84,6 +84,11 @@ var ReactDOMTextarea = ReactCompositeComponent.createClass({\n     };\n   },\n \n+  shouldComponentUpdate: function() {\n+    // Defer any updates to this component during the `onChange` handler.\n+    return !this._isChanging;\n+  },\n+\n   getValue: function() {\n     return this.props.value != null ? this.props.value : this.state.value;\n   },\n@@ -118,7 +123,9 @@ var ReactDOMTextarea = ReactCompositeComponent.createClass({\n   handleChange: ReactCompositeComponent.autoBind(function(event) {\n     var returnValue;\n     if (this.props.onChange) {\n+      this._isChanging = true;\n       returnValue = this.props.onChange(event);\n+      this._isChanging = false;\n     }\n     this.setState({value: event.target.value});\n     return returnValue;"
    },
    {
      "message": "use .apply instead of .call in reactcompositecomponent",
      "diff": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex a7ef000e1812..be911dc6f8e0 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -398,13 +398,9 @@ function mixSpecIntoComponent(Constructor, spec) {\n  * @private\n  */\n function createChainedFunction(one, two) {\n-  return function chainedFunction(a, b, c, d, e, f, g, tooMany) {\n-    invariant(\n-      typeof tooMany === 'undefined',\n-      'Chained function can only take a maximum of 7 arguments.'\n-    );\n-    one.call(this, a, b, c, d, e, f, g);\n-    two.call(this, a, b, c, d, e, f, g);\n+  return function chainedFunction() {\n+    one.apply(this, arguments);\n+    two.apply(this, arguments);\n   };\n }\n \n@@ -833,14 +829,9 @@ var ReactCompositeComponentMixin = {\n    */\n   _bindAutoBindMethod: function(method) {\n     var component = this;\n-    function autoBound(a, b, c, d, e, f, g, tooMany) {\n-      invariant(\n-        typeof tooMany === 'undefined',\n-        'React.autoBind(...): Methods can only take a maximum of 7 arguments.'\n-      );\n-      return method.call(component, a, b, c, d, e, f, g);\n-    }\n-    return autoBound;\n+    return function() {\n+      return method.apply(component, arguments);\n+    };\n   }\n \n };"
    },
    {
      "message": "remove reactid.primetree in favor of priming in reactid.getid.",
      "diff": "diff --git a/src/core/ReactID.js b/src/core/ReactID.js\nindex ea59e0b09bbe..f7912855576c 100644\n--- a/src/core/ReactID.js\n+++ b/src/core/ReactID.js\n@@ -36,7 +36,16 @@ var nodeCache = {};\n function getID(node) {\n   if (node && node.getAttributeNode) {\n     var attributeNode = node.getAttributeNode(ATTR_NAME);\n-    return attributeNode && attributeNode.value || '';\n+    if (attributeNode) {\n+      var id = attributeNode.value;\n+      if (id) {\n+        // Assume that any node previously cached with this ID has since\n+        // become invalid and should be replaced. TODO Enforce this.\n+        nodeCache[id] = node;\n+\n+        return id;\n+      }\n+    }\n   }\n \n   return '';\n@@ -79,31 +88,6 @@ function getNode(id) {\n   return null;\n }\n \n-/**\n- * Efficiently finds all nodes with a React-specific ID and primes the\n- * cache so that getNode lookups take constant time.\n- *\n- * @param {DOMElement} root The root element to scan.\n- */\n-function primeTree(root) {\n-  var nodes = root.querySelectorAll\n-    ? root.querySelectorAll('[' + ATTR_NAME + ']')\n-    : root.getElementsByTagName('*');\n-\n-  for (var i = 0; i < nodes.length; ++i) {\n-    prime(nodes.item(i));\n-  }\n-\n-  prime(root);\n-}\n-\n-function prime(node) {\n-  var attributeNode = node.getAttributeNode(ATTR_NAME);\n-  if (attributeNode) {\n-    nodeCache[attributeNode.value] = node;\n-  }\n-}\n-\n /**\n  * Causes the cache to forget about one React-specific ID.\n  *\n@@ -124,6 +108,5 @@ exports.ATTR_NAME = ATTR_NAME;\n exports.getID = getID;\n exports.setID = setID;\n exports.getNode = getNode;\n-exports.primeTree = primeTree;\n exports.purgeID = purgeID;\n exports.purgeEntireCache = purgeEntireCache;"
    },
    {
      "message": "fix lint warning about mismatched file & module name",
      "diff": "diff --git a/src/core/ReactComponentWithPureRenderMixin.js b/src/core/ReactComponentWithPureRenderMixin.js\nindex 7f46ed42fb00..1ac4c23aadb6 100644\n--- a/src/core/ReactComponentWithPureRenderMixin.js\n+++ b/src/core/ReactComponentWithPureRenderMixin.js\n@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  *\n-* @providesModule ReactComponentWithPureRender\n+* @providesModule ReactComponentWithPureRenderMixin\n */\n \n \"use strict\";\n@@ -27,9 +27,10 @@\n  *\n  * Example:\n  *\n- *   var ReactComponentWithPureRender = require('ReactComponentWithPureRender');\n+ *   var ReactComponentWithPureRender =\n+ *     require('ReactComponentWithPureRenderMixin');\n  *   React.createClass({\n- *     mixins: [ReactComponentWithPureRender],\n+ *     mixins: [ReactComponentWithPureRenderMixin],\n  *\n  *     render: function() {\n  *       return <div className={this.props.className}>foo</div>;\n@@ -41,7 +42,7 @@\n  * differences. Only mixin to components which have simple props and state, or\n  * use `forceUpdate()` when you know deep data structures have changed.\n  */\n-var ReactComponentWithPureRender = {\n+var ReactComponentWithPureRenderMixin = {\n   shouldComponentUpdate: function(nextProps, nextState) {\n     return !shallowEqual(this.props, nextProps) ||\n            !shallowEqual(this.state, nextState);\n@@ -74,4 +75,4 @@ function shallowEqual(objA, objB) {\n   return true;\n }\n \n-module.exports = ReactComponentWithPureRender;\n+module.exports = ReactComponentWithPureRenderMixin;"
    },
    {
      "message": "fix package.json's reference to vendor/constants.js",
      "diff": "diff --git a/package.json b/package.json\nindex de72afeec9a8..1973a387916c 100644\n--- a/package.json\n+++ b/package.json\n@@ -21,7 +21,7 @@\n     \"bin/jsx\",\n     \"build/modules/\",\n     \"vendor/fbtransform/\",\n-    \"vendor/woodchipper.js\"\n+    \"vendor/constants.js\"\n   ],\n   \"main\": \"main.js\",\n   \"bin\": {"
    },
    {
      "message": "use recast.parse and .print for require.propagate.",
      "diff": "diff --git a/bin/jsx b/bin/jsx\nindex c6aa70e8ecdf..2a6437d535b3 100755\n--- a/bin/jsx\n+++ b/bin/jsx\n@@ -25,17 +25,12 @@ require(\"commoner\").resolve(function(id) {\n \n }).process(function(id, source) {\n   var context = this;\n+  var constants = context.config.constants || {};\n \n   // This is where JSX, ES6, etc. desugaring happens.\n   source = transform(visitors.react, source).code;\n \n-  return context.makePromise(function(callback) {\n-    var constants = context.config.constants || {};\n-\n-    // Constant propagation means removing dead code after replacing\n-    // constant conditional expressions with literal (boolean) values.\n-    propagate(constants, source, function(source) {\n-      callback(null, source);\n-    });\n-  });\n+  // Constant propagation means removing any obviously dead code after\n+  // replacing constant expressions with literal (boolean) values.\n+  return propagate(constants, source);\n });\ndiff --git a/vendor/constants.js b/vendor/constants.js\nindex c5f178f3a143..b0530b4d69aa 100644\n--- a/vendor/constants.js\n+++ b/vendor/constants.js\n@@ -17,14 +17,10 @@\n \n var recast = require('recast');\n \n-exports.propagate = function(constants, source, writeback) {\n-  recast.runString(\n-    source,\n-    function(ast, callback) {\n-      callback(new ConstantVisitor(constants).visit(ast));\n-    },\n-    { writeback: writeback }\n-  );\n+exports.propagate = function(constants, source) {\n+  var ast = recast.parse(source);\n+  ast = new ConstantVisitor(constants).visit(ast);\n+  return recast.print(ast);\n };\n \n var ConstantVisitor = recast.Visitor.extend({"
    },
    {
      "message": "upgrade recast to 0.4.8 to fix options.writeback bug.",
      "diff": "diff --git a/package.json b/package.json\nindex 0333bb02cd39..de72afeec9a8 100644\n--- a/package.json\n+++ b/package.json\n@@ -38,7 +38,7 @@\n     \"base62\": \"~0.1.1\",\n     \"commoner\": \"~0.7.0\",\n     \"esprima\": \"git://github.com/facebook/esprima#fb-harmony\",\n-    \"recast\": \"~0.4.5\",\n+    \"recast\": \"~0.4.8\",\n     \"source-map\": \"~0.1.22\"\n   },\n   \"devDependencies\": {"
    },
    {
      "message": "move test utils internally, update for consistency",
      "diff": "diff --git a/src/test/reactComponentExpect.js b/src/test/reactComponentExpect.js\nindex b17caea96d46..0a359fe2d2f6 100644\n--- a/src/test/reactComponentExpect.js\n+++ b/src/test/reactComponentExpect.js\n@@ -20,7 +20,7 @@\n var ReactComponent = require('ReactComponent');\n var ReactTestUtils = require('ReactTestUtils');\n \n-var copyProperties = require('copyProperties');\n+var mergeInto = require('mergeInto');\n \n function reactComponentExpect(instance) {\n   if (instance instanceof reactComponentExpect) {\n@@ -35,7 +35,7 @@ function reactComponentExpect(instance) {\n   this.toBeValidReactComponent();\n }\n \n-copyProperties(reactComponentExpect.prototype, {\n+mergeInto(reactComponentExpect.prototype, {\n   // Getters -------------------------------------------------------------------\n \n   /**"
    },
    {
      "message": "support rendering different components into same node",
      "diff": "diff --git a/src/core/ReactMount.js b/src/core/ReactMount.js\nindex e07e209be7a3..4fb036c3ee83 100644\n--- a/src/core/ReactMount.js\n+++ b/src/core/ReactMount.js\n@@ -106,11 +106,15 @@ var ReactMount = {\n   renderComponent: function(nextComponent, container) {\n     var prevComponent = instanceByReactRootID[getReactRootID(container)];\n     if (prevComponent) {\n-      var nextProps = nextComponent.props;\n-      ReactMount.scrollMonitor(container, function() {\n-        prevComponent.replaceProps(nextProps);\n-      });\n-      return prevComponent;\n+      if (prevComponent.constructor === nextComponent.constructor) {\n+        var nextProps = nextComponent.props;\n+        ReactMount.scrollMonitor(container, function() {\n+          prevComponent.replaceProps(nextProps);\n+        });\n+        return prevComponent;\n+      } else {\n+        ReactMount.unmountAndReleaseReactRootNode(container);\n+      }\n     }\n \n     ReactMount.prepareTopLevelEvents(ReactEventTopLevelCallback);\ndiff --git a/src/core/__tests__/ReactMount-test.js b/src/core/__tests__/ReactMount-test.js\nnew file mode 100644\nindex 000000000000..de7e6d8b589b\n--- /dev/null\n+++ b/src/core/__tests__/ReactMount-test.js\n@@ -0,0 +1,22 @@\n+/**\n+ * @jsx React.DOM\n+ * @emails react-core\n+ */\n+\n+\"use strict\";\n+\n+describe('ReactMount', function() {\n+  var React = require('React');\n+  var ReactMount = require('ReactMount');\n+\n+  it('should render different components in same root', function() {\n+    var container = document.createElement('container');\n+    document.documentElement.appendChild(container);\n+\n+    ReactMount.renderComponent(<div></div>, container);\n+    expect(container.firstChild.nodeName).toBe('DIV');\n+\n+    ReactMount.renderComponent(<span></span>, container);\n+    expect(container.firstChild.nodeName).toBe('SPAN');\n+  });\n+});"
    },
    {
      "message": "implement constructor-aware binding per @zpao's request.",
      "diff": "diff --git a/src/test/all.js b/src/test/all.js\nindex 5b07fb551c75..b370c31b629f 100644\n--- a/src/test/all.js\n+++ b/src/test/all.js\n@@ -12,14 +12,41 @@ if (!Fp.bind) {\n   Fp.bind = function(context) {\n     var func = this;\n     var args = slice.call(arguments, 1);\n-    return args.length > 0 ? function() {\n-      return func.apply(\n-        context || this,\n-        args.concat(slice.call(arguments))\n-      );\n-    } : function() {\n-      return func.apply(context || this, arguments);\n-    };\n+    var bound;\n+\n+    if (func.prototype) {\n+      if (args.length > 0) {\n+        bound = function() {\n+          return func.apply(\n+            !(this instanceof func) && context || this,\n+            args.concat(slice.call(arguments))\n+          );\n+        };\n+      } else {\n+        bound = function() {\n+          return func.apply(\n+            !(this instanceof func) && context || this,\n+            arguments\n+          );\n+        };\n+      }\n+\n+      bound.prototype = Object.create(func.prototype);\n+\n+    } else if (args.length > 0) {\n+      bound = function() {\n+        return func.apply(\n+          context || this,\n+          args.concat(slice.call(arguments))\n+        );\n+      };\n+    } else {\n+      bound = function() {\n+        return func.apply(context || this, arguments);\n+      };\n+    }\n+\n+    return bound;\n   };\n }"
    },
    {
      "message": "fix some silly uses of function.prototype.bind in jasmine-support.js.",
      "diff": "diff --git a/vendor/jasmine/jasmine-support.js b/vendor/jasmine/jasmine-support.js\nindex dc3d807520a2..d6d1e3ef3b87 100644\n--- a/vendor/jasmine/jasmine-support.js\n+++ b/vendor/jasmine/jasmine-support.js\n@@ -37,7 +37,7 @@ var _xit = jasmine.Env.prototype.xit;\n jasmine.Env.prototype.it = function(desc, func) {\n   // If spec is provided, only run matching specs\n   if (!spec || desc.match(new RegExp(spec, 'i'))) {\n-    return _it.bind(this, desc, func)();\n+    return _it.call(this, desc, func);\n   } else {\n     return this.xit(desc, func);\n   }\n@@ -50,7 +50,7 @@ jasmine.Env.prototype.xit = function(desc, func) {\n       this.reporter.subReporters_[0].totalCount += matches.length;\n     }\n   }\n-  return _xit.bind(this, desc, func)();\n+  return _xit.call(this, desc, func);\n }\n \n // Mainline Jasmine sets __Jasmine_been_here_before__ on each object to detect"
    },
    {
      "message": "make the bin/jsx source and output directories configurable.",
      "diff": "diff --git a/grunt/config/jsx/jsx.js b/grunt/config/jsx/jsx.js\nindex c75c318aca84..4245cc7aa1ef 100644\n--- a/grunt/config/jsx/jsx.js\n+++ b/grunt/config/jsx/jsx.js\n@@ -6,7 +6,9 @@ var rootIDs = [\n \n var debug = {\n   rootIDs: rootIDs,\n-  configFile: \"grunt/config/jsx/debug.json\"\n+  configFile: \"grunt/config/jsx/debug.json\",\n+  sourceDir: \"src\",\n+  outputDir: \"build/modules\"\n };\n \n var test = {\n@@ -14,12 +16,16 @@ var test = {\n     \"test/all.js\",\n     \"**/__tests__/*.js\"\n   ]),\n-  configFile: debug.configFile\n+  configFile: debug.configFile,\n+  sourceDir: \"src\",\n+  outputDir: \"build/modules\"\n };\n \n var release = {\n   rootIDs: rootIDs,\n-  configFile: \"grunt/config/jsx/release.json\"\n+  configFile: \"grunt/config/jsx/release.json\",\n+  sourceDir: \"src\",\n+  outputDir: \"build/modules\"\n };\n \n module.exports = {\ndiff --git a/grunt/tasks/jsx.js b/grunt/tasks/jsx.js\nindex 1ecee11fd7c9..6b2f4123d74d 100644\n--- a/grunt/tasks/jsx.js\n+++ b/grunt/tasks/jsx.js\n@@ -9,8 +9,8 @@ module.exports = function() {\n \n   var args = [\n     \"bin/jsx\",\n-    \"src\",\n-    \"build/modules\"\n+    config.sourceDir,\n+    config.outputDir\n   ];\n \n   var rootIDs = expand({"
    },
    {
      "message": "add <script> tags in the download page for easy embed",
      "diff": "diff --git a/docs/downloads.md b/docs/downloads.md\nindex e0e32dce8562..d35ff4dbd293 100644\n--- a/docs/downloads.md\n+++ b/docs/downloads.md\n@@ -17,12 +17,24 @@ Download the starter kit to get everything you need to\n #### <a href=\"http://fb.me/react-{{site.react_version}}.min.js\">React Core {{site.react_version}} (production)</a>\n The compressed, production version of React core\n \n+```html\n+<script src=\"http://fb.me/react-{{site.react_version}}.min.js\"></script>\n+```\n+\n #### <a href=\"http://fb.me/react-{{site.react_version}}.js\">React Core {{site.react_version}} (development)</a>\n The uncompressed, development version of React core with inline documentation.\n \n+```html\n+<script src=\"http://fb.me/react-{{site.react_version}}.js\"></script>\n+```\n+\n #### <a href=\"http://fb.me/JSXTransformer-{{site.react_version}}.js\">JSX Transform</a>\n The JSX transformer used to support [XML syntax](/react/docs/syntax.html) in JavaScript.\n \n+```html\n+<script src=\"http://fb.me/JSXTransformer-{{site.react_version}}.js\"></script>\n+```\n+\n ## Bower\n \n ```sh"
    },
    {
      "message": "add `grunt-cli` to devdependencies to make sure it's installed for travisci",
      "diff": "diff --git a/package.json b/package.json\nindex f159bb33da9f..4d02dadad1b0 100644\n--- a/package.json\n+++ b/package.json\n@@ -40,6 +40,7 @@\n   \"devDependencies\": {\n     \"browserify\": \"~2.14.2\",\n     \"wrapup\": \"~0.12.0\",\n+    \"grunt-cli\": \"~0.1.9\",\n     \"grunt\": \"~0.4.1\",\n     \"grunt-contrib-copy\": \"~0.4.1\",\n     \"grunt-contrib-jshint\": \"~0.5.4\","
    }
  ]
}