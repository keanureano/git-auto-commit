{"time": 1.3680400848388672, "reference": "fix devtools bug with suspense+legacyhidden component", "candidate": "refactor debug logs to include more details in agent.js and add LegacyHiddenComponent handling in renderer.js.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/backend/agent.js b/packages/react-devtools-shared/src/backend/agent.js\nindex e665235271ca..7470070455c0 100644\n--- a/packages/react-devtools-shared/src/backend/agent.js\n+++ b/packages/react-devtools-shared/src/backend/agent.js\n@@ -676,7 +676,10 @@ export default class Agent extends EventEmitter<{|\n \n   onHookOperations = (operations: Array<number>) => {\n     if (__DEBUG__) {\n-      debug('onHookOperations', operations);\n+      debug(\n+        'onHookOperations',\n+        `(${operations.length}) [${operations.join(', ')}]`,\n+      );\n     }\n \n     // TODO:\ndiff --git a/packages/react-devtools-shared/src/backend/renderer.js b/packages/react-devtools-shared/src/backend/renderer.js\nindex 18fa9d7efdda..3afbbf3dd443 100644\n--- a/packages/react-devtools-shared/src/backend/renderer.js\n+++ b/packages/react-devtools-shared/src/backend/renderer.js\n@@ -534,6 +534,7 @@ export function attach(\n     HostText,\n     IncompleteClassComponent,\n     IndeterminateComponent,\n+    LegacyHiddenComponent,\n     MemoComponent,\n     OffscreenComponent,\n     SimpleMemoComponent,\n@@ -841,6 +842,7 @@ export function attach(\n       case HostPortal:\n       case HostText:\n       case Fragment:\n+      case LegacyHiddenComponent:\n       case OffscreenComponent:\n         return true;\n       case HostRoot:"}]}
{"time": 0.5510427951812744, "reference": "pass component instance to setstate updater as `this`", "candidate": "update ReactShallowRenderer handle partial state with instance in setState updater.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-test-renderer/src/ReactShallowRenderer.js b/packages/react-test-renderer/src/ReactShallowRenderer.js\nindex 9cafeeb2f15e..3134f991eeaf 100644\n--- a/packages/react-test-renderer/src/ReactShallowRenderer.js\n+++ b/packages/react-test-renderer/src/ReactShallowRenderer.js\n@@ -298,7 +298,11 @@ class Updater {\n     const currentState = this._renderer._newState || publicInstance.state;\n \n     if (typeof partialState === 'function') {\n-      partialState = partialState(currentState, publicInstance.props);\n+      partialState = partialState.call(\n+        publicInstance,\n+        currentState,\n+        publicInstance.props,\n+      );\n     }\n \n     // Null and undefined are treated as no-ops.\ndiff --git a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\nindex ce62bba28073..c4cdcd6b65ee 100644\n--- a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n+++ b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n@@ -945,6 +945,27 @@ describe('ReactShallowRenderer', () => {\n     expect(result.props.children).toEqual(2);\n   });\n \n+  it('can access component instance from setState updater function', done => {\n+    let instance;\n+\n+    class SimpleComponent extends React.Component {\n+      state = {};\n+\n+      render() {\n+        instance = this;\n+        return null;\n+      }\n+    }\n+\n+    const shallowRenderer = createRenderer();\n+    shallowRenderer.render(<SimpleComponent />);\n+\n+    instance.setState(function updater(state, props) {\n+      expect(this).toBe(instance);\n+      done();\n+    });\n+  });\n+\n   it('can setState with a callback', () => {\n     let instance;"}]}
{"time": 0.7360365390777588, "reference": "remove 15 rc1 changelog entry that was fixed in 0.14", "candidate": "remove unnecessary click event handling improvement in React DOM.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/_posts/2016-03-07-react-v15-rc1.md b/docs/_posts/2016-03-07-react-v15-rc1.md\nindex 3eb8fb296fcf..932ae0988700 100644\n--- a/docs/_posts/2016-03-07-react-v15-rc1.md\n+++ b/docs/_posts/2016-03-07-react-v15-rc1.md\n@@ -87,7 +87,6 @@ Each of these changes will continue to work as before with a new warning until t\n ### Notable bug fixes\n \n - Fixed multiple small memory leaks\n-- Click events are handled by React DOM more reliably in mobile browsers, particularly in Mobile Safari.\n - Input events are handled more reliably in IE 10 and IE 11; spurious events no longer fire when using a placeholder.\n - React DOM now supports the `cite` and `profile` HTML attributes.\n - React DOM now supports the `onAnimationStart`, `onAnimationEnd`, `onAnimationIteration`, `onTransitionEnd`, and `onInvalid` events. Support for `onLoad` has been added to `object` elements."}]}
{"time": 17.106531620025635, "reference": "use 'classnames' in tabbar to simplify an attribute", "candidate": "update TabBar component to use classNames from a third-party library for better class handling.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/devtools/views/TabBar.js b/src/devtools/views/TabBar.js\nindex 81611fb7a2f1..d5ba8c5cb62b 100644\n--- a/src/devtools/views/TabBar.js\n+++ b/src/devtools/views/TabBar.js\n@@ -1,5 +1,6 @@\n // @flow\n \n+import classNames from 'classnames';\n import React, { Fragment, useCallback } from 'react';\n import Icon from './Icon';\n \n@@ -60,9 +61,11 @@ export default function TabBar({\n     <Fragment>\n       {tabs.map(({ icon, id, label, title }) => (\n         <label\n-          className={`${tabClassName} ${\n-            disabled ? styles.TabDisabled : styles.Tab\n-          } ${!disabled && currentTab === id ? styles.TabCurrent : ''}`}\n+          className={classNames(\n+            tabClassName,\n+            disabled ? styles.TabDisabled : styles.Tab,\n+            !disabled && currentTab === id ? styles.TabCurrent : null\n+          )}\n           key={id}\n           onKeyDown={handleKeyDown}\n           title={title || label}"}]}
{"time": 1.082038164138794, "reference": "fix transaction comment from componentdidrender to componentdidupdate", "candidate": "update Transaction module to invoke componentDidUpdate callbacks instead of componentDidRender.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/utils/Transaction.js b/src/utils/Transaction.js\nindex 861919d3d1dd..998d45cd1bc7 100644\n--- a/src/utils/Transaction.js\n+++ b/src/utils/Transaction.js\n@@ -67,7 +67,7 @@ var invariant = require('invariant');\n  *   while guaranteeing that afterwards, the event system is reactivated.\n  * - Flushing a queue of collected DOM mutations to the main UI thread after a\n  *   reconciliation takes place in a worker thread.\n- * - Invoking any collected `componentDidRender` callbacks after rendering new\n+ * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n  *   content.\n  * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n  *   to preserve the `scrollTop` (an automatic scroll aware DOM)."}]}
{"time": 0.6389989852905273, "reference": "rename example package.json command for consistency with readme", "candidate": "update package.json script to use 'start' instead of 'watch'.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/examples/basic-commonjs/package.json b/examples/basic-commonjs/package.json\nindex 5dce6907d19e..2be4124487e6 100644\n--- a/examples/basic-commonjs/package.json\n+++ b/examples/basic-commonjs/package.json\n@@ -4,13 +4,13 @@\n   \"main\": \"index.js\",\n   \"dependencies\": {\n     \"babelify\": \"^6.3.0\",\n+    \"browserify\": \"^11.0.1\",\n     \"react\": \"^0.14.0-rc1\",\n     \"react-dom\": \"^0.14.0-rc1\",\n-    \"watchify\": \"^3.4.0\",\n-    \"browserify\": \"^11.0.1\"\n+    \"watchify\": \"^3.4.0\"\n   },\n   \"scripts\": {\n     \"build\": \"browserify ./index.js -t babelify -o bundle.js\",\n-    \"watch\": \"watchify ./index.js -v -t babelify -o bundle.js\"\n+    \"start\": \"watchify ./index.js -v -t babelify -o bundle.js\"\n   }\n }"}]}
{"time": 0.9060029983520508, "reference": "check bigint in serializetostring and change it to string", "candidate": "add support for BigInt serialization in backend utils and inspectable elements.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/backend/utils.js b/packages/react-devtools-shared/src/backend/utils.js\nindex c08daac1d758..6f96f9864f80 100644\n--- a/packages/react-devtools-shared/src/backend/utils.js\n+++ b/packages/react-devtools-shared/src/backend/utils.js\n@@ -81,6 +81,10 @@ export function serializeToString(data: any): string {\n       }\n       cache.add(value);\n     }\n+    // $FlowFixMe\n+    if (typeof value === 'bigint') {\n+      return value.toString() + 'n';\n+    }\n     return value;\n   });\n }\ndiff --git a/packages/react-devtools-shell/src/app/InspectableElements/UnserializableProps.js b/packages/react-devtools-shell/src/app/InspectableElements/UnserializableProps.js\nindex 561aad203449..982ea6528425 100644\n--- a/packages/react-devtools-shell/src/app/InspectableElements/UnserializableProps.js\n+++ b/packages/react-devtools-shell/src/app/InspectableElements/UnserializableProps.js\n@@ -31,6 +31,8 @@ const immutable = Immutable.fromJS({\n     xyz: 1,\n   },\n });\n+// $FlowFixMe\n+const bigInt = BigInt(123); // eslint-disable-line no-undef\n \n export default function UnserializableProps() {\n   return (\n@@ -43,6 +45,7 @@ export default function UnserializableProps() {\n       setOfSets={setOfSets}\n       typedArray={typedArray}\n       immutable={immutable}\n+      bigInt={bigInt}\n     />\n   );\n }"}]}
{"time": 0.6940324306488037, "reference": "revert \"merge pull request #6431 from sebmarkbage/killspread\"", "candidate": "add comment for JSX spread functionality in React module.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/isomorphic/React.js b/src/isomorphic/React.js\nindex 551e0a608bb2..37109d6ea13f 100644\n--- a/src/isomorphic/React.js\n+++ b/src/isomorphic/React.js\n@@ -65,6 +65,9 @@ var React = {\n   DOM: ReactDOMFactories,\n \n   version: ReactVersion,\n+\n+  // Hook for JSX spread, don't use this for anything else.\n+  __spread: Object.assign,\n };\n \n module.exports = React;"}]}
{"time": 0.9010336399078369, "reference": "demonstrate failing test when resuming mount of class component", "candidate": "add mounting capability for class component when resuming.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js b/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js\nindex 4e31a6b77e7b..d4eeb883779b 100644\n--- a/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js\n+++ b/src/renderers/shared/fiber/__tests__/ReactIncremental-test.js\n@@ -452,6 +452,47 @@ describe('ReactIncremental', () => {\n     expect(ops).toEqual(['Foo', 'Bar', 'Bar']);\n   });\n \n+  it('can resume mounting a class component', () => {\n+    let ops = [];\n+    let foo;\n+    class Parent extends React.Component {\n+      shouldComponentUpdate() {\n+        return false;\n+      }\n+      render() {\n+        return <Foo prop={this.props.prop} />;\n+      }\n+    }\n+\n+    class Foo extends React.Component {\n+      constructor(props) {\n+        super(props);\n+        // Test based on a www bug where props was null on resume\n+        ops.push('Foo constructor: ' + props.prop);\n+      }\n+      render() {\n+        foo = this;\n+        ops.push('Foo');\n+        return <Bar />;\n+      }\n+    }\n+\n+    function Bar() {\n+      ops.push('Bar');\n+      return <div />;\n+    }\n+\n+    ReactNoop.render(<Parent prop=\"foo\" />);\n+    ReactNoop.flushDeferredPri(20);\n+    expect(ops).toEqual(['Foo constructor: foo', 'Foo']);\n+\n+    foo.setState({value: 'bar'});\n+\n+    ops = [];\n+    ReactNoop.flush();\n+    expect(ops).toEqual(['Foo constructor: foo', 'Foo', 'Bar']);\n+  });\n+\n   it('can reuse work done after being preempted', () => {\n     var ops = [];"}]}
{"time": 0.6430008411407471, "reference": "add note to 'unreleased' changelog about deprecating bower", "candidate": "discontinue releasing Bower packages.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex 7bd06019c9de..9406ba592f71 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -5,6 +5,10 @@\n     Click to see more.\n   </summary>\n \n+### Discontinuing Bower Releases\n+\n+Starting with 16.1.0, we will no longer be publishing new releases on Bower. You can continue using Bower for old releases, or point your Bower configs to the [React UMD builds hosted on unpkg](https://reactjs.org/docs/installation.html#using-a-cdn) that mirror npm releases and will continue to be updated.\n+\n ### All Packages\n \n * Fix an accidental extra global variable in the UMD builds. ([@gaearon](https://github.com/gaearon) in [#10935](https://github.com/facebook/react/pull/10935))"}]}
{"time": 1.1339993476867676, "reference": "add autocorrect to list of supported dom properties", "candidate": "add autoCorrect to DefaultDOMPropertyConfig autoCorrect implementation.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/dom/DefaultDOMPropertyConfig.js b/src/dom/DefaultDOMPropertyConfig.js\nindex ed6a53206dc3..0b4c7dabcb56 100644\n--- a/src/dom/DefaultDOMPropertyConfig.js\n+++ b/src/dom/DefaultDOMPropertyConfig.js\n@@ -42,6 +42,7 @@ var DefaultDOMPropertyConfig = {\n     allowTransparency: MUST_USE_ATTRIBUTE,\n     alt: null,\n     autoComplete: null,\n+    autoCorrect: null,\n     autoFocus: HAS_BOOLEAN_VALUE,\n     autoPlay: HAS_BOOLEAN_VALUE,\n     cellPadding: null,\n@@ -156,6 +157,7 @@ var DefaultDOMPropertyConfig = {\n   DOMPropertyNames: {\n     autoCapitalize: 'autocapitalize',\n     autoComplete: 'autocomplete',\n+    autoCorrect: 'autocorrect',\n     autoFocus: 'autofocus',\n     autoPlay: 'autoplay',\n     encType: 'enctype',"}]}
{"time": 1.0750012397766113, "reference": "add link to 'typechecking with proptypes' under 'advanced guides'", "candidate": "add new page typechecking with proptypes.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/_data/nav_docs.yml b/docs/_data/nav_docs.yml\nindex 58e1c03dca64..0401c7174b6b 100644\n--- a/docs/_data/nav_docs.yml\n+++ b/docs/_data/nav_docs.yml\n@@ -30,6 +30,8 @@\n   items:\n     - id: jsx-in-depth\n       title: JSX In Depth\n+    - id: typechecking-with-proptypes\n+      title: Typechecking With PropTypes\n     - id: refs-and-the-dom\n       title: Refs and the DOM\n     - id: uncontrolled-components"}]}
{"time": 0.7079994678497314, "reference": "fix createnodemock doc to avoid invariant violation", "candidate": "add functionality nodeType to createNodeMock.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/_posts/2016-11-16-react-v15.4.0.md b/docs/_posts/2016-11-16-react-v15.4.0.md\nindex d07691a04e83..ee34c69529ed 100644\n--- a/docs/_posts/2016-11-16-react-v15.4.0.md\n+++ b/docs/_posts/2016-11-16-react-v15.4.0.md\n@@ -75,6 +75,7 @@ import renderer from 'react-test-renderer';\n function createNodeMock(element) {\n   if (element.type === 'input') {\n     return {\n+      nodeType: 1,\n       focus() {},\n     };\n   }"}]}
{"time": 0.9960377216339111, "reference": "fix missing semicolon, unexpected spaces and trailing comma", "candidate": "fix ReactPropTypes-test.js add missing semicolons for ES6Symbol and CoreSymbol instantiation.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js b/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js\nindex eea4b7577a74..bfd6f8a410cb 100644\n--- a/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js\n+++ b/src/isomorphic/classic/types/__tests__/ReactPropTypes-test.js\n@@ -808,14 +808,14 @@ describe('ReactPropTypes', function() {\n       );\n       typeCheckFail(\n         PropTypes.symbol,\n-        function () { },\n+        function() { },\n         'Invalid prop `testProp` of type `function` supplied to ' +\n         '`testComponent`, expected `symbol`.'\n       );\n       typeCheckFail(\n         PropTypes.symbol,\n         {\n-          '@@toStringTag': 'Katana'\n+          '@@toStringTag': 'Katana',\n         },\n         'Invalid prop `testProp` of type `object` supplied to ' +\n         '`testComponent`, expected `symbol`.'\n@@ -826,8 +826,8 @@ describe('ReactPropTypes', function() {\n       var ES6Symbol = require('es6-symbol/polyfill');\n       var CoreSymbol = require('core-js/library/es6/symbol');\n \n-      typeCheckPass(PropTypes.symbol, ES6Symbol('es6-symbol'))\n-      typeCheckPass(PropTypes.symbol, CoreSymbol('core-js'))\n+      typeCheckPass(PropTypes.symbol, ES6Symbol('es6-symbol'));\n+      typeCheckPass(PropTypes.symbol, CoreSymbol('core-js'));\n     });\n   });"}]}
{"time": 0.7240004539489746, "reference": "add dependencies to react-test-renderer and react-addons", "candidate": "update dependencies for fbjs and object-assign in react-addons and react-test-renderer packages.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-addons/package.json b/packages/react-addons/package.json\nindex 80f2250f3618..6db871b19b95 100644\n--- a/packages/react-addons/package.json\n+++ b/packages/react-addons/package.json\n@@ -8,7 +8,10 @@\n     \"react-addon\"\n   ],\n   \"license\": \"BSD-3-Clause\",\n-  \"dependencies\": {},\n+  \"dependencies\": {\n+    \"fbjs\": \"^0.8.4\",\n+    \"object-assign\": \"^4.1.0\"\n+  },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0-alpha\"\n   },\ndiff --git a/packages/react-test-renderer/package.json b/packages/react-test-renderer/package.json\nindex 7e89c811b6a7..8b25228147cf 100644\n--- a/packages/react-test-renderer/package.json\n+++ b/packages/react-test-renderer/package.json\n@@ -14,6 +14,10 @@\n     \"url\": \"https://github.com/facebook/react/issues\"\n   },\n   \"homepage\": \"https://facebook.github.io/react/\",\n+  \"dependencies\": {\n+    \"fbjs\": \"^0.8.4\",\n+    \"object-assign\": \"^4.1.0\"\n+  },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0-alpha\"\n   },"}]}
{"time": 0.7010345458984375, "reference": "remove unnecessary  code for compatibility with paper in the fabric version of globalresponderhandler", "candidate": "update ReactFabricGlobalResponderHandler onChange functionality for Fabric support.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js b/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\nindex 90b94295a09f..10ac51d4317d 100644\n--- a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\n+++ b/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\n@@ -7,42 +7,24 @@\n  * @flow\n  */\n \n-// Module provided by RN:\n-import {UIManager} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n-\n const ReactFabricGlobalResponderHandler = {\n   onChange: function (from: any, to: any, blockNativeResponder: boolean) {\n-    const fromOrTo = from || to;\n-    const fromOrToStateNode = fromOrTo && fromOrTo.stateNode;\n-    const isFabric = !!(\n-      fromOrToStateNode && fromOrToStateNode.canonical._internalInstanceHandle\n-    );\n-\n-    if (isFabric) {\n-      if (from) {\n-        // equivalent to clearJSResponder\n-        nativeFabricUIManager.setIsJSResponder(\n-          from.stateNode.node,\n-          false,\n-          blockNativeResponder || false,\n-        );\n-      }\n+    if (from) {\n+      // equivalent to clearJSResponder\n+      nativeFabricUIManager.setIsJSResponder(\n+        from.stateNode.node,\n+        false,\n+        blockNativeResponder || false,\n+      );\n+    }\n \n-      if (to) {\n-        // equivalent to setJSResponder\n-        nativeFabricUIManager.setIsJSResponder(\n-          to.stateNode.node,\n-          true,\n-          blockNativeResponder || false,\n-        );\n-      }\n-    } else {\n-      if (to !== null) {\n-        const tag = to.stateNode.canonical._nativeTag;\n-        UIManager.setJSResponder(tag, blockNativeResponder);\n-      } else {\n-        UIManager.clearJSResponder();\n-      }\n+    if (to) {\n+      // equivalent to setJSResponder\n+      nativeFabricUIManager.setIsJSResponder(\n+        to.stateNode.node,\n+        true,\n+        blockNativeResponder || false,\n+      );\n     }\n   },\n };"}]}
{"time": 0.924999475479126, "reference": "remove the flow experimental.strict_type_args option", "candidate": "remove experimental strict type args option in flowconfig.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/.flowconfig b/.flowconfig\nindex 81372434d1cb..3448b44cb788 100644\n--- a/.flowconfig\n+++ b/.flowconfig\n@@ -21,8 +21,6 @@ module.system=haste\n esproposal.class_static_fields=enable\n esproposal.class_instance_fields=enable\n \n-experimental.strict_type_args=true\n-\n munge_underscores=false\n \n suppress_type=$FlowIssue"}]}
{"time": 0.8489992618560791, "reference": "fix show correct displayname with forwardref in dev tools", "candidate": "update renderer.js for more concise getDisplayNameForFiber function and added a comment.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/backend/renderer.js b/packages/react-devtools-shared/src/backend/renderer.js\nindex 90d7958fbad7..f62255579054 100644\n--- a/packages/react-devtools-shared/src/backend/renderer.js\n+++ b/packages/react-devtools-shared/src/backend/renderer.js\n@@ -347,7 +347,7 @@ export function getInternalReactConstants(\n \n   // NOTICE Keep in sync with shouldFilterFiber() and other get*ForFiber methods\n   function getDisplayNameForFiber(fiber: Fiber): string | null {\n-    const {elementType, type, tag} = fiber;\n+    const {type, tag} = fiber;\n \n     let resolvedType = type;\n     if (typeof type === 'object' && type !== null) {\n@@ -364,8 +364,10 @@ export function getInternalReactConstants(\n       case IndeterminateComponent:\n         return getDisplayName(resolvedType);\n       case ForwardRef:\n+        // Mirror https://github.com/facebook/react/blob/7c21bf72ace77094fd1910cc350a548287ef8350/packages/shared/getComponentName.js#L27-L37\n         return (\n-          resolvedType.displayName || getDisplayName(resolvedType, 'Anonymous')\n+          (type && type.displayName) ||\n+          getDisplayName(resolvedType, 'Anonymous')\n         );\n       case HostRoot:\n         return null;\n@@ -377,11 +379,7 @@ export function getInternalReactConstants(\n         return null;\n       case MemoComponent:\n       case SimpleMemoComponent:\n-        if (elementType.displayName) {\n-          return elementType.displayName;\n-        } else {\n-          return getDisplayName(resolvedType, 'Anonymous');\n-        }\n+        return getDisplayName(resolvedType, 'Anonymous');\n       case SuspenseComponent:\n         return 'Suspense';\n       case SuspenseListComponent:"}]}
{"time": 0.8680000305175781, "reference": "adjust code to handle more availability of function.name", "candidate": "refactor ReactClass to use identity function for constructor name consistency.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/isomorphic/classic/class/ReactClass.js b/src/isomorphic/classic/class/ReactClass.js\nindex 810a05ecb8bb..f880e579a060 100644\n--- a/src/isomorphic/classic/class/ReactClass.js\n+++ b/src/isomorphic/classic/class/ReactClass.js\n@@ -24,6 +24,12 @@ import type { ReactPropTypeLocations } from 'ReactPropTypeLocations';\n \n var MIXINS_KEY = 'mixins';\n \n+// Helper function to allow the creation of anonymous functions which do not\n+// have .name set to the name of the variable being assigned to.\n+function identity(fn) {\n+  return fn;\n+}\n+\n /**\n  * Policies that describe methods in `ReactClassInterface`.\n  */\n@@ -762,7 +768,10 @@ var ReactClass = {\n    * @public\n    */\n   createClass: function(spec) {\n-    var Constructor = function(props, context, updater) {\n+    // To keep our warnings more understandable, we'll use a little hack here to\n+    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n+    // unnecessarily identify a class without displayName as 'Constructor'.\n+    var Constructor = identity(function(props, context, updater) {\n       // This constructor gets overridden by mocks. The argument is used\n       // by mocks to assert on what gets mounted.\n \n@@ -806,7 +815,7 @@ var ReactClass = {\n       );\n \n       this.state = initialState;\n-    };\n+    });\n     Constructor.prototype = new ReactClassComponent();\n     Constructor.prototype.constructor = Constructor;\n     Constructor.prototype.__reactAutoBindPairs = [];"}]}
{"time": 0.6230006217956543, "reference": "fix the incorrect jest watch command in contributing", "candidate": "update contributing guidelines to include running subset of tests with Jest for fast feedback loop.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md\nindex f1002fb1847b..d1de57cb57c2 100644\n--- a/CONTRIBUTING.md\n+++ b/CONTRIBUTING.md\n@@ -22,9 +22,9 @@ This command is just a facade to [Jest](https://facebook.github.io/jest/). You m\n \n For example, `jest --watch` lets you automatically run the test suite on every file change.\n \n-You can also run a subset of tests by passing a prefix to `jest`. For example, `jest ReactDOMSVG` will only run tests in the files that start with `ReactDOMSVG`, such as `ReactDOMSVG-test.js`.\n+You can also run a subset of tests by passing a prefix to `jest`. For instance, `jest ReactDOMSVG` will only run tests in the files that start with `ReactDOMSVG`, such as `ReactDOMSVG-test.js`.\n \n-When you know which tests you want to run, you can achieve a fast feedback loop by using these two features together. For example, `jest --watch ReactDOMSVG` will re-run only the matching tests on every change.\n+When you know which tests you want to run, you can achieve a fast feedback loop by using these two features together. For example, `jest ReactDOMSVG --watch` will re-run only the matching tests on every change.\n \n Just make sure to run the whole test suite before submitting a pull request!"}]}
{"time": 0.5530004501342773, "reference": "add .watchmanconfig to .gitignore so that jest --watch doesn't fail arbitrarily", "candidate": "add gitignore entry for watchmanconfig", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/.gitignore b/.gitignore\nindex 46f908d0cc31..8123faa01e06 100644\n--- a/.gitignore\n+++ b/.gitignore\n@@ -21,3 +21,4 @@ chrome-user-data\n .vscode\n *.swp\n *.swo\n+.watchmanconfig\n\\ No newline at end of file"}]}
{"time": 1.376002311706543, "reference": "revert \"use the virtual target for change events to avoid restoring controlled state on the real target \"", "candidate": "refactor ChangeEventPlugin refactor 'createAndAccumulateChangeEvent' method signature and usage.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/eventPlugins/ChangeEventPlugin.js b/src/renderers/dom/shared/eventPlugins/ChangeEventPlugin.js\nindex 930c0f11d605..387ec571ec9b 100644\n--- a/src/renderers/dom/shared/eventPlugins/ChangeEventPlugin.js\n+++ b/src/renderers/dom/shared/eventPlugins/ChangeEventPlugin.js\n@@ -43,28 +43,16 @@ var eventTypes = {\n   },\n };\n \n-function shouldUseChangeEvent(elem) {\n-  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n-  return (\n-    nodeName === 'select' || (nodeName === 'input' && elem.type === 'file')\n-  );\n-}\n-\n-function createAndAccumulateChangeEvent(\n-  inst,\n-  nativeEvent,\n-  nativeEventTarget,\n-  virtualTarget,\n-) {\n+function createAndAccumulateChangeEvent(inst, nativeEvent, target) {\n   var event = SyntheticEvent.getPooled(\n     eventTypes.change,\n     inst,\n     nativeEvent,\n-    nativeEventTarget,\n+    target,\n   );\n   event.type = 'change';\n   // Flag this event loop as needing state restore.\n-  ReactControlledComponent.enqueueStateRestore(virtualTarget);\n+  ReactControlledComponent.enqueueStateRestore(target);\n   EventPropagators.accumulateTwoPhaseDispatches(event);\n   return event;\n }\n@@ -305,7 +293,6 @@ var ChangeEventPlugin = {\n           inst,\n           nativeEvent,\n           nativeEventTarget,\n-          targetNode,\n         );\n         return event;\n       }"}]}
{"time": 0.7389991283416748, "reference": "change  from \"top-level-api.html\" to \"top-level-api-zh-cn.html\"", "candidate": "update API reference link in tutorial.zh-CN.md.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/docs/tutorial.zh-CN.md b/docs/docs/tutorial.zh-CN.md\nindex 15ac1ced8a33..f76633fd6c9e 100755\n--- a/docs/docs/tutorial.zh-CN.md\n+++ b/docs/docs/tutorial.zh-CN.md\n@@ -783,4 +783,4 @@ var CommentBox = React.createClass({\n \n ### \u795d\u8d3a!\n \n-\u4f60\u521a\u521a\u901a\u8fc7\u51e0\u4e2a\u7b80\u5355\u7684\u6b65\u9aa4\u5efa\u7acb\u4e86\u4e00\u4e2a\u8bc4\u8bba\u6846\u3002\u5b66\u4e60\u66f4\u591a\u5173\u4e8e[\u4e3a\u4ec0\u4e48\u4f7f\u7528 React](/react/docs/why-react-zh-CN.html), \u6216\u8005\u6df1\u5165 [API \u53c2\u8003](/react/docs/top-level-api.html) \u5f00\u59cb\u94bb\u7814\uff01\u795d\u4f60\u597d\u8fd0\uff01\n+\u4f60\u521a\u521a\u901a\u8fc7\u51e0\u4e2a\u7b80\u5355\u7684\u6b65\u9aa4\u5efa\u7acb\u4e86\u4e00\u4e2a\u8bc4\u8bba\u6846\u3002\u5b66\u4e60\u66f4\u591a\u5173\u4e8e[\u4e3a\u4ec0\u4e48\u4f7f\u7528 React](/react/docs/why-react-zh-CN.html), \u6216\u8005\u6df1\u5165 [API \u53c2\u8003](/react/docs/top-level-api-zh-CN.html) \u5f00\u59cb\u94bb\u7814\uff01\u795d\u4f60\u597d\u8fd0\uff01"}]}
{"time": 0.845001220703125, "reference": "fix a string interpolation typo in reacthooks test", "candidate": "fix ReactHooks-test.internal.js update hooks warning message format.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js b/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\nindex 53fb9c07589e..9e39b35fc1ba 100644\n--- a/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\n+++ b/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\n@@ -1591,8 +1591,7 @@ describe('ReactHooks', () => {\n         }\n       });\n \n-      it(`warns when more hooks (${(hookNameA,\n-      hookNameB)}) are used during update than mount`, () => {\n+      it(`warns when more hooks (${hookNameA}, ${hookNameB}) are used during update than mount`, () => {\n         function App(props) {\n           /* eslint-disable no-unused-vars */\n           if (props.update) {\n@@ -1646,8 +1645,7 @@ describe('ReactHooks', () => {\n         .replace('use', '')\n         .replace('Helper', '');\n \n-      it(`warns when fewer hooks (${(hookNameA,\n-      hookNameB)}) are used during update than mount`, () => {\n+      it(`warns when fewer hooks (${hookNameA}, ${hookNameB}) are used during update than mount`, () => {\n         function App(props) {\n           /* eslint-disable no-unused-vars */\n           if (props.update) {"}]}
{"time": 0.539003849029541, "reference": "react-dom] updatereadme's class component to function component", "candidate": "refactor react-dom MyComponent to a function component.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-dom/README.md b/packages/react-dom/README.md\nindex 2652912f9992..f31dc407837b 100644\n--- a/packages/react-dom/README.md\n+++ b/packages/react-dom/README.md\n@@ -16,10 +16,8 @@ npm install react react-dom\n var React = require('react');\n var ReactDOM = require('react-dom');\n \n-class MyComponent extends React.Component {\n-  render() {\n-    return <div>Hello World</div>;\n-  }\n+function MyComponent() {\n+  return <div>Hello World</div>;\n }\n \n ReactDOM.render(<MyComponent />, node);\n@@ -31,10 +29,8 @@ ReactDOM.render(<MyComponent />, node);\n var React = require('react');\n var ReactDOMServer = require('react-dom/server');\n \n-class MyComponent extends React.Component {\n-  render() {\n-    return <div>Hello World</div>;\n-  }\n+function MyComponent() {\n+  return <div>Hello World</div>;\n }\n \n ReactDOMServer.renderToString(<MyComponent />);"}]}
{"time": 0.7199985980987549, "reference": "allow `useeffect` in `react-hooks/exhaustive-deps`.", "candidate": "fix lint rule ExhaustiveDeps to handle undefined dependencies conditionally.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js b/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js\nindex a7b2abbe80d0..eb58f8d4d1fb 100644\n--- a/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js\n+++ b/packages/eslint-plugin-react-hooks/__tests__/ESLintRuleExhaustiveDeps-test.js\n@@ -1452,6 +1452,15 @@ const tests = {\n         }\n       `,\n     },\n+    {\n+      code: normalizeIndent`\n+        function MyComponent() {\n+          useEffect(() => {\n+            console.log('banana banana banana');\n+          }, undefined);\n+        }\n+      `,\n+    },\n   ],\n   invalid: [\n     {\ndiff --git a/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js b/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\nindex 0b8b61b14fa5..e754edabc434 100644\n--- a/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\n+++ b/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\n@@ -1161,7 +1161,12 @@ export default {\n       const callback = node.arguments[callbackIndex];\n       const reactiveHook = node.callee;\n       const reactiveHookName = getNodeWithoutReactNamespace(reactiveHook).name;\n-      const declaredDependenciesNode = node.arguments[callbackIndex + 1];\n+      const maybeNode = node.arguments[callbackIndex + 1];\n+      const declaredDependenciesNode =\n+        maybeNode &&\n+        !(maybeNode.type === 'Identifier' && maybeNode.name === 'undefined')\n+          ? maybeNode\n+          : undefined;\n       const isEffect = /Effect($|[^a-z])/g.test(reactiveHookName);\n \n       // Check whether a callback is supplied. If there is no callback supplied"}]}
{"time": 0.7660009860992432, "reference": "add explination of autobind to dom event listener tip", "candidate": "add a note about autobinding in componentDidMount function.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/tips/11-dom-event-listeners.md b/docs/tips/11-dom-event-listeners.md\nindex 46e577fff5e0..1695391523ee 100644\n--- a/docs/tips/11-dom-event-listeners.md\n+++ b/docs/tips/11-dom-event-listeners.md\n@@ -42,3 +42,5 @@ React.renderComponent(<Box />, mountNode);\n ```\n \n `componentDidMount` is called after the component is mounted and has a DOM representation. This is often a place where you would attach generic DOM events.\n+\n+Notice that the event callback is bound to the react component and not the original element. React automatically binds methods to the current component instance for you through a process of [autobinding](../docs/interactivity-and-dynamic-uis.html#under-the-hood-autobind-and-event-delegation)."}]}
{"time": 0.7570037841796875, "reference": "inspect classcomponent.render instead of constructor, fixes #16749", "candidate": "update createViewElementSource function to inspect component render method for Class components.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-devtools-extensions/src/utils.js b/packages/react-devtools-extensions/src/utils.js\nindex c8d4003115a8..922b1717563b 100644\n--- a/packages/react-devtools-extensions/src/utils.js\n+++ b/packages/react-devtools-extensions/src/utils.js\n@@ -12,10 +12,21 @@ export function createViewElementSource(bridge: Bridge, store: Store) {\n \n       setTimeout(() => {\n         // Ask Chrome to display the location of the component function,\n+        // or a render method if it is a Class (ideally Class instance, not type)\n         // assuming the renderer found one.\n         chrome.devtools.inspectedWindow.eval(`\n           if (window.$type != null) {\n-            inspect(window.$type);\n+            if (\n+              window.$type &&\n+              window.$type.prototype &&\n+              window.$type.prototype.isReactComponent\n+            ) {\n+              // inspect Component.render, not constructor\n+              inspect(window.$type.prototype.render);\n+            } else {\n+              // inspect Functional Component\n+              inspect(window.$type);\n+            }\n           }\n         `);\n       }, 100);"}]}
{"time": 1.1510019302368164, "reference": "build schedule which is required for time slicing demo", "candidate": "update build script to include dom-client and schedule modules.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/fixtures/unstable-async/suspense/README.md b/fixtures/unstable-async/suspense/README.md\nindex cb5b823c34e9..66d92b5186ec 100644\n--- a/fixtures/unstable-async/suspense/README.md\n+++ b/fixtures/unstable-async/suspense/README.md\n@@ -26,7 +26,7 @@ Set [the `enableSuspense` flag](https://github.com/facebook/react/blob/d79238f1e\n # 1: Build react from source\n cd /path/to/react\n yarn\n-yarn build dom,core,interaction,simple-cache-provider --type=NODE\n+yarn build dom-client,core,simple-cache-provider,schedule --type=NODE\n \n # 2: Install fixture dependencies\n cd fixtures/unstable-async/suspense/\ndiff --git a/fixtures/unstable-async/time-slicing/README.md b/fixtures/unstable-async/time-slicing/README.md\nindex 8d068a393b7f..d2bbd291bc6a 100644\n--- a/fixtures/unstable-async/time-slicing/README.md\n+++ b/fixtures/unstable-async/time-slicing/README.md\n@@ -18,7 +18,7 @@ There are also known bugs and inefficiencies in master so **don't use this fixtu\n # 1: Build react from source\n cd /path/to/react\n yarn\n-yarn build dom,core,interaction,simple-cache-provider --type=NODE\n+yarn build dom-client,core,simple-cache-provider,schedule --type=NODE\n \n # 2: Install fixture dependencies\n cd fixtures/unstable-async/time-slicing/"}]}
{"time": 0.4429967403411865, "reference": "add an unit test for react.fragment with shallowrenderer", "candidate": "add test for shallow rendering React fragments.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\nindex 377ba5f67161..318611db64b4 100644\n--- a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n+++ b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n@@ -336,6 +336,34 @@ describe('ReactShallowRenderer', () => {\n     ]);\n   });\n \n+  it('should shallow render a React.fragment', () => {\n+    class SomeComponent extends React.Component {\n+      render() {\n+        return <div />;\n+      }\n+    }\n+    class Fragment extends React.Component {\n+      render() {\n+        return (\n+          <React.Fragment>\n+            <div />\n+            <span />\n+            <SomeComponent />\n+          </React.Fragment>\n+        );\n+      }\n+    }\n+    const shallowRenderer = createRenderer();\n+    const result = shallowRenderer.render(<Fragment />);\n+    expect(result).toEqual(\n+      <React.Fragment>\n+        <div />\n+        <span />\n+        <SomeComponent />\n+      </React.Fragment>,\n+    );\n+  });\n+\n   it('should throw for invalid elements', () => {\n     class SomeComponent extends React.Component {\n       render() {"}]}
{"time": 0.7890040874481201, "reference": "fix false positive <noscript> rehydration text difference warning in react 16", "candidate": "update Chrome component to add a noscript message and optimize HTML normalization.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/fixtures/ssr/src/components/Chrome.js b/fixtures/ssr/src/components/Chrome.js\nindex 2cd704064c4d..541d96901c5f 100644\n--- a/fixtures/ssr/src/components/Chrome.js\n+++ b/fixtures/ssr/src/components/Chrome.js\n@@ -15,6 +15,11 @@ export default class Chrome extends Component {\n           <title>{this.props.title}</title>\n         </head>\n         <body>\n+          <noscript\n+            dangerouslySetInnerHTML={{\n+              __html: `<b>Enable JavaScript to run this app.</b>`,\n+            }}\n+          />\n           {this.props.children}\n           <script\n             dangerouslySetInnerHTML={{\ndiff --git a/src/renderers/dom/fiber/ReactDOMFiberComponent.js b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\nindex 72ed46f2857f..2b75e96390b7 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n@@ -164,17 +164,16 @@ if (__DEV__) {\n     );\n   };\n \n-  var testDocument;\n   // Parse the HTML and read it back to normalize the HTML string so that it\n   // can be used for comparison.\n   var normalizeHTML = function(parent: Element, html: string) {\n-    if (!testDocument) {\n-      // The title argument is required in IE11 so we pass an empty string.\n-      testDocument = document.implementation.createHTMLDocument('');\n-    }\n+    // We could have created a separate document here to avoid\n+    // re-initializing custom elements if they exist. But this breaks\n+    // how <noscript> is being handled. So we use the same document.\n+    // See the discussion in https://github.com/facebook/react/pull/11157.\n     var testElement = parent.namespaceURI === HTML_NAMESPACE\n-      ? testDocument.createElement(parent.tagName)\n-      : testDocument.createElementNS(\n+      ? parent.ownerDocument.createElement(parent.tagName)\n+      : parent.ownerDocument.createElementNS(\n           (parent.namespaceURI: any),\n           parent.tagName,\n         );"}]}
{"time": 1.0680668354034424, "reference": "move schedulerfeatureflags fork to src directory to fix lint", "candidate": "rename file scheduler feature flags to src folder.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/scheduler/forks/SchedulerFeatureFlags.www.js b/packages/scheduler/src/forks/SchedulerFeatureFlags.www.js\nsimilarity index 100%\nrename from packages/scheduler/forks/SchedulerFeatureFlags.www.js\nrename to packages/scheduler/src/forks/SchedulerFeatureFlags.www.js\ndiff --git a/scripts/rollup/forks.js b/scripts/rollup/forks.js\nindex d64e9e53288d..934d21328922 100644\n--- a/scripts/rollup/forks.js\n+++ b/scripts/rollup/forks.js\n@@ -164,7 +164,7 @@ const forks = Object.freeze({\n         bundleType === FB_WWW_PROD ||\n         bundleType === FB_WWW_PROFILING)\n     ) {\n-      return 'scheduler/forks/SchedulerFeatureFlags.www.js';\n+      return 'scheduler/src/forks/SchedulerFeatureFlags.www.js';\n     }\n     return 'scheduler/src/SchedulerFeatureFlags';\n   },"}]}
{"time": 0.6760361194610596, "reference": "fix up flow annotations to be a bit more explicit where the unsoundness is", "candidate": "update ReactDOMFiberComponent trapClickOnNonInteractiveElement to handle HTMLElement Node parameter.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/renderers/dom/fiber/ReactDOMFiberComponent.js b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\nindex 37eb47a100f1..186d2f0b5f32 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n@@ -159,7 +159,7 @@ var mediaEvents = {\n   topWaiting: 'waiting',\n };\n \n-function trapClickOnNonInteractiveElement(node : any) {\n+function trapClickOnNonInteractiveElement(node : HTMLElement) {\n   // Mobile Safari does not fire properly bubble click events on\n   // non-interactive elements, which means delegated click listeners do not\n   // fire. The workaround for this bug involves attaching an empty click\n@@ -496,7 +496,7 @@ var ReactDOMFiberComponent = {\n         var div = ownerDocument.createElement('div');\n         div.innerHTML = '<script></script>';\n         // This is guaranteed to yield a script element.\n-        var firstChild = ((div.firstChild : any) : Element);\n+        var firstChild = ((div.firstChild : any) : HTMLScriptElement);\n         domElement = div.removeChild(firstChild);\n       } else if (props.is) {\n         domElement = ownerDocument.createElement(tag, props.is);\n@@ -622,7 +622,8 @@ var ReactDOMFiberComponent = {\n         break;\n       default:\n         if (typeof props.onClick === 'function') {\n-          trapClickOnNonInteractiveElement(domElement);\n+          // TODO: This cast may not be sound for SVG, MathML or custom elements.\n+          trapClickOnNonInteractiveElement(((domElement : any) : HTMLElement));\n         }\n         break;\n     }\n@@ -655,7 +656,8 @@ var ReactDOMFiberComponent = {\n       default:\n         if (typeof lastProps.onClick !== 'function' &&\n             typeof nextProps.onClick === 'function') {\n-          trapClickOnNonInteractiveElement(domElement);\n+          // TODO: This cast may not be sound for SVG, MathML or custom elements.\n+          trapClickOnNonInteractiveElement(((domElement : any) : HTMLElement));\n         }\n         break;\n     }"}]}
{"time": 1.0730359554290771, "reference": "add more helpful invariant if you're updating an unrendered component", "candidate": "add validation check for currentComponent before updating.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex 4bb6a4fedd4a..01c1ccbb5dd0 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -726,6 +726,11 @@ var ReactCompositeComponentMixin = {\n       ReactComponent.Mixin.updateComponent.call(this, transaction, prevProps);\n       var currentComponent = this._renderedComponent;\n       var nextComponent = this._renderValidatedComponent();\n+      invariant(\n+        typeof currentComponent !== 'undefined',\n+        'updateComponent(...): You are attempting to update an unrendered ' +\n+        'component.'\n+      );\n       if (currentComponent.constructor === nextComponent.constructor) {\n         currentComponent.receiveProps(nextComponent.props, transaction);\n       } else {"}]}
{"time": 1.0129964351654053, "reference": "remove unneeded else branches from documentation examples", "candidate": "update conditional rendering to always show GuestGreeting, introducing jsx to show \"Hello, Stranger.\", and lifting state up to show \"The water would not boil.\"", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/docs/conditional-rendering.md b/docs/docs/conditional-rendering.md\nindex cb120a894771..c73720629563 100644\n--- a/docs/docs/conditional-rendering.md\n+++ b/docs/docs/conditional-rendering.md\n@@ -30,9 +30,8 @@ function Greeting(props) {\n   const isLoggedIn = props.isLoggedIn;\n   if (isLoggedIn) {\n     return <UserGreeting />;\n-  } else {\n-    return <GuestGreeting />;\n   }\n+  return <GuestGreeting />;\n }\n \n ReactDOM.render(\ndiff --git a/docs/docs/introducing-jsx.md b/docs/docs/introducing-jsx.md\nindex 56e7b98e8582..75b9a5622d4a 100644\n--- a/docs/docs/introducing-jsx.md\n+++ b/docs/docs/introducing-jsx.md\n@@ -60,9 +60,8 @@ This means that you can use JSX inside of `if` statements and `for` loops, assig\n function getGreeting(user) {\n   if (user) {\n     return <h1>Hello, {formatName(user)}!</h1>;\n-  } else {\n-    return <h1>Hello, Stranger.</h1>;\n   }\n+  return <h1>Hello, Stranger.</h1>;\n }\n ```\n \ndiff --git a/docs/docs/lifting-state-up.md b/docs/docs/lifting-state-up.md\nindex 912ee89cdbc9..6b75c4ce7fae 100644\n--- a/docs/docs/lifting-state-up.md\n+++ b/docs/docs/lifting-state-up.md\n@@ -16,9 +16,8 @@ We will start with a component called `BoilingVerdict`. It accepts the `celsius`\n function BoilingVerdict(props) {\n   if (props.celsius >= 100) {\n     return <p>The water would boil.</p>;\n-  } else {\n-    return <p>The water would not boil.</p>;\n   }\n+  return <p>The water would not boil.</p>;\n }\n ```"}]}
{"time": 0.7730028629302979, "reference": "add a 'note' about passing arrays into the `value` attribute", "candidate": "update forms documentation to include information on selecting multiple options in select tag.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/docs/06-forms.md b/docs/docs/06-forms.md\nindex 8cea0db813e6..7f61d17d5523 100644\n--- a/docs/docs/06-forms.md\n+++ b/docs/docs/06-forms.md\n@@ -146,3 +146,7 @@ The selected `<option>` in an HTML `<select>` is normally specified through that\n ```\n \n To make an uncontrolled component, `defaultValue` is used instead.\n+\n+> Note:\n+>\n+> You can pass an array into the `value` attribute, allowing you to select multiple options in a `select` tag: `<select multiple value=\"{['B', 'C']}\">`."}]}
{"time": 0.5810344219207764, "reference": "make server hydration warnings more obviously about server", "candidate": "update error messages to be more descriptive and match expected server HTML.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/renderers/dom/fiber/ReactDOMFiberComponent.js b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\nindex 61c2575ff26a..378d62e6bbda 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n@@ -1064,7 +1064,7 @@ var ReactDOMFiberComponent = {\n       didWarnInvalidHydration = true;\n       warning(\n         false,\n-        'Did not find a matching <%s> in <%s>.',\n+        'Expected server HTML to contain a matching <%s> in <%s>.',\n         tag,\n         parentNode.nodeName.toLowerCase(),\n       );\n@@ -1086,7 +1086,7 @@ var ReactDOMFiberComponent = {\n       didWarnInvalidHydration = true;\n       warning(\n         false,\n-        'Did not find a matching text node for \"%s\" in <%s>.',\n+        'Expected server HTML to contain a matching text node for \"%s\" in <%s>.',\n         text,\n         parentNode.nodeName.toLowerCase(),\n       );"}]}
{"time": 0.4900033473968506, "reference": "update blog post which creates unhandled promise rejection", "candidate": "update implementation of makeCancelable to handle rejected promises properly.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/_posts/2015-12-16-ismounted-antipattern.md b/docs/_posts/2015-12-16-ismounted-antipattern.md\nindex 6390baa04819..8f7d2da81d96 100644\n--- a/docs/_posts/2015-12-16-ismounted-antipattern.md\n+++ b/docs/_posts/2015-12-16-ismounted-antipattern.md\n@@ -54,18 +54,16 @@ cancelablePromise\n cancelablePromise.cancel(); // Cancel the promise\n ```\n \n-Where `makeCancelable` is [defined by @istarkov](https://github.com/facebook/react/issues/5465#issuecomment-157888325) as:\n+Where `makeCancelable` was originally [defined by @istarkov](https://github.com/facebook/react/issues/5465#issuecomment-157888325) as:\n \n ```js\n const makeCancelable = (promise) => {\n   let hasCanceled_ = false;\n \n   const wrappedPromise = new Promise((resolve, reject) => {\n-    promise.then((val) =>\n-      hasCanceled_ ? reject({isCanceled: true}) : resolve(val)\n-    );\n-    promise.catch((error) =>\n-      hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n+    promise.then(\n+      val => hasCanceled_ ? reject({isCanceled: true}) : resolve(val),\n+      error => hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n     );\n   });\n \n@@ -78,3 +76,5 @@ const makeCancelable = (promise) => {\n };\n ```\n As an added bonus for getting your code cleaned up early, getting rid of `isMounted()` makes it one step easier for you to upgrade to ES6 classes, where using `isMounted()` is already prohibited.  Happy coding!\n+\n+* _Update 2017-05-12: altered `#makeCancelable` implementation so rejected promises won't go uncaught._"}]}
{"time": 0.801037073135376, "reference": "add <script> tags in the download page for easy embed", "candidate": "add download links for React core and JSX Transformer in downloads.md.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/downloads.md b/docs/downloads.md\nindex e0e32dce8562..d35ff4dbd293 100644\n--- a/docs/downloads.md\n+++ b/docs/downloads.md\n@@ -17,12 +17,24 @@ Download the starter kit to get everything you need to\n #### <a href=\"http://fb.me/react-{{site.react_version}}.min.js\">React Core {{site.react_version}} (production)</a>\n The compressed, production version of React core\n \n+```html\n+<script src=\"http://fb.me/react-{{site.react_version}}.min.js\"></script>\n+```\n+\n #### <a href=\"http://fb.me/react-{{site.react_version}}.js\">React Core {{site.react_version}} (development)</a>\n The uncompressed, development version of React core with inline documentation.\n \n+```html\n+<script src=\"http://fb.me/react-{{site.react_version}}.js\"></script>\n+```\n+\n #### <a href=\"http://fb.me/JSXTransformer-{{site.react_version}}.js\">JSX Transform</a>\n The JSX transformer used to support [XML syntax](/react/docs/syntax.html) in JavaScript.\n \n+```html\n+<script src=\"http://fb.me/JSXTransformer-{{site.react_version}}.js\"></script>\n+```\n+\n ## Bower\n \n ```sh"}]}
{"time": 0.8090000152587891, "reference": "give the user a warning when using unoptimized jsx code and send the user to the correct location in the documentation to optimize.", "candidate": "update documentation include newly added JSX section and log a warning when unoptimized JSX is used in browser-transforms.js.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/docs/08-tooling-integration.md b/docs/docs/08-tooling-integration.md\nindex abe17706c9ee..4733f36ec3aa 100644\n--- a/docs/docs/08-tooling-integration.md\n+++ b/docs/docs/08-tooling-integration.md\n@@ -20,7 +20,7 @@ We provide CDN-hosted versions of React [on our download page](/react/downloads.\n \n We have instructions for building from `master` [in our GitHub repository](https://github.com/facebook/react). We build a tree of CommonJS modules under `build/modules` which you can drop into any environment or packaging tool that supports CommonJS.\n \n-## JSX\n+## <a id=\"jsx\">JSX</a>\n \n ### In-browser JSX Transform\n \ndiff --git a/vendor/browser-transforms.js b/vendor/browser-transforms.js\nindex b4ba305300f0..76bd7e0fd654 100644\n--- a/vendor/browser-transforms.js\n+++ b/vendor/browser-transforms.js\n@@ -51,6 +51,7 @@ var load = exports.load = function(url, callback) {\n   var xhr;\n   xhr = window.ActiveXObject ? new window.ActiveXObject('Microsoft.XMLHTTP')\n                              : new XMLHttpRequest();\n+\n   // Disable async since we need to execute scripts in the order they are in the\n   // DOM to mirror normal script loading.\n   xhr.open('GET', url, false);\n@@ -79,6 +80,10 @@ runScripts = function() {\n     return script.type === 'text/jsx';\n   });\n \n+  if(jsxScripts.length){\n+    console.warn(\"You are using unoptimized JSX (to optimize for production see: http://facebook.github.io/react/docs/tooling-integration.html#jsx)\");\n+  }\n+\n   jsxScripts.forEach(function(script) {\n     if (script.src) {\n       load(script.src);"}]}
{"time": 0.624000072479248, "reference": "remove unnecessary lines for `hasbadmappolyfill` issue for rollup", "candidate": "refactor polyfill handling to prevent unused declarations.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiber.js b/packages/react-reconciler/src/ReactFiber.js\nindex 64e230a891d6..4f0af6fe331e 100644\n--- a/packages/react-reconciler/src/ReactFiber.js\n+++ b/packages/react-reconciler/src/ReactFiber.js\n@@ -101,13 +101,10 @@ if (__DEV__) {\n   hasBadMapPolyfill = false;\n   try {\n     const nonExtensibleObject = Object.preventExtensions({});\n-    const testMap = new Map([[nonExtensibleObject, null]]);\n-    const testSet = new Set([nonExtensibleObject]);\n-    // This is necessary for Rollup to not consider these unused.\n-    // https://github.com/rollup/rollup/issues/1771\n-    // TODO: we can remove these if Rollup fixes the bug.\n-    testMap.set(0, 0);\n-    testSet.add(0);\n+    /* eslint-disable no-new */\n+    new Map([[nonExtensibleObject, null]]);\n+    new Set([nonExtensibleObject]);\n+    /* eslint-enable no-new */\n   } catch (e) {\n     // TODO: Consider warning about bad polyfills\n     hasBadMapPolyfill = true;\ndiff --git a/packages/react/src/BadMapPolyfill.js b/packages/react/src/BadMapPolyfill.js\nindex 7ceb9ca65f9a..9cad26144490 100644\n--- a/packages/react/src/BadMapPolyfill.js\n+++ b/packages/react/src/BadMapPolyfill.js\n@@ -12,13 +12,10 @@ if (__DEV__) {\n   hasBadMapPolyfill = false;\n   try {\n     const frozenObject = Object.freeze({});\n-    const testMap = new Map([[frozenObject, null]]);\n-    const testSet = new Set([frozenObject]);\n-    // This is necessary for Rollup to not consider these unused.\n-    // https://github.com/rollup/rollup/issues/1771\n-    // TODO: we can remove these if Rollup fixes the bug.\n-    testMap.set(0, 0);\n-    testSet.add(0);\n+    /* eslint-disable no-new */\n+    new Map([[frozenObject, null]]);\n+    new Set([frozenObject]);\n+    /* eslint-enable no-new */\n   } catch (e) {\n     // TODO: Consider warning about bad polyfills\n     hasBadMapPolyfill = true;"}]}
{"time": 0.7139999866485596, "reference": "add \"prop-types\" to dependencies of \"react-test-renderer\"", "candidate": "add prop-types dependency for type checking.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-test-renderer/package.json b/packages/react-test-renderer/package.json\nindex 0bcf5615079b..051cfb0ca71e 100644\n--- a/packages/react-test-renderer/package.json\n+++ b/packages/react-test-renderer/package.json\n@@ -16,7 +16,8 @@\n   \"homepage\": \"https://reactjs.org/\",\n   \"dependencies\": {\n     \"fbjs\": \"^0.8.16\",\n-    \"object-assign\": \"^4.1.1\"\n+    \"object-assign\": \"^4.1.1\",\n+    \"prop-types\": \"^15.6.0\"\n   },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0\""}]}
{"time": 0.7620363235473633, "reference": "return closestinstance in `getinspectordataforviewatpoint`", "candidate": "add closestInstance field to TouchedViewDataAtPoint.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-native-renderer/src/ReactNativeFiberInspector.js b/packages/react-native-renderer/src/ReactNativeFiberInspector.js\nindex a0f543a9c4e4..f0c6a8de2f56 100644\n--- a/packages/react-native-renderer/src/ReactNativeFiberInspector.js\n+++ b/packages/react-native-renderer/src/ReactNativeFiberInspector.js\n@@ -217,6 +217,7 @@ if (__DEV__) {\n                 pointerY: locationY,\n                 frame: {left: pageX, top: pageY, width, height},\n                 touchedViewTag: nativeViewTag,\n+                closestInstance,\n               });\n             },\n           );\ndiff --git a/packages/react-native-renderer/src/ReactNativeTypes.js b/packages/react-native-renderer/src/ReactNativeTypes.js\nindex 864952c52ff2..8a9968c0a080 100644\n--- a/packages/react-native-renderer/src/ReactNativeTypes.js\n+++ b/packages/react-native-renderer/src/ReactNativeTypes.js\n@@ -150,6 +150,7 @@ export type InspectorData = $ReadOnly<{|\n export type TouchedViewDataAtPoint = $ReadOnly<{|\n   pointerY: number,\n   touchedViewTag?: number,\n+  closestInstance?: Object,\n   frame: $ReadOnly<{|\n     top: number,\n     left: number,"}]}
{"time": 1.139068841934204, "reference": "replace object getter with `object.defineproperty` in testrenderer", "candidate": "add getter for root in ReactTestRendererFiberEntry.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/renderers/testing/ReactTestRendererFiberEntry.js b/src/renderers/testing/ReactTestRendererFiberEntry.js\nindex bf0835afbb89..fff2175023e5 100644\n--- a/src/renderers/testing/ReactTestRendererFiberEntry.js\n+++ b/src/renderers/testing/ReactTestRendererFiberEntry.js\n@@ -565,13 +565,9 @@ var ReactTestRendererFiber = {\n     invariant(root != null, 'something went wrong');\n     TestRenderer.updateContainer(element, root, null, null);\n \n-    return {\n-      get root() {\n-        if (root === null || root.current.child === null) {\n-          throw new Error(\"Can't access .root on unmounted test renderer\");\n-        }\n-        return wrapFiber(root.current.child);\n-      },\n+    var entry = {\n+      root: undefined, // makes flow happy\n+      // we define a 'getter' for 'root' below using 'Object.defineProperty'\n       toJSON() {\n         if (root == null || root.current == null || container == null) {\n           return null;\n@@ -611,6 +607,23 @@ var ReactTestRendererFiber = {\n         return TestRenderer.getPublicRootInstance(root);\n       },\n     };\n+\n+    Object.defineProperty(\n+      entry,\n+      'root',\n+      ({\n+        configurable: true,\n+        enumerable: true,\n+        get: function() {\n+          if (root === null || root.current.child === null) {\n+            throw new Error(\"Can't access .root on unmounted test renderer\");\n+          }\n+          return wrapFiber(root.current.child);\n+        },\n+      }: Object),\n+    );\n+\n+    return entry;\n   },\n \n   /* eslint-disable camelcase */"}]}
{"time": 0.6442046165466309, "reference": "allow decoupleupdatepriorityfromscheduler to be set", "candidate": "add new feature decouple update priority from scheduler.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex 15592c39095f..6f98961100e7 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -24,6 +24,7 @@ export const {\n   enableFilterEmptyStringAttributesDOM,\n   enableLegacyFBSupport,\n   deferRenderPhaseUpdateToNextBatch,\n+  decoupleUpdatePriorityFromScheduler,\n } = dynamicFeatureFlags;\n \n // On WWW, __EXPERIMENTAL__ is used for a new modern build.\n@@ -75,7 +76,6 @@ export const warnUnstableRenderSubtreeIntoContainer = false;\n // don't have to add another test dimension. The build system will compile this\n // to the correct value.\n export const enableNewReconciler = __VARIANT__;\n-export const decoupleUpdatePriorityFromScheduler = __VARIANT__;\n \n // TODO: This does not currently exist in the new reconciler fork.\n export const enableDebugTracing = !__VARIANT__;"}]}
{"time": 0.7969999313354492, "reference": "rename 19--dangerouslysetinnerhtml.md -> 19-dangerously-set-inner-html.md", "candidate": "rename documentation file dangerouslySetInnerHTML.md to dangerously-set-inner-html.md.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/tips/19--dangerouslySetInnerHTML.md b/docs/tips/19-dangerously-set-inner-html.md\nsimilarity index 100%\nrename from docs/tips/19--dangerouslySetInnerHTML.md\nrename to docs/tips/19-dangerously-set-inner-html.md"}]}
{"time": 0.6490352153778076, "reference": "run schedulerfeatureflags with variant flags again", "candidate": "update jest setupTests.www.js to include additional flags for testing both versions.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/scripts/jest/setupTests.www.js b/scripts/jest/setupTests.www.js\nindex 0def1bcadc22..a51b5838ee43 100644\n--- a/scripts/jest/setupTests.www.js\n+++ b/scripts/jest/setupTests.www.js\n@@ -24,9 +24,18 @@ jest.mock('scheduler/src/SchedulerFeatureFlags', () => {\n       ),\n     {virtual: true}\n   );\n-  return jest.requireActual(\n+  const actual = jest.requireActual(\n     schedulerSrcPath + '/src/forks/SchedulerFeatureFlags.www'\n   );\n+\n+  // These flags are not a dynamic on www, but we still want to run\n+  // tests in both versions.\n+  actual.enableIsInputPending = __VARIANT__;\n+  actual.enableIsInputPendingContinuous = __VARIANT__;\n+  actual.enableProfiling = __VARIANT__;\n+  actual.enableSchedulerDebugging = __VARIANT__;\n+\n+  return actual;\n });\n \n global.__WWW__ = true;"}]}
{"time": 0.7400386333465576, "reference": "change `reactmultichild` test to check for `innerhtml` descriptor.", "candidate": "add condition for running test suite based on spiable `Element.prototype.innerHTML`.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/core/__tests__/ReactMultiChild-test.js b/src/core/__tests__/ReactMultiChild-test.js\nindex 845150623732..2a6d25ef2234 100644\n--- a/src/core/__tests__/ReactMultiChild-test.js\n+++ b/src/core/__tests__/ReactMultiChild-test.js\n@@ -21,14 +21,19 @@ describe('ReactMultiChild', function() {\n   var React;\n   var setInnerHTML;\n \n+  // Only run this test suite if `Element.prototype.innerHTML` can be spied on.\n+  var innerHTMLDescriptor = Object.getOwnPropertyDescriptor(\n+    Element.prototype,\n+    'innerHTML'\n+  );\n+  if (!innerHTMLDescriptor) {\n+    return;\n+  }\n+\n   beforeEach(function() {\n     require('mock-modules').dumpCache();\n     React = require('React');\n \n-    var innerHTMLDescriptor = Object.getOwnPropertyDescriptor(\n-      Element.prototype,\n-      'innerHTML'\n-    );\n     Object.defineProperty(Element.prototype, 'innerHTML', {\n       set: setInnerHTML = jasmine.createSpy().andCallFake(\n         innerHTMLDescriptor.set"}]}
{"time": 0.7940382957458496, "reference": "make requestidlecallback and requestanimationframe shims async", "candidate": "update test coverage for handling low-priority tree in ReactDOMFiber-test.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/scripts/fiber/tests-passing.txt b/scripts/fiber/tests-passing.txt\nindex 36bfeaa2c86e..40d2350c562d 100644\n--- a/scripts/fiber/tests-passing.txt\n+++ b/scripts/fiber/tests-passing.txt\n@@ -541,6 +541,7 @@ src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n * findDOMNode should find dom element after expanding a fragment\n * should bubble events from the portal to the parent\n * should not onMouseLeave when staying in the portal\n+* should not crash encountering low-priority tree\n \n src/renderers/dom/shared/__tests__/CSSProperty-test.js\n * should generate browser prefixes for its `isUnitlessNumber`\ndiff --git a/scripts/jest/environment.js b/scripts/jest/environment.js\nindex 6b0c38fe49d7..98aa77b5591c 100644\n--- a/scripts/jest/environment.js\n+++ b/scripts/jest/environment.js\n@@ -1,11 +1,13 @@\n /* eslint-disable */\n global.__DEV__ = true;\n \n-// For testing DOM Fiber, we synchronously invoke all the scheduling.\n+// For testing DOM Fiber.\n global.requestAnimationFrame = function(callback) {\n-  callback();\n+  setTimeout(callback);\n };\n \n global.requestIdleCallback = function(callback) {\n-  callback({ timeRemaining() { return Infinity; } });\n+  setTimeout(() => {\n+    callback({ timeRemaining() { return Infinity; } });\n+  });\n };\ndiff --git a/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js b/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\nindex 990ad069d1e1..9abec3eedd1b 100644\n--- a/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n+++ b/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n@@ -993,5 +993,14 @@ describe('ReactDOMFiber', () => {\n         'leave parent', // Only when we leave the portal does onMouseLeave fire.\n       ]);\n     });\n+\n+    it('should not crash encountering low-priority tree', () => {\n+      ReactDOM.render(\n+        <div hidden={true}>\n+          <div />\n+        </div>,\n+        container\n+      );\n+    });\n   }\n });"}]}
{"time": 0.8130006790161133, "reference": "update build-for-devtools script to prepare unit tests too", "candidate": "update build-for-devtools script to include copying build files to a new directory.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex f498fad2a74d..aecd84fd7120 100644\n--- a/package.json\n+++ b/package.json\n@@ -108,7 +108,7 @@\n   \"scripts\": {\n     \"build\": \"node ./scripts/rollup/build.js\",\n     \"build-combined\": \"node ./scripts/rollup/build-all-release-channels.js\",\n-    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh --type=NODE\",\n+    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh --type=NODE && rm -rf build2 && mkdir build2 && cp -r ./build/node_modules build2/oss-experimental/\",\n     \"build-for-devtools-dev\": \"yarn build-for-devtools --type=NODE_DEV\",\n     \"build-for-devtools-prod\": \"yarn build-for-devtools --type=NODE_PROD\",\n     \"linc\": \"node ./scripts/tasks/linc.js\","}]}
{"time": 0.5449991226196289, "reference": "add a comment about why the string is split up. for future readers of this file.", "candidate": "update deprecated function with clearer warning message about splitting examples for React build tools.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/shared/utils/deprecated.js b/src/shared/utils/deprecated.js\nindex e73613301d77..85eb17a1e54a 100644\n--- a/src/shared/utils/deprecated.js\n+++ b/src/shared/utils/deprecated.js\n@@ -30,6 +30,9 @@ function deprecated(fnName, newModule, ctx, fn) {\n     var newFn = function() {\n       warning(\n         warned,\n+        // Require examples in this string must be split to prevent React's\n+        // build tools from mistaking them for real requires.\n+        // Otherwise the build tools will attempt to build a '%s' module.\n         '`require' + '(\"react\").%s` is deprecated. Please use `require' + '(\"%s\").%s` ' +\n         'instead.',\n         fnName,"}]}
{"time": 0.6652159690856934, "reference": "enable \"reload & profile\" button for timeline view", "candidate": "update Profiler component ReloadAndProfileButton logic to simplify and improve readability.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.js b/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.js\nindex 3b5ad02351aa..f9f98fae656f 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.js\n+++ b/packages/react-devtools-shared/src/devtools/views/Profiler/Profiler.js\n@@ -113,9 +113,7 @@ function Profiler(_: {||}) {\n         <div className={styles.LeftColumn}>\n           <div className={styles.Toolbar}>\n             <RecordToggle disabled={!supportsProfiling} />\n-            <ReloadAndProfileButton\n-              disabled={selectedTabID === 'timeline' || !supportsProfiling}\n-            />\n+            <ReloadAndProfileButton disabled={!supportsProfiling} />\n             <ClearProfilingDataButton />\n             <ProfilingImportExportButtons />\n             <div className={styles.VRule} />"}]}
{"time": 1.1610403060913086, "reference": "use map instead of object as map in reactnativecomponenttree", "candidate": "update ReactNativeComponentTree to use Map for instanceCache and instanceProps.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-native-renderer/src/ReactNativeComponentTree.js b/packages/react-native-renderer/src/ReactNativeComponentTree.js\nindex 9f580d72e74f..542ab9b22efe 100644\n--- a/packages/react-native-renderer/src/ReactNativeComponentTree.js\n+++ b/packages/react-native-renderer/src/ReactNativeComponentTree.js\n@@ -7,20 +7,20 @@\n \n import invariant from 'shared/invariant';\n \n-const instanceCache = {};\n-const instanceProps = {};\n+const instanceCache = new Map();\n+const instanceProps = new Map();\n \n export function precacheFiberNode(hostInst, tag) {\n-  instanceCache[tag] = hostInst;\n+  instanceCache.set(tag, hostInst);\n }\n \n export function uncacheFiberNode(tag) {\n-  delete instanceCache[tag];\n-  delete instanceProps[tag];\n+  instanceCache.delete(tag);\n+  instanceProps.delete(tag);\n }\n \n function getInstanceFromTag(tag) {\n-  return instanceCache[tag] || null;\n+  return instanceCache.get(tag) || null;\n }\n \n function getTagFromInstance(inst) {\n@@ -39,9 +39,9 @@ export {\n };\n \n export function getFiberCurrentPropsFromNode(stateNode) {\n-  return instanceProps[stateNode._nativeTag] || null;\n+  return instanceProps.get(stateNode._nativeTag) || null;\n }\n \n export function updateFiberProps(tag, props) {\n-  instanceProps[tag] = props;\n+  instanceProps.set(tag, props);\n }"}]}
{"time": 0.7250003814697266, "reference": "revert \"fix createnodemock doc to avoid invariant violation\"", "candidate": "remove unnecessary nodeType in createNodeMock function.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/_posts/2016-11-16-react-v15.4.0.md b/docs/_posts/2016-11-16-react-v15.4.0.md\nindex ee34c69529ed..d07691a04e83 100644\n--- a/docs/_posts/2016-11-16-react-v15.4.0.md\n+++ b/docs/_posts/2016-11-16-react-v15.4.0.md\n@@ -75,7 +75,6 @@ import renderer from 'react-test-renderer';\n function createNodeMock(element) {\n   if (element.type === 'input') {\n     return {\n-      nodeType: 1,\n       focus() {},\n     };\n   }"}]}
{"time": 0.5840001106262207, "reference": "add scoped property to the list of dom standard properties", "candidate": "add support for handling 'scoped' attribute in DOMPropertyOperations.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/docs/docs/ref-04-tags-and-attributes.md b/docs/docs/ref-04-tags-and-attributes.md\nindex f4d2a6dfdc62..dbff8d2ec6ca 100644\n--- a/docs/docs/ref-04-tags-and-attributes.md\n+++ b/docs/docs/ref-04-tags-and-attributes.md\n@@ -60,7 +60,7 @@ formAction formEncType formMethod formNoValidate formTarget frameBorder height\n hidden href hrefLang htmlFor httpEquiv icon id label lang list loop manifest\n marginHeight marginWidth max maxLength media mediaGroup method min multiple\n muted name noValidate open pattern placeholder poster preload radioGroup\n-readOnly rel required role rows rowSpan sandbox scope scrolling seamless\n+readOnly rel required role rows rowSpan sandbox scope scoped scrolling seamless\n selected shape size sizes span spellCheck src srcDoc srcSet start step style\n tabIndex target title type useMap value width wmode\n ```\ndiff --git a/src/browser/ui/dom/HTMLDOMPropertyConfig.js b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\nindex 0cd3aa369c9e..18a34dd83a45 100644\n--- a/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n@@ -134,6 +134,7 @@ var HTMLDOMPropertyConfig = {\n     rowSpan: null,\n     sandbox: null,\n     scope: null,\n+    scoped: HAS_BOOLEAN_VALUE,\n     scrolling: null,\n     seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n     selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\ndiff --git a/src/browser/ui/dom/__tests__/DOMPropertyOperations-test.js b/src/browser/ui/dom/__tests__/DOMPropertyOperations-test.js\nindex 564437256bce..8cadb40d1f9b 100644\n--- a/src/browser/ui/dom/__tests__/DOMPropertyOperations-test.js\n+++ b/src/browser/ui/dom/__tests__/DOMPropertyOperations-test.js\n@@ -89,6 +89,11 @@ describe('DOMPropertyOperations', function() {\n         'checked',\n         false\n       )).toBe('');\n+\n+      expect(DOMPropertyOperations.createMarkupForProperty(\n+        'scoped',\n+        true\n+      )).toBe('scoped=\"\"');\n     });\n \n     it('should create markup for booleanish properties', function() {"}]}
{"time": 1.934000015258789, "reference": "suppress horizontal scroll bars in snapshot selector", "candidate": "add styling for scrollbar suppression in snapshot commit list view.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/devtools/views/Profiler/SnapshotCommitList.css b/src/devtools/views/Profiler/SnapshotCommitList.css\nnew file mode 100644\nindex 000000000000..7324c034b1f2\n--- /dev/null\n+++ b/src/devtools/views/Profiler/SnapshotCommitList.css\n@@ -0,0 +1,9 @@\n+.List {\n+  /**\n+   * The decision to suppress the default (horizontal) scroll bars is intentional.\n+   * The snapshot selector is small enough that the scrollbar renders it essentially useless.\n+   * There are two alternative navigation mechanisms (arrow keys and arrow buttons).\n+   * If necessary, we could also expand the click-and-drag mechanism to scroll.\n+   */\n+  overflow-x: hidden;\n+}\ndiff --git a/src/devtools/views/Profiler/SnapshotCommitList.js b/src/devtools/views/Profiler/SnapshotCommitList.js\nindex fde83a236707..16538ae1efd3 100644\n--- a/src/devtools/views/Profiler/SnapshotCommitList.js\n+++ b/src/devtools/views/Profiler/SnapshotCommitList.js\n@@ -12,6 +12,8 @@ import { FixedSizeList } from 'react-window';\n import SnapshotCommitListItem from './SnapshotCommitListItem';\n import { minBarWidth } from './constants';\n \n+import styles from './SnapshotCommitList.css';\n+\n export type ItemData = {|\n   commitDurations: Array<number>,\n   commitTimes: Array<number>,\n@@ -160,6 +162,7 @@ function List({\n       style={{ height, width }}\n     >\n       <FixedSizeList\n+        className={styles.List}\n         direction=\"horizontal\"\n         height={height}\n         itemCount={filteredCommitIndices.length}"}]}
{"time": 0.6329984664916992, "reference": "add getlastmeasurements as it is documented as public api", "candidate": "update ReactPerfAnalysis to use getLastMeasurements instead of getFlushHistory.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/isomorphic/ReactPerf.js b/src/isomorphic/ReactPerf.js\nindex 7c93a02490fc..596ca6e900d0 100644\n--- a/src/isomorphic/ReactPerf.js\n+++ b/src/isomorphic/ReactPerf.js\n@@ -342,7 +342,7 @@ function stop() {\n }\n \n var ReactPerfAnalysis = {\n-  getFlushHistory,\n+  getLastMeasurements: getFlushHistory,\n   getExclusive,\n   getInclusive,\n   getWasted,"}]}
{"time": 0.7270007133483887, "reference": "fix `reactdominput` and `reactdomtextarea` race condition", "candidate": "update ReactDOMInput and ReactDOMTextarea to defer updates during onChange handler and set _isChanging flag accordingly.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/dom/components/ReactDOMInput.js b/src/dom/components/ReactDOMInput.js\nindex ad3c500ef191..2d552fc923fd 100644\n--- a/src/dom/components/ReactDOMInput.js\n+++ b/src/dom/components/ReactDOMInput.js\n@@ -52,6 +52,11 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n     };\n   },\n \n+  shouldComponentUpdate: function() {\n+    // Defer any updates to this component during the `onChange` handler.\n+    return !this._isChanging;\n+  },\n+\n   getChecked: function() {\n     return this.props.checked != null ? this.props.checked : this.state.checked;\n   },\n@@ -91,7 +96,9 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n   handleChange: ReactCompositeComponent.autoBind(function(event) {\n     var returnValue;\n     if (this.props.onChange) {\n+      this._isChanging = true;\n       returnValue = this.props.onChange(event);\n+      this._isChanging = false;\n     }\n     this.setState({\n       checked: event.target.checked,\ndiff --git a/src/dom/components/ReactDOMTextarea.js b/src/dom/components/ReactDOMTextarea.js\nindex ddba826a2399..84e2132a90be 100644\n--- a/src/dom/components/ReactDOMTextarea.js\n+++ b/src/dom/components/ReactDOMTextarea.js\n@@ -84,6 +84,11 @@ var ReactDOMTextarea = ReactCompositeComponent.createClass({\n     };\n   },\n \n+  shouldComponentUpdate: function() {\n+    // Defer any updates to this component during the `onChange` handler.\n+    return !this._isChanging;\n+  },\n+\n   getValue: function() {\n     return this.props.value != null ? this.props.value : this.state.value;\n   },\n@@ -118,7 +123,9 @@ var ReactDOMTextarea = ReactCompositeComponent.createClass({\n   handleChange: ReactCompositeComponent.autoBind(function(event) {\n     var returnValue;\n     if (this.props.onChange) {\n+      this._isChanging = true;\n       returnValue = this.props.onChange(event);\n+      this._isChanging = false;\n     }\n     this.setState({value: event.target.value});\n     return returnValue;"}]}
{"time": 1.626293420791626, "reference": "add `novalidate` and corresponding `formnovalidate`", "candidate": "add two new form validation properties for handling formNoValidate and noValidate.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/browser/dom/DefaultDOMPropertyConfig.js b/src/browser/dom/DefaultDOMPropertyConfig.js\nindex 16a3dbd2fa53..0eba6322a262 100644\n--- a/src/browser/dom/DefaultDOMPropertyConfig.js\n+++ b/src/browser/dom/DefaultDOMPropertyConfig.js\n@@ -67,6 +67,7 @@ var DefaultDOMPropertyConfig = {\n     draggable: null,\n     encType: null,\n     form: MUST_USE_ATTRIBUTE,\n+    formNoValidate: HAS_BOOLEAN_VALUE,\n     frameBorder: MUST_USE_ATTRIBUTE,\n     height: MUST_USE_ATTRIBUTE,\n     hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n@@ -85,6 +86,7 @@ var DefaultDOMPropertyConfig = {\n     min: null,\n     multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n     name: null,\n+    noValidate: HAS_BOOLEAN_VALUE,\n     pattern: null,\n     placeholder: null,\n     poster: null,"}]}
{"time": 1.1805260181427002, "reference": "fix comment to reflect the new  way of accessing a class type.", "candidate": "update ReactElement.js improve readability of the type comparison.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/classic/element/ReactElement.js b/src/classic/element/ReactElement.js\nindex c582f95a6ac5..5d03547c2859 100644\n--- a/src/classic/element/ReactElement.js\n+++ b/src/classic/element/ReactElement.js\n@@ -203,7 +203,7 @@ ReactElement.createElement = function(type, config, children) {\n ReactElement.createFactory = function(type) {\n   var factory = ReactElement.createElement.bind(null, type);\n   // Expose the type on the factory and the prototype so that it can be\n-  // easily accessed on elements. E.g. <Foo />.type === Foo.type.\n+  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n   // This should not be named `constructor` since this may not be the function\n   // that created the element, and it may not even be a constructor.\n   // Legacy hook TODO: Warn if this is accessed"}]}
{"time": 0.893190860748291, "reference": "increase polling threshold for publish-prereleases", "candidate": "update publishUsingCiWorkflow.js improved error handling for fetching workflowID.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/scripts/release/publish-using-ci-workflow.js b/scripts/release/publish-using-ci-workflow.js\nindex 48a834ba1f19..d7f87b48b094 100644\n--- a/scripts/release/publish-using-ci-workflow.js\n+++ b/scripts/release/publish-using-ci-workflow.js\n@@ -22,8 +22,8 @@ function sleep(ms) {\n \n async function getPublishWorkflowID(pipelineID) {\n   // Since we just created the pipeline in a POST request, the server may 404.\n-  // Try up to three times before giving up.\n-  for (let i = 0; i < 3; i++) {\n+  // Try a few times before giving up.\n+  for (let i = 0; i < 20; i++) {\n     const pipelineWorkflowsResponse = await fetch(\n       `https://circleci.com/api/v2/pipeline/${pipelineID}/workflow`\n     );\n@@ -37,7 +37,7 @@ async function getPublishWorkflowID(pipelineID) {\n     // CircleCI server may be stale. Wait a sec and try again.\n     await sleep(1000);\n   }\n-  throw new Error('Failed to create CircleCI workflow.');\n+  return null;\n }\n \n async function pollUntilWorkflowFinishes(workflowID) {\n@@ -108,6 +108,20 @@ async function main() {\n     2 * 1000 // Estimated time: 2 seconds,\n   );\n \n+  if (workflowID === null) {\n+    console.warn(\n+      theme.yellow(\n+        'Created a CI pipeline to publish the packages, but the script timed ' +\n+          \"out when requesting the associated workflow ID. It's still \" +\n+          'possible the workflow was created.\\n\\n' +\n+          'Visit ' +\n+          'https://app.circleci.com/pipelines/github/facebook/react?branch=main ' +\n+          'for a list of the latest workflows.'\n+      )\n+    );\n+    process.exit(1);\n+  }\n+\n   await logPromise(\n     pollUntilWorkflowFinishes(workflowID),\n     theme`{header Publishing in CI workflow}: https://app.circleci.com/pipelines/workflows/${workflowID}`,"}]}
{"time": 0.8080015182495117, "reference": "require list property to be accessed as an attribute", "candidate": "update HTMLDOMPropertyConfig list property to use attribute instead of null.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/browser/ui/dom/HTMLDOMPropertyConfig.js b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\nindex 569f445837b6..98be31d2af9b 100644\n--- a/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n@@ -106,7 +106,7 @@ var HTMLDOMPropertyConfig = {\n     id: MUST_USE_PROPERTY,\n     label: null,\n     lang: null,\n-    list: null,\n+    list: MUST_USE_ATTRIBUTE,\n     loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n     manifest: MUST_USE_ATTRIBUTE,\n     max: null,"}]}
{"time": 1.037999153137207, "reference": "switch on enableprofilerchangedhookindices flag for oss devtools builds", "candidate": "update DevToolsFeatureFlags enableProfilerChangedHookIndices to true.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-oss.js b/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-oss.js\nindex 4d1b1472bba6..f3457dae71d0 100644\n--- a/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-oss.js\n+++ b/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-oss.js\n@@ -13,7 +13,7 @@\n  * It should always be imported from \"react-devtools-feature-flags\".\n  ************************************************************************/\n \n-export const enableProfilerChangedHookIndices = false;\n+export const enableProfilerChangedHookIndices = true;\n export const isInternalFacebookBuild = false;\n \n /************************************************************************"}]}
{"time": 23.200469970703125, "reference": "remove unnecessary tests from insertchildat and inline it instead", "candidate": "refactor DOMChildrenOperations to use insertBefore instead of appendChild in insertChildAt.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/browser/ui/dom/DOMChildrenOperations.js b/src/browser/ui/dom/DOMChildrenOperations.js\nindex d2bc513d68a1..e2e3de2005a7 100644\n--- a/src/browser/ui/dom/DOMChildrenOperations.js\n+++ b/src/browser/ui/dom/DOMChildrenOperations.js\n@@ -42,20 +42,14 @@ var textContentAccessor = getTextContentAccessor();\n  * @internal\n  */\n function insertChildAt(parentNode, childNode, index) {\n-  var childNodes = parentNode.childNodes;\n-  if (childNodes[index] === childNode) {\n-    return;\n-  }\n-  // If `childNode` is already a child of `parentNode`, remove it so that\n-  // computing `childNodes[index]` takes into account the removal.\n-  if (childNode.parentNode === parentNode) {\n-    parentNode.removeChild(childNode);\n-  }\n-  if (index >= childNodes.length) {\n-    parentNode.appendChild(childNode);\n-  } else {\n-    parentNode.insertBefore(childNode, childNodes[index]);\n-  }\n+  // By exploiting arrays returning `undefined` for an undefined index, we can\n+  // rely exclusively on `insertBefore(node, null)` instead of also using\n+  // `appendChild(node)`. However, using `undefined` is not allowed by all\n+  // browsers so we must replace it with `null`.\n+  parentNode.insertBefore(\n+    childNode,\n+    parentNode.childNodes[index] || null\n+  );\n }\n \n var updateTextContent;"}]}
{"time": 0.991008996963501, "reference": "ignore function and symbol values on custom-elements on the server", "candidate": "update attribute checking logic to exclude functions and symbols.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-dom/src/server/DOMMarkupOperations.js b/packages/react-dom/src/server/DOMMarkupOperations.js\nindex 7306d9393be5..3cddbb493e07 100644\n--- a/packages/react-dom/src/server/DOMMarkupOperations.js\n+++ b/packages/react-dom/src/server/DOMMarkupOperations.js\n@@ -71,7 +71,12 @@ export function createMarkupForCustomAttribute(\n   name: string,\n   value: mixed,\n ): string {\n-  if (!isAttributeNameSafe(name) || value == null) {\n+  if (\n+    !isAttributeNameSafe(name) ||\n+    value == null ||\n+    typeof value === 'function' ||\n+    typeof value === 'symbol'\n+  ) {\n     return '';\n   }\n   return name + '=' + quoteAttributeValueForBrowser(value);\ndiff --git a/packages/react-dom/src/server/ReactDOMServerFormatConfig.js b/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\nindex 2a034963f48a..62f6d3ca5655 100644\n--- a/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\n+++ b/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\n@@ -1070,7 +1070,11 @@ function pushStartCustomElement(\n           // Ignored. These are built-in to React on the client.\n           break;\n         default:\n-          if (isAttributeNameSafe(propKey)) {\n+          if (\n+            isAttributeNameSafe(propKey) &&\n+            typeof propValue !== 'function' &&\n+            typeof propValue !== 'symbol'\n+          ) {\n             target.push(\n               attributeSeparator,\n               stringToChunk(propKey),"}]}
{"time": 0.6860227584838867, "reference": "fix node package.json ./ exports deprecation warning", "candidate": "update package.json entry for module paths.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react/package.json b/packages/react/package.json\nindex 0ab41de16ca5..a7ae10388473 100644\n--- a/packages/react/package.json\n+++ b/packages/react/package.json\n@@ -32,7 +32,7 @@\n     \"./build-info.json\": \"./build-info.json\",\n     \"./jsx-runtime\": \"./jsx-runtime.js\",\n     \"./jsx-dev-runtime\": \"./jsx-dev-runtime.js\",\n-    \"./\": \"./\"\n+    \"./*\": \"./*\"\n   },\n   \"repository\": {\n     \"type\": \"git\","}]}
{"time": 0.6789238452911377, "reference": "fix yarn warning on running 'yarn build-for-devtools'", "candidate": "update build command in package.json.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex bc48ac2fc571..7c9a6998db2d 100644\n--- a/package.json\n+++ b/package.json\n@@ -100,7 +100,7 @@\n   },\n   \"scripts\": {\n     \"build\": \"node ./scripts/rollup/build.js\",\n-    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build -- react/index,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer --type=NODE\",\n+    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer --type=NODE\",\n     \"linc\": \"node ./scripts/tasks/linc.js\",\n     \"lint\": \"node ./scripts/tasks/eslint.js\",\n     \"lint-build\": \"node ./scripts/rollup/validate/index.js\","}]}
{"time": 0.6959383487701416, "reference": "expose extra internals in fb build of react-dom/unstable-new-scheduler", "candidate": "add new scheduler module to ReactDOMFB.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-dom/unstable-new-scheduler.fb.js b/packages/react-dom/unstable-new-scheduler.fb.js\nnew file mode 100644\nindex 000000000000..ea901748d694\n--- /dev/null\n+++ b/packages/react-dom/unstable-new-scheduler.fb.js\n@@ -0,0 +1,14 @@\n+/**\n+ * Copyright (c) Facebook, Inc. and its affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ */\n+\n+'use strict';\n+\n+const ReactDOMFB = require('./src/client/ReactDOMFB');\n+\n+// TODO: decide on the top-level export form.\n+// This is hacky but makes it work with both Rollup and Jest.\n+module.exports = ReactDOMFB.default || ReactDOMFB;"}]}
{"time": 0.912010908126831, "reference": "fix requiring timers module with non standard require", "candidate": "update enqueueTask implementation to use nodeRequire with module context for setImmediate method.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/shared/enqueueTask.js b/packages/shared/enqueueTask.js\nindex 7827a794ee90..d8fc646db2b2 100644\n--- a/packages/shared/enqueueTask.js\n+++ b/packages/shared/enqueueTask.js\n@@ -19,7 +19,7 @@ export default function enqueueTask(task: () => void) {\n       const nodeRequire = module && module[requireString];\n       // assuming we're in node, let's try to get node's\n       // version of setImmediate, bypassing fake timers if any.\n-      enqueueTaskImpl = nodeRequire('timers').setImmediate;\n+      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n     } catch (_err) {\n       // we're in a browser\n       // we can't use regular timers because they may still be faked"}]}
{"time": 0.6670024394989014, "reference": "include 1% changes in a build, not just greater than", "candidate": "update condition to show only significant size changes.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/dangerfile.js b/dangerfile.js\nindex 97824c08edd4..c2812889835a 100644\n--- a/dangerfile.js\n+++ b/dangerfile.js\n@@ -117,8 +117,8 @@ function git(args) {\n   const packagesToShow = results\n     .filter(\n       r =>\n-        Math.abs(r.prevFileSizeChange) > percentToWarrentShowing ||\n-        Math.abs(r.prevGzipSizeChange) > percentToWarrentShowing\n+        Math.abs(r.prevFileSizeChange) >= percentToWarrentShowing ||\n+        Math.abs(r.prevGzipSizeChange) >= percentToWarrentShowing\n     )\n \n     .map(r => r.packageName);"}]}
{"time": 0.7149121761322021, "reference": "synchronize implementations of second render logging", "candidate": "update string formatting regex patterns to include 'd' in utils.js and hook.js.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/backend/utils.js b/packages/react-devtools-shared/src/backend/utils.js\nindex da911cf94458..f0f78b7f778b 100644\n--- a/packages/react-devtools-shared/src/backend/utils.js\n+++ b/packages/react-devtools-shared/src/backend/utils.js\n@@ -187,7 +187,7 @@ export function formatWithStyles(\n     return inputArgs;\n   }\n \n-  // Matches any of %(o|O|i|s|f), but not %%(o|O|i|s|f)\n+  // Matches any of %(o|O|d|i|s|f), but not %%(o|O|d|i|s|f)\n   const REGEXP = /([^%]|^)(%([oOdisf]))/g;\n   if (inputArgs[0].match(REGEXP)) {\n     return [`%c${inputArgs[0]}`, style, ...inputArgs.slice(1)];\ndiff --git a/packages/react-devtools-shared/src/hook.js b/packages/react-devtools-shared/src/hook.js\nindex 1ea54985fab6..ad5b33850b76 100644\n--- a/packages/react-devtools-shared/src/hook.js\n+++ b/packages/react-devtools-shared/src/hook.js\n@@ -180,13 +180,16 @@ export function installHook(target: any): DevToolsHook | null {\n       inputArgs === undefined ||\n       inputArgs === null ||\n       inputArgs.length === 0 ||\n-      (typeof inputArgs[0] === 'string' && inputArgs[0].includes('%c')) ||\n+      // Matches any of %c but not %%c\n+      (typeof inputArgs[0] === 'string' &&\n+        inputArgs[0].match(/([^%]|^)(%c)/g)) ||\n       style === undefined\n     ) {\n       return inputArgs;\n     }\n \n-    const REGEXP = /(%?)(%([oOdisf]))/g;\n+    // Matches any of %(o|O|d|i|s|f), but not %%(o|O|d|i|s|f)\n+    const REGEXP = /([^%]|^)(%([oOdisf]))/g;\n     if (inputArgs[0].match(REGEXP)) {\n       return [`%c${inputArgs[0]}`, style, ...inputArgs.slice(1)];\n     } else {"}]}
{"time": 0.5630011558532715, "reference": "reduce unnecessary warning while including jsx transformer in browser", "candidate": "add jsxScripts length validation in runScripts function.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/vendor/browser-transforms.js b/vendor/browser-transforms.js\nindex c3783d085f87..3506a76934f0 100644\n--- a/vendor/browser-transforms.js\n+++ b/vendor/browser-transforms.js\n@@ -312,6 +312,10 @@ function runScripts() {\n     }\n   }\n \n+  if (jsxScripts.length < 1) {\n+    return;\n+  }\n+\n   console.warn(\n     'You are using the in-browser JSX transformer. Be sure to precompile ' +\n     'your JSX for production - ' +"}]}
{"time": 1.0958161354064941, "reference": "get rid of ugly and difficult to follow breaks in switch", "candidate": "refactor ReactFiberCompleteWork to use return statements instead of break.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactFiberCompleteWork.js b/src/renderers/shared/fiber/ReactFiberCompleteWork.js\nindex f4d72e3d10c1..179e050848b0 100644\n--- a/src/renderers/shared/fiber/ReactFiberCompleteWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberCompleteWork.js\n@@ -95,14 +95,14 @@ exports.completeWork = function(current : ?Fiber, workInProgress : Fiber) : ?Fib\n     case FunctionalComponent:\n       console.log('/functional component', workInProgress.type.name);\n       transferOutput(workInProgress.child, workInProgress);\n-      break;\n+      return null;\n     case ClassComponent:\n       console.log('/class component', workInProgress.type.name);\n       transferOutput(workInProgress.child, workInProgress);\n-      break;\n+      return null;\n     case HostComponent:\n       console.log('/host component', workInProgress.type);\n-      break;\n+      return null;\n     case CoroutineComponent:\n       console.log('/coroutine component', workInProgress.input.handler.name);\n       return moveCoroutineToHandlerPhase(current, workInProgress);\n@@ -110,10 +110,10 @@ exports.completeWork = function(current : ?Fiber, workInProgress : Fiber) : ?Fib\n       transferOutput(workInProgress.stateNode, workInProgress);\n       // Reset the tag to now be a first phase coroutine.\n       workInProgress.tag = CoroutineComponent;\n-      break;\n+      return null;\n     case YieldComponent:\n       // Does nothing.\n-      break;\n+      return null;\n \n     // Error cases\n     case IndeterminateComponent:\n@@ -121,5 +121,4 @@ exports.completeWork = function(current : ?Fiber, workInProgress : Fiber) : ?Fib\n     default:\n       throw new Error('Unknown unit of work tag');\n   }\n-  return null;\n };"}]}
{"time": 1.107081413269043, "reference": "ensure reactfibererrordialogwww.showerrordialog exists", "candidate": "add check for showErrorDialog function in ReactFiberErrorDialogWWW.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/forks/ReactFiberErrorDialog.www.js b/packages/react-reconciler/src/forks/ReactFiberErrorDialog.www.js\nindex 80546ec1987e..b7cd2d59d014 100644\n--- a/packages/react-reconciler/src/forks/ReactFiberErrorDialog.www.js\n+++ b/packages/react-reconciler/src/forks/ReactFiberErrorDialog.www.js\n@@ -9,8 +9,14 @@\n \n import type {CapturedError} from '../ReactFiberScheduler';\n \n+import invariant from 'fbjs/lib/invariant';\n+\n // Provided by www\n const ReactFiberErrorDialogWWW = require('ReactFiberErrorDialog');\n+invariant(\n+  typeof ReactFiberErrorDialogWWW.showErrorDialog === 'function',\n+  'Expected ReactFiberErrorDialog.showErrorDialog to existbe a function.',\n+);\n \n export function showErrorDialog(capturedError: CapturedError): boolean {\n   return ReactFiberErrorDialogWWW.showErrorDialog(capturedError);"}]}
{"time": 0.6170003414154053, "reference": "fix name mismatch in react-reconciler custom build.", "candidate": "fix typo in ReactFiberHostConfig.custom.js.", "input": [{"role": "system", "content": "\nGiven a user-provided Git diff, generate a concise commit message summarizing and reasoning the changes.\nFollow the pattern: <action> <module/functionality> <details>.\nUse all lowercase letters, use imperative action verbs, write just one line of commit message and nothing else.\n"}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js b/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js\nindex 6535d8d3fdec..f2705b7b1df4 100644\n--- a/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js\n+++ b/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js\n@@ -64,7 +64,7 @@ export const getInstanceFromNode = $$$hostConfig.getInstanceFromNode;\n export const beforeActiveInstanceBlur = $$$hostConfig.beforeActiveInstanceBlur;\n export const afterActiveInstanceBlur = $$$hostConfig.afterActiveInstanceBlur;\n export const preparePortalMount = $$$hostConfig.preparePortalMount;\n-export const prepareScopeUpdate = $$$hostConfig.preparePortalMount;\n+export const prepareScopeUpdate = $$$hostConfig.prepareScopeUpdate;\n export const getInstanceFromScope = $$$hostConfig.getInstanceFromScope;\n export const getCurrentEventPriority = $$$hostConfig.getCurrentEventPriority;\n export const detachDeletedInstance = $$$hostConfig.detachDeletedInstance;"}]}
