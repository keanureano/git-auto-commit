{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/test/__tests__/ReactDefaultPerf-test.js b/src/test/__tests__/ReactDefaultPerf-test.js\nindex afa7770aabf6..cc16c8846215 100644\n--- a/src/test/__tests__/ReactDefaultPerf-test.js\n+++ b/src/test/__tests__/ReactDefaultPerf-test.js\n@@ -14,6 +14,7 @@\n describe('ReactDefaultPerf', function() {\n   var React;\n   var ReactDOM;\n+  var ReactDOMFeatureFlags;\n   var ReactDefaultPerf;\n   var ReactTestUtils;\n   var ReactDefaultPerfAnalysis;\n@@ -35,6 +36,7 @@ describe('ReactDefaultPerf', function() {\n \n     React = require('React');\n     ReactDOM = require('ReactDOM');\n+    ReactDOMFeatureFlags = require('ReactDOMFeatureFlags');\n     ReactDefaultPerf = require('ReactDefaultPerf');\n     ReactTestUtils = require('ReactTestUtils');\n     ReactDefaultPerfAnalysis = require('ReactDefaultPerfAnalysis');\n@@ -248,7 +250,9 @@ describe('ReactDefaultPerf', function() {\n     expect(console.table.argsForCall[0][0]).toEqual([{\n       'data-reactid': '',\n       type: 'set innerHTML',\n-      args: '{\"node\":\"<not serializable>\",\"children\":[],\"html\":null,\"text\":null}',\n+      args: ReactDOMFeatureFlags.useCreateElement ?\n+        '{\"node\":\"<not serializable>\",\"children\":[],\"html\":null,\"text\":null}' :\n+        '\"<div data-reactroot=\\\\\"\\\\\" data-reactid=\\\\\"1\\\\\">hey</div>\"',\n     }]);\n   });"}, {"role": "assistant", "content": "fix reactperf.printoperations test to work with createelement = false"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/events/SyntheticEvent.js b/packages/events/SyntheticEvent.js\nindex 4380bf09a8f4..beaaa5947e6c 100644\n--- a/packages/events/SyntheticEvent.js\n+++ b/packages/events/SyntheticEvent.js\n@@ -12,7 +12,6 @@ import invariant from 'fbjs/lib/invariant';\n import warning from 'fbjs/lib/warning';\n \n let didWarnForAddedNewProperty = false;\n-const isProxySupported = typeof Proxy === 'function';\n const EVENT_POOL_SIZE = 10;\n \n const shouldBeReleasedProperties = [\n@@ -234,6 +233,11 @@ SyntheticEvent.extend = function(Interface) {\n  * in which some Event properties are set to undefined (GH#10010)\n  */\n if (__DEV__) {\n+  const isProxySupported =\n+    typeof Proxy === 'function' &&\n+    // https://github.com/facebook/react/issues/12011\n+    !Object.isSealed(new Proxy({}, {}));\n+\n   if (isProxySupported) {\n     /*eslint-disable no-func-assign */\n     SyntheticEvent = new Proxy(SyntheticEvent, {"}, {"role": "assistant", "content": "add a workaround for incomplete proxy polyfill issue"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/utils/ReactFeatureFlags.js b/src/renderers/shared/utils/ReactFeatureFlags.js\nindex 5bd9651aed15..ce0a442c11bc 100644\n--- a/src/renderers/shared/utils/ReactFeatureFlags.js\n+++ b/src/renderers/shared/utils/ReactFeatureFlags.js\n@@ -18,6 +18,7 @@ var ReactFeatureFlags = {\n   // timeline profiles in Chrome, for example.\n   logTopLevelRenders: false,\n   prepareNewChildrenBeforeUnmountInStack: true,\n+  disableNewFiberFeatures: false,\n };\n \n module.exports = ReactFeatureFlags;"}, {"role": "assistant", "content": "add feature flag to disable fiber-specific features"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/_layouts/default.html b/docs/_layouts/default.html\nindex f013a7286c2d..dfafaa028ecd 100644\n--- a/docs/_layouts/default.html\n+++ b/docs/_layouts/default.html\n@@ -40,7 +40,7 @@\n           React\n         </a>\n         <ul class=\"nav-site\">\n-          <li><a href=\"/react/docs/getting-started.html\"{% if page.sectionid == 'docs' %} class=\"active\"{% endif %}>docs</a></li>\n+          <li><a href=\"/react/docs/getting-started.html\"{% if page.sectionid == 'docs' or page.sectionid == 'tips' %} class=\"active\"{% endif %}>docs</a></li>\n           <li><a href=\"/react/support.html\"{% if page.id == 'support' %} class=\"active\"{% endif %}>support</a></li>\n           <li><a href=\"/react/downloads.html\"{% if page.id == 'downloads' %} class=\"active\"{% endif %}>download</a></li>\n           <li><a href=\"/react/blog/\"{% if page.sectionid == 'blog' %} class=\"active\"{% endif %}>blog</a></li>"}, {"role": "assistant", "content": "set docs menu item to active when viewing a \u201ctips\u201d page"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberWorkLoop.js b/packages/react-reconciler/src/ReactFiberWorkLoop.js\nindex 1b3e274191d3..9ff0fbf3b7be 100644\n--- a/packages/react-reconciler/src/ReactFiberWorkLoop.js\n+++ b/packages/react-reconciler/src/ReactFiberWorkLoop.js\n@@ -90,6 +90,7 @@ import {\n   ConcurrentMode,\n   StrictLegacyMode,\n   StrictEffectsMode,\n+  NoStrictPassiveEffectsMode,\n } from './ReactTypeOfMode';\n import {\n   HostRoot,\n@@ -3538,11 +3539,19 @@ function recursivelyTraverseAndDoubleInvokeEffectsInDEV(\n }\n \n // Unconditionally disconnects and connects passive and layout effects.\n-function doubleInvokeEffectsOnFiber(root: FiberRoot, fiber: Fiber) {\n+function doubleInvokeEffectsOnFiber(\n+  root: FiberRoot,\n+  fiber: Fiber,\n+  shouldDoubleInvokePassiveEffects: boolean = true,\n+) {\n   disappearLayoutEffects(fiber);\n-  disconnectPassiveEffect(fiber);\n+  if (shouldDoubleInvokePassiveEffects) {\n+    disconnectPassiveEffect(fiber);\n+  }\n   reappearLayoutEffects(root, fiber.alternate, fiber, false);\n-  reconnectPassiveEffects(root, fiber, NoLanes, null, false);\n+  if (shouldDoubleInvokePassiveEffects) {\n+    reconnectPassiveEffects(root, fiber, NoLanes, null, false);\n+  }\n }\n \n function doubleInvokeEffectsInDEVIfNecessary(\n@@ -3559,7 +3568,11 @@ function doubleInvokeEffectsInDEVIfNecessary(\n     if (fiber.flags & PlacementDEV) {\n       setCurrentDebugFiberInDEV(fiber);\n       if (isInStrictMode) {\n-        doubleInvokeEffectsOnFiber(root, fiber);\n+        doubleInvokeEffectsOnFiber(\n+          root,\n+          fiber,\n+          (fiber.mode & NoStrictPassiveEffectsMode) === NoMode,\n+        );\n       }\n       resetCurrentDebugFiberInDEV();\n     } else {"}, {"role": "assistant", "content": "make temporary `nostrictpassiveeffects` option work with `usemodernstrictmode`"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/getting-started.ja-JP.md b/docs/docs/getting-started.ja-JP.md\nindex 0719cba3facd..7de3305a803a 100644\n--- a/docs/docs/getting-started.ja-JP.md\n+++ b/docs/docs/getting-started.ja-JP.md\n@@ -29,6 +29,7 @@ React \u3067\u306e\u30cf\u30c3\u30ad\u30f3\u30b0\u3092\u59cb\u3081\u308b\u306b\u3042\u305f\u308a\u3001\u4e00\u756a\u7c21\u5358\u306a\u3082\u306e\u3068\n <!DOCTYPE html>\n <html>\n   <head>\n+    <title>Hello React!</title>\n     <script src=\"build/react.js\"></script>\n     <script src=\"build/JSXTransformer.js\"></script>\n   </head>\ndiff --git a/docs/docs/getting-started.ko-KR.md b/docs/docs/getting-started.ko-KR.md\nindex 6b96ececf38d..a80be6bdaf19 100644\n--- a/docs/docs/getting-started.ko-KR.md\n+++ b/docs/docs/getting-started.ko-KR.md\n@@ -29,6 +29,7 @@ React\ub97c \uc2dc\uc791\ud558\ub294 \uac00\uc7a5 \ube60\ub978 \ubc29\ubc95\uc740 \ub2e4\uc74c\uc758 Hello World JSFiddle \uc608\n <!DOCTYPE html>\n <html>\n   <head>\n+    <title>Hello React!</title>\n     <script src=\"build/react.js\"></script>\n     <script src=\"build/JSXTransformer.js\"></script>\n   </head>\ndiff --git a/docs/docs/getting-started.zh-CN.md b/docs/docs/getting-started.zh-CN.md\nindex 70a5e84b2dec..7555ed34d94a 100644\n--- a/docs/docs/getting-started.zh-CN.md\n+++ b/docs/docs/getting-started.zh-CN.md\n@@ -29,6 +29,7 @@ redirect_from: \"docs/index-zh-CN.html\"\n <!DOCTYPE html>\n <html>\n   <head>\n+    <title>Hello React!</title>\n     <script src=\"build/react.js\"></script>\n     <script src=\"build/JSXTransformer.js\"></script>\n   </head>"}, {"role": "assistant", "content": "add site title to first code snippet of getting started"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-inline/webpack.config.js b/packages/react-devtools-inline/webpack.config.js\nindex 07f23f8ef34e..c53a61b61d41 100644\n--- a/packages/react-devtools-inline/webpack.config.js\n+++ b/packages/react-devtools-inline/webpack.config.js\n@@ -33,14 +33,6 @@ const babelOptions = {\n   ),\n };\n \n-const builtModulesDir = resolve(\n-  __dirname,\n-  '..',\n-  '..',\n-  'build',\n-  'oss-experimental',\n-);\n-\n module.exports = {\n   mode: __DEV__ ? 'development' : 'production',\n   devtool: __DEV__ ? 'eval-cheap-source-map' : 'source-map',\n@@ -57,10 +49,10 @@ module.exports = {\n     libraryTarget: 'commonjs2',\n   },\n   externals: {\n-    react: resolve(builtModulesDir, 'react'),\n-    'react-dom': resolve(builtModulesDir, 'react-dom/unstable_testing'),\n-    'react-is': resolve(builtModulesDir, 'react-is'),\n-    scheduler: resolve(builtModulesDir, 'scheduler'),\n+    react: 'react',\n+    'react-dom': 'react-dom',\n+    'react-is': 'react-is',\n+    scheduler: 'scheduler',\n   },\n   node: {\n     // source-maps package has a dependency on 'fs'"}, {"role": "assistant", "content": "revert changes to react-devtools-inline webpack config from pr #22760"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/tutorial.md b/docs/docs/tutorial.md\nindex 0e76f67fb27d..a2fb533f4430 100755\n--- a/docs/docs/tutorial.md\n+++ b/docs/docs/tutorial.md\n@@ -524,6 +524,8 @@ var CommentForm = React.createClass({\n \n React attaches event handlers to components using a camelCase naming convention. We attach `onChange` handlers to the two `<input>` elements. Now, as the user enters text into the `<input>` fields, the attached `onChange` callbacks are fired and the `state` of the component is modified. Subsequently, the rendered value of the `input` element will be updated to reflect the current component `state`.\n \n+(The astute reader may be surprised that these event handlers work as described, given that the method references are not explicitly bound to `this`. `React.createClass(...)` [automatically binds](/react/docs/interactivity-and-dynamic-uis.html#under-the-hood-autobinding-and-event-delegation) each method to its component instance, obviating the need for explicit binding.)\n+\n #### Submitting the form\n \n Let's make the form interactive. When the user submits the form, we should clear it, submit a request to the server, and refresh the list of comments. To start, let's listen for the form's submit event and clear it."}, {"role": "assistant", "content": "update tutorial with reference to autobinding docs"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/wrappers/ReactDOMOption.js b/src/renderers/dom/client/wrappers/ReactDOMOption.js\nindex a7e479d7e778..221f8fc00433 100644\n--- a/src/renderers/dom/client/wrappers/ReactDOMOption.js\n+++ b/src/renderers/dom/client/wrappers/ReactDOMOption.js\n@@ -39,7 +39,7 @@ var ReactDOMOption = {\n         selectParent = selectParent._nativeParent;\n       }\n \n-      if (selectParent._tag === 'select') {\n+      if (selectParent != null && selectParent._tag === 'select') {\n         selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n       }\n     }"}, {"role": "assistant", "content": "add a null check when checking for the native parent of an option element."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/server/ReactPartialRenderer.js b/src/renderers/shared/server/ReactPartialRenderer.js\nindex 148030a4a15f..c2ac0f75cd78 100644\n--- a/src/renderers/shared/server/ReactPartialRenderer.js\n+++ b/src/renderers/shared/server/ReactPartialRenderer.js\n@@ -12,7 +12,6 @@\n 'use strict';\n \n var DOMMarkupOperations = require('DOMMarkupOperations');\n-var {registrationNameModules} = require('EventPluginRegistry');\n var React = require('react');\n var ReactControlledValuePropTypes = require('ReactControlledValuePropTypes');\n \n@@ -272,27 +271,22 @@ function createOpenTagMarkup(\n     if (propValue == null) {\n       continue;\n     }\n-    if (!registrationNameModules.hasOwnProperty(propKey)) {\n-      if (propKey === STYLE) {\n-        propValue = createMarkupForStyles(propValue, instForDebug);\n-      }\n-      var markup = null;\n-      if (isCustomComponent(tagLowercase, props)) {\n-        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n-          markup = DOMMarkupOperations.createMarkupForCustomAttribute(\n-            propKey,\n-            propValue,\n-          );\n-        }\n-      } else {\n-        markup = DOMMarkupOperations.createMarkupForProperty(\n+    if (propKey === STYLE) {\n+      propValue = createMarkupForStyles(propValue, instForDebug);\n+    }\n+    var markup = null;\n+    if (isCustomComponent(tagLowercase, props)) {\n+      if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n+        markup = DOMMarkupOperations.createMarkupForCustomAttribute(\n           propKey,\n           propValue,\n         );\n       }\n-      if (markup) {\n-        ret += ' ' + markup;\n-      }\n+    } else {\n+      markup = DOMMarkupOperations.createMarkupForProperty(propKey, propValue);\n+    }\n+    if (markup) {\n+      ret += ' ' + markup;\n     }\n   }"}, {"role": "assistant", "content": "remove event namespace check from react-partial-renderer"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/07-forms.md b/docs/docs/07-forms.md\nindex af75d4b23d91..c452940d6a0b 100644\n--- a/docs/docs/07-forms.md\n+++ b/docs/docs/07-forms.md\n@@ -95,7 +95,7 @@ If you want to initialize the component with a non-empty value, you can supply a\n \n This example will function much like the **Uncontrolled Components** example above.\n \n-Likewise, `<input>` supports `defaultChecked` and `<select>` supports `defaultValue`.\n+Likewise, `<input type=\"checkbox\">` and `<input type=\"radio\">` support `defaultChecked`, and `<select>` supports `defaultValue`.\n \n > Note:\n >"}, {"role": "assistant", "content": "fix wording to make it more clear that checkbox  supports defaultchecked"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-test-renderer/src/ReactShallowRenderer.js b/packages/react-test-renderer/src/ReactShallowRenderer.js\nindex 54f671e6607d..ceaf1e748afe 100644\n--- a/packages/react-test-renderer/src/ReactShallowRenderer.js\n+++ b/packages/react-test-renderer/src/ReactShallowRenderer.js\n@@ -107,7 +107,11 @@ class ReactShallowRenderer {\n \n         this._mountClassComponent(element, this._context);\n       } else {\n-        this._rendered = element.type(element.props, this._context);\n+        this._rendered = element.type.call(\n+          undefined,\n+          element.props,\n+          this._context,\n+        );\n       }\n     }\n \ndiff --git a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\nindex b47495bca981..15eb862fcf51 100644\n--- a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n+++ b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n@@ -1407,4 +1407,15 @@ describe('ReactShallowRenderer', () => {\n     instance.setState(state => ({count: state.count + 1}));\n     expect(log).toEqual(['render']);\n   });\n+\n+  it('should not get this in a functional component', () => {\n+    const logs = [];\n+    function Foo() {\n+      logs.push(this);\n+      return <div>foo</div>;\n+    }\n+    const shallowRenderer = createRenderer();\n+    shallowRenderer.render(<Foo foo=\"bar\" />);\n+    expect(logs).toEqual([undefined]);\n+  });\n });"}, {"role": "assistant", "content": "fix this in a functional component for shallowrenderer"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/release/download-experimental-build.js b/scripts/release/download-experimental-build.js\nindex 97ba2d1bc32a..75080554c9d9 100755\n--- a/scripts/release/download-experimental-build.js\n+++ b/scripts/release/download-experimental-build.js\n@@ -3,7 +3,11 @@\n 'use strict';\n \n const {join} = require('path');\n-const {getPublicPackages, handleError} = require('./utils');\n+const {\n+  addDefaultParamValue,\n+  getPublicPackages,\n+  handleError,\n+} = require('./utils');\n \n const checkEnvironmentVariables = require('./shared-commands/check-environment-variables');\n const downloadBuildArtifacts = require('./shared-commands/download-build-artifacts');\n@@ -13,6 +17,8 @@ const printSummary = require('./download-experimental-build-commands/print-summa\n \n const run = async () => {\n   try {\n+    addDefaultParamValue('-r', '--releaseChannel', 'experimental');\n+\n     const params = parseParams();\n     params.cwd = join(__dirname, '..', '..');\n     params.packages = await getPublicPackages(true);\ndiff --git a/scripts/release/utils.js b/scripts/release/utils.js\nindex 52731d4376e0..f49471ad76f5 100644\n--- a/scripts/release/utils.js\n+++ b/scripts/release/utils.js\n@@ -17,6 +17,21 @@ const logger = createLogger({\n   storagePath: join(__dirname, '.progress-estimator'),\n });\n \n+const addDefaultParamValue = (shortName, longName, defaultValue) => {\n+  let found = false;\n+  for (let i = 0; i < process.argv.length; i++) {\n+    const current = process.argv[i];\n+    if (current === shortName || current.startsWith(`${longName}=`)) {\n+      found = true;\n+      break;\n+    }\n+  }\n+\n+  if (!found) {\n+    process.argv.push(shortName, defaultValue);\n+  }\n+};\n+\n const confirm = async message => {\n   const confirmation = await prompt(theme`\\n{caution ${message}} (y/N) `);\n   prompt.done();\n@@ -249,6 +264,7 @@ const updateVersionsForNext = async (cwd, reactVersion, version) => {\n };\n \n module.exports = {\n+  addDefaultParamValue,\n   confirm,\n   execRead,\n   getArtifactsList,"}, {"role": "assistant", "content": "set default release channel for download-experimental-build script"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/warnings/dont-call-proptypes.md b/docs/warnings/dont-call-proptypes.md\nindex bc468689af3b..05da5c04c73e 100644\n--- a/docs/warnings/dont-call-proptypes.md\n+++ b/docs/warnings/dont-call-proptypes.md\n@@ -5,7 +5,7 @@ permalink: warnings/dont-call-proptypes.html\n ---\n \n > Note:\n-> `React.PropTypes` is deprecated as of React v15.5. Please use [the `prop-types` library instead](https://github.com/aackerman/PropTypes).\n+> `React.PropTypes` is deprecated as of React v15.5. Please use [the `prop-types` library instead](https://github.com/reactjs/prop-types).\n \n In a future major release of React, the code that implements PropType validation functions will be stripped in production. Once this happens, any code that calls these functions manually (that isn't stripped in production) will throw an error."}, {"role": "assistant", "content": "fix the proptypes deprecation warning url on the \"don't call proptypes warning\" doc page"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-noop-renderer/package.json b/packages/react-noop-renderer/package.json\nindex a7f8435d9a84..f3f82b6fd2e7 100644\n--- a/packages/react-noop-renderer/package.json\n+++ b/packages/react-noop-renderer/package.json\n@@ -10,7 +10,7 @@\n     \"object-assign\": \"^4.1.1\",\n     \"prop-types\": \"^15.6.2\",\n     \"regenerator-runtime\": \"^0.11.0\",\n-    \"react-reconciler\": \"* || 0.15.0-alpha.0\"\n+    \"react-reconciler\": \"*\"\n   },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0 || 16.6.0-alpha.0\""}, {"role": "assistant", "content": "revert \"updating dependencies for react-noop-renderer\""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-events/src/dom/Press.js b/packages/react-events/src/dom/Press.js\nindex ce8b745254c6..267240776af6 100644\n--- a/packages/react-events/src/dom/Press.js\n+++ b/packages/react-events/src/dom/Press.js\n@@ -635,6 +635,11 @@ const pressResponderImpl = {\n         if (isFunction(onPress) && isScreenReaderVirtualClick(nativeEvent)) {\n           state.pointerType = 'keyboard';\n           state.pressTarget = event.responderTarget;\n+          const preventDefault = props.preventDefault;\n+\n+          if (preventDefault !== false) {\n+            nativeEvent.preventDefault();\n+          }\n           dispatchEvent(event, onPress, context, state, 'press', DiscreteEvent);\n         }\n         break;\ndiff --git a/packages/react-events/src/dom/__tests__/Press-test.internal.js b/packages/react-events/src/dom/__tests__/Press-test.internal.js\nindex 159a039bbc69..5e155f5ad839 100644\n--- a/packages/react-events/src/dom/__tests__/Press-test.internal.js\n+++ b/packages/react-events/src/dom/__tests__/Press-test.internal.js\n@@ -423,7 +423,9 @@ describe.each(environmentTable)('Press responder', hasPointerEvents => {\n \n     it('is called once after virtual screen reader \"click\" event', () => {\n       const target = createEventTarget(ref.current);\n-      target.virtualclick();\n+      const preventDefault = jest.fn();\n+      target.virtualclick({preventDefault});\n+      expect(preventDefault).toBeCalled();\n       expect(onPress).toHaveBeenCalledTimes(1);\n       expect(onPress).toHaveBeenCalledWith(\n         expect.objectContaining({"}, {"role": "assistant", "content": "ensure screen reader virtual clicks support preventdefault"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/utils/ReactErrorUtils.js b/src/renderers/shared/utils/ReactErrorUtils.js\nindex c2cd671767e2..f53bdddc5ad9 100644\n--- a/src/renderers/shared/utils/ReactErrorUtils.js\n+++ b/src/renderers/shared/utils/ReactErrorUtils.js\n@@ -26,7 +26,7 @@ let caughtError = null;\n const ReactErrorUtils = {\n   invokeGuardedCallback: function<A, B, C, D, E, F, Context>(\n     name: string | null,\n-    func: (A, B, C, D, E, F) => void,\n+    func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n     context: Context,\n     a: A,\n     b: B,\n@@ -55,7 +55,7 @@ const ReactErrorUtils = {\n    */\n   invokeGuardedCallbackAndCatchFirstError: function<A, B, C, D, E, F, Context>(\n     name: string | null,\n-    func: (A, B, C, D, E, F) => void,\n+    func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n     context: Context,\n     a: A,\n     b: B,"}, {"role": "assistant", "content": "convert shorthanded syntax for function flow types to expanded form"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/README.md b/README.md\nindex 1cf0009202df..808ad63cf3b4 100644\n--- a/README.md\n+++ b/README.md\n@@ -40,10 +40,8 @@ You can improve it by sending pull requests to [this repository](https://github.\n We have several examples [on the website](https://reactjs.org/). Here is the first one to get you started:\n \n ```jsx\n-class HelloMessage extends React.Component {\n-  render() {\n-    return <div>Hello {this.props.name}</div>;\n-  }\n+function HelloMessage({ name }) {\n+  return <div>Hello {name}</div>;\n }\n \n ReactDOM.render("}, {"role": "assistant", "content": "use functional component as a first example in readme"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/_posts/2017-07-26-error-handling-in-react-16.md b/docs/_posts/2017-07-26-error-handling-in-react-16.md\nindex 24cdb58e7f47..d739c53bc0dc 100644\n--- a/docs/_posts/2017-07-26-error-handling-in-react-16.md\n+++ b/docs/_posts/2017-07-26-error-handling-in-react-16.md\n@@ -98,3 +98,5 @@ Error boundaries preserve the declarative nature of React, and behave as you wou\n ## Naming Changes from React 15\n \n React 15 included a very limited support for error boundaries under a different method name: `unstable_handleError`. This method no longer works, and you will need to change it to `componentDidCatch` in your code starting from the first 16 beta release.\n+\n+For this change, we\u2019ve provided [a codemod](https://github.com/reactjs/react-codemod#error-boundaries) to automatically migrate your code."}, {"role": "assistant", "content": "add a link for the error boundaries codemod into the blog post"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/shared/event/eventPlugins/ResponderEventPlugin.js b/packages/shared/event/plugins/ResponderEventPlugin.js\nsimilarity index 100%\nrename from packages/shared/event/eventPlugins/ResponderEventPlugin.js\nrename to packages/shared/event/plugins/ResponderEventPlugin.js\ndiff --git a/packages/shared/event/eventPlugins/ResponderSyntheticEvent.js b/packages/shared/event/plugins/ResponderSyntheticEvent.js\nsimilarity index 100%\nrename from packages/shared/event/eventPlugins/ResponderSyntheticEvent.js\nrename to packages/shared/event/plugins/ResponderSyntheticEvent.js\ndiff --git a/packages/shared/event/eventPlugins/ResponderTouchHistoryStore.js b/packages/shared/event/plugins/ResponderTouchHistoryStore.js\nsimilarity index 100%\nrename from packages/shared/event/eventPlugins/ResponderTouchHistoryStore.js\nrename to packages/shared/event/plugins/ResponderTouchHistoryStore.js\ndiff --git a/packages/shared/event/eventPlugins/TouchHistoryMath.js b/packages/shared/event/plugins/TouchHistoryMath.js\nsimilarity index 100%\nrename from packages/shared/event/eventPlugins/TouchHistoryMath.js\nrename to packages/shared/event/plugins/TouchHistoryMath.js\ndiff --git a/packages/shared/event/eventPlugins/__tests__/ResponderEventPlugin-test.js b/packages/shared/event/plugins/__tests__/ResponderEventPlugin-test.js\nsimilarity index 100%\nrename from packages/shared/event/eventPlugins/__tests__/ResponderEventPlugin-test.js\nrename to packages/shared/event/plugins/__tests__/ResponderEventPlugin-test.js"}, {"role": "assistant", "content": "rename shared/event/eventplugins -> shared/event/plugins"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/classic/class/ReactClass.js b/src/classic/class/ReactClass.js\nindex 20fac2a0a4d8..7382bc9f4660 100644\n--- a/src/classic/class/ReactClass.js\n+++ b/src/classic/class/ReactClass.js\n@@ -642,6 +642,7 @@ function bindAutoBindMethod(component, method) {\n     boundMethod.__reactBoundArguments = null;\n     var componentName = component.constructor.displayName;\n     var _bind = boundMethod.bind;\n+    /* eslint-disable block-scoped-var, no-undef */\n     boundMethod.bind = function(newThis, ...args) {\n       // User is trying to bind() an autobound method; we effectively will\n       // ignore the value of \"this\" that the user is trying to use, so\n@@ -666,6 +667,7 @@ function bindAutoBindMethod(component, method) {\n       reboundMethod.__reactBoundMethod = method;\n       reboundMethod.__reactBoundArguments = args;\n       return reboundMethod;\n+      /* eslint-enable */\n     };\n   }\n   return boundMethod;"}, {"role": "assistant", "content": "disable a couple rules since rest args aren't processed right"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/devtools/views/Components/OwnersStack.js b/src/devtools/views/Components/OwnersStack.js\nindex 3e98b2e59442..e252c6c9af9d 100644\n--- a/src/devtools/views/Components/OwnersStack.js\n+++ b/src/devtools/views/Components/OwnersStack.js\n@@ -92,6 +92,20 @@ function ElementsDropdown({\n   const store = useContext(StoreContext);\n   const dispatch = useContext(TreeDispatcherContext);\n \n+  const menuItems = [];\n+  for (let index = ownerStack.length - 1; index >= 0; index--) {\n+    const id = ownerStack[index];\n+    menuItems.push(\n+      <MenuItem\n+        key={id}\n+        className={styles.Component}\n+        onSelect={() => dispatch({ type: 'SELECT_OWNER', payload: id })}\n+      >\n+        {((store.getElementByID(id): any): Element).displayName}\n+      </MenuItem>\n+    );\n+  }\n+\n   return (\n     <Menu>\n       <MenuButton className={styles.MenuButton}>\n@@ -101,17 +115,7 @@ function ElementsDropdown({\n           </span>\n         </Tooltip>\n       </MenuButton>\n-      <MenuList className={styles.Modal}>\n-        {ownerStack.map((id, index) => (\n-          <MenuItem\n-            key={id}\n-            className={styles.Component}\n-            onSelect={() => dispatch({ type: 'SELECT_OWNER', payload: id })}\n-          >\n-            {((store.getElementByID(id): any): Element).displayName}\n-          </MenuItem>\n-        ))}\n-      </MenuList>\n+      <MenuList className={styles.Modal}>{menuItems}</MenuList>\n     </Menu>\n   );\n }"}, {"role": "assistant", "content": "reverse direction of menu items within drop-down owners list"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/eventPlugins/ChangeEventPlugin.js b/src/eventPlugins/ChangeEventPlugin.js\nindex ad8fa70f1202..61a9324d17f7 100644\n--- a/src/eventPlugins/ChangeEventPlugin.js\n+++ b/src/eventPlugins/ChangeEventPlugin.js\n@@ -22,6 +22,7 @@ var EventConstants = require('EventConstants');\n var EventPluginHub = require('EventPluginHub');\n var EventPropagators = require('EventPropagators');\n var ExecutionEnvironment = require('ExecutionEnvironment');\n+var ReactUpdates = require('ReactUpdates');\n var SyntheticEvent = require('SyntheticEvent');\n \n var isEventSupported = require('isEventSupported');\n@@ -73,10 +74,21 @@ function manualDispatchChangeEvent(nativeEvent) {\n   );\n   EventPropagators.accumulateTwoPhaseDispatches(event);\n \n-  // If change bubbled, we'd just bind to it like all the other events\n-  // and have it go through ReactEventTopLevelCallback. Since it doesn't, we\n-  // manually listen for the change event and so we have to enqueue and\n+  // If change and propertychange bubbled, we'd just bind to it like all the\n+  // other events and have it go through ReactEventTopLevelCallback. Since it\n+  // doesn't, we manually listen for the events and so we have to enqueue and\n   // process the abstract event manually.\n+  //\n+  // Batching is necessary here in order to ensure that all event handlers run\n+  // before the next rerender (including event handlers attached to ancestor\n+  // elements instead of directly on the input). Without this, controlled\n+  // components don't work properly in conjunction with event bubbling because\n+  // the component is rerendered and the value reverted before all the event\n+  // handlers can run. See https://github.com/facebook/react/issues/708.\n+  ReactUpdates.batchedUpdates(runEventInBatch, event);\n+}\n+\n+function runEventInBatch(event) {\n   EventPluginHub.enqueueEvents(event);\n   EventPluginHub.processEventQueue();\n }"}, {"role": "assistant", "content": "make controlled components and bubbling work in ie"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/devtools/store.js b/src/devtools/store.js\nindex 66e84b578c10..d5f3a45b2521 100644\n--- a/src/devtools/store.js\n+++ b/src/devtools/store.js\n@@ -430,9 +430,10 @@ export default class Store extends EventEmitter {\n   toggleIsCollapsed(id: number, isCollapsed: boolean): void {\n     const element = this.getElementByID(id);\n     if (element !== null) {\n+      const oldWeight = element.isCollapsed ? 1 : element.weight;\n       element.isCollapsed = isCollapsed;\n-\n-      const weightDelta = isCollapsed ? 1 - element.weight : element.weight - 1;\n+      const newWeight = element.isCollapsed ? 1 : element.weight;\n+      const weightDelta = newWeight - oldWeight;\n \n       this._weightAcrossRoots += weightDelta;"}, {"role": "assistant", "content": "rewrote weightdelta calculation to be more readable based on pr feedback"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/shared/utils/ReactErrorUtils.js b/src/shared/utils/ReactErrorUtils.js\nindex d55f82784099..4d1ee4ad7a42 100644\n--- a/src/shared/utils/ReactErrorUtils.js\n+++ b/src/shared/utils/ReactErrorUtils.js\n@@ -67,11 +67,12 @@ if (__DEV__) {\n     var fakeNode = document.createElement('react');\n     ReactErrorUtils.invokeGuardedCallback = function(name, func, a, b) {\n       var boundFunc = func.bind(null, a, b);\n-      fakeNode.addEventListener(name, boundFunc, false);\n+      var evtType = `react-${name}`;\n+      fakeNode.addEventListener(evtType, boundFunc, false);\n       var evt = document.createEvent('Event');\n-      evt.initEvent(name, false, false);\n+      evt.initEvent(evtType, false, false);\n       fakeNode.dispatchEvent(evt);\n-      fakeNode.removeEventListener(name, boundFunc, false);\n+      fakeNode.removeEventListener(evtType, boundFunc, false);\n     };\n   }\n }"}, {"role": "assistant", "content": "use a custom event type for our event dispatching in reacterrorutils"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-test-renderer/src/ReactShallowRenderer.js b/packages/react-test-renderer/src/ReactShallowRenderer.js\nindex 131db2d41751..49be844e8be8 100644\n--- a/packages/react-test-renderer/src/ReactShallowRenderer.js\n+++ b/packages/react-test-renderer/src/ReactShallowRenderer.js\n@@ -186,9 +186,8 @@ class ReactShallowRenderer {\n           this._instance.UNSAFE_componentWillReceiveProps(props, context);\n         }\n       }\n-\n-      this._updateStateFromStaticLifecycle(props);\n     }\n+    this._updateStateFromStaticLifecycle(props);\n \n     // Read state after cWRP in case it calls setState\n     const state = this._newState || oldState;\ndiff --git a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\nindex 7e60bde00367..59ea0d9c690b 100644\n--- a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n+++ b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n@@ -94,7 +94,7 @@ describe('ReactShallowRenderer', () => {\n     const instance = shallowRenderer.getMountedInstance();\n     instance.setState({});\n \n-    expect(logs).toEqual(['shouldComponentUpdate']);\n+    expect(logs).toEqual(['getDerivedStateFromProps', 'shouldComponentUpdate']);\n \n     logs.splice(0);"}, {"role": "assistant", "content": "call getderivedstatefromprops even for setstate of shallowrenderer"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberRoot.new.js b/packages/react-reconciler/src/ReactFiberRoot.new.js\nindex 90a1809e4387..84e487c24875 100644\n--- a/packages/react-reconciler/src/ReactFiberRoot.new.js\n+++ b/packages/react-reconciler/src/ReactFiberRoot.new.js\n@@ -10,7 +10,7 @@\n import type {FiberRoot, SuspenseHydrationCallbacks} from './ReactInternalTypes';\n import type {RootTag} from './ReactRootTags';\n \n-import {noTimeout, supportsHydration} from './ReactFiberHostConfig';\n+import {noTimeout} from './ReactFiberHostConfig';\n import {createHostRootFiber} from './ReactFiber.new';\n import {\n   NoLane,\n@@ -59,10 +59,6 @@ function FiberRootNode(containerInfo, tag, hydrate) {\n     this.pooledCacheLanes = NoLanes;\n   }\n \n-  if (supportsHydration) {\n-    this.mutableSourceEagerHydrationData = null;\n-  }\n-\n   if (enableSuspenseCallback) {\n     this.hydrationCallbacks = null;\n   }\ndiff --git a/packages/react-reconciler/src/ReactFiberRoot.old.js b/packages/react-reconciler/src/ReactFiberRoot.old.js\nindex dc1ec23ae159..5750e21ddeca 100644\n--- a/packages/react-reconciler/src/ReactFiberRoot.old.js\n+++ b/packages/react-reconciler/src/ReactFiberRoot.old.js\n@@ -10,7 +10,7 @@\n import type {FiberRoot, SuspenseHydrationCallbacks} from './ReactInternalTypes';\n import type {RootTag} from './ReactRootTags';\n \n-import {noTimeout, supportsHydration} from './ReactFiberHostConfig';\n+import {noTimeout} from './ReactFiberHostConfig';\n import {createHostRootFiber} from './ReactFiber.old';\n import {\n   NoLane,\n@@ -59,10 +59,6 @@ function FiberRootNode(containerInfo, tag, hydrate) {\n     this.pooledCacheLanes = NoLanes;\n   }\n \n-  if (supportsHydration) {\n-    this.mutableSourceEagerHydrationData = null;\n-  }\n-\n   if (enableSuspenseCallback) {\n     this.hydrationCallbacks = null;\n   }"}, {"role": "assistant", "content": "remove fiber fields that were used for hydrating usemutablesource"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/classic/class/ReactClass.js b/src/classic/class/ReactClass.js\nindex f02a919ef009..28595325b2b9 100644\n--- a/src/classic/class/ReactClass.js\n+++ b/src/classic/class/ReactClass.js\n@@ -714,6 +714,9 @@ var typeDeprecationDescriptor = {\n       displayName,\n       displayName\n     );\n+    Object.defineProperty(this, 'type', {\n+      value: this\n+    });\n     return this;\n   }\n };\ndiff --git a/src/classic/class/__tests__/ReactClass-test.js b/src/classic/class/__tests__/ReactClass-test.js\nindex 0fe36f968512..563171a0f4bd 100644\n--- a/src/classic/class/__tests__/ReactClass-test.js\n+++ b/src/classic/class/__tests__/ReactClass-test.js\n@@ -50,12 +50,27 @@ describe('ReactClass-spec', function() {\n         return <div />;\n       }\n     });\n+    var SecondTestComponent = React.createClass({\n+      render: function() {\n+        return <div />;\n+      }\n+    });\n     expect(TestComponent.type).toBe(TestComponent);\n     expect(console.warn.argsForCall.length).toBe(1);\n     expect(console.warn.argsForCall[0][0]).toBe(\n       'Warning: TestComponent.type is deprecated. Use TestComponent ' +\n       'directly to access the class.'\n     );\n+    // Warn once per class\n+    expect(SecondTestComponent.type).toBe(SecondTestComponent);\n+    expect(console.warn.argsForCall.length).toBe(2);\n+    expect(console.warn.argsForCall[1][0]).toBe(\n+      'Warning: SecondTestComponent.type is deprecated. Use ' +\n+      'SecondTestComponent directly to access the class.'\n+    );\n+    // Not again\n+    expect(TestComponent.type).toBe(TestComponent);\n+    expect(console.warn.argsForCall.length).toBe(2);\n   });\n \n   it('should copy prop types onto the Constructor', function() {"}, {"role": "assistant", "content": "warn only once for each class when accessing .type"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/extractCode.js b/docs/extractCode.js\nindex 8728776b97a4..b5714e3cb0f3 100644\n--- a/docs/extractCode.js\n+++ b/docs/extractCode.js\n@@ -16,24 +16,21 @@ function main(dest, filenames) {\n     if (!dest) {\n \tthrow new Error('no dest provided');\n     }\n-    console.log(filenames);\n-    \n     filenames.map(function (filename) {\n-\t\tvar content = fs.readFileSync(filename).toString('utf8');\n-\t\tvar codeSamples = content.match(CODE_SAMPLE);\n+\tvar content = fs.readFileSync(filename).toString('utf8');\n+\tvar codeSamples = content.match(CODE_SAMPLE);\n \n-\t\t\n-\t\tcodeSamples.map(function (codeSample) {\n-\t\t    // Do a little jank preprocessing\n-\t\t    codeSample = codeSample.replace('<!--', '//').replace(' -->', '');\n-\t\t    var extracted = codeSample.match(PARTS);\n-\t\t    if (!extracted) {\n-\t\t\tthrow new Error('Code sample did not match correct format in ' + filename + ': ' + truncate(codeSample));\n-\t\t    }\n-\t\t    var filename = extracted[1];\n-\t\t    var content = extracted[2].replace(/\\*\\*/g, '');\n-\t\t    fs.writeFileSync(argv.dest + '/' + filename, content);\n-\t\t});\n+\tcodeSamples.map(function (codeSample) {\n+\t    // Do a little jank preprocessing\n+\t    codeSample = codeSample.replace('<!--', '//').replace(' -->', '');\n+\t    var extracted = codeSample.match(PARTS);\n+\t    if (!extracted) {\n+\t\tthrow new Error('Code sample did not match correct format in ' + filename + ': ' + truncate(codeSample));\n+\t    }\n+\t    var filename = extracted[1];\n+\t    var content = extracted[2].replace(/\\*\\*/g, '');\n+\t    fs.writeFileSync(argv.dest + '/' + filename, content);\n+\t});\n     });\n }"}, {"role": "assistant", "content": "undo changes to extractcode, using grunt task instead"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/.flowconfig b/.flowconfig\nindex 7e631856fa2d..94ffcb54a2ef 100644\n--- a/.flowconfig\n+++ b/.flowconfig\n@@ -1,5 +1,6 @@\n [ignore]\n \n+.*/examples/.*\n .*/build/.*\n .*/node_modules/y18n/.*\n .*/__mocks__/.*\n@@ -20,6 +21,8 @@ module.system=haste\n esproposal.class_static_fields=enable\n esproposal.class_instance_fields=enable\n \n+experimental.strict_type_args=true\n+\n munge_underscores=false\n \n suppress_type=$FlowIssue\n@@ -31,4 +34,4 @@ suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowIssue\\\\((\\\\(>=0\\\\.\\\\(2[0-4]\\\\|1[0-9]\\\\|[0-9\n suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowFixedInNextDeploy\n \n [version]\n-^0.24.0\n+^0.26.0\ndiff --git a/package.json b/package.json\nindex c8d41013c8e8..72adfbb42835 100644\n--- a/package.json\n+++ b/package.json\n@@ -43,7 +43,7 @@\n     \"eslint-plugin-react-internal\": \"file:eslint-rules\",\n     \"fbjs\": \"^0.8.1\",\n     \"fbjs-scripts\": \"^0.6.0\",\n-    \"flow-bin\": \"^0.24.0\",\n+    \"flow-bin\": \"^0.26.0\",\n     \"glob\": \"^6.0.1\",\n     \"grunt\": \"^0.4.5\",\n     \"grunt-cli\": \"^0.1.13\","}, {"role": "assistant", "content": "upgrade to flow 0.26 & match internal config with strict args"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/babel/transform-object-assign.js b/scripts/babel/transform-object-assign.js\nindex 9b20675f39f1..e2724f89e48e 100644\n--- a/scripts/babel/transform-object-assign.js\n+++ b/scripts/babel/transform-object-assign.js\n@@ -28,7 +28,7 @@ module.exports = function autoImporter(babel) {\n \n     visitor: {\n       CallExpression: function(path, file) {\n-        if (file.filename.indexOf('shared/assign') !== -1) {\n+        if (/shared(\\/|\\\\)assign/.test(file.filename)) {\n           // Don't replace Object.assign if we're transforming shared/assign\n           return;\n         }\n@@ -40,7 +40,7 @@ module.exports = function autoImporter(babel) {\n       },\n \n       MemberExpression: function(path, file) {\n-        if (file.filename.indexOf('shared/assign') !== -1) {\n+        if (/shared(\\/|\\\\)assign/.test(file.filename)) {\n           // Don't replace Object.assign if we're transforming shared/assign\n           return;\n         }"}, {"role": "assistant", "content": "fix file path separator compatibility in scripts/babel"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ui/dom/HTMLDOMPropertyConfig.js b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\nindex b814f3b61193..de1fa50b3050 100644\n--- a/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n@@ -181,7 +181,9 @@ var HTMLDOMPropertyConfig = {\n     // property is supported for OpenGraph in meta tags.\n     property: null,\n     // IE-only attribute that controls focus behavior\n-    unselectable: MUST_USE_ATTRIBUTE\n+    unselectable: MUST_USE_ATTRIBUTE,\n+    webkitdirectory: null,\n+    nwdirectory: null\n   },\n   DOMAttributeNames: {\n     acceptCharset: 'accept-charset',"}, {"role": "assistant", "content": "add webkitdirectory and nwdirectory attributes for input file"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/devtools/build-and-test.js b/scripts/devtools/build-and-test.js\nindex cfd41bd809ae..cfa7a7cfd1d6 100755\n--- a/scripts/devtools/build-and-test.js\n+++ b/scripts/devtools/build-and-test.js\n@@ -93,6 +93,9 @@ async function buildAndTestExtensions() {\n \n async function buildAndTestStandalonePackage() {\n   const corePackagePath = join(ROOT_PATH, 'packages', 'react-devtools-core');\n+  const corePackageDest = join(corePackagePath, 'dist');\n+\n+  await exec(`rm -rf ${corePackageDest}`);\n   const buildCorePromise = exec('yarn build', {cwd: corePackagePath});\n \n   await logger(\n@@ -133,6 +136,9 @@ async function buildAndTestInlinePackage() {\n     'packages',\n     'react-devtools-inline'\n   );\n+  const inlinePackageDest = join(inlinePackagePath, 'dist');\n+\n+  await exec(`rm -rf ${inlinePackageDest}`);\n   const buildPromise = exec('yarn build', {cwd: inlinePackagePath});\n \n   await logger("}, {"role": "assistant", "content": "remove dist folder in release script for standalone and inline before building"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/isomorphic/ReactPerf.js b/src/isomorphic/ReactPerf.js\nindex f89de6764c1a..4c631a7f13e4 100644\n--- a/src/isomorphic/ReactPerf.js\n+++ b/src/isomorphic/ReactPerf.js\n@@ -236,17 +236,11 @@ function getWasted(flushHistory = getFlushHistory()) {\n \n function getOperations(flushHistory = getFlushHistory()) {\n   var stats = [];\n-\n   flushHistory.forEach((flush, flushIndex) => {\n     var {operations, treeSnapshot} = flush;\n-\n     operations.forEach(operation => {\n       var {instanceID, type, payload} = operation;\n-      var {displayName, ownerID} = instanceID !== 0 ?\n-        treeSnapshot[instanceID] :\n-        // Empty components may appear in some operation logs.\n-        {displayName: '#empty', ownerID: null};\n-\n+      var {displayName, ownerID} = treeSnapshot[instanceID];\n       var owner = treeSnapshot[ownerID];\n       var key = (owner ? owner.displayName + ' > ' : '') + displayName;"}, {"role": "assistant", "content": "remove the protective clause that is now unnecessary"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-client/src/forks/ReactFlightClientConfig.dom-legacy.js b/packages/react-client/src/forks/ReactFlightClientConfig.dom-legacy.js\nindex 212290670bd5..0ad00d57cdac 100644\n--- a/packages/react-client/src/forks/ReactFlightClientConfig.dom-legacy.js\n+++ b/packages/react-client/src/forks/ReactFlightClientConfig.dom-legacy.js\n@@ -8,6 +8,16 @@\n  */\n \n export * from 'react-client/src/ReactFlightClientConfigBrowser';\n-export * from 'react-server-dom-webpack/src/ReactFlightClientConfigWebpackBundler';\n export * from 'react-dom-bindings/src/shared/ReactFlightClientConfigDOM';\n+\n+export type Response = any;\n+export opaque type SSRManifest = mixed;\n+export opaque type ServerManifest = mixed;\n+export opaque type ServerReferenceId = string;\n+export opaque type ClientReferenceMetadata = mixed;\n+export opaque type ClientReference<T> = mixed; // eslint-disable-line no-unused-vars\n+export const resolveClientReference: any = null;\n+export const resolveServerReference: any = null;\n+export const preloadModule: any = null;\n+export const requireModule: any = null;\n export const usedWithSSR = true;\ndiff --git a/packages/react-server/src/forks/ReactFlightServerConfig.dom-legacy.js b/packages/react-server/src/forks/ReactFlightServerConfig.dom-legacy.js\nindex 212bd8c89a66..2e7273d82d69 100644\n--- a/packages/react-server/src/forks/ReactFlightServerConfig.dom-legacy.js\n+++ b/packages/react-server/src/forks/ReactFlightServerConfig.dom-legacy.js\n@@ -9,7 +9,7 @@\n \n import type {Request} from 'react-server/src/ReactFlightServer';\n \n-export * from 'react-server-dom-webpack/src/ReactFlightServerConfigWebpackBundler';\n+export * from '../ReactFlightServerConfigBundlerCustom';\n export * from 'react-dom-bindings/src/server/ReactFlightServerConfigDOM';\n \n export const supportsRequestStorage = false;"}, {"role": "assistant", "content": "use opaque config for flight in `dom-legacy` renderer"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/devtools/views/Profiler/SidebarInteractions.js b/packages/react-devtools-shared/src/devtools/views/Profiler/SidebarInteractions.js\nindex 6e9819291649..21787d5fb1f5 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Profiler/SidebarInteractions.js\n+++ b/packages/react-devtools-shared/src/devtools/views/Profiler/SidebarInteractions.js\n@@ -86,7 +86,9 @@ export default function SidebarInteractions(_: Props) {\n   return (\n     <Fragment>\n       <div className={styles.Toolbar}>\n-        <div className={styles.Name}>{interaction.name}</div>\n+        <div className={styles.Name} title={interaction.name}>\n+          {interaction.name}\n+        </div>\n       </div>\n       <div className={styles.Content}>\n         <div className={styles.Commits}>Commits:</div>"}, {"role": "assistant", "content": "add tooltip to interaction name in devtools profiler sidebar"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/README.md b/README.md\nindex 2bba0361d328..44bbf811ab2d 100644\n--- a/README.md\n+++ b/README.md\n@@ -12,7 +12,7 @@ React is a JavaScript library for building user interfaces.\n \n We have several examples [on the website](https://facebook.github.io/react/). Here is the first one to get you started:\n \n-```js\n+```jsx\n class HelloMessage extends React.Component {\n   render() {\n     return <div>Hello {this.props.name}</div>;"}, {"role": "assistant", "content": "update readme.md to use jsx for syntax highlighting"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/git/pre-commit b/scripts/git/pre-commit\nindex 70118a96a754..3c405899301c 100755\n--- a/scripts/git/pre-commit\n+++ b/scripts/git/pre-commit\n@@ -2,14 +2,6 @@\n #\n # To enable this hook, symlink or copy this file to .git/hooks/pre-commit.\n \n-if git rev-parse --verify HEAD >/dev/null 2>&1\n-then\n-\tagainst=HEAD\n-else\n-\t# Initial commit: diff against an empty tree object\n-\tagainst=4b825dc642cb6eb9a060e54bf8d69288fbee4904\n-fi\n-\n # Redirect output to stderr.\n exec 1>&2"}, {"role": "assistant", "content": "remove leftover env variable logic in pre-commit hook"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/shared/__tests__/ReactSymbols-test.internal.js b/packages/shared/__tests__/ReactSymbols-test.internal.js\nnew file mode 100644\nindex 000000000000..12f12a5d417e\n--- /dev/null\n+++ b/packages/shared/__tests__/ReactSymbols-test.internal.js\n@@ -0,0 +1,39 @@\n+/**\n+ * Copyright (c) 2013-present, Facebook, Inc.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @emails react-core\n+ */\n+'use strict';\n+\n+describe('ReactSymbols', () => {\n+  beforeEach(() => jest.resetModules());\n+\n+  const expectToBeUnique = keyValuePairs => {\n+    const map = new Map();\n+    keyValuePairs.forEach(([key, value]) => {\n+      if (map.has(value)) {\n+        throw Error(\n+          `${key} value ${value.toString()} is the same as ${map.get(value)}.`,\n+        );\n+      }\n+      map.set(value, key);\n+    });\n+  };\n+\n+  it('Symbol values should be unique', () => {\n+    expectToBeUnique(Object.entries(require('shared/ReactSymbols')));\n+  });\n+\n+  it('numeric values should be unique', () => {\n+    const originalSymbolFor = global.Symbol.for;\n+    global.Symbol.for = null;\n+    try {\n+      expectToBeUnique(Object.entries(require('shared/ReactSymbols')));\n+    } finally {\n+      global.Symbol.for = originalSymbolFor;\n+    }\n+  });\n+});"}, {"role": "assistant", "content": "add test to ensure no duplicate values in reactsymbols"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/addons/transitions/ReactCSSTransitionGroup.js b/src/addons/transitions/ReactCSSTransitionGroup.js\nindex 069935843365..d67a5de53053 100644\n--- a/src/addons/transitions/ReactCSSTransitionGroup.js\n+++ b/src/addons/transitions/ReactCSSTransitionGroup.js\n@@ -27,7 +27,19 @@ var ReactCSSTransitionGroup = React.createClass({\n   displayName: 'ReactCSSTransitionGroup',\n \n   propTypes: {\n-    transitionName: React.PropTypes.string.isRequired,\n+    transitionName: React.PropTypes.oneOfType([\n+      React.PropTypes.string,\n+      React.PropTypes.shape({\n+        enter: React.PropTypes.string,\n+        leave: React.PropTypes.string\n+      }),\n+      React.PropTypes.shape({\n+        enter: React.PropTypes.string,\n+        enterActive: React.PropTypes.string,\n+        leave: React.PropTypes.string,\n+        leaveActive: React.PropTypes.string\n+      })\n+    ]).isRequired,\n     transitionAppear: React.PropTypes.bool,\n     transitionEnter: React.PropTypes.bool,\n     transitionLeave: React.PropTypes.bool\ndiff --git a/src/addons/transitions/ReactCSSTransitionGroupChild.js b/src/addons/transitions/ReactCSSTransitionGroupChild.js\nindex 179a00029d45..dd4e1bf98428 100644\n--- a/src/addons/transitions/ReactCSSTransitionGroupChild.js\n+++ b/src/addons/transitions/ReactCSSTransitionGroupChild.js\n@@ -48,8 +48,8 @@ var ReactCSSTransitionGroupChild = React.createClass({\n \n   transition: function(animationType, finishCallback) {\n     var node = React.findDOMNode(this);\n-    var className = this.props.name + '-' + animationType;\n-    var activeClassName = className + '-active';\n+    var className = this.props.name[animationType] || this.props.name + '-' + animationType;\n+    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';\n     var noEventTimeout = null;\n \n     var endListener = function(e) {"}, {"role": "assistant", "content": "allow reactcsstransitiongroup to also take in object containing classnames instead of relying on manipulation of the transitionname property"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/__tests__/ReactTestUtils-test.js b/packages/react-dom/src/__tests__/ReactTestUtils-test.js\nindex 88ede731edca..3394bf4b737d 100644\n--- a/packages/react-dom/src/__tests__/ReactTestUtils-test.js\n+++ b/packages/react-dom/src/__tests__/ReactTestUtils-test.js\n@@ -463,4 +463,19 @@ describe('ReactTestUtils', () => {\n     ReactTestUtils.renderIntoDocument(<Component />);\n     expect(mockArgs.length).toEqual(0);\n   });\n+  it('should find rendered component with type in document', () => {\n+    class MyComponent extends React.Component {\n+      render() {\n+        return true;\n+      }\n+    }\n+\n+    const instance = ReactTestUtils.renderIntoDocument(<MyComponent />);\n+    const renderedComponentType = ReactTestUtils.findRenderedComponentWithType(\n+      instance,\n+      MyComponent,\n+    );\n+\n+    expect(renderedComponentType).toBe(instance);\n+  });\n });"}, {"role": "assistant", "content": "add a small test for reacttestutils to find rendered component with type in document"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-native-renderer/src/ReactNativeFiberHostComponent.js b/packages/react-native-renderer/src/ReactNativeFiberHostComponent.js\nindex 3b3b901f95af..b49b31008f74 100644\n--- a/packages/react-native-renderer/src/ReactNativeFiberHostComponent.js\n+++ b/packages/react-native-renderer/src/ReactNativeFiberHostComponent.js\n@@ -83,15 +83,6 @@ class ReactNativeFiberHostComponent {\n       relativeNode = relativeToNativeNode;\n     } else if (relativeToNativeNode._nativeTag) {\n       relativeNode = relativeToNativeNode._nativeTag;\n-    } else if (\n-      /* $FlowFixMe canonical doesn't exist on the node.\n-       I think this branch is dead and will remove it in a followup */\n-      relativeToNativeNode.canonical &&\n-      relativeToNativeNode.canonical._nativeTag\n-    ) {\n-      /* $FlowFixMe canonical doesn't exist on the node.\n-       I think this branch is dead and will remove it in a followup */\n-      relativeNode = relativeToNativeNode.canonical._nativeTag;\n     }\n \n     if (relativeNode == null) {"}, {"role": "assistant", "content": "remove unused canonical check in fiber host component"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/create-subscription/README.md b/packages/create-subscription/README.md\nindex caca7a3a2e5c..3fa90d1e693d 100644\n--- a/packages/create-subscription/README.md\n+++ b/packages/create-subscription/README.md\n@@ -15,7 +15,7 @@ Other cases have **better long-term solutions**:\n \n The main motivation for `create-subscription` is to provide a way for library authors to ensure compatibility with React's upcoming asynchronous rendering mode. `create-subscription` guarantees correctness in async mode, accounting for the subtle bugs and edge cases that a library author might otherwise miss.\n \n-However, it achieves correctness by sometimes de-opting to synchronous mode, obviating the benefits of async rendering. This is an inherent limitation of storing state outside of React's managed state queue and rendering in response to a change event.\n+However, [it achieves correctness by sometimes de-opting to synchronous mode](https://github.com/facebook/react/issues/13186#issuecomment-403959161), obviating the benefits of async rendering. This is an inherent limitation of storing state outside of React's managed state queue and rendering in response to a change event.\n \n The effect of de-opting to sync mode is that the main thread may periodically be blocked (in the case of CPU-bound work), and placeholders may appear earlier than desired (in the case of IO-bound work)."}, {"role": "assistant", "content": "link create-subscription doc to gh issue with de-opt explanation"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/isomorphic/classic/element/ReactElement.js b/src/isomorphic/classic/element/ReactElement.js\nindex fe3c6b6a2c57..49039be3df78 100644\n--- a/src/isomorphic/classic/element/ReactElement.js\n+++ b/src/isomorphic/classic/element/ReactElement.js\n@@ -32,17 +32,20 @@ var RESERVED_PROPS = {\n \n var specialPropKeyWarningShown, specialPropRefWarningShown;\n \n-function isValidConfigRefOrKey(config, name) {\n+function hasValidRef(config) {\n   if (__DEV__) {\n-    return hasOwnProperty.call(config, name) &&\n-      !Object.getOwnPropertyDescriptor(config, name).get;\n+    return hasOwnProperty.call(config, 'ref') &&\n+      !Object.getOwnPropertyDescriptor(config, 'ref').get;\n   }\n-\n-  return config[name] !== undefined;\n+  return config.ref !== undefined;\n }\n \n-function getConfigKey(config) {\n-  return '' + config.key;\n+function hasValidKey(config) {\n+  if (__DEV__) {\n+    return hasOwnProperty.call(config, 'key') &&\n+      !Object.getOwnPropertyDescriptor(config, 'key').get;\n+  }\n+  return config.key !== undefined;\n }\n \n /**\n@@ -153,12 +156,11 @@ ReactElement.createElement = function(type, config, children) {\n       );\n     }\n \n-    if (isValidConfigRefOrKey(config, 'ref')) {\n+    if (hasValidRef(config)) {\n       ref = config.ref;\n     }\n-\n-    if (isValidConfigRefOrKey(config, 'key')) {\n-      key = getConfigKey(config);\n+    if (hasValidKey(config)) {\n+      key = '' + config.key;\n     }\n \n     self = config.__self === undefined ? null : config.__self;\n@@ -313,14 +315,13 @@ ReactElement.cloneElement = function(element, config, children) {\n       );\n     }\n \n-    if (isValidConfigRefOrKey(config, 'ref')) {\n+    if (hasValidRef(config)) {\n       // Silently steal the ref from the parent.\n       ref = config.ref;\n       owner = ReactCurrentOwner.current;\n     }\n-\n-    if (isValidConfigRefOrKey(config, 'key')) {\n-      key = getConfigKey(config);\n+    if (hasValidKey(config)) {\n+      key = '' + config.key;\n     }\n \n     // Remaining properties override existing props"}, {"role": "assistant", "content": "remove indirection when determining valid config and ref"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/addons/transitions/ReactCSSTransitionGroupChild.js b/src/addons/transitions/ReactCSSTransitionGroupChild.js\nindex a61e4ce60802..e860892965f1 100644\n--- a/src/addons/transitions/ReactCSSTransitionGroupChild.js\n+++ b/src/addons/transitions/ReactCSSTransitionGroupChild.js\n@@ -55,7 +55,7 @@ var ReactCSSTransitionGroupChild = React.createClass({\n     var noEventTimeout = null;\n \n     var endListener = function(e) {\n-      if (e.target !== node) {\n+      if (e && e.target !== node) {\n         return;\n       }\n       if (__DEV__) {"}, {"role": "assistant", "content": "make sure it works when we have no css transitions"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/devtools/views/Components/Guideline.js b/src/devtools/views/Components/Guideline.js\nindex f9e9d7407fec..9fbba7c2bb00 100644\n--- a/src/devtools/views/Components/Guideline.js\n+++ b/src/devtools/views/Components/Guideline.js\n@@ -19,7 +19,7 @@ export default function Guideline(_: {||}) {\n   const { lineHeight } = useContext(SettingsContext);\n   const store = useContext(StoreContext);\n   const treeFocused = useContext(TreeFocusedContext);\n-  const { selectedElementID } = useContext(TreeStateContext);\n+  const { ownerID, selectedElementID } = useContext(TreeStateContext);\n \n   const subscription = useMemo(\n     () => ({\n@@ -75,6 +75,10 @@ export default function Guideline(_: {||}) {\n   );\n   const data = useSubscription<Data | null, Store>(subscription);\n \n+  if (ownerID !== null) {\n+    return null;\n+  }\n+\n   if (data === null) {\n     return null;\n   }"}, {"role": "assistant", "content": "disable guide/group highlight in owners tree  mode"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js b/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\nindex 8d64fe7e6e8b..b9154ee33b4f 100644\n--- a/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\n+++ b/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\n@@ -30,7 +30,9 @@ class RangeKeyboardFixture extends React.Component {\n \n   handleKeydown = e => {\n     // only interesting in arrow key events\n-    if (![37, 38, 39, 40].includes(e.keyCode)) return;\n+    if ([37, 38, 39, 40].indexOf(e.keyCode) < 0) {\n+      return;\n+    }\n \n     this.setState(({keydownCount}) => {\n       return {"}, {"role": "assistant", "content": "use indexof instead of includes in rangekeyboardfixture"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/utils/__tests__/cloneWithProps-test.js b/src/utils/__tests__/cloneWithProps-test.js\nindex b51e2ab03c1e..a68ed4e4968c 100644\n--- a/src/utils/__tests__/cloneWithProps-test.js\n+++ b/src/utils/__tests__/cloneWithProps-test.js\n@@ -19,16 +19,17 @@\n \n \"use strict\";\n \n-require('mock-modules').dontMock('cloneWithProps');\n+require('mock-modules')\n+  .dontMock('cloneWithProps')\n+  .dontMock('emptyObject');\n \n var mocks = require('mocks');\n \n-var cloneWithProps = require('cloneWithProps');\n-\n var React;\n var ReactTestUtils;\n \n var onlyChild;\n+var cloneWithProps;\n var emptyObject;\n \n describe('cloneWithProps', function() {\n@@ -37,6 +38,7 @@ describe('cloneWithProps', function() {\n     React = require('React');\n     ReactTestUtils = require('ReactTestUtils');\n     onlyChild = require('onlyChild');\n+    cloneWithProps = require('cloneWithProps');\n     emptyObject = require('emptyObject');\n   });"}, {"role": "assistant", "content": "re-require `clonewithprops` as well, for consistency."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/ReactMount.js b/src/renderers/dom/client/ReactMount.js\nindex b044b363ea12..f4fc86611995 100644\n--- a/src/renderers/dom/client/ReactMount.js\n+++ b/src/renderers/dom/client/ReactMount.js\n@@ -405,7 +405,7 @@ var ReactMount = {\n       'for your app.'\n     );\n \n-    var nextWrappedElement = new ReactElement(\n+    var nextWrappedElement = ReactElement(\n       TopLevelWrapper,\n       null,\n       null,"}, {"role": "assistant", "content": "remove instance of invoking reactelement with new operator"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js\nindex 406c0306a24f..0a3f53028314 100644\n--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js\n+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMSelect-test.js\n@@ -548,8 +548,7 @@ describe('ReactDOMSelect', function() {\n         </optgroup>\n       </select>;\n     var container = document.createElement('div');\n-    stub = ReactDOM.render(stub, container);\n-    var node = ReactDOM.findDOMNode(stub);\n+    var node = ReactDOM.render(stub, container);\n \n     expect(node.options[0].selected).toBe(false);  // a\n     expect(node.options[1].selected).toBe(true);   // b"}, {"role": "assistant", "content": "remove an unnecessary call to finddomnode in the select optgroup test."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-05-events.md b/docs/docs/ref-05-events.md\nindex ab3efeb1cdfe..8f22b83f68a1 100644\n--- a/docs/docs/ref-05-events.md\n+++ b/docs/docs/ref-05-events.md\n@@ -21,7 +21,9 @@ Number eventPhase\n boolean isTrusted\n DOMEvent nativeEvent\n void preventDefault()\n+void isDefaultPrevented()\n void stopPropagation()\n+void isPropagationStopped()\n DOMEventTarget target\n Date timeStamp\n String type"}, {"role": "assistant", "content": "add additional supported methods to event documentation"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/addons/ReactComponentWithPureRenderMixin.js b/src/addons/ReactComponentWithPureRenderMixin.js\nindex 33541852572c..cf00d7cb3deb 100644\n--- a/src/addons/ReactComponentWithPureRenderMixin.js\n+++ b/src/addons/ReactComponentWithPureRenderMixin.js\n@@ -40,8 +40,8 @@ var shallowCompare = require('shallowCompare');\n  * See https://facebook.github.io/react/docs/pure-render-mixin.html\n  */\n var ReactComponentWithPureRenderMixin = {\n-  shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n-    return shallowCompare(this, nextProps, nextState, nextContext);\n+  shouldComponentUpdate: function(nextProps, nextState) {\n+    return shallowCompare(this, nextProps, nextState);\n   },\n };\n \ndiff --git a/src/addons/shallowCompare.js b/src/addons/shallowCompare.js\nindex 4e25aa7654de..a6b7a1095de4 100644\n--- a/src/addons/shallowCompare.js\n+++ b/src/addons/shallowCompare.js\n@@ -18,11 +18,10 @@ var shallowEqual = require('shallowEqual');\n  * See ReactComponentWithPureRenderMixin\n  * See also https://facebook.github.io/react/docs/shallow-compare.html\n  */\n-function shallowCompare(instance, nextProps, nextState, nextContext) {\n+function shallowCompare(instance, nextProps, nextState) {\n   return (\n     !shallowEqual(instance.props, nextProps) ||\n-    !shallowEqual(instance.state, nextState) ||\n-    !shallowEqual(instance.context, nextContext)\n+    !shallowEqual(instance.state, nextState)\n   );\n }"}, {"role": "assistant", "content": "revert \"update shallowcompare to accept nextcontext\""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/ReactDOMComponent.js b/src/renderers/dom/shared/ReactDOMComponent.js\nindex dd260e64b517..dd16e9b775d8 100644\n--- a/src/renderers/dom/shared/ReactDOMComponent.js\n+++ b/src/renderers/dom/shared/ReactDOMComponent.js\n@@ -621,8 +621,10 @@ ReactDOMComponent.Mixin = {\n           var type = this._currentElement.type;\n           div.innerHTML = `<${type}></${type}>`;\n           el = div.removeChild(div.firstChild);\n+        } else if (props.is) {\n+          el = ownerDocument.createElement(this._currentElement.type, props.is);\n         } else {\n-          el = ownerDocument.createElement(this._currentElement.type, props.is || null);\n+          el = ownerDocument.createElement(this._currentElement.type);\n         }\n       } else {\n         el = ownerDocument.createElementNS("}, {"role": "assistant", "content": "stop passing null as second argument to document.createelement"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/isomorphic/classic/element/ReactElement.js b/src/isomorphic/classic/element/ReactElement.js\nindex b0a6648870de..64ac67125d38 100644\n--- a/src/isomorphic/classic/element/ReactElement.js\n+++ b/src/isomorphic/classic/element/ReactElement.js\n@@ -311,7 +311,7 @@ ReactElement.cloneElement = function(element, config, children) {\n       defaultProps = element.type.defaultProps;\n     }\n     for (propName in config) {\n-      if (config.hasOwnProperty(propName) &&\n+      if (hasOwnProperty.call(config, propName) &&\n           !RESERVED_PROPS.hasOwnProperty(propName)) {\n         if (config[propName] === undefined && defaultProps !== undefined) {\n           // Resolve default props\ndiff --git a/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js b/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js\nindex ab57c8cae2fe..1414bdce34f8 100644\n--- a/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js\n+++ b/src/isomorphic/classic/element/__tests__/ReactElementClone-test.js\n@@ -78,6 +78,11 @@ describe('ReactElementClone', function() {\n     );\n   });\n \n+  it('does not fail if config has no prototype', function() {\n+    var config = Object.create(null, {foo: {value: 1, enumerable: true}});\n+    React.cloneElement(<div />, config);\n+  });\n+\n   it('should keep the original ref if it is not overridden', function() {\n     var Grandparent = React.createClass({\n       render: function() {"}, {"role": "assistant", "content": "make sure cloneelement supports prototype-less config"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex cd1fbfa66969..bca317057a7d 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -155,7 +155,7 @@ var SetIntervalMixin = {\n     this.intervals.push(setInterval.apply(null, arguments));\n   },\n   componentWillUnmount: function() {\n-    this.intervals.map(clearInterval);\n+    this.intervals.forEach(clearInterval);\n   }\n };"}, {"role": "assistant", "content": "use 'foreach' instead of 'map' when clearing intervals"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/client/ReactDOMFiberSelect.js b/packages/react-dom/src/client/ReactDOMFiberSelect.js\nindex 1c51a02376b1..9fb0f0fec9ce 100644\n--- a/packages/react-dom/src/client/ReactDOMFiberSelect.js\n+++ b/packages/react-dom/src/client/ReactDOMFiberSelect.js\n@@ -13,7 +13,6 @@ import warning from 'shared/warning';\n \n import ReactControlledValuePropTypes from '../shared/ReactControlledValuePropTypes';\n import {getToStringValue, toString} from './ToStringValue';\n-import type {ToStringValue} from './ToStringValue';\n \n let didWarnValueDefaultValue;\n \n@@ -23,7 +22,6 @@ if (__DEV__) {\n \n type SelectWithWrapperState = HTMLSelectElement & {\n   _wrapperState: {\n-    initialValue: ?ToStringValue,\n     wasMultiple: boolean,\n   },\n };\n@@ -148,9 +146,7 @@ export function initWrapperState(element: Element, props: Object) {\n     checkSelectPropTypes(props);\n   }\n \n-  const value = props.value;\n   node._wrapperState = {\n-    initialValue: value != null ? value : props.defaultValue,\n     wasMultiple: !!props.multiple,\n   };\n \n@@ -186,10 +182,6 @@ export function postMountWrapper(element: Element, props: Object) {\n \n export function postUpdateWrapper(element: Element, props: Object) {\n   const node = ((element: any): SelectWithWrapperState);\n-  // After the initial mount, we control selected-ness manually so don't pass\n-  // this value down\n-  node._wrapperState.initialValue = undefined;\n-\n   const wasMultiple = node._wrapperState.wasMultiple;\n   node._wrapperState.wasMultiple = !!props.multiple;"}, {"role": "assistant", "content": "remove unused state initialvalue from reactdomfiberselect"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/tips/12-initial-ajax.md b/docs/tips/12-initial-ajax.md\nindex a6e0e70fa696..c28835c57625 100644\n--- a/docs/tips/12-initial-ajax.md\n+++ b/docs/tips/12-initial-ajax.md\n@@ -9,7 +9,7 @@ next: false-in-jsx.html\n \n Fetch data in `componentDidMount`. When the response arrives, store the data in state, triggering a render to update your UI.\n \n-When processing the response of an asynchronous request, be sure to check that the component is still mounted before updating its state by using `this.isMounted()`.\n+When fetching data asynchronously, use `componentWillUnmount` to cancel any outstanding requests before the component is unmounted.\n \n This example fetches the desired Github user's latest gist:\n \n@@ -23,15 +23,19 @@ var UserGist = React.createClass({\n   },\n \n   componentDidMount: function() {\n-    $.get(this.props.source, function(result) {\n-      var lastGist = result[0];\n-      if (this.isMounted()) {\n+    this.setState({\n+      serverRequest: $.get(this.props.source, function(result) {\n+        var lastGist = result[0];\n         this.setState({\n           username: lastGist.owner.login,\n           lastGistUrl: lastGist.html_url\n         });\n-      }\n-    }.bind(this));\n+      }.bind(this))\n+    });\n+  },\n+  \n+  componentWillUnmount: function() {\n+    this.state.serverRequest.abort();\n   },\n \n   render: function() {"}, {"role": "assistant", "content": "remove the recommendation to use `ismounted` from beginner docs"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-test-renderer/package.json b/packages/react-test-renderer/package.json\nindex b582f4ef6fad..b46c58b9ff49 100644\n--- a/packages/react-test-renderer/package.json\n+++ b/packages/react-test-renderer/package.json\n@@ -20,7 +20,7 @@\n   \"homepage\": \"https://reactjs.org/\",\n   \"dependencies\": {\n     \"react-is\": \"^18.0.0\",\n-    \"react-shallow-renderer\": \"^16.13.1\",\n+    \"react-shallow-renderer\": \"^16.15.0\",\n     \"scheduler\": \"^0.21.0\"\n   },\n   \"peerDependencies\": {\ndiff --git a/yarn.lock b/yarn.lock\nindex f376e74f8c5a..f9d8524bd6c1 100644\n--- a/yarn.lock\n+++ b/yarn.lock\n@@ -13655,13 +13655,13 @@ react-native-web@0.0.0-26873b469:\n     prop-types \"^15.6.0\"\n     react-timer-mixin \"^0.13.4\"\n \n-react-shallow-renderer@^16.13.1:\n-  version \"16.14.1\"\n-  resolved \"https://registry.yarnpkg.com/react-shallow-renderer/-/react-shallow-renderer-16.14.1.tgz#bf0d02df8a519a558fd9b8215442efa5c840e124\"\n-  integrity sha512-rkIMcQi01/+kxiTE9D3fdS959U1g7gs+/rborw++42m1O9FAQiNI/UNRZExVUoAOprn4umcXf+pFRou8i4zuBg==\n+react-shallow-renderer@^16.15.0:\n+  version \"16.15.0\"\n+  resolved \"https://registry.yarnpkg.com/react-shallow-renderer/-/react-shallow-renderer-16.15.0.tgz#48fb2cf9b23d23cde96708fe5273a7d3446f4457\"\n+  integrity sha512-oScf2FqQ9LFVQgA73vr86xl2NaOIX73rh+YFqcOp68CWj56tSfgtGKrEbyhCj0rSijyG9M1CYprTh39fBi5hzA==\n   dependencies:\n     object-assign \"^4.1.1\"\n-    react-is \"^16.12.0 || ^17.0.0\"\n+    react-is \"^16.12.0 || ^17.0.0 || ^18.0.0\"\n \n react-timer-mixin@^0.13.4:\n   version \"0.13.4\""}, {"role": "assistant", "content": "upgrade react-shallow-renderer to support react 18"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/fiber/tests-passing.txt b/scripts/fiber/tests-passing.txt\nindex e48c182712b3..2c127f082de0 100644\n--- a/scripts/fiber/tests-passing.txt\n+++ b/scripts/fiber/tests-passing.txt\n@@ -505,6 +505,7 @@ src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n * should render strings as children\n * should render numbers as children\n * should be called a callback argument\n+* should call a callback argument when the same element is re-rendered\n * should render a component returning strings directly from render\n * should render a component returning numbers directly from render\n * finds the DOM Text node of a string child\ndiff --git a/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js b/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\nindex 6dd314654110..990ad069d1e1 100644\n--- a/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n+++ b/src/renderers/dom/fiber/__tests__/ReactDOMFiber-test.js\n@@ -64,6 +64,35 @@ describe('ReactDOMFiber', () => {\n     expect(called).toEqual(true);\n   });\n \n+  it('should call a callback argument when the same element is re-rendered', () => {\n+    class Foo extends React.Component {\n+      render() {\n+        return <div>Foo</div>;\n+      }\n+    }\n+    const element = <Foo />;\n+\n+    // mounting phase\n+    let called = false;\n+    ReactDOM.render(\n+      element,\n+      container,\n+      () => called = true\n+    );\n+    expect(called).toEqual(true);\n+\n+    // updating phase\n+    called = false;\n+    ReactDOM.unstable_batchedUpdates(() => {\n+      ReactDOM.render(\n+        element,\n+        container,\n+        () => called = true\n+      );\n+    });\n+    expect(called).toEqual(true);\n+  });\n+\n   if (ReactDOMFeatureFlags.useFiber) {\n     it('should render a component returning strings directly from render', () => {\n       const Text = ({value}) => value;"}, {"role": "assistant", "content": "test top-level callback when re-rendering with same element"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/Gruntfile.js b/Gruntfile.js\nindex 3b87e91d71bc..d445e15fbec1 100644\n--- a/Gruntfile.js\n+++ b/Gruntfile.js\n@@ -42,6 +42,12 @@ module.exports = function(grunt) {\n \n   grunt.registerTask('download-previous-version', require('./grunt/tasks/download-previous-version.js'));\n \n+  grunt.registerTask('delete-build-modules', function() {\n+    if (grunt.file.exists('build/modules')) {\n+      grunt.file.delete('build/modules');\n+    }\n+  });\n+\n   // Register jsx:debug and :release tasks.\n   grunt.registerMultiTask('jsx', jsxTask);\n \n@@ -81,6 +87,7 @@ module.exports = function(grunt) {\n     'download-previous-version'\n   ]);\n   grunt.registerTask('build:test', [\n+    'delete-build-modules',\n     'jsx:test',\n     'version-check',\n     'populist:test'\n@@ -176,6 +183,7 @@ module.exports = function(grunt) {\n   // Optimized build task that does all of our builds. The subtasks will be run\n   // in order so we can take advantage of that and only run jsx:debug once.\n   grunt.registerTask('build', [\n+    'delete-build-modules',\n     'jsx:debug',\n     'version-check',\n     'browserify:basic',"}, {"role": "assistant", "content": "remove build/modules/ at beginning of `grunt` and `grunt test`."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/_posts/2014-10-16-community-roundup-15.md b/docs/_posts/2014-10-17-community-roundup-23.md\nsimilarity index 100%\nrename from docs/_posts/2014-10-16-community-roundup-15.md\nrename to docs/_posts/2014-10-17-community-roundup-23.md"}, {"role": "assistant", "content": "change the date and the link url to match the proper roundup"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/devtools/views/Components/NativeStyleEditor/AutoSizeInput.js b/src/devtools/views/Components/NativeStyleEditor/AutoSizeInput.js\nindex f2eb4f4cb6b0..b9fc9b6e0b57 100644\n--- a/src/devtools/views/Components/NativeStyleEditor/AutoSizeInput.js\n+++ b/src/devtools/views/Components/NativeStyleEditor/AutoSizeInput.js\n@@ -68,8 +68,12 @@ export default function AutoSizeInput({\n       return;\n     }\n \n+    // Adding an extra pixel avoids a slight horizontal scroll when changing text selection/cursor.\n+    // Not sure why this is, but the old DevTools did a similar thing.\n+    const targetWidth = Math.ceil(scrollWidth) + 1;\n+\n     if (inputRef.current !== null) {\n-      inputRef.current.style.width = `${scrollWidth}px`;\n+      inputRef.current.style.width = `${targetWidth}px`;\n     }\n   }, [value]);\n \ndiff --git a/src/devtools/views/Components/NativeStyleEditor/StyleEditor.css b/src/devtools/views/Components/NativeStyleEditor/StyleEditor.css\nindex a097665581b7..bbaaf16ea582 100644\n--- a/src/devtools/views/Components/NativeStyleEditor/StyleEditor.css\n+++ b/src/devtools/views/Components/NativeStyleEditor/StyleEditor.css\n@@ -42,6 +42,12 @@\n \n .Input {\n   flex: 0 1 auto;\n+  padding: 1px;\n+  box-shadow: 0px 1px 3px transparent;\n+}\n+.Input:focus {\n+  color: var(--color-text);\n+  box-shadow: 0px 1px 3px var(--color-shadow);\n }\n \n .Empty {"}, {"role": "assistant", "content": "make style editor inputs more obvious resemble inputs"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/gulpfile.js b/gulpfile.js\nindex c3db76382cc4..452d0362c3c6 100644\n--- a/gulpfile.js\n+++ b/gulpfile.js\n@@ -29,27 +29,21 @@ var paths = {\n   },\n };\n \n-var fbjsModuleMap = require('fbjs/module-map');\n-var moduleMap = {};\n-for (var key in fbjsModuleMap) {\n-  moduleMap[key] = fbjsModuleMap[key];\n-}\n-var whiteListNames = [\n-  'deepDiffer',\n-  'deepFreezeAndThrowOnMutationInDev',\n-  'flattenStyle',\n-  'InitializeJavaScriptAppEngine',\n-  'RCTEventEmitter',\n-  'TextInputState',\n-  'UIManager',\n-  'View',\n-];\n-\n-whiteListNames.forEach(function(name) {\n-  moduleMap[name] = name;\n-});\n-\n-moduleMap['object-assign'] = 'object-assign';\n+var moduleMap = Object.assign(\n+  {'object-assign': 'object-assign'},\n+  require('fbjs/module-map'),\n+  {\n+    deepDiffer: 'react-native/lib/deepDiffer',\n+    deepFreezeAndThrowOnMutationInDev: 'react-native/lib/deepFreezeAndThrowOnMutationInDev',\n+    flattenStyle: 'react-native/lib/flattenStyle',\n+    InitializeJavaScriptAppEngine: 'react-native/lib/InitializeJavaScriptAppEngine',\n+    RCTEventEmitter: 'react-native/lib/RCTEventEmitter',\n+    TextInputState: 'react-native/lib/TextInputState',\n+    UIManager: 'react-native/lib/UIManager',\n+    UIManagerStatTracker: 'react-native/lib/UIManagerStatTracker',\n+    View: 'react-native/lib/View',\n+  }\n+);\n \n var babelOpts = {\n   plugins: ["}, {"role": "assistant", "content": "require modules from react native as node modules."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js b/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\nindex 9899abc0c7d4..d80d701c6869 100644\n--- a/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\n+++ b/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js\n@@ -406,7 +406,10 @@ export default {\n             });\n           }\n \n-          if (dependencyNode.parent.type === 'TSTypeQuery') {\n+          if (\n+            dependencyNode.parent.type === 'TSTypeQuery' ||\n+            dependencyNode.parent.type === 'TSTypeReference'\n+          ) {\n             continue;\n           }"}, {"role": "assistant", "content": "fix compatibility with @typescript-eslint/parser@4.0.0+"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ui/dom/HTMLDOMPropertyConfig.js b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\nindex 52fbf32ecef4..fadea2ae090a 100644\n--- a/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n@@ -132,9 +132,7 @@ var HTMLDOMPropertyConfig = {\n     rowSpan: null,\n     sandbox: null,\n     scope: null,\n-    scrollLeft: MUST_USE_PROPERTY,\n     scrolling: null,\n-    scrollTop: MUST_USE_PROPERTY,\n     seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n     selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n     shape: null,"}, {"role": "assistant", "content": "remove non-attribute scrollleft and scrolltop from htmldompropertyconfig"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex 53b777234525..155f2b193e7c 100644\n--- a/package.json\n+++ b/package.json\n@@ -28,7 +28,7 @@\n   },\n   \"dependencies\": {\n     \"commoner\": \"^0.10.0\",\n-    \"jstransform\": \"^9.1.1\"\n+    \"jstransform\": \"^10.0.0\"\n   },\n   \"devDependencies\": {\n     \"benchmark\": \"~1.0.0\",\n@@ -41,7 +41,7 @@\n     \"es3ify\": \"~0.1.2\",\n     \"es5-shim\": \"^4.0.0\",\n     \"eslint\": \"^0.14.1\",\n-    \"esprima-fb\": \"^12001.1.0-dev-harmony-fb\",\n+    \"esprima-fb\": \"^13001.1.0-dev-harmony-fb\",\n     \"grunt\": \"~0.4.2\",\n     \"grunt-cli\": \"~0.1.9\",\n     \"grunt-compare-size\": \"~0.4.0\","}, {"role": "assistant", "content": "upgrade package dependencies for new esprima/jstransform"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js b/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js\nindex e1c876bc71c7..1be3f9cf95a6 100644\n--- a/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js\n+++ b/src/isomorphic/modern/class/__tests__/ReactES6Class-test.js\n@@ -55,8 +55,16 @@ describe('ReactES6Class', function() {\n   });\n \n   it('throws if no render function is defined', function() {\n+    spyOn(console, 'error');\n     class Foo extends React.Component { }\n     expect(() => React.render(<Foo />, container)).toThrow();\n+    expect(console.error.calls[0].args[0]).toBe(\n+      'Warning: Foo(...): ' +\n+      'No `render` method found on the returned component instance: you may ' +\n+      'have forgotten to define `render` in your component or you may have ' +\n+      'accidentally tried to render an element whose type is a function that ' +\n+      'isn\\'t a React component.'\n+    );\n   });\n \n   it('renders a simple stateless component with prop', function() {"}, {"role": "assistant", "content": "check for warning when testing to see if error is thrown when render not defined"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex f159bb33da9f..4d02dadad1b0 100644\n--- a/package.json\n+++ b/package.json\n@@ -40,6 +40,7 @@\n   \"devDependencies\": {\n     \"browserify\": \"~2.14.2\",\n     \"wrapup\": \"~0.12.0\",\n+    \"grunt-cli\": \"~0.1.9\",\n     \"grunt\": \"~0.4.1\",\n     \"grunt-contrib-copy\": \"~0.4.1\",\n     \"grunt-contrib-jshint\": \"~0.5.4\","}, {"role": "assistant", "content": "add `grunt-cli` to devdependencies to make sure it's installed for travisci"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-fb.js b/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-fb.js\nindex 51fe2ed6abc1..b3bd5a7a92dc 100644\n--- a/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-fb.js\n+++ b/packages/react-devtools-shared/src/config/DevToolsFeatureFlags.extension-fb.js\n@@ -16,7 +16,7 @@\n export const enableProfilerChangedHookIndices = true;\n export const isInternalFacebookBuild = true;\n export const enableNamedHooksFeature = true;\n-export const enableLogger = false;\n+export const enableLogger = true;\n export const consoleManagedByDevToolsDuringStrictMode = true;\n \n /************************************************************************"}, {"role": "assistant", "content": "enable logger for internal build of devtools extensions"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberCommitWork.js b/packages/react-reconciler/src/ReactFiberCommitWork.js\nindex 0dc3d27f1dcf..55a39ee640db 100644\n--- a/packages/react-reconciler/src/ReactFiberCommitWork.js\n+++ b/packages/react-reconciler/src/ReactFiberCommitWork.js\n@@ -726,20 +726,11 @@ function detachFiber(current: Fiber) {\n   // get GC:ed but we don't know which for sure which parent is the current\n   // one so we'll settle for GC:ing the subtree of this child. This child\n   // itself will be GC:ed when the parent updates the next time.\n-  // We do not null out the 'nextEffect' field as it causes tests to fail.\n   current.return = null;\n   current.child = null;\n-  current.memoizedState = null;\n-  current.updateQueue = null;\n-  current.firstEffect = null;\n-  current.lastEffect = null;\n   if (current.alternate) {\n-    current.alternate.return = null;\n     current.alternate.child = null;\n-    current.alternate.memoizedState = null;\n-    current.alternate.updateQueue = null;\n-    current.alternate.firstEffect = null;\n-    current.alternate.lastEffect = null;\n+    current.alternate.return = null;\n   }\n }"}, {"role": "assistant", "content": "revert \"clear memoizedstate on unmount of fiber to avoid memory leak \""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/devtools/prepare-release.js b/scripts/devtools/prepare-release.js\nindex 5905eec621ad..0fc8fc841f55 100755\n--- a/scripts/devtools/prepare-release.js\n+++ b/scripts/devtools/prepare-release.js\n@@ -115,8 +115,12 @@ async function getPreviousCommitSha() {\n   const choices = [];\n \n   const lines = await execRead(`\n-    git log --max-count=5 --topo-order --pretty=format:'%H:::%s:::%as' HEAD -- ${PACKAGE_PATHS[0]}\n+    git log --max-count=5 --topo-order --pretty=format:'%H:::%s:::%as' HEAD -- ${join(\n+      ROOT_PATH,\n+      PACKAGE_PATHS[0]\n+    )}\n   `);\n+\n   lines.split('\\n').forEach((line, index) => {\n     const [hash, message, date] = line.split(':::');\n     choices.push({"}, {"role": "assistant", "content": "fix issue in release script where commits for the last devtools release are undefined #22233"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/.eslintignore b/.eslintignore\nindex c5fc99a28d9a..388012616529 100644\n--- a/.eslintignore\n+++ b/.eslintignore\n@@ -13,8 +13,8 @@ fixtures/\n # Ignore built files.\n build/\n coverage/\n-scripts/attribute-behavior/public/react-dom.production.min.js\n-scripts/attribute-behavior/public/react.production.min.js\n+fixtures/attribute-behavior/public/react-dom.production.min.js\n+fixtures/attribute-behavior/public/react.production.min.js\n scripts/bench/benchmarks/**/*.js\n scripts/bench/remote-repo/\n vendor/*\ndiff --git a/fixtures/attribute-behavior/src/App.js b/fixtures/attribute-behavior/src/App.js\nindex 6fee801404a1..2ac7e1d7f883 100644\n--- a/fixtures/attribute-behavior/src/App.js\n+++ b/fixtures/attribute-behavior/src/App.js\n@@ -1417,7 +1417,7 @@ function ResultPopover(props) {\n           hasSameBehavior: props.hasSameBehavior,\n         },\n         null,\n-        2,\n+        2\n       )}\n     </pre>\n   );\ndiff --git a/fixtures/attribute-behavior/src/index.js b/fixtures/attribute-behavior/src/index.js\nindex cea8e344b982..da93a3b30f02 100644\n--- a/fixtures/attribute-behavior/src/index.js\n+++ b/fixtures/attribute-behavior/src/index.js\n@@ -19,6 +19,6 @@ import './index.css';\n \n   ReactDOM.render(\n     React.createElement(App.default),\n-    document.getElementById('root'),\n+    document.getElementById('root')\n   );\n })();\ndiff --git a/scripts/prettier/index.js b/scripts/prettier/index.js\nindex 0fd1e51f87c9..d7dda88a45a2 100644\n--- a/scripts/prettier/index.js\n+++ b/scripts/prettier/index.js\n@@ -41,8 +41,8 @@ const config = {\n     patterns: ['scripts/**/*.js', 'fixtures/**/*.js'],\n     ignore: [\n       'scripts/bench/benchmarks/**',\n-      'scripts/attribute-behavior/public/react.production.min.js',\n-      'scripts/attribute-behavior/public/react-dom.production.min.js',\n+      'fixtures/attribute-behavior/public/react.production.min.js',\n+      'fixtures/attribute-behavior/public/react-dom.production.min.js',\n     ],\n     options: {\n       'trailing-comma': 'es5',"}, {"role": "assistant", "content": "update eslintignore and prettier config to ignore umd builds of react"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/.travis.yml b/.travis.yml\nindex f5725a14cb98..b924f25cb412 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -28,8 +28,8 @@ script:\n \n         GH_PAGES_DIR=\"$TRAVIS_BUILD_DIR\"/../react-gh-pages\n         echo \"machine github.com login reactjs-bot password $GITHUB_TOKEN\" >~/.netrc\n-        git config --global user.name \"Travis CI\"\n-        git config --global user.email \"travis@reactjs.org\"\n+        git config --global user.name \"$GITHUB_USER_NAME\"\n+        git config --global user.email \"$GITHUB_USER_EMAIL\"\n \n         git clone --branch gh-pages --depth=50 \\\n           https://reactjs-bot@github.com/facebook/react.git \\"}, {"role": "assistant", "content": "update travis.yml to use $github_user_name and $github_user_email"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/grunt/config/browserify.js b/grunt/config/browserify.js\nindex d7730a48d1e7..163b117ad35c 100644\n--- a/grunt/config/browserify.js\n+++ b/grunt/config/browserify.js\n@@ -59,6 +59,7 @@ var basic = {\n   debug: false,\n   standalone: 'React',\n   transforms: [envify({NODE_ENV: 'development'})],\n+  plugins: [collapser],\n   after: [es3ify.transform, derequire, simpleBannerify]\n };\n \n@@ -82,6 +83,7 @@ var transformer = {\n   debug: false,\n   standalone: 'JSXTransformer',\n   transforms: [],\n+  plugins: [collapser],\n   after: [es3ify.transform, derequire, simpleBannerify]\n };\n \n@@ -94,6 +96,7 @@ var addons = {\n   standalone: 'React',\n   packageName: 'React (with addons)',\n   transforms: [envify({NODE_ENV: 'development'})],\n+  plugins: [collapser],\n   after: [es3ify.transform, derequire, simpleBannerify]\n };\n \n@@ -120,7 +123,8 @@ var withCodeCoverageLogging = {\n   transforms: [\n     envify({NODE_ENV: 'development'}),\n     require('coverify')\n-  ]\n+  ],\n+  plugins: [collapser]\n };\n \n module.exports = {"}, {"role": "assistant", "content": "apply browserify bundle collapser to all build type"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactFiberBeginWork.js b/src/renderers/shared/fiber/ReactFiberBeginWork.js\nindex 9bb7c44adad8..3c1bac8183b2 100644\n--- a/src/renderers/shared/fiber/ReactFiberBeginWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberBeginWork.js\n@@ -686,6 +686,9 @@ module.exports = function<T, P, I, TI, PI, C, CX, PL>(\n     // TODO: Handle HostComponent tags here as well and call pushHostContext()?\n     // See PR 8590 discussion for context\n     switch (workInProgress.tag) {\n+      case HostRoot:\n+        pushHostRootContext(workInProgress);\n+        break;\n       case ClassComponent:\n         pushContextProvider(workInProgress);\n         break;"}, {"role": "assistant", "content": "push host root context when bailing out on low priority"}]}
