{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/dom/components/__tests__/ReactDOMInput-test.js b/src/dom/components/__tests__/ReactDOMInput-test.js\nindex eadcc1557e65..a8f86b5c83b1 100644\n--- a/src/dom/components/__tests__/ReactDOMInput-test.js\n+++ b/src/dom/components/__tests__/ReactDOMInput-test.js\n@@ -265,7 +265,7 @@ describe('ReactDOMInput', function() {\n     expect(link.requestChange.mock.calls.length).toBe(0);\n \n     instance.getDOMNode().checked = false;\n-    ReactTestUtils.Simulate.input(instance.getDOMNode());\n+    ReactTestUtils.Simulate.click(instance.getDOMNode());\n \n     expect(link.requestChange.mock.calls.length).toBe(1);\n     expect(link.requestChange.mock.calls[0][0]).toEqual(false);"}, {"role": "assistant", "content": "use simulate.click instead of simulate.input for simulating input on"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex 89d16b83174e..f3182582aa30 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -294,7 +294,19 @@ ReactDOM.render(<HelloMessage name=\"Sebastian\" />, mountNode);\n ```\n \n This simplified component API is intended for components that are pure functions of their props. These components must not retain internal state, do not have backing instances, and do not have the component lifecycle methods. They are pure functional transforms of their input, with zero boilerplate.\n-However, you may still specify `.propTypes` and `.defaultProps` by setting them as properties on the function, just as you would set them on an ES6 class.\n+\n+However, you may still specify `.propTypes` and `.defaultProps` by setting them as properties on the function, just as you would set them on an ES6 class:\n+\n+```javascript\n+const HelloMessage = (props) => <div>Hello, {props.name}</div>;\n+HelloMessage.propTypes = {\n+  name: React.PropTypes.string\n+}\n+HelloMessage.defaultProps = {\n+  name: 'John Doe'\n+}\n+ReactDOM.render(<HelloMessage name=\"M\u0103d\u0103lina\"/>, mountNode);\n+```\n \n > NOTE:\n >"}, {"role": "assistant", "content": "add propstypes and defaultprops example for stateless functions"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex 926995357fde..31aa0f92dd8b 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -98,7 +98,7 @@ Verifies the object is a ReactElement.\n array React.Children.map(object children, function fn [, object thisArg])\n ```\n \n-Invoke `fn` on every immediate child contained within `children` with `this` set to `thisArg`. If `children` is a keyed fragment or array it will be traversed: `fn` will never be passed the container objects. If children is `null` or `undefined` returns `null` or `undefined` rather than an array.\n+Invoke `fn` on every immediate child contained within `children` with `this` set to `thisArg`. If `children` is a [keyed fragment](/react/docs/create-fragment.html) or array it will be traversed: `fn` will never be passed the container objects. If children is `null` or `undefined` returns `null` or `undefined` rather than an array.\n \n #### React.Children.forEach"}, {"role": "assistant", "content": "add link to create-fragment from react.children.map docs"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/fiber/ReactDOMFiberComponent.js b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\nindex 346e4091d20b..b31104d479c2 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n@@ -931,15 +931,9 @@ var ReactDOMFiberComponent = {\n         // TODO: Do we need to lower case this to get case insensitive matches?\n         var name = attributes[i].name;\n         switch (name) {\n-          // Built-in attributes are whitelisted\n-          // TODO: Once these are gone from the server renderer, we don't need\n-          // this whitelist aynymore.\n+          // Built-in SSR attribute is whitelisted\n           case 'data-reactroot':\n             break;\n-          case 'data-reactid':\n-            break;\n-          case 'data-react-checksum':\n-            break;\n           // Controlled attributes are not validated\n           // TODO: Only ignore them on controlled tags.\n           case 'value':"}, {"role": "assistant", "content": "remove data-reactid and data-reactchecksum from whitelist"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/community/conferences.md b/docs/community/conferences.md\nindex 377ff2f299de..da6c7f3e8292 100644\n--- a/docs/community/conferences.md\n+++ b/docs/community/conferences.md\n@@ -54,6 +54,11 @@ October 13 in Stockholm, Sweden\n \n [Website](https://statejs.com/)\n \n+### Second React Summit - NG 2017\n+October 21 in Lagos, Nigeria\n+\n+[Website](https://reactsummit2017.splashthat.com/) - [Twitter](https://twitter.com/DevCircleLagos/) - [Facebook](https://www.facebook.com/groups/DevCLagos/)\n+\n ### ReactiveConf 2017\n October 25\u201327, Bratislava, Slovakia"}, {"role": "assistant", "content": "add react summit nigeria to the list of conferences."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex 4c784f332bf0..9f45a9f7a887 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -299,4 +299,8 @@ However, you may still specify `.propTypes` and `.defaultProps` by setting them\n >\n > Because stateless functions don't have a backing instance, you can't attach a ref to a stateless function component. Normally this isn't an issue, since stateless functions do not provide an imperative API. Without an imperative API, there isn't much you could do with an instance anyway. However, if a user wants to find the DOM node of a stateless function component, they must wrap the component in a stateful component (eg. ES6 class component) and attach the ref to the stateful wrapper component.\n \n+> NOTE:\n+>\n+> Due to some implementation details, returning `null` or `false` to indicate you don't want to render anything won't work in a functional component (see [react/4599](https://github.com/facebook/react/issues/4599) for details). Consider returning `<noscript />` instead.\n+\n In an ideal world, most of your components would be stateless functions because in the future we\u2019ll also be able to make performance optimizations specific to these components by avoiding unnecessary checks and memory allocations. This is the recommended pattern, when possible."}, {"role": "assistant", "content": "add documentation about empty functional components"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/warnings/unknown-prop.md b/docs/warnings/unknown-prop.md\nindex 9f030a82003c..eb7585f650d1 100644\n--- a/docs/warnings/unknown-prop.md\n+++ b/docs/warnings/unknown-prop.md\n@@ -13,6 +13,8 @@ There are a couple of likely reasons this warning could be appearing:\n \n 3. React does not yet recognize the attribute you specified. This will likely be fixed in a future version of React. However, React currently strips all unknown attributes, so specifying them in your React app will not cause them to be rendered.\n \n+4. You are using a React component without an upper case. React interprets it as a DOM tag because [React JSX transform uses the upper vs. lower case convention to distinguish between user-defined components and DOM tags](/react/docs/jsx-in-depth.html#user-defined-components-must-be-capitalized).\n+\n ---\n \n To fix this, composite components should \"consume\" any prop that is intended for the composite component and not intended for the child component. Example:"}, {"role": "assistant", "content": "update-unknown-warning-page - add a reason for the warning"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/fixtures/unstable-async/suspense/src/components/App.js b/fixtures/unstable-async/suspense/src/components/App.js\nindex 6c639487c043..1c8df3c1092b 100644\n--- a/fixtures/unstable-async/suspense/src/components/App.js\n+++ b/fixtures/unstable-async/suspense/src/components/App.js\n@@ -21,7 +21,7 @@ export default class App extends PureComponent {\n   componentDidUpdate(prevProps, prevState) {\n     if (\n       prevState.showDetail !== this.state.showDetail ||\n-      prevState.currentId !== this.state.currentId\n+      (prevState.currentId !== this.state.currentId && this.state.showDetail)\n     ) {\n       window.scrollTo(0, 0);\n     }"}, {"role": "assistant", "content": "update scroll restoration logic in suspense fixture"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/10.4-test-utils.md b/docs/docs/10.4-test-utils.md\nindex f7205b7e1f65..cbbaa9d933f6 100644\n--- a/docs/docs/10.4-test-utils.md\n+++ b/docs/docs/10.4-test-utils.md\n@@ -217,7 +217,7 @@ shallowRenderer.render(\n Similar to `ReactDOM.render`.\n \n ```javascript\n-ReactComponent shallowRenderer.getRenderOutput()\n+ReactElement shallowRenderer.getRenderOutput()\n ```\n \n After `render` has been called, returns shallowly rendered output. You can then begin to assert facts about the output. For example, if your component's render method returns:"}, {"role": "assistant", "content": "fix shallowrenderer.getrenderoutput return type in docs"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/CHANGELOG.md b/CHANGELOG.md\nindex e005f5a809a0..4ccf90d97fc1 100644\n--- a/CHANGELOG.md\n+++ b/CHANGELOG.md\n@@ -3,6 +3,13 @@\n ### React\n - Minor internal changes for better compatibility with React Native\n \n+### React DOM\n+- The `autoCapitalize` and `autoCorrect` props are now set as attributes in the DOM instead of properties to improve cross-browser compatibility\n+- Fixed bug with controlled `<select>` elements not handling updates properly\n+\n+### React Perf Add-on\n+- Some DOM operation names have been updated for clarity in the output of `.printDOM()`\n+\n \n ## 0.14.3 (November 18, 2015)"}, {"role": "assistant", "content": "update a few changelog things forgotten in 3f355d99"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/getting-started.md b/docs/docs/getting-started.md\nindex f6b758643ab3..40049bbf9d74 100644\n--- a/docs/docs/getting-started.md\n+++ b/docs/docs/getting-started.md\n@@ -64,6 +64,8 @@ Then reference it from `helloworld.html`:\n <script type=\"text/jsx\" src=\"src/helloworld.js\"></script>\n ```\n \n+Note that some browsers (Chrome, e.g.) will fail to load the file unless it's served via HTTP.\n+\n ### Offline Transform\n \n First install the command-line tools (requires [npm](https://www.npmjs.com/)):"}, {"role": "assistant", "content": "add warning for protocol sandboxing near pain point in getting started"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberHooks.js b/packages/react-reconciler/src/ReactFiberHooks.js\nindex 80707120e95f..975d4ada3f7d 100644\n--- a/packages/react-reconciler/src/ReactFiberHooks.js\n+++ b/packages/react-reconciler/src/ReactFiberHooks.js\n@@ -315,8 +315,8 @@ function areHookInputsEqual(\n           'Previous: %s\\n' +\n           'Incoming: %s',\n         currentHookNameInDev,\n-        `[${nextDeps.join(', ')}]`,\n         `[${prevDeps.join(', ')}]`,\n+        `[${nextDeps.join(', ')}]`,\n       );\n     }\n   }\ndiff --git a/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js b/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\nindex 1de8540a6eeb..e2e5178ba37f 100644\n--- a/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\n+++ b/packages/react-reconciler/src/__tests__/ReactHooks-test.internal.js\n@@ -608,8 +608,8 @@ describe('ReactHooks', () => {\n       'Warning: The final argument passed to useLayoutEffect changed size ' +\n         'between renders. The order and size of this array must remain ' +\n         'constant.\\n\\n' +\n-        'Previous: [A, B]\\n' +\n-        'Incoming: [A]\\n',\n+        'Previous: [A]\\n' +\n+        'Incoming: [A, B]\\n',\n     ]);\n   });"}, {"role": "assistant", "content": "fix arehookinputsequal method  warning params order"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/scheduler/src/Scheduler.js b/packages/scheduler/src/Scheduler.js\nindex 412f96930eb3..2c692d7dfe79 100644\n--- a/packages/scheduler/src/Scheduler.js\n+++ b/packages/scheduler/src/Scheduler.js\n@@ -468,7 +468,12 @@ var requestHostCallback;\n var cancelHostCallback;\n var getFrameDeadline;\n \n-if (typeof window === 'undefined') {\n+// \"addEventListener\" might not be available on the window object\n+// if this is a mocked \"window\" object. So we need to validate that too.\n+if (\n+  typeof window === 'undefined' ||\n+  typeof window.addEventListener !== 'function'\n+) {\n   // If this accidentally gets imported in a non-browser environment, fallback\n   // to a naive implementation.\n   var timeoutID = -1;"}, {"role": "assistant", "content": "ensure \"addeventlistener\" exists on \"window\" for \"scheduler\" package"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools/OVERVIEW.md b/packages/react-devtools/OVERVIEW.md\nindex a05bafc3b2a5..d78d0c7f1875 100644\n--- a/packages/react-devtools/OVERVIEW.md\n+++ b/packages/react-devtools/OVERVIEW.md\n@@ -297,3 +297,10 @@ Once profiling is finished, the frontend requests profiling data from the backen\n ### Importing/exporting data\n \n Because all of the data is merged in the frontend after a profiling session is completed, it can be exported and imported (as a single JSON object), enabling profiling sessions to be shared between users.\n+\n+## Package Specific Details\n+\n+### Devtools Extension Overview Diagram\n+\n+![React Devtools Extension](https://user-images.githubusercontent.com/2735514/132768489-6ab85156-b816-442f-9c3f-7af738ee9e49.png)\n+"}, {"role": "assistant", "content": "add react devtools extension startup and file structure to overview.md"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/native/ReactNativeFiber.js b/src/renderers/native/ReactNativeFiber.js\nindex 7027f4721375..dd4b7a215d4a 100644\n--- a/src/renderers/native/ReactNativeFiber.js\n+++ b/src/renderers/native/ReactNativeFiber.js\n@@ -29,7 +29,6 @@ const deepFreezeAndThrowOnMutationInDev = require('deepFreezeAndThrowOnMutationI\n const emptyObject = require('fbjs/lib/emptyObject');\n const findNodeHandle = require('findNodeHandle');\n const invariant = require('fbjs/lib/invariant');\n-const takeSnapshot = require('takeSnapshot');\n \n const {injectInternals} = require('ReactFiberDevToolsHook');\n \n@@ -415,8 +414,6 @@ const ReactNative = {\n     return NativeRenderer.getPublicRootInstance(root);\n   },\n \n-  takeSnapshot,\n-\n   unmountComponentAtNode(containerTag: number) {\n     const root = roots.get(containerTag);\n     if (root) {\ndiff --git a/src/renderers/native/ReactNativeStack.js b/src/renderers/native/ReactNativeStack.js\nindex 0d1f323f0237..a9fa118cf27b 100644\n--- a/src/renderers/native/ReactNativeStack.js\n+++ b/src/renderers/native/ReactNativeStack.js\n@@ -18,7 +18,6 @@ var ReactNativeStackInjection = require('ReactNativeStackInjection');\n var ReactUpdates = require('ReactUpdates');\n \n var findNodeHandle = require('findNodeHandle');\n-var takeSnapshot = require('takeSnapshot');\n \n ReactNativeInjection.inject();\n ReactNativeStackInjection.inject();\n@@ -47,8 +46,6 @@ var ReactNative = {\n \n   render: render,\n \n-  takeSnapshot,\n-\n   unmountComponentAtNode: ReactNativeMount.unmountComponentAtNode,\n \n   /* eslint-disable camelcase */"}, {"role": "assistant", "content": "remove 'takesnapshot' from reactnative renderer\\nupstream sync from react-native repo"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/client/ReactDOM.js b/packages/react-dom/src/client/ReactDOM.js\nindex 8934a67be37b..ded53f4e1c58 100644\n--- a/packages/react-dom/src/client/ReactDOM.js\n+++ b/packages/react-dom/src/client/ReactDOM.js\n@@ -770,6 +770,7 @@ const ReactDOM: Object = {\n \n   flushSync: flushSync,\n \n+  unstable_createRoot: createRoot,\n   unstable_flushControlled: flushControlled,\n \n   __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n@@ -810,8 +811,7 @@ function createRoot(container: DOMContainer, options?: RootOptions): ReactRoot {\n \n if (enableStableConcurrentModeAPIs) {\n   ReactDOM.createRoot = createRoot;\n-} else {\n-  ReactDOM.unstable_createRoot = createRoot;\n+  ReactDOM.unstable_createRoot = undefined;\n }\n \n const foundDevTools = injectIntoDevTools({\ndiff --git a/packages/react/src/React.js b/packages/react/src/React.js\nindex 04f3592cedf9..872072e29e35 100644\n--- a/packages/react/src/React.js\n+++ b/packages/react/src/React.js\n@@ -77,15 +77,22 @@ const React = {\n \n   version: ReactVersion,\n \n+  unstable_ConcurrentMode: REACT_CONCURRENT_MODE_TYPE,\n+  unstable_Profiler: REACT_PROFILER_TYPE,\n+\n   __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals,\n };\n \n+// Note: some APIs are added with feature flags.\n+// Make sure that stable builds for open source\n+// don't modify the React object to avoid deopts.\n+// Also let's not expose their names in stable builds.\n+\n if (enableStableConcurrentModeAPIs) {\n   React.ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n   React.Profiler = REACT_PROFILER_TYPE;\n-} else {\n-  React.unstable_ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n-  React.unstable_Profiler = REACT_PROFILER_TYPE;\n+  React.unstable_ConcurrentMode = undefined;\n+  React.unstable_Profiler = undefined;\n }\n \n if (enableHooks) {"}, {"role": "assistant", "content": "prevent deopts from modifying exports object in stable builds"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/uncontrolled-components.md b/docs/docs/uncontrolled-components.md\nindex 2eaac55f6ffd..d9fa20ac80a5 100644\n--- a/docs/docs/uncontrolled-components.md\n+++ b/docs/docs/uncontrolled-components.md\n@@ -63,4 +63,4 @@ render() {\n }\n ```\n \n-Likewise, `<input type=\"checkbox\">` and `<input type=\"radio\">` support `defaultChecked`, and `<select>` supports `defaultValue`.\n+Likewise, `<input type=\"checkbox\">` and `<input type=\"radio\">` support `defaultChecked`, and `<select>` and `<textarea>` supports `defaultValue`."}, {"role": "assistant", "content": "make it clear that textarea also supports defaultvalue."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-native-renderer/src/ReactNativeTypes.js b/packages/react-native-renderer/src/ReactNativeTypes.js\nindex 25436085debd..129613d54e7c 100644\n--- a/packages/react-native-renderer/src/ReactNativeTypes.js\n+++ b/packages/react-native-renderer/src/ReactNativeTypes.js\n@@ -213,7 +213,7 @@ export type ReactNativeType = {\n };\n \n export opaque type Node = mixed;\n-type InternalInstanceHandle = mixed;\n+export opaque type InternalInstanceHandle = mixed;\n type PublicInstance = mixed;\n \n export type ReactFabricType = {"}, {"role": "assistant", "content": "make internalinstancehandle type opaque in reactnativetypes"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/rollup/packaging.js b/scripts/rollup/packaging.js\nindex b49472c1bea9..dba7e835cdda 100644\n--- a/scripts/rollup/packaging.js\n+++ b/scripts/rollup/packaging.js\n@@ -148,9 +148,9 @@ function processGenerated(directory) {\n     const originalContents = readFileSync(file, 'utf8');\n     const contents = originalContents\n       // Replace {@}format with {@}noformat\n-      .replace(/(\\n\\s*\\*\\s*)@format\\b.*(\\n)/, '$1@noformat$2')\n+      .replace(/(\\r?\\n\\s*\\*\\s*)@format\\b.*(\\n)/, '$1@noformat$2')\n       // Add {@}nolint and {@}generated\n-      .replace(' */\\n', ` * @nolint\\n * ${getSigningToken()}\\n */\\n`);\n+      .replace(/(\\r?\\n\\s*\\*)\\//, `$1 @nolint$1 ${getSigningToken()}$1/`);\n     const signedContents = signFile(contents);\n     writeFileSync(file, signedContents, 'utf8');\n   });"}, {"role": "assistant", "content": "handle line endings correctly on windows in build script for rn"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ui/dom/SVGDOMPropertyConfig.js b/src/browser/ui/dom/SVGDOMPropertyConfig.js\nindex d66925a9b3e6..ca1a40345833 100644\n--- a/src/browser/ui/dom/SVGDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/SVGDOMPropertyConfig.js\n@@ -32,11 +32,15 @@ var SVGDOMPropertyConfig = {\n     dx: MUST_USE_ATTRIBUTE,\n     dy: MUST_USE_ATTRIBUTE,\n     fill: MUST_USE_ATTRIBUTE,\n+    fillOpacity: MUST_USE_ATTRIBUTE,\n+    fontFamily: MUST_USE_ATTRIBUTE,\n+    fontSize: MUST_USE_ATTRIBUTE,\n     fx: MUST_USE_ATTRIBUTE,\n     fy: MUST_USE_ATTRIBUTE,\n     gradientTransform: MUST_USE_ATTRIBUTE,\n     gradientUnits: MUST_USE_ATTRIBUTE,\n     offset: MUST_USE_ATTRIBUTE,\n+    opacity: MUST_USE_ATTRIBUTE,\n     patternContentUnits: MUST_USE_ATTRIBUTE,\n     patternUnits: MUST_USE_ATTRIBUTE,\n     points: MUST_USE_ATTRIBUTE,\n@@ -50,6 +54,7 @@ var SVGDOMPropertyConfig = {\n     stroke: MUST_USE_ATTRIBUTE,\n     strokeDasharray: MUST_USE_ATTRIBUTE,\n     strokeLinecap: MUST_USE_ATTRIBUTE,\n+    strokeOpacity: MUST_USE_ATTRIBUTE,\n     strokeWidth: MUST_USE_ATTRIBUTE,\n     textAnchor: MUST_USE_ATTRIBUTE,\n     transform: MUST_USE_ATTRIBUTE,\n@@ -63,6 +68,9 @@ var SVGDOMPropertyConfig = {\n     y: MUST_USE_ATTRIBUTE\n   },\n   DOMAttributeNames: {\n+    fillOpacity: 'fill-opacity',\n+    fontFamily: 'font-family',\n+    fontSize: 'font-size',\n     gradientTransform: 'gradientTransform',\n     gradientUnits: 'gradientUnits',\n     patternContentUnits: 'patternContentUnits',\n@@ -73,6 +81,7 @@ var SVGDOMPropertyConfig = {\n     stopOpacity: 'stop-opacity',\n     strokeDasharray: 'stroke-dasharray',\n     strokeLinecap: 'stroke-linecap',\n+    strokeOpacity: 'stroke-opacity',\n     strokeWidth: 'stroke-width',\n     textAnchor: 'text-anchor',\n     viewBox: 'viewBox'"}, {"role": "assistant", "content": "fill-opacity, font-family, font-size, opacity, stroke-opacity."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-debug-tools/src/ReactDebugHooks.js b/packages/react-debug-tools/src/ReactDebugHooks.js\nindex a09da97f90d7..6409647772ef 100644\n--- a/packages/react-debug-tools/src/ReactDebugHooks.js\n+++ b/packages/react-debug-tools/src/ReactDebugHooks.js\n@@ -367,7 +367,11 @@ const DispatcherProxyHandler = {\n   },\n };\n \n-const DispatcherProxy = new Proxy(Dispatcher, DispatcherProxyHandler);\n+// `Proxy` may not exist on some platforms\n+const DispatcherProxy =\n+  typeof Proxy === 'undefined'\n+    ? Dispatcher\n+    : new Proxy(Dispatcher, DispatcherProxyHandler);\n \n // Inspect"}, {"role": "assistant", "content": "check if proxy exists before creating dispatcherproxy"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/jest/devtools/setupEnv.js b/scripts/jest/devtools/setupEnv.js\nindex a9c638a92ff9..7ef6003e5182 100644\n--- a/scripts/jest/devtools/setupEnv.js\n+++ b/scripts/jest/devtools/setupEnv.js\n@@ -29,9 +29,8 @@ global.process.env.LIGHT_MODE_DIMMED_ERROR_COLOR = LIGHT_MODE_DIMMED_ERROR_COLOR\n global.process.env.LIGHT_MODE_DIMMED_LOG_COLOR = LIGHT_MODE_DIMMED_LOG_COLOR;\n \n global._test_react_version = (range, testName, callback) => {\n-  const trimmedRange = range.replaceAll(' ', '');\n   const reactVersion = process.env.REACT_VERSION || ReactVersion.default;\n-  const shouldPass = semver.satisfies(reactVersion, trimmedRange);\n+  const shouldPass = semver.satisfies(reactVersion, range);\n \n   if (shouldPass) {\n     test(testName, callback);\n@@ -41,9 +40,8 @@ global._test_react_version = (range, testName, callback) => {\n };\n \n global._test_react_version_focus = (range, testName, callback) => {\n-  const trimmedRange = range.replaceAll(' ', '');\n   const reactVersion = process.env.REACT_VERSION || ReactVersion.default;\n-  const shouldPass = semver.satisfies(reactVersion, trimmedRange);\n+  const shouldPass = semver.satisfies(reactVersion, range);\n \n   if (shouldPass) {\n     // eslint-disable-next-line jest/no-focused-tests"}, {"role": "assistant", "content": "remove string.replaceall call in @reactversion pragma functions"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex 0805389c92fc..87c98c14253f 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -53,14 +53,18 @@ If the React component was previously rendered into `container`, this will perfo\n If the optional callback is provided, it will be executed after the component is rendered or updated.\n \n \n-### React.unmountAndReleaseReactRootNode\n+### React.unmountComponentAtNode\n \n ```javascript\n-unmountAndReleaseReactRootNode(DOMElement container)\n+unmountComponentAtNode(DOMElement container)\n ```\n \n Remove a mounted React component from the DOM and clean up its event handlers and state.\n \n+> Note:\n+>\n+> This method was called `React.unmountAndReleaseReactRootNode` until v0.5. It still works in v0.5 but will be removed in future versions.\n+\n \n ### React.renderComponentToString"}, {"role": "assistant", "content": "update api docs for unmountandreleasereactrootnode"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex 7b8d01187a3f..98bfddac87a1 100644\n--- a/package.json\n+++ b/package.json\n@@ -68,13 +68,11 @@\n     \"jest-config\": \"^19.0.1\",\n     \"jest-jasmine2\": \"^19.0.1\",\n     \"jest-runtime\": \"^19.0.1\",\n-    \"lighthouse\": \"^1.6.3\",\n     \"loose-envify\": \"^1.1.0\",\n     \"merge-stream\": \"^1.0.0\",\n     \"mime\": \"^1.3.4\",\n     \"minimist\": \"^1.2.0\",\n     \"ncp\": \"^2.0.0\",\n-    \"nodegit\": \"^0.18.0\",\n     \"object-assign\": \"^4.1.1\",\n     \"platform\": \"^1.1.0\",\n     \"prettier\": \"^1.2.2\",\n@@ -97,6 +95,10 @@\n     \"uglifyify\": \"^3.0.1\",\n     \"yargs\": \"^6.3.0\"\n   },\n+  \"optionalDependencies\": {\n+    \"lighthouse\": \"^1.6.3\",\n+    \"nodegit\": \"^0.18.0\"\n+  },\n   \"devEngines\": {\n     \"node\": \"4.x || 5.x || 6.x || 7.x\",\n     \"npm\": \"2.x || 3.x || 4.x\""}, {"role": "assistant", "content": "move 'lighthouse' and 'nodegit' to 'optionaldependencies'"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/shared/utils/__tests__/escapeTextContentForBrowser-test.js b/src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js\nsimilarity index 100%\nrename from src/shared/utils/__tests__/escapeTextContentForBrowser-test.js\nrename to src/renderers/dom/shared/__tests__/escapeTextContentForBrowser-test.js\ndiff --git a/src/shared/utils/__tests__/quoteAttributeValueForBrowser-test.js b/src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js\nsimilarity index 100%\nrename from src/shared/utils/__tests__/quoteAttributeValueForBrowser-test.js\nrename to src/renderers/dom/shared/__tests__/quoteAttributeValueForBrowser-test.js\ndiff --git a/src/shared/utils/escapeTextContentForBrowser.js b/src/renderers/dom/shared/escapeTextContentForBrowser.js\nsimilarity index 100%\nrename from src/shared/utils/escapeTextContentForBrowser.js\nrename to src/renderers/dom/shared/escapeTextContentForBrowser.js\ndiff --git a/src/shared/utils/quoteAttributeValueForBrowser.js b/src/renderers/dom/shared/quoteAttributeValueForBrowser.js\nsimilarity index 100%\nrename from src/shared/utils/quoteAttributeValueForBrowser.js\nrename to src/renderers/dom/shared/quoteAttributeValueForBrowser.js"}, {"role": "assistant", "content": "move escapetextcontentforbrowser and quoteattributevalueforbrowser to dom directory"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-core/package.json b/packages/react-devtools-core/package.json\nindex 30b606d7285e..f34c8ea23092 100644\n--- a/packages/react-devtools-core/package.json\n+++ b/packages/react-devtools-core/package.json\n@@ -11,6 +11,7 @@\n   \"files\": [\n     \"dist\",\n     \"backend.js\",\n+    \"build-info.json\",\n     \"standalone.js\"\n   ],\n   \"scripts\": {\ndiff --git a/packages/react-devtools-inline/package.json b/packages/react-devtools-inline/package.json\nindex dee1a11dc260..6204f647c0f3 100644\n--- a/packages/react-devtools-inline/package.json\n+++ b/packages/react-devtools-inline/package.json\n@@ -11,6 +11,7 @@\n   \"files\": [\n     \"dist\",\n     \"backend.js\",\n+    \"build-info.json\",\n     \"frontend.js\"\n   ],\n   \"scripts\": {\ndiff --git a/packages/react-devtools/package.json b/packages/react-devtools/package.json\nindex 2ce188a47f7b..d141a2ebb14d 100644\n--- a/packages/react-devtools/package.json\n+++ b/packages/react-devtools/package.json\n@@ -12,6 +12,7 @@\n   },\n   \"files\": [\n     \"bin.js\",\n+    \"build-info.json\",\n     \"app.html\",\n     \"app.js\",\n     \"index.js\","}, {"role": "assistant", "content": "add build-info.json to package files array for non-private dt packages"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/main.js b/main.js\nindex 8d0714103991..bcea00055d9d 100644\n--- a/main.js\n+++ b/main.js\n@@ -26,6 +26,9 @@ module.exports = {\n     if (options && options.sourceMap) {\n       result.sourceMap = output.sourceMap.toJSON();\n     }\n+    if (options && options.sourceFilename) {\n+      result.sourceMap.sources = [options.sourceFilename];\n+    }\n     return result;\n   }\n };\n@@ -46,6 +49,9 @@ function innerTransform(input, options) {\n   }\n \n   var visitorList = visitors.getVisitorsBySet(visitorSets);\n+  if (options.sourceFilename) {\n+    options.filename = options.sourceFilename;\n+  }\n   return transform(visitorList, input, options);\n }"}, {"role": "assistant", "content": "fix sourcemap filenames when using transformwithdetails. fixes #3140"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/index.classic.fb.js b/packages/react-dom/index.classic.fb.js\nindex 96ce6a6cc35c..1f451d70348b 100644\n--- a/packages/react-dom/index.classic.fb.js\n+++ b/packages/react-dom/index.classic.fb.js\n@@ -9,7 +9,6 @@\n \n import {addUserTimingListener} from 'shared/ReactFeatureFlags';\n import {isEnabled} from './src/events/ReactDOMEventListener';\n-import {getClosestInstanceFromNode} from './src/client/ReactDOMComponentTree';\n \n import {__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED} from './src/client/ReactDOM';\n \n@@ -18,9 +17,6 @@ Object.assign((__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: any), {\n   ReactBrowserEventEmitter: {\n     isEnabled,\n   },\n-  ReactDOMComponentTree: {\n-    getClosestInstanceFromNode,\n-  },\n   // Perf experiment\n   addUserTimingListener,\n });"}, {"role": "assistant", "content": "stop exposing reactdomcomponenttree from fb builds"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex 9efdfda878aa..1332d833b1fb 100644\n--- a/package.json\n+++ b/package.json\n@@ -3,8 +3,8 @@\n   \"description\": \"A set of complementary tools to React, including the JSX transformer.\",\n   \"version\": \"0.14.0-beta1\",\n   \"keywords\": [\n-    \"react\",\n     \"jsx\",\n+    \"react\",\n     \"transformer\",\n     \"view\"\n   ],\n@@ -12,8 +12,8 @@\n   \"bugs\": \"https://github.com/facebook/react/issues\",\n   \"license\": \"BSD-3-Clause\",\n   \"files\": [\n-    \"main.js\",\n     \"bin/jsx\",\n+    \"main.js\",\n     \"src/\"\n   ],\n   \"main\": \"main.js\",\n@@ -29,9 +29,8 @@\n     \"jstransform\": \"^11.0.0\"\n   },\n   \"devDependencies\": {\n-    \"babel\": \"~5.6.23\",\n-    \"babel-core\": \"~5.6.20\",\n-    \"babel-eslint\": \"^3.1.14\",\n+    \"babel\": \"^5.8.3\",\n+    \"babel-eslint\": \"^3.1.25\",\n     \"benchmark\": \"^1.0.0\",\n     \"browserify\": \"^9.0.3\",\n     \"bundle-collapser\": \"^1.1.1\",\n@@ -66,30 +65,30 @@\n     \"version\": 7\n   },\n   \"scripts\": {\n-    \"test\": \"jest\",\n+    \"build\": \"grunt build\",\n     \"jest\": \"jest\",\n-    \"lint\": \"grunt lint\",\n     \"linc\": \"git diff --name-only --diff-filter=ACMRTUB `git merge-base HEAD master` | grep '\\\\.js$' | xargs eslint --\",\n-    \"build\": \"grunt build\"\n+    \"lint\": \"grunt lint\",\n+    \"test\": \"jest\"\n   },\n   \"jest\": {\n+    \"modulePathIgnorePatterns\": [\n+      \"/.module-cache/\",\n+      \"/node_modules/\",\n+      \"/react/build/\"\n+    ],\n+    \"persistModuleRegistryBetweenSpecs\": true,\n     \"rootDir\": \"\",\n     \"scriptPreprocessor\": \"jest/preprocessor.js\",\n     \"setupEnvScriptFile\": \"jest/environment.js\",\n-    \"persistModuleRegistryBetweenSpecs\": true,\n     \"testFileExtensions\": [\n-      \"js\",\n       \"coffee\",\n+      \"js\",\n       \"ts\"\n     ],\n-    \"modulePathIgnorePatterns\": [\n-      \"/react/build/\",\n-      \"/node_modules/\",\n-      \"/.module-cache/\"\n-    ],\n     \"testPathDirs\": [\n-      \"<rootDir>/src\",\n-      \"<rootDir>/eslint-rules\"\n+      \"<rootDir>/eslint-rules\",\n+      \"<rootDir>/src\"\n     ],\n     \"unmockedModulePathPatterns\": [\n       \"\""}, {"role": "assistant", "content": "upgrade babel, babel-eslint; remove babel-core dep"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom-bindings/src/shared/ReactDOMFormActions.js b/packages/react-dom-bindings/src/shared/ReactDOMFormActions.js\nindex d716782e709d..addb70394b9a 100644\n--- a/packages/react-dom-bindings/src/shared/ReactDOMFormActions.js\n+++ b/packages/react-dom-bindings/src/shared/ReactDOMFormActions.js\n@@ -70,7 +70,7 @@ export function useFormStatus(): FormStatus {\n     throw new Error('Not implemented.');\n   } else {\n     const dispatcher = resolveDispatcher();\n-    // $FlowFixMe We know this exists because of the feature check above.\n+    // $FlowFixMe[not-a-function] We know this exists because of the feature check above.\n     return dispatcher.useHostTransitionStatus();\n   }\n }\ndiff --git a/packages/react-reconciler/src/ReactInternalTypes.js b/packages/react-reconciler/src/ReactInternalTypes.js\nindex bc9cfd1fb307..b177db722d0c 100644\n--- a/packages/react-reconciler/src/ReactInternalTypes.js\n+++ b/packages/react-reconciler/src/ReactInternalTypes.js\n@@ -422,9 +422,7 @@ export type Dispatcher = {\n   useId(): string,\n   useCacheRefresh?: () => <T>(?() => T, ?T) => void,\n   useMemoCache?: (size: number) => Array<any>,\n-  useHostTransitionStatus?: (\n-    initialStatus: TransitionStatus,\n-  ) => TransitionStatus,\n+  useHostTransitionStatus?: () => TransitionStatus,\n };\n \n export type CacheDispatcher = {"}, {"role": "assistant", "content": "remove unused `initialstatus` parameter from `usehosttransitionstatus`"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ui/dom/setInnerHTML.js b/src/browser/ui/dom/setInnerHTML.js\nindex a81caa437590..23da3071a01d 100644\n--- a/src/browser/ui/dom/setInnerHTML.js\n+++ b/src/browser/ui/dom/setInnerHTML.js\n@@ -20,6 +20,9 @@\n \n var ExecutionEnvironment = require('ExecutionEnvironment');\n \n+var WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\n+var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n+\n /**\n  * Set the innerHTML property of a node, ensuring that whitespace is preserved\n  * even in IE8.\n@@ -56,13 +59,8 @@ if (ExecutionEnvironment.canUseDOM) {\n       // thin air on IE8, this only happens if there is no visible text\n       // in-front of the non-visible tags. Piggyback on the whitespace fix\n       // and simply check if any non-visible tags appear in the source.\n-      if (html.match(/^[ \\r\\n\\t\\f]/) ||\n-          html[0] === '<' && (\n-            html.indexOf('<noscript') !== -1 ||\n-            html.indexOf('<script') !== -1 ||\n-            html.indexOf('<style') !== -1 ||\n-            html.indexOf('<meta') !== -1 ||\n-            html.indexOf('<link') !== -1)) {\n+      if (WHITESPACE_TEST.test(html) ||\n+          html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n         // Recover leading whitespace by temporarily prepending any character.\n         // \\uFEFF has the potential advantage of being zero-width/invisible.\n         node.innerHTML = '\\uFEFF' + html;"}, {"role": "assistant", "content": "use faster cached regexps for tests in setinnerhtml"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex a2da48dd5f33..d424e40b3dfb 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -40,7 +40,11 @@ export let enableUserTimingAPI = __DEV__ && !__EXPERIMENTAL__;\n \n export const enableProfilerTimer = __PROFILE__;\n export const enableProfilerCommitHooks = __PROFILE__;\n-export const enableSchedulerTracing = __PROFILE__;\n+\n+// Note: we'll want to remove this when we to userland implementation.\n+// For now, we'll turn it on for everyone because it's *already* on for everyone in practice.\n+// At least this will let us stop shipping <Profiler> implementation to all users.\n+export const enableSchedulerTracing = true;\n export const enableSchedulerDebugging = true;\n \n export const warnAboutDeprecatedLifecycles = true;"}, {"role": "assistant", "content": "make interaction tracing on by default in all www builds"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md\nindex 1037324842b0..58b2b52664d5 100644\n--- a/CONTRIBUTING.md\n+++ b/CONTRIBUTING.md\n@@ -30,6 +30,8 @@ Just make sure to run the whole test suite before submitting a pull request!\n \n ### Pull Requests\n \n+**Working on your first Pull Request?** You can learn how from this *free* series [How to Contribute to an Open Source Project on GitHub](https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github)\n+\n The core team will be monitoring for pull requests. When we get one, we'll run some Facebook-specific integration tests on it first. From here, we'll need to get another person to sign off on the changes and then merge the pull request. For API changes we may need to fix internal uses, which could cause some delay. We'll do our best to provide updates and feedback throughout the process.\n \n *Before* submitting a pull request, please make sure the following is done\u2026"}, {"role": "assistant", "content": "add beginner friendly resource for learning how to pr"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex f6cc484f00aa..dc378cffc73d 100644\n--- a/package.json\n+++ b/package.json\n@@ -101,7 +101,7 @@\n     \"nodegit\": \"^0.18.0\"\n   },\n   \"devEngines\": {\n-    \"node\": \"4.x || 5.x || 6.x || 7.x\",\n+    \"node\": \"4.x || 5.x || 6.x || 7.x || 8.x\",\n     \"npm\": \"2.x || 3.x || 4.x || 5.x\"\n   },\n   \"commonerConfig\": {"}, {"role": "assistant", "content": "add node v8.x support to devengines in package.json"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/release-manager/commands/utils/npm.js b/scripts/release-manager/commands/utils/npm.js\nindex 06ab2d035f33..5a9bf235fc02 100644\n--- a/scripts/release-manager/commands/utils/npm.js\n+++ b/scripts/release-manager/commands/utils/npm.js\n@@ -14,6 +14,7 @@ const PACKAGES = [\n   'react-addons-update',\n   'react-dom',\n   'react-native-renderer',\n+  'react-test-renderer',\n   'react',\n ];\n \ndiff --git a/scripts/release-manager/commands/version.js b/scripts/release-manager/commands/version.js\nindex 9f4ed6a5ac82..3d69595b8fed 100644\n--- a/scripts/release-manager/commands/version.js\n+++ b/scripts/release-manager/commands/version.js\n@@ -17,6 +17,7 @@ const chalk = require('chalk');\n //    - packages/react-addons/package.json (version, peerDependencies.react)\n //    - packages/react-dom/package.json (version, peerDependencies.react)\n //    - packages/react-native-renderer/package.json (version, peerDependencies.react)\n+//    - packages/react-native-renderer/package.json (version, peerDependencies.react)\n //    - src/ReactVersion.js (module.exports)\n // 4. Commit?\n \n@@ -111,6 +112,10 @@ module.exports = function(vorpal, app) {\n             file: 'packages/react-native-renderer/package.json',\n             fields: ['version', 'dependencies.react'],\n           },\n+          {\n+            file: 'packages/react-test-renderer/package.json',\n+            fields: ['version', 'peerDependencies.react'],\n+          },\n         ].forEach((opts) => {\n           updateJSON.apply(this, [path.join(app.PATH_TO_REPO, opts.file), opts.fields, newVersion]);\n         });"}, {"role": "assistant", "content": "update to account for new react-test-renderer package"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/flow/react-native-host-hooks.js b/scripts/flow/react-native-host-hooks.js\nindex 1bfb9421faec..42bad64d536d 100644\n--- a/scripts/flow/react-native-host-hooks.js\n+++ b/scripts/flow/react-native-host-hooks.js\n@@ -10,10 +10,10 @@\n /* eslint-disable */\n \n declare module 'deepDiffer' {\n-  declare function exports(one: any, two: any): boolean;\n+  declare module.exports: (one: any, two: any) => boolean;\n }\n declare module 'deepFreezeAndThrowOnMutationInDev' {\n-  declare function exports<T>(obj: T): T;\n+  declare module.exports: <T>(obj: T) => T;\n }\n declare module 'flattenStyle' {\n }\n@@ -83,7 +83,7 @@ declare module 'UIManager' {\n   ): Promise<any>;\n }\n declare module 'View' {\n-  declare var exports: typeof React$Component;\n+  declare module.exports: typeof React$Component;\n }\n \n declare module 'RTManager' {"}, {"role": "assistant", "content": "use `declare module.exports` syntax for flow libdefs"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/devtools/views/Profiler/CommitFlamegraph.js b/src/devtools/views/Profiler/CommitFlamegraph.js\nindex 982722415283..091fd96b6187 100644\n--- a/src/devtools/views/Profiler/CommitFlamegraph.js\n+++ b/src/devtools/views/Profiler/CommitFlamegraph.js\n@@ -123,9 +123,13 @@ function CommitFlamegraph({\n   const selectedChartNode = useMemo(() => {\n     let chartNode = null;\n     if (selectedFiberID !== null) {\n-      chartNode = ((chartData.rows[selectedChartNodeIndex].find(\n+      const foundChartNode = chartData.rows[selectedChartNodeIndex].find(\n         chartNode => chartNode.id === selectedFiberID\n-      ): any): ChartNode);\n+      );\n+\n+      if (foundChartNode !== undefined) {\n+        chartNode = foundChartNode;\n+      }\n     }\n     return chartNode;\n   }, [chartData, selectedFiberID, selectedChartNodeIndex]);"}, {"role": "assistant", "content": "fix undefined chart node when switching commits in profiler"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex af3537e96985..2d4b09efd3b3 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -110,7 +110,7 @@ var ReactCompositeComponentInterface = {\n    * @return {object}\n    * @optional\n    */\n-  getDefaultProps: SpecPolicy.DEFINE_ONCE,\n+  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n \n   /**\n    * Invoked once before the component is mounted. The return value will be used"}, {"role": "assistant", "content": "change spec policy for getdefaultprops to specpolicy.define_many_merged"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/scheduler/src/__tests__/SchedulerBrowser-test.internal.js b/packages/scheduler/src/__tests__/SchedulerBrowser-test.internal.js\nindex 657e59762063..f7f56f31f7aa 100644\n--- a/packages/scheduler/src/__tests__/SchedulerBrowser-test.internal.js\n+++ b/packages/scheduler/src/__tests__/SchedulerBrowser-test.internal.js\n@@ -312,7 +312,7 @@ describe('SchedulerBrowser', () => {\n       runtime.assertLog(['Message Event', 'B']);\n     });\n \n-    it('adjusts frame rate by measuring inteval between rAF events', () => {\n+    it('adjusts frame rate by measuring interval between rAF events', () => {\n       runtime.setHardwareFrameRate(60);\n \n       scheduleCallback(NormalPriority, () => runtime.log('Tick'));\n@@ -371,7 +371,7 @@ describe('SchedulerBrowser', () => {\n       runtime.assertLog(['Message Event', 'Task']);\n     });\n \n-    it('task with continutation', () => {\n+    it('task with continuation', () => {\n       scheduleCallback(NormalPriority, () => {\n         runtime.log('Task');\n         while (!Scheduler.unstable_shouldYield()) {"}, {"role": "assistant", "content": "fix typo inteval -> interval & continutation -> continuation"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/circleci/run_devtools_e2e_tests.js b/scripts/circleci/run_devtools_e2e_tests.js\nindex 2c05db087e03..023c0ffc5407 100755\n--- a/scripts/circleci/run_devtools_e2e_tests.js\n+++ b/scripts/circleci/run_devtools_e2e_tests.js\n@@ -6,7 +6,7 @@ const {spawn} = require('child_process');\n const {join} = require('path');\n \n const ROOT_PATH = join(__dirname, '..', '..');\n-\n+const reactVersion = process.argv[2];\n const inlinePackagePath = join(ROOT_PATH, 'packages', 'react-devtools-inline');\n const shellPackagePath = join(ROOT_PATH, 'packages', 'react-devtools-shell');\n \n@@ -74,7 +74,15 @@ function runTestShell() {\n \n   logBright('Starting testing shell server');\n \n-  serverProcess = spawn('yarn', ['start'], {cwd: shellPackagePath});\n+  if (!reactVersion) {\n+    serverProcess = spawn('yarn', ['start'], {cwd: shellPackagePath});\n+  } else {\n+    serverProcess = spawn('yarn', ['start'], {\n+      cwd: shellPackagePath,\n+      env: {...process.env, REACT_VERSION: reactVersion},\n+    });\n+  }\n+\n   serverProcess.stdout.on('data', data => {\n     if (`${data}`.includes('Compiled successfully.')) {\n       logBright('Testing shell server running');\n@@ -106,8 +114,15 @@ function runTestShell() {\n \n async function runEndToEndTests() {\n   logBright('Running e2e tests');\n+  if (!reactVersion) {\n+    testProcess = spawn('yarn', ['test:e2e'], {cwd: inlinePackagePath});\n+  } else {\n+    testProcess = spawn('yarn', ['test:e2e'], {\n+      cwd: inlinePackagePath,\n+      env: {...process.env, REACT_VERSION: reactVersion},\n+    });\n+  }\n \n-  testProcess = spawn('yarn', ['test:e2e'], {cwd: inlinePackagePath});\n   testProcess.stdout.on('data', data => {\n     // Log without formatting because Playwright applies its own formatting.\n     const formatted = format(data);"}, {"role": "assistant", "content": "modify devtools e2e test script for regression tests"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/devtools/views/Components/TreeContext.js b/src/devtools/views/Components/TreeContext.js\nindex 1c4f4f9daecf..21b16e89a042 100644\n--- a/src/devtools/views/Components/TreeContext.js\n+++ b/src/devtools/views/Components/TreeContext.js\n@@ -27,7 +27,11 @@ import React, {\n   useReducer,\n   useRef,\n } from 'react';\n-import { unstable_next as next } from 'scheduler';\n+import {\n+  unstable_next as next,\n+  unstable_runWithPriority as runWithPriority,\n+  unstable_UserBlockingPriority as UserBlockingPriority,\n+} from 'scheduler';\n import { createRegExp } from '../utils';\n import { BridgeContext, StoreContext } from '../context';\n import Store from '../../store';\n@@ -699,7 +703,10 @@ function TreeContextController({ children }: Props) {\n \n   const dispatchWrapper = useCallback(\n     (action: Action) => {\n-      dispatch(action);\n+      // Run the first update at \"user-blocking\" priority in case dispatch is called from a non-React event.\n+      // In this case, the current (and \"next\") priorities would both be \"normal\",\n+      // and suspense would potentially block both updates.\n+      runWithPriority(UserBlockingPriority, () => dispatch(action));\n       next(() => dispatch({ type: 'UPDATE_INSPECTED_ELEMENT_ID' }));\n     },\n     [dispatch]"}, {"role": "assistant", "content": "run first setstate with explicit priority in case of non-react event handlers"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/ReactEventListener.js b/src/renderers/dom/client/ReactEventListener.js\nindex 2f2e721939ba..1cec1ff95593 100644\n--- a/src/renderers/dom/client/ReactEventListener.js\n+++ b/src/renderers/dom/client/ReactEventListener.js\n@@ -126,7 +126,7 @@ function handleTopLevelWithPath(bookKeeping) {\n       );\n \n       // Jump to the root of this React render tree\n-      while (currentPathElementID\u0001 !== newRootID) {\n+      while (currentPathElementID !== newRootID) {\n         i++;\n         currentPathElement = path[i];\n         currentPathElementID = ReactMount.getID(currentPathElement);"}, {"role": "assistant", "content": "remove the unexpected character in reacteventlistener"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/_posts/2014-09-24-testing-flux-applications.md b/docs/_posts/2014-09-24-testing-flux-applications.md\nindex f2728db83e14..df830620351b 100644\n--- a/docs/_posts/2014-09-24-testing-flux-applications.md\n+++ b/docs/_posts/2014-09-24-testing-flux-applications.md\n@@ -3,6 +3,8 @@ title: \"Testing Flux Applications\"\n author: Bill Fisher\n ---\n \n+**A more up-to-date version of this post is available as part of the [Flux documentation](http://facebook.github.io/flux/docs/testing-flux-applications.html).**\n+\n [Flux](http://facebook.github.io/flux/) is the application architecture that Facebook uses to build web applications with [React](http://facebook.github.io/react/). It's based on a unidirectional data flow. In previous blog posts and documentation articles, we've shown the [basic structure and data flow](http://facebook.github.io/flux/docs/overview.html), more closely examined the [dispatcher and action creators](http://facebook.github.io/react/blog/2014/07/30/flux-actions-and-the-dispatcher.html), and shown how to put it all together with a [tutorial](http://facebook.github.io/flux/docs/todo-list.html). Now let's look at how to do formal unit testing of Flux applications with [Jest](http://facebook.github.io/jest/), Facebook's auto-mocking testing framework."}, {"role": "assistant", "content": "add note linking to up-to-date doc on flux website"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactChildFiber.js b/src/renderers/shared/fiber/ReactChildFiber.js\nindex 4468c28aed4c..ba4adbadc4ac 100644\n--- a/src/renderers/shared/fiber/ReactChildFiber.js\n+++ b/src/renderers/shared/fiber/ReactChildFiber.js\n@@ -23,7 +23,6 @@ var {\n } = require('ReactCoroutine');\n \n var ReactFiber = require('ReactFiber');\n-var ReactPriorityLevel = require('ReactPriorityLevel');\n var ReactReifiedYield = require('ReactReifiedYield');\n var ReactTypeOfSideEffect = require('ReactTypeOfSideEffect');\n var ReactTypeOfWork = require('ReactTypeOfWork');\n@@ -56,10 +55,7 @@ const {\n } = ReactTypeOfWork;\n \n const {\n-  NoWork,\n-} = ReactPriorityLevel;\n-\n-const {\n+  NoEffect,\n   Placement,\n   Deletion,\n } = ReactTypeOfSideEffect;\n@@ -179,7 +175,7 @@ function ChildReconciler(shouldClone, shouldTrackSideEffects) {\n       // we're reconciling at a lower priority that means that this was\n       // down-prioritized.\n       fiber.pendingWorkPriority = priority;\n-      fiber.effectTag = NoWork;\n+      fiber.effectTag = NoEffect;\n       fiber.index = 0;\n       fiber.sibling = null;\n       return fiber;\ndiff --git a/src/renderers/shared/fiber/ReactFiberScheduler.js b/src/renderers/shared/fiber/ReactFiberScheduler.js\nindex b334d12924f3..fd236dbfce55 100644\n--- a/src/renderers/shared/fiber/ReactFiberScheduler.js\n+++ b/src/renderers/shared/fiber/ReactFiberScheduler.js\n@@ -137,7 +137,7 @@ module.exports = function<T, P, I, TI, C>(config : HostConfig<T, P, I, TI, C>) {\n           commitInsertion(effectfulFiber);\n           // Clear the effect tag so that we know that this is inserted, before\n           // any life-cycles like componentDidMount gets called.\n-          effectfulFiber.effectTag = NoWork;\n+          effectfulFiber.effectTag = NoEffect;\n           break;\n         }\n         case PlacementAndUpdate: {"}, {"role": "assistant", "content": "assign reacttypeofsideeffect to reactfiber.fiber.effecttag correctly"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react/src/ReactSharedSubset.experimental.js b/packages/react/src/ReactSharedSubset.experimental.js\nindex 932aa1da6d0c..4a9ad873c1dc 100644\n--- a/packages/react/src/ReactSharedSubset.experimental.js\n+++ b/packages/react/src/ReactSharedSubset.experimental.js\n@@ -19,6 +19,7 @@ export {\n   createElement,\n   createMutableSource as unstable_createMutableSource,\n   createRef,\n+  createServerContext,\n   forwardRef,\n   isValidElement,\n   lazy,"}, {"role": "assistant", "content": "add missing createservercontext for experimental shared subset"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/shared/__tests__/ReactStatelessComponent-test.js b/src/renderers/shared/shared/__tests__/ReactStatelessComponent-test.js\nindex 060ec461373b..8b3728b19812 100644\n--- a/src/renderers/shared/shared/__tests__/ReactStatelessComponent-test.js\n+++ b/src/renderers/shared/shared/__tests__/ReactStatelessComponent-test.js\n@@ -138,6 +138,20 @@ describe('ReactStatelessComponent', () => {\n     );\n   });\n \n+  it('should warn when stateless component returns undefined', () => {\n+    spyOn(console, 'error');\n+    function NotAComponent() {\n+    }\n+    expect(function() {\n+      ReactTestUtils.renderIntoDocument(<div><NotAComponent /></div>);\n+    }).toThrow();\n+    expectDev(console.error.calls.count()).toBe(1);\n+    expectDev(console.error.calls.argsFor(0)[0]).toContain(\n+      'NotAComponent(...): A valid React element (or null) must be returned. ' +\n+      'You may have returned undefined, an array or some other invalid object.'\n+    );\n+  });\n+\n   it('should throw on string refs in pure functions', () => {\n     function Child() {\n       return <div ref=\"me\" />;"}, {"role": "assistant", "content": "add a test for stateless components returning undefined"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/dom/DefaultDOMPropertyConfig.js b/src/dom/DefaultDOMPropertyConfig.js\nindex d78b46cdc225..270fda08a158 100644\n--- a/src/dom/DefaultDOMPropertyConfig.js\n+++ b/src/dom/DefaultDOMPropertyConfig.js\n@@ -26,6 +26,7 @@ var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\n var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\n var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\n var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;\n+var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\n \n var DefaultDOMPropertyConfig = {\n   isCustomAttribute: RegExp.prototype.test.bind(\n@@ -50,6 +51,7 @@ var DefaultDOMPropertyConfig = {\n     charSet: MUST_USE_ATTRIBUTE,\n     checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n     className: MUST_USE_PROPERTY,\n+    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n     colSpan: null,\n     content: null,\n     contentEditable: null,\n@@ -89,11 +91,12 @@ var DefaultDOMPropertyConfig = {\n     rel: null,\n     required: HAS_BOOLEAN_VALUE,\n     role: MUST_USE_ATTRIBUTE,\n+    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n     rowSpan: null,\n     scrollLeft: MUST_USE_PROPERTY,\n     scrollTop: MUST_USE_PROPERTY,\n     selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n-    size: null,\n+    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n     spellCheck: null,\n     src: null,\n     step: null,"}, {"role": "assistant", "content": "fix reactdomtextarea missing \"rows\" and \"cols\" attribute, incorrect \"size\" property"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/fiber/ReactDOMFiberEntry.js b/src/renderers/dom/fiber/ReactDOMFiberEntry.js\nindex 01090873ad72..0bd998e28861 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberEntry.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberEntry.js\n@@ -446,7 +446,7 @@ var DOMRenderer = ReactFiberReconciler({\n   ): boolean {\n     return (\n       instance.nodeType === ELEMENT_NODE &&\n-      type === instance.nodeName.toLowerCase()\n+      type.toLowerCase() === instance.nodeName.toLowerCase()\n     );\n   },\n \ndiff --git a/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js b/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\nindex 3f7ba7abcff0..15ea880a94ca 100644\n--- a/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\n+++ b/src/renderers/dom/shared/__tests__/ReactDOMServerIntegration-test.js\n@@ -1344,6 +1344,14 @@ describe('ReactDOMServerIntegration', () => {\n         },\n       );\n \n+      itRenders('svg element with a mixed case name', async render => {\n+        let e = await render(<svg><filter><feMorphology /></filter></svg>);\n+        e = e.firstChild.firstChild;\n+        expect(e.childNodes.length).toBe(0);\n+        expect(e.tagName).toBe('feMorphology');\n+        expect(e.namespaceURI).toBe('http://www.w3.org/2000/svg');\n+      });\n+\n       itRenders('a math element', async render => {\n         const e = await render(<math />);\n         expect(e.childNodes.length).toBe(0);"}, {"role": "assistant", "content": "fix false positive svg hydration warning for mixed case tags"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/02.1-jsx-in-depth.md b/docs/docs/02.1-jsx-in-depth.md\nindex 43ce01c5435e..1f69e765b066 100644\n--- a/docs/docs/02.1-jsx-in-depth.md\n+++ b/docs/docs/02.1-jsx-in-depth.md\n@@ -138,7 +138,7 @@ var tree = Nav(null, React.DOM.span(null));\n If you are building a component that have a lot of childrens, or if you are building your application with some categories of reusable components (like a `Form` category), to make more simple and easiest, you can use a *namespaced component* to avoid something like this:\n \n ```javascript\n-var Form = Form;\n+var Form = MyFormComponent;\n var FormRow = Form.Row;\n var FormLabel = Form.Label;\n var FormInput = Form.Input;\n@@ -156,7 +156,7 @@ var App = (\n Instead of declare a bunch of variables at the top, you'll get just one component that have other components as attributes.\n \n ```javascript\n-var Form = Form;\n+var Form = MyFormComponent;\n \n var App = (\n   <Form>\n@@ -171,11 +171,11 @@ var App = (\n For doing this, you just need to create your *\"sub-components\"* as attributes of the main component:\n \n ```javascript\n-var Form = React.createClass({ ... });\n+var MyFormComponent = React.createClass({ ... });\n \n-Form.Row = React.createClass({ ... });\n-Form.Label = React.createClass({ ... });\n-Form.Input = React.createClass({ ... });\n+MyFormComponent.Row = React.createClass({ ... });\n+MyFormComponent.Label = React.createClass({ ... });\n+MyFormComponent.Input = React.createClass({ ... });\n ```\n \n JSX will take care to make the things right when compile your code."}, {"role": "assistant", "content": "change the global variable to a new sample component"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ui/ReactMount.js b/src/browser/ui/ReactMount.js\nindex 95bde3dad25d..4d51f02f650f 100644\n--- a/src/browser/ui/ReactMount.js\n+++ b/src/browser/ui/ReactMount.js\n@@ -769,7 +769,7 @@ var ReactMount = {\n \n         if (__DEV__) {\n           console.warn(\n-            'React attempted to use reuse markup in a container but the ' +\n+            'React attempted to reuse markup in a container but the ' +\n             'checksum was invalid. This generally means that you are ' +\n             'using server rendering and the markup generated on the ' +\n             'server was not what the client was expecting. React injected ' +"}, {"role": "assistant", "content": "fix typo in warning message for invalid reused markup"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/11-advanced-performance.md b/docs/docs/11-advanced-performance.md\nindex 1b6fe29d85ee..e85932213f3c 100644\n--- a/docs/docs/11-advanced-performance.md\n+++ b/docs/docs/11-advanced-performance.md\n@@ -54,7 +54,7 @@ React.createClass({\n   },\n \n   render: function() {\n-    return <div>this.props.value</div>;\n+    return <div>{this.props.value}</div>;\n   }\n });\n ```\n@@ -78,7 +78,7 @@ React.createClass({\n   },\n \n   render: function() {\n-    return <div>this.props.value.foo</div>;\n+    return <div>{this.props.value.foo}</div>;\n   }\n });\n ```"}, {"role": "assistant", "content": "update advanced performance code examples so they would output values"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-native-renderer/src/ReactFabricEventEmitter.js b/packages/react-native-renderer/src/ReactFabricEventEmitter.js\nindex 959df5bc4873..49abda74eb36 100644\n--- a/packages/react-native-renderer/src/ReactFabricEventEmitter.js\n+++ b/packages/react-native-renderer/src/ReactFabricEventEmitter.js\n@@ -87,7 +87,11 @@ export function dispatchEvent(\n   let eventTarget = null;\n   if (enableNativeTargetAsInstance) {\n     if (targetFiber != null) {\n-      eventTarget = targetFiber.stateNode.canonical;\n+      const stateNode = targetFiber.stateNode;\n+      // Guard against Fiber being unmounted\n+      if (stateNode != null) {\n+        eventTarget = stateNode.canonical;\n+      }\n     }\n   } else {\n     eventTarget = nativeEvent.target;"}, {"role": "assistant", "content": "fix targetasinstance dispatchevent \"cannot read property of null\""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/getting-started.zh-CN.md b/docs/docs/getting-started.zh-CN.md\nindex 54c80ba377f3..da006ff20eaf 100644\n--- a/docs/docs/getting-started.zh-CN.md\n+++ b/docs/docs/getting-started.zh-CN.md\n@@ -161,7 +161,7 @@ ReactDOM.render(\n \n ## \u4e0b\u4e00\u6b65\n \n-\u53bb\u770b\u770b[\u5165\u95e8\u6559\u7a0b](/react/docs/tutorial.html) \u548c\u5165\u95e8\u6559\u7a0b\u5305 `examples` \u76ee\u5f55\u4e0b\u7684\u5176\u5b83\u4f8b\u5b50\u5b66\u4e60\u66f4\u591a\u3002\n+\u53bb\u770b\u770b[\u5165\u95e8\u6559\u7a0b](/react/docs/tutorial-zh-CN.html) \u548c\u5165\u95e8\u6559\u7a0b\u5305 `examples` \u76ee\u5f55\u4e0b\u7684\u5176\u5b83\u4f8b\u5b50\u5b66\u4e60\u66f4\u591a\u3002\n \n \u6211\u4eec\u8fd8\u6709\u4e00\u4e2a\u793e\u533a\u5f00\u53d1\u8005\u5171\u5efa\u7684 Wiki\uff1a[workflows, UI-components, routing, data management etc.](https://github.com/facebook/react/wiki/Complementary-Tools)"}, {"role": "assistant", "content": "change  from \"tutorial.html\" to \"tutorial-zh-cn.html\""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/shared/createEventResponder.js b/packages/shared/createEventResponder.js\nindex 9dfe11cfb2f6..cd21bfc9b082 100644\n--- a/packages/shared/createEventResponder.js\n+++ b/packages/shared/createEventResponder.js\n@@ -8,6 +8,7 @@\n \n import type {ReactEventResponder} from 'shared/ReactTypes';\n import {REACT_RESPONDER_TYPE} from 'shared/ReactSymbols';\n+import {hasBadMapPolyfill} from './hasBadMapPolyfill';\n \n export default function createEventResponder<E, C>(\n   displayName: string,\n@@ -35,7 +36,10 @@ export default function createEventResponder<E, C>(\n     rootEventTypes: rootEventTypes || null,\n     targetEventTypes: targetEventTypes || null,\n   };\n-  if (__DEV__) {\n+  // We use responder as a Map key later on. When we have a bad\n+  // polyfill, then we can't use it as a key as the polyfill tries\n+  // to add a property to the object.\n+  if (__DEV__ && !hasBadMapPolyfill) {\n     Object.freeze(eventResponder);\n   }\n   return eventResponder;"}, {"role": "assistant", "content": "ensure we check for bad polyfill when creating responders"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/server/ReactPartialRendererContext.js b/packages/react-dom/src/server/ReactPartialRendererContext.js\nindex 6a0e1fad16f3..b10e392e37d0 100644\n--- a/packages/react-dom/src/server/ReactPartialRendererContext.js\n+++ b/packages/react-dom/src/server/ReactPartialRendererContext.js\n@@ -56,10 +56,12 @@ export function validateContextBounds(\n   context: ReactContext<any>,\n   threadID: ThreadID,\n ) {\n+  // If `react` package is < 16.6, _threadCount is undefined.\n+  let initialThreadCount = context._threadCount || 0;\n   // If we don't have enough slots in this context to store this threadID,\n   // fill it in without leaving any holes to ensure that the VM optimizes\n   // this as non-holey index properties.\n-  for (let i = context._threadCount; i <= threadID; i++) {\n+  for (let i = initialThreadCount; i <= threadID; i++) {\n     // We assume that this is the same as the defaultValue which might not be\n     // true if we're rendering inside a secondary renderer but they are\n     // secondary because these use cases are very rare."}, {"role": "assistant", "content": "fix support for mixing react-dom/server@16.6 and react@<16.6"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/02.1-jsx-in-depth.md b/docs/docs/02.1-jsx-in-depth.md\nindex aff8beee89bf..36a503ecac2e 100644\n--- a/docs/docs/02.1-jsx-in-depth.md\n+++ b/docs/docs/02.1-jsx-in-depth.md\n@@ -58,7 +58,9 @@ var app = Nav({color:\"blue\"}, Profile(null, \"click\"));\n ```\n \n Use the [JSX Compiler](/react/jsx-compiler.html) to try out JSX and see how it\n-desugars into native JavaScript.\n+desugars into native JavaScript, and the \n+[HTML to JSX converter](/react/html-jsx.html) to convert your existing HTML to\n+JSX.\n \n If you want to use JSX, the [Getting Started](/react/docs/getting-started.html) guide shows\n how to setup compilation.\n@@ -104,7 +106,7 @@ See [Multiple Components](/react/docs/multiple-components.html) to learn more ab\n \n > Note:\n >\n-> Since JSX is JavaScript, identifiers such as `class` and `for` are discouraged\n+> Since JSX is JavaScript, identifiers such as `class` and `for` are not allowed\n > as XML attribute names. Instead, React DOM components expect attributes like\n > `className` and `htmlFor`, respectively."}, {"role": "assistant", "content": "add link to html to jsx converter to \u201cjsx in depth\u201d page"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react/src/ReactElement.js b/packages/react/src/ReactElement.js\nindex 0594412fa78f..9127453b9b55 100644\n--- a/packages/react/src/ReactElement.js\n+++ b/packages/react/src/ReactElement.js\n@@ -5,6 +5,7 @@\n  * LICENSE file in the root directory of this source tree.\n  */\n \n+import invariant from 'fbjs/lib/invariant';\n import warning from 'fbjs/lib/warning';\n import {REACT_ELEMENT_TYPE} from 'shared/ReactSymbols';\n \n@@ -290,6 +291,12 @@ export function cloneAndReplaceKey(oldElement, newKey) {\n  * See https://reactjs.org/docs/react-api.html#cloneelement\n  */\n export function cloneElement(element, config, children) {\n+  invariant(\n+    !(element === null || element === undefined),\n+    'React.cloneElement(...): The argument must be a React element, but you passed %s.',\n+    element,\n+  );\n+\n   let propName;\n \n   // Original props are copied\ndiff --git a/packages/react/src/__tests__/ReactElementClone-test.js b/packages/react/src/__tests__/ReactElementClone-test.js\nindex d5b08496ba74..475fa623cb22 100644\n--- a/packages/react/src/__tests__/ReactElementClone-test.js\n+++ b/packages/react/src/__tests__/ReactElementClone-test.js\n@@ -359,4 +359,18 @@ describe('ReactElementClone', () => {\n     }\n     expect(clone.props).toEqual({foo: 'ef'});\n   });\n+\n+  it('throws an error if passed null', () => {\n+    const element = null;\n+    expect(() => React.cloneElement(element)).toThrow(\n+      'React.cloneElement(...): The argument must be a React element, but you passed null.',\n+    );\n+  });\n+\n+  it('throws an error if passed undefined', () => {\n+    let element;\n+    expect(() => React.cloneElement(element)).toThrow(\n+      'React.cloneElement(...): The argument must be a React element, but you passed undefined.',\n+    );\n+  });\n });"}, {"role": "assistant", "content": "throw more specific error if passed undefined in react.cloneelement"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/__tests__/ReactCompositeComponentState-test.js b/src/renderers/__tests__/ReactCompositeComponentState-test.js\nindex 90189534384f..2d9351da1ef7 100644\n--- a/src/renderers/__tests__/ReactCompositeComponentState-test.js\n+++ b/src/renderers/__tests__/ReactCompositeComponentState-test.js\n@@ -414,4 +414,30 @@ describe('ReactCompositeComponent-state', () => {\n       'scu from a,b to a,b,c',\n     ]);\n   });\n+\n+  it('should treat assigning to this.state inside cWRP as a replaceState, with a warning', () => {\n+    let ops = [];\n+    class Test extends React.Component {\n+      state = { step: 1, extra: true };\n+      componentWillReceiveProps() {\n+        this.setState({ step: 2 }, () => {\n+          // Tests that earlier setState callbacks are not dropped\n+          ops.push(`step: ${this.state.step}, extra: ${!!this.state.extra}`);\n+        });\n+        // Treat like replaceState\n+        this.state = { step: 3 };\n+      }\n+      render() {\n+        return null;\n+      }\n+    }\n+\n+    // Mount\n+    const container = document.createElement('div');\n+    ReactDOM.render(<Test />, container);\n+    // Update\n+    ReactDOM.render(<Test />, container);\n+\n+    expect(ops).toEqual(['step: 3, extra: false']);\n+  });\n });\ndiff --git a/src/renderers/shared/fiber/ReactFiberClassComponent.js b/src/renderers/shared/fiber/ReactFiberClassComponent.js\nindex 87f3426099e4..13b6d7801033 100644\n--- a/src/renderers/shared/fiber/ReactFiberClassComponent.js\n+++ b/src/renderers/shared/fiber/ReactFiberClassComponent.js\n@@ -408,6 +408,10 @@ module.exports = function(\n     if (oldProps !== newProps || oldContext !== newContext) {\n       if (typeof instance.componentWillReceiveProps === 'function') {\n         instance.componentWillReceiveProps(newProps, newContext);\n+\n+        if (instance.state !== workInProgress.memoizedState) {\n+          updater.enqueueReplaceState(instance, instance.state, null);\n+        }\n       }\n     }"}, {"role": "assistant", "content": "support assigning directly to this.state inside cwrp"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/__tests__/ReactDOMInput-test.js b/packages/react-dom/src/__tests__/ReactDOMInput-test.js\nindex 057e36513364..03eed7bc1ec6 100644\n--- a/packages/react-dom/src/__tests__/ReactDOMInput-test.js\n+++ b/packages/react-dom/src/__tests__/ReactDOMInput-test.js\n@@ -1674,4 +1674,31 @@ describe('ReactDOMInput', () => {\n       // TODO: we should warn here.\n     });\n   });\n+\n+  describe('checked inputs without a value property', function() {\n+    // In absence of a value, radio and checkboxes report a value of \"on\".\n+    // Between 16 and 16.2, we assigned a node's value to it's current\n+    // value in order to \"dettach\" it from defaultValue. This had the unfortunate\n+    // side-effect of assigning value=\"on\" to radio and checkboxes\n+    it('does not add \"on\" in absence of value on a checkbox', function() {\n+      const container = document.createElement('div');\n+      ReactDOM.render(\n+        <input type=\"checkbox\" defaultChecked={true} />,\n+        container,\n+      );\n+      const node = container.firstChild;\n+\n+      expect(node.value).toBe('on');\n+      expect(node.hasAttribute('value')).toBe(false);\n+    });\n+\n+    it('does not add \"on\" in absence of value on a radio', function() {\n+      const container = document.createElement('div');\n+      ReactDOM.render(<input type=\"radio\" defaultChecked={true} />, container);\n+      const node = container.firstChild;\n+\n+      expect(node.value).toBe('on');\n+      expect(node.hasAttribute('value')).toBe(false);\n+    });\n+  });\n });"}, {"role": "assistant", "content": "add test to ensure checked inputs don't accidentally get value=\"on\""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-extensions/src/main.js b/packages/react-devtools-extensions/src/main.js\nindex a0f9bcea17a2..156eb81d07de 100644\n--- a/packages/react-devtools-extensions/src/main.js\n+++ b/packages/react-devtools-extensions/src/main.js\n@@ -30,6 +30,23 @@ const LOCAL_STORAGE_SUPPORTS_PROFILING_KEY =\n const isChrome = getBrowserName() === 'Chrome';\n const isEdge = getBrowserName() === 'Edge';\n \n+// since Chromium v102, requestAnimationFrame no longer fires in devtools_page (i.e. this file)\n+// mock requestAnimationFrame with setTimeout as a temporary workaround\n+// https://github.com/facebook/react/issues/24626\n+// The polyfill is based on https://gist.github.com/jalbam/5fe05443270fa6d8136238ec72accbc0\n+if (isChrome || isEdge) {\n+  const FRAME_TIME = 16;\n+  let lastTime = 0;\n+  window.requestAnimationFrame = function(callback, element) {\n+    const now = window.performance.now();\n+    const nextTime = Math.max(lastTime + FRAME_TIME, now);\n+    return setTimeout(function() {\n+      callback((lastTime = nextTime));\n+    }, nextTime - now);\n+  };\n+  window.cancelAnimationFrame = clearTimeout;\n+}\n+\n let panelCreated = false;\n \n // The renderer interface can't read saved component filters directly,"}, {"role": "assistant", "content": "mock requestanimationframe with settimeout as a temporary fix for #24626"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-call-return/package.json b/packages/react-call-return/package.json\nindex 2cf21889b88d..e1bd00b73cce 100644\n--- a/packages/react-call-return/package.json\n+++ b/packages/react-call-return/package.json\n@@ -3,6 +3,12 @@\n   \"description\": \"Experimental APIs for multi-pass rendering in React.\",\n   \"version\": \"0.1.0\",\n   \"repository\": \"facebook/react\",\n+  \"files\": [\n+    \"LICENSE\",\n+    \"README.md\",\n+    \"index.js\",\n+    \"cjs/\"\n+  ],\n   \"dependencies\": {\n     \"fbjs\": \"^0.8.16\",\n     \"object-assign\": \"^4.1.1\""}, {"role": "assistant", "content": "add missing \"files\" field to react-call-return package"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactFiberBeginWork.js b/src/renderers/shared/fiber/ReactFiberBeginWork.js\nindex 050e9d951d63..f0393658fe1b 100644\n--- a/src/renderers/shared/fiber/ReactFiberBeginWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberBeginWork.js\n@@ -260,7 +260,7 @@ module.exports = function<T, P, I, TI, PI, C, CX, PL>(\n     if (current === null) {\n       if (!workInProgress.stateNode) {\n         // In the initial pass we might need to construct the instance.\n-        constructClassInstance(workInProgress);\n+        constructClassInstance(workInProgress, workInProgress.pendingProps);\n         mountClassInstance(workInProgress, priorityLevel);\n         shouldUpdate = true;\n       } else {\ndiff --git a/src/renderers/shared/fiber/ReactFiberClassComponent.js b/src/renderers/shared/fiber/ReactFiberClassComponent.js\nindex 573e8f1bbb87..d97e5b5aa1d7 100644\n--- a/src/renderers/shared/fiber/ReactFiberClassComponent.js\n+++ b/src/renderers/shared/fiber/ReactFiberClassComponent.js\n@@ -285,9 +285,8 @@ module.exports = function(\n     ReactInstanceMap.set(instance, workInProgress);\n   }\n \n-  function constructClassInstance(workInProgress: Fiber): any {\n+  function constructClassInstance(workInProgress: Fiber, props: any): any {\n     const ctor = workInProgress.type;\n-    const props = workInProgress.pendingProps;\n     const unmaskedContext = getUnmaskedContext(workInProgress);\n     const needsContext = isContextConsumer(workInProgress);\n     const context = needsContext\n@@ -411,7 +410,7 @@ module.exports = function(\n \n     // If we didn't bail out we need to construct a new instance. We don't\n     // want to reuse one that failed to fully mount.\n-    const newInstance = constructClassInstance(workInProgress);\n+    const newInstance = constructClassInstance(workInProgress, newProps);\n     newInstance.props = newProps;\n     newInstance.state = newState = newInstance.state || null;\n     newInstance.context = newContext;"}, {"role": "assistant", "content": "fix bug where null props is passed to constructor when resuming mount"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/vendor/core/dom/isNode.js b/src/vendor/core/dom/isNode.js\nindex 2b1043993641..d47727701e09 100644\n--- a/src/vendor/core/dom/isNode.js\n+++ b/src/vendor/core/dom/isNode.js\n@@ -23,7 +23,7 @@\n  */\n function isNode(object) {\n   return !!(object && (\n-    typeof Node !== 'undefined' ? object instanceof Node :\n+    typeof Node === 'function' ? object instanceof Node :\n       typeof object === 'object' &&\n       typeof object.nodeType === 'number' &&\n       typeof object.nodeName === 'string'"}, {"role": "assistant", "content": "test that node is a function before using instanceof on it"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/isomorphic/devtools/ReactComponentTreeDevtool.js b/src/isomorphic/devtools/ReactComponentTreeDevtool.js\nindex 353b743e1b01..c0347a3246e5 100644\n--- a/src/isomorphic/devtools/ReactComponentTreeDevtool.js\n+++ b/src/isomorphic/devtools/ReactComponentTreeDevtool.js\n@@ -14,7 +14,8 @@\n var invariant = require('invariant');\n \n var tree = {};\n-var rootIDs = [];\n+var unmountedIDs = {};\n+var rootIDs = {};\n \n function updateTree(id, update) {\n   if (!tree[id]) {\n@@ -28,6 +29,10 @@ function updateTree(id, update) {\n       isMounted: false,\n       updateCount: 0,\n     };\n+    // TODO: We need to do this awkward dance because TopLevelWrapper \"never\n+    // gets mounted\" but its display name gets set in instantiateReactComponent\n+    // before its debug ID is set to 0.\n+    unmountedIDs[id] = true;\n   }\n   update(tree[id]);\n }\n@@ -99,10 +104,11 @@ var ReactComponentTreeDevtool = {\n \n   onMountComponent(id) {\n     updateTree(id, item => item.isMounted = true);\n+    delete unmountedIDs[id];\n   },\n \n   onMountRootComponent(id) {\n-    rootIDs.push(id);\n+    rootIDs[id] = true;\n   },\n \n   onUpdateComponent(id) {\n@@ -111,7 +117,8 @@ var ReactComponentTreeDevtool = {\n \n   onUnmountComponent(id) {\n     updateTree(id, item => item.isMounted = false);\n-    rootIDs = rootIDs.filter(rootID => rootID !== id);\n+    unmountedIDs[id] = true;\n+    delete rootIDs[id];\n   },\n \n   purgeUnmountedComponents() {\n@@ -120,9 +127,10 @@ var ReactComponentTreeDevtool = {\n       return;\n     }\n \n-    Object.keys(tree)\n-      .filter(id => !tree[id].isMounted)\n-      .forEach(purgeDeep);\n+    for (var id in unmountedIDs) {\n+      purgeDeep(id);\n+    }\n+    unmountedIDs = {};\n   },\n \n   isMounted(id) {\n@@ -168,7 +176,7 @@ var ReactComponentTreeDevtool = {\n   },\n \n   getRootIDs() {\n-    return rootIDs;\n+    return Object.keys(rootIDs);\n   },\n \n   getRegisteredIDs() {"}, {"role": "assistant", "content": "fix severe perf problems in component tree devtool"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/shared/warningWithoutStack.js b/packages/shared/warningWithoutStack.js\nindex 756ddc1ef435..94a6ed68ea26 100644\n--- a/packages/shared/warningWithoutStack.js\n+++ b/packages/shared/warningWithoutStack.js\n@@ -32,44 +32,12 @@ if (__DEV__) {\n       return;\n     }\n     if (typeof console !== 'undefined') {\n-      const [a, b, c, d, e, f, g, h] = args.map(item => '' + item);\n-      const message = 'Warning: ' + format;\n+      const argsWithFormat = args.map(item => '' + item);\n+      argsWithFormat.unshift('Warning: ' + format);\n \n-      // We intentionally don't use spread (or .apply) because it breaks IE9:\n-      // https://github.com/facebook/react/issues/13610\n-      switch (args.length) {\n-        case 0:\n-          console.error(message);\n-          break;\n-        case 1:\n-          console.error(message, a);\n-          break;\n-        case 2:\n-          console.error(message, a, b);\n-          break;\n-        case 3:\n-          console.error(message, a, b, c);\n-          break;\n-        case 4:\n-          console.error(message, a, b, c, d);\n-          break;\n-        case 5:\n-          console.error(message, a, b, c, d, e);\n-          break;\n-        case 6:\n-          console.error(message, a, b, c, d, e, f);\n-          break;\n-        case 7:\n-          console.error(message, a, b, c, d, e, f, g);\n-          break;\n-        case 8:\n-          console.error(message, a, b, c, d, e, f, g, h);\n-          break;\n-        default:\n-          throw new Error(\n-            'warningWithoutStack() currently supports at most 8 arguments.',\n-          );\n-      }\n+      // We intentionally don't use spread (or .apply) directly because it\n+      // breaks IE9: https://github.com/facebook/react/issues/13610\n+      Function.prototype.apply.call(console.error, console, argsWithFormat);\n     }\n     try {\n       // --- Welcome to debugging React ---"}, {"role": "assistant", "content": "use function.prototype.apply in warningwithoutstack"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/React.js b/src/React.js\nindex c354fbdf8c8f..5aa15e8c8bc4 100644\n--- a/src/React.js\n+++ b/src/React.js\n@@ -16,54 +16,12 @@ var ReactDOMServer = require('ReactDOMServer');\n var ReactIsomorphic = require('ReactIsomorphic');\n \n var assign = require('Object.assign');\n-var deprecated = require('deprecated');\n \n // `version` will be added here by ReactIsomorphic.\n var React = {};\n \n assign(React, ReactIsomorphic);\n \n-assign(React, {\n-  // ReactDOM\n-  findDOMNode: deprecated(\n-    'findDOMNode',\n-    'ReactDOM',\n-    'react-dom',\n-    ReactDOM,\n-    ReactDOM.findDOMNode\n-  ),\n-  render: deprecated(\n-    'render',\n-    'ReactDOM',\n-    'react-dom',\n-    ReactDOM,\n-    ReactDOM.render\n-  ),\n-  unmountComponentAtNode: deprecated(\n-    'unmountComponentAtNode',\n-    'ReactDOM',\n-    'react-dom',\n-    ReactDOM,\n-    ReactDOM.unmountComponentAtNode\n-  ),\n-\n-  // ReactDOMServer\n-  renderToString: deprecated(\n-    'renderToString',\n-    'ReactDOMServer',\n-    'react-dom/server',\n-    ReactDOMServer,\n-    ReactDOMServer.renderToString\n-  ),\n-  renderToStaticMarkup: deprecated(\n-    'renderToStaticMarkup',\n-    'ReactDOMServer',\n-    'react-dom/server',\n-    ReactDOMServer,\n-    ReactDOMServer.renderToStaticMarkup\n-  ),\n-});\n-\n React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\n React.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;"}, {"role": "assistant", "content": "remove dom functions from top-level isomorphic api"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/events/ReactDOMEventListener.js b/packages/react-dom/src/events/ReactDOMEventListener.js\nindex 32da3c610614..51897225474d 100644\n--- a/packages/react-dom/src/events/ReactDOMEventListener.js\n+++ b/packages/react-dom/src/events/ReactDOMEventListener.js\n@@ -188,11 +188,11 @@ export function trapEventForResponderEventSystem(\n     // and can provide polyfills if needed.\n     if (passive) {\n       if (passiveBrowserEventsSupported) {\n+        eventFlags |= IS_PASSIVE;\n+      } else {\n         eventFlags |= IS_ACTIVE;\n         eventFlags |= PASSIVE_NOT_SUPPORTED;\n         passive = false;\n-      } else {\n-        eventFlags |= IS_PASSIVE;\n       }\n     } else {\n       eventFlags |= IS_ACTIVE;"}, {"role": "assistant", "content": "flip event passive logic on passivebrowsereventssupported"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactFiberDevToolsHook.js b/src/renderers/shared/fiber/ReactFiberDevToolsHook.js\nindex b7a2d1fa9e27..dbd0c98213dd 100644\n--- a/src/renderers/shared/fiber/ReactFiberDevToolsHook.js\n+++ b/src/renderers/shared/fiber/ReactFiberDevToolsHook.js\n@@ -12,15 +12,15 @@\n \n 'use strict';\n \n-if (__DEV__) {\n-  var warning = require('fbjs/lib/warning');\n-}\n-\n import type {Fiber} from 'ReactFiber';\n import type {FiberRoot} from 'ReactFiberRoot';\n \n declare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n \n+if (__DEV__) {\n+  var warning = require('fbjs/lib/warning');\n+}\n+\n let rendererID = null;\n let injectInternals = null;\n let onCommitRoot = null;\n@@ -36,7 +36,9 @@ if (\n   } = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n \n   injectInternals = function(internals: Object) {\n-    warning(rendererID == null, 'Cannot inject into DevTools twice.');\n+    if (__DEV__) {\n+      warning(rendererID == null, 'Cannot inject into DevTools twice.');\n+    }\n     rendererID = inject(internals);\n   };"}, {"role": "assistant", "content": "wrap \"warning\" call in dev block to prevent prod error"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ui/dom/components/createFullPageComponent.js b/src/browser/ui/dom/components/createFullPageComponent.js\nindex 5176cfe05ead..ea4a692a7784 100644\n--- a/src/browser/ui/dom/components/createFullPageComponent.js\n+++ b/src/browser/ui/dom/components/createFullPageComponent.js\n@@ -33,6 +33,7 @@ function createFullPageComponent(tag) {\n   var elementFactory = ReactElement.createFactory(tag);\n \n   var FullPageComponent = ReactClass.createClass({\n+    tagName: tag.toUpperCase(),\n     displayName: 'ReactFullPageComponent' + tag,\n \n     componentWillUnmount: function() {\ndiff --git a/src/test/__tests__/ReactTestUtils-test.js b/src/test/__tests__/ReactTestUtils-test.js\nindex 53db1c856b9b..08789cda29e7 100644\n--- a/src/test/__tests__/ReactTestUtils-test.js\n+++ b/src/test/__tests__/ReactTestUtils-test.js\n@@ -206,4 +206,28 @@ describe('ReactTestUtils', function() {\n \n     expect(console.warn.calls.length).toBe(0);\n   });\n+\n+  it('should support injected wrapper components as DOM components', function() {\n+    var injectedDOMComponents = [\n+      'button',\n+      'form',\n+      'iframe',\n+      'img',\n+      'input',\n+      'option',\n+      'select',\n+      'textarea',\n+      'html',\n+      'head',\n+      'body'\n+    ];\n+\n+    injectedDOMComponents.forEach(function(type) {\n+      var component = ReactTestUtils.renderIntoDocument(\n+        React.createElement(type)\n+      );\n+      expect(component.tagName).toBe(type.toUpperCase());\n+      expect(ReactTestUtils.isDOMComponent(component)).toBe(true);\n+    });\n+  });\n });"}, {"role": "assistant", "content": "ensure fullpagecomponents are treated as dom components"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/vendor/core/invariant.js b/src/vendor/core/invariant.js\nindex 12649d5e6128..d99f3615c985 100644\n--- a/src/vendor/core/invariant.js\n+++ b/src/vendor/core/invariant.js\n@@ -29,34 +29,32 @@\n  * will remain to ensure logic does not differ in production.\n  */\n \n-var invariant = function(condition) {\n-  if (!condition) {\n-    var error = new Error(\n-      'Minified exception occured; use the non-minified dev environment for ' +\n-      'the full error message and additional helpful warnings.'\n-    );\n-    error.framesToPop = 1;\n-    throw error;\n-  }\n-};\n-\n-if (__DEV__) {\n-  invariant = function(condition, format, a, b, c, d, e, f) {\n+var invariant = function(condition, format, a, b, c, d, e, f) {\n+  if (__DEV__) {\n     if (format === undefined) {\n       throw new Error('invariant requires an error message argument');\n     }\n+  }\n \n-    if (!condition) {\n+  if (!condition) {\n+    var error;\n+    if (format === undefined) {\n+      error = new Error(\n+        'Minified exception occurred; use the non-minified dev environment ' +\n+        'for the full error message and additional helpful warnings.'\n+      );\n+    } else {\n       var args = [a, b, c, d, e, f];\n       var argIndex = 0;\n-      var error = new Error(\n+      error = new Error(\n         'Invariant Violation: ' +\n         format.replace(/%s/g, function() { return args[argIndex++]; })\n       );\n-      error.framesToPop = 1; // we don't care about invariant's own frame\n-      throw error;\n     }\n-  };\n-}\n+\n+    error.framesToPop = 1; // we don't care about invariant's own frame\n+    throw error;\n+  }\n+};\n \n module.exports = invariant;"}, {"role": "assistant", "content": "make invariant show formatted actual errors in all unminified environments"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/examples/todomvc-flux/js/dispatcher/__tests__/AppDispatcher-test.js b/examples/todomvc-flux/js/dispatcher/__tests__/AppDispatcher-test.js\nindex 2866cf8e40eb..0d38552a318f 100644\n--- a/examples/todomvc-flux/js/dispatcher/__tests__/AppDispatcher-test.js\n+++ b/examples/todomvc-flux/js/dispatcher/__tests__/AppDispatcher-test.js\n@@ -24,10 +24,11 @@ describe('AppDispatcher', function() {\n \n     var listener1Done = false;\n     var listener1 = function(pl) {\n-      return AppDispatcher.waitFor([index2], function() {\n-        // Second and third listeners should have now been called\n+      return AppDispatcher.waitFor([index2, index4], function() {\n+        // Second, third, and fourth listeners should have now been called\n         expect(listener2Done).toBe(true);\n         expect(listener3Done).toBe(true);\n+        expect(listener4Done).toBe(true);\n         listener1Done = true;\n       });\n     };\n@@ -49,6 +50,15 @@ describe('AppDispatcher', function() {\n     };\n     var index3 = AppDispatcher.register(listener3);\n \n+    var listener4Done = false;\n+    var listener4 = function(pl) {\n+      return AppDispatcher.waitFor([index3], function() {\n+        expect(listener3Done).toBe(true);\n+        listener4Done = true;\n+      });\n+    };\n+    var index4 = AppDispatcher.register(listener4);\n+\n     runs(function() {\n       AppDispatcher.dispatch(payload);\n     });"}, {"role": "assistant", "content": "add more complicated fourth listener to appdispatcher-test"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/testing/ReactTestRenderer.js b/src/renderers/testing/ReactTestRenderer.js\nindex 56785d7f972c..ba6659fc4f6f 100644\n--- a/src/renderers/testing/ReactTestRenderer.js\n+++ b/src/renderers/testing/ReactTestRenderer.js\n@@ -74,11 +74,15 @@ ReactTestComponent.prototype.toJSON = function() {\n       childrenJSON.push(json);\n     }\n   }\n-  return {\n+  var object = {\n     type: this._currentElement.type,\n     props: props,\n     children: childrenJSON.length ? childrenJSON : null,\n   };\n+  Object.defineProperty(object, '$$typeof', {\n+    value: Symbol.for('react.test.json'),\n+  });\n+  return object;\n };\n Object.assign(ReactTestComponent.prototype, ReactMultiChild.Mixin);\n \ndiff --git a/src/renderers/testing/__tests__/ReactTestRenderer-test.js b/src/renderers/testing/__tests__/ReactTestRenderer-test.js\nindex 5e233226b390..1d789c9ffcae 100644\n--- a/src/renderers/testing/__tests__/ReactTestRenderer-test.js\n+++ b/src/renderers/testing/__tests__/ReactTestRenderer-test.js\n@@ -28,6 +28,22 @@ describe('ReactTestRenderer', function() {\n     });\n   });\n \n+  it('exposes a type flag', function() {\n+    function Link() {\n+      return <a role=\"link\" />;\n+    }\n+    var renderer = ReactTestRenderer.create(<Link />);\n+    var object = renderer.toJSON();\n+    expect(object.$$typeof).toBe(Symbol.for('react.test.json'));\n+\n+    // $$typeof should not be enumerable.\n+    for (var key in object) {\n+      if (Object.prototype.hasOwnProperty.call(object, key)) {\n+        expect(key).not.toBe('$$typeof');\n+      }\n+    }\n+  });\n+\n   it('renders some basics with an update', function() {\n     var renders = 0;\n     var Component = React.createClass({"}, {"role": "assistant", "content": "add symbol to identify a reacttestcomponent instance."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-scheduling-profiler/src/constants.js b/packages/react-devtools-scheduling-profiler/src/constants.js\nindex e5f9336d73e7..2e463ae632d9 100644\n--- a/packages/react-devtools-scheduling-profiler/src/constants.js\n+++ b/packages/react-devtools-scheduling-profiler/src/constants.js\n@@ -11,6 +11,5 @@ export {\n   COMFORTABLE_LINE_HEIGHT,\n   COMPACT_LINE_HEIGHT,\n } from 'react-devtools-shared/src/constants.js';\n-import {TotalLanes} from 'react-reconciler/src/ReactFiberLane.new';\n \n-export const REACT_TOTAL_NUM_LANES = TotalLanes;\n+export const REACT_TOTAL_NUM_LANES = 31;"}, {"role": "assistant", "content": "fix react-devtools-scheduling-profiler tests on main"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/flow/react-native-host-hooks.js b/scripts/flow/react-native-host-hooks.js\nindex f7a5f26e6c2e..6616342a618e 100644\n--- a/scripts/flow/react-native-host-hooks.js\n+++ b/scripts/flow/react-native-host-hooks.js\n@@ -230,33 +230,3 @@ declare var nativeFabricUIManager: {\n   unstable_getCurrentEventPriority: () => number,\n   ...\n };\n-\n-declare module 'View' {\n-  declare module.exports: typeof React$Component;\n-}\n-\n-declare module 'RTManager' {\n-  declare function createNode(\n-    tag: number,\n-    classType: string,\n-    props: ?Object,\n-  ): void;\n-\n-  declare function beginUpdates(): void;\n-\n-  declare function appendChildToContext(\n-    contextTag: number,\n-    childTag: number,\n-  ): void;\n-  declare function appendChild(parentTag: number, childTag: number): void;\n-  declare function prependChild(childTag: number, beforeTag: number): void;\n-  declare function deleteChild(childTag: number): void;\n-  declare function updateNode(tag: number, props: ?Object): void;\n-\n-  declare function completeUpdates(): void;\n-}\n-\n-// shims/ReactFeatureFlags is generated by the packaging script\n-declare module '../shims/ReactFeatureFlags' {\n-  declare export var debugRenderPhaseSideEffects: boolean;\n-}"}, {"role": "assistant", "content": "remove unreferenced react-native-host-hooks from flow"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/tutorial.md b/docs/docs/tutorial.md\nindex ef9ab61a34a7..3b7636192178 100644\n--- a/docs/docs/tutorial.md\n+++ b/docs/docs/tutorial.md\n@@ -210,12 +210,13 @@ Markdown is a simple way to format your text inline. For example, surrounding te\n \n First, add the third-party **Showdown** library to your application. This is a JavaScript library which takes Markdown text and converts it to raw HTML. This requires a script tag in your head (which we have already included in the React playground):\n \n-```html{6}\n+```html{7}\n <!-- template.html -->\n <head>\n   <title>Hello React</title>\n   <script src=\"http://fb.me/react-{{site.react_version}}.js\"></script>\n   <script src=\"http://fb.me/JSXTransformer-{{site.react_version}}.js\"></script>\n+  <script src=\"http://code.jquery.com/jquery-1.10.0.min.js\"></script>\n   <script src=\"http://cdnjs.cloudflare.com/ajax/libs/showdown/0.3.1/showdown.min.js\"></script>\n </head>\n ```"}, {"role": "assistant", "content": "update tutorial.md to still have jquery script tag in later code sample"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/__tests__/ReactTestUtilsAct-test.js b/packages/react-dom/src/__tests__/ReactTestUtilsAct-test.js\nindex ca7aa3317c5c..257497f6a2ab 100644\n--- a/packages/react-dom/src/__tests__/ReactTestUtilsAct-test.js\n+++ b/packages/react-dom/src/__tests__/ReactTestUtilsAct-test.js\n@@ -503,16 +503,15 @@ function runActTests(label, render, unmount, rerender) {\n       // @gate __DEV__\n       it('warns if you try to interleave multiple act calls', async () => {\n         spyOnDevAndProd(console, 'error');\n-        // let's try to cheat and spin off a 'thread' with an act call\n-        (async () => {\n-          await act(async () => {\n-            await sleep(50);\n-          });\n-        })();\n \n-        await act(async () => {\n-          await sleep(100);\n-        });\n+        await Promise.all([\n+          act(async () => {\n+            await sleep(50);\n+          }),\n+          act(async () => {\n+            await sleep(100);\n+          }),\n+        ]);\n \n         await sleep(150);\n         if (__DEV__) {"}, {"role": "assistant", "content": "fix failing tests in latest 16.x and 18.x node versions"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/flow/config/flowconfig b/scripts/flow/config/flowconfig\nindex 0e19ddcc146a..99cd2da34e0a 100644\n--- a/scripts/flow/config/flowconfig\n+++ b/scripts/flow/config/flowconfig\n@@ -21,6 +21,7 @@\n [libs]\n ../../../node_modules/fbjs/flow/lib/dev.js\n ../environment.js\n+../react-devtools.js\n ../react-native-host-hooks.js\n \n [lints]"}, {"role": "assistant", "content": "add custom devtools flow definitions to shared flowconfig"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/shared/ReactFeatureFlags.js b/packages/shared/ReactFeatureFlags.js\nindex d966c9ec54c9..862a6bde9b26 100644\n--- a/packages/shared/ReactFeatureFlags.js\n+++ b/packages/shared/ReactFeatureFlags.js\n@@ -17,7 +17,7 @@ export const enableDebugTracing = false;\n \n // Adds user timing marks for e.g. state updates, suspense, and work loop stuff,\n // for an experimental scheduling profiler tool.\n-export const enableSchedulingProfiler = __PROFILE__ && __EXPERIMENTAL__;\n+export const enableSchedulingProfiler = __PROFILE__;\n \n // Helps identify side effects in render-phase lifecycle hooks and setState\n // reducers by double invoking them in StrictLegacyMode."}, {"role": "assistant", "content": "enable scheduling profiler flag for react-dom profiling builds"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-04-tags-and-attributes.md b/docs/docs/ref-04-tags-and-attributes.md\nindex 8481c75b1c43..6cb7207239a2 100644\n--- a/docs/docs/ref-04-tags-and-attributes.md\n+++ b/docs/docs/ref-04-tags-and-attributes.md\n@@ -86,6 +86,13 @@ There is also the React-specific attribute `dangerouslySetInnerHTML` ([more here\n \n ### SVG Attributes\n \n-Any attributes passed to SVG tags are passed through without changes.\n-\n-React used to support special camelCase aliases for certain SVG attributes, such as `clipPath`. If you use them now you'll see a deprecation warning. These aliases will be removed in the next version in favor of their real names from the SVG specification, such as `clip-path`. Attributes that have a camelCase name in the spec, such as `gradientTransform`, will keep their names.\n+```\n+clipPath cx cy d dx dy fill fillOpacity fontFamily\n+fontSize fx fy gradientTransform gradientUnits markerEnd\n+markerMid markerStart offset opacity patternContentUnits\n+patternUnits points preserveAspectRatio r rx ry spreadMethod\n+stopColor stopOpacity stroke  strokeDasharray strokeLinecap\n+strokeOpacity strokeWidth textAnchor transform version\n+viewBox x1 x2 x xlinkActuate xlinkArcrole xlinkHref xlinkRole\n+xlinkShow xlinkTitle xlinkType xmlBase xmlLang xmlSpace y1 y2 y\n+```"}, {"role": "assistant", "content": "revert \"merge pull request #5736 from gaearon/document-svg-passthrough\""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactFiberBeginWork.js b/src/renderers/shared/fiber/ReactFiberBeginWork.js\nindex 9b2ec521fcc6..ddcf88f32af0 100644\n--- a/src/renderers/shared/fiber/ReactFiberBeginWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberBeginWork.js\n@@ -72,6 +72,16 @@ module.exports = function<T, P, I, C>(config : HostConfig<T, P, I, C>) {\n     var fn = workInProgress.type;\n     var props = workInProgress.pendingProps;\n \n+    // TODO: Disable this before release, since it is not part of the public API\n+    // I use this for testing to compare the relative overhead of classes.\n+    if (typeof fn.shouldComponentUpdate === 'function') {\n+      if (workInProgress.memoizedProps !== null) {\n+        if (!fn.shouldComponentUpdate(workInProgress.memoizedProps, props)) {\n+          return bailoutOnAlreadyFinishedWork(current, workInProgress);\n+        }\n+      }\n+    }\n+\n     var nextChildren = fn(props);\n     reconcileChildren(current, workInProgress, nextChildren);\n     return workInProgress.child;"}, {"role": "assistant", "content": "add shouldcomponentupdate to functional components"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex a5972151b79a..3f6d8dec8110 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -26,7 +26,6 @@ export const {\n   enableDebugTracing,\n   skipUnmountedBoundaries,\n   createRootStrictEffectsByDefault,\n-  enableSuspenseLayoutEffectSemantics,\n   enableUseRefAccessWarning,\n   disableNativeComponentFrames,\n   disableSchedulerTimeoutInWorkLoop,\n@@ -38,6 +37,8 @@ export const {\n // On WWW, __EXPERIMENTAL__ is used for a new modern build.\n // It's not used anywhere in production yet.\n \n+export const enableSuspenseLayoutEffectSemantics = true;\n+\n export const enableStrictEffects =\n   __DEV__ && dynamicFeatureFlags.enableStrictEffects;\n export const debugRenderPhaseSideEffectsForStrictMode = __DEV__;"}, {"role": "assistant", "content": "make enablesuspenselayouteffectsemantics static for www"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/event/EventPluginUtils.js b/src/event/EventPluginUtils.js\nindex 5f2715ab9a72..bd7608034bb3 100644\n--- a/src/event/EventPluginUtils.js\n+++ b/src/event/EventPluginUtils.js\n@@ -135,7 +135,7 @@ function executeDispatchesInOrder(event, executeDispatch) {\n  * @return id of the first dispatch execution who's listener returns true, or\n  * null if no listener returned true.\n  */\n-function executeDispatchesInOrderStopAtTrue(event) {\n+function executeDispatchesInOrderStopAtTrueImpl(event) {\n   var dispatchListeners = event._dispatchListeners;\n   var dispatchIDs = event._dispatchIDs;\n   if (__DEV__) {\n@@ -159,6 +159,16 @@ function executeDispatchesInOrderStopAtTrue(event) {\n   return null;\n }\n \n+/**\n+ * @see executeDispatchesInOrderStopAtTrueImpl\n+ */\n+function executeDispatchesInOrderStopAtTrue(event) {\n+  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n+  event._dispatchIDs = null;\n+  event._dispatchListeners = null;\n+  return ret;\n+}\n+\n /**\n  * Execution of a \"direct\" dispatch - there must be at most one dispatch\n  * accumulated on the event or it is considered an error. It doesn't really make"}, {"role": "assistant", "content": "make eventpluginutils clear dispatchids and dispatchlisteners"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/devtools/store.js b/src/devtools/store.js\nindex 844d7e9b07fc..a764394184ec 100644\n--- a/src/devtools/store.js\n+++ b/src/devtools/store.js\n@@ -353,7 +353,7 @@ export default class Store extends EventEmitter {\n           break;\n         }\n         const child = ((this._idToElement.get(childID): any): Element);\n-        index += child.weight;\n+        index += child.isCollapsed ? 1 : child.weight;\n       }\n \n       previousID = current.id;"}, {"role": "assistant", "content": "update store.getindexofelementid to take iscollapsed into account"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/release/utils.js b/scripts/release/utils.js\nindex 8b73017b65ff..972d311d3016 100644\n--- a/scripts/release/utils.js\n+++ b/scripts/release/utils.js\n@@ -128,10 +128,17 @@ const getPublicPackages = () => {\n \n     const packagePath = join(packagesRoot, dir, 'package.json');\n \n-    if (dir.charAt(0) !== '.' && statSync(packagePath).isFile()) {\n-      const packageJSON = JSON.parse(readFileSync(packagePath));\n-\n-      return packageJSON.private !== true;\n+    if (dir.charAt(0) !== '.') {\n+      let stat;\n+      try {\n+        stat = statSync(packagePath);\n+      } catch (err) {\n+        return false;\n+      }\n+      if (stat.isFile()) {\n+        const packageJSON = JSON.parse(readFileSync(packagePath));\n+        return packageJSON.private !== true;\n+      }\n     }\n \n     return false;"}, {"role": "assistant", "content": "fix release script to ignore empty package folders"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex fb9db54842e7..f5587c6f0122 100644\n--- a/package.json\n+++ b/package.json\n@@ -32,7 +32,7 @@\n     \"url\": \"https://github.com/facebook/react\"\n   },\n   \"dependencies\": {\n-    \"commoner\": \"~0.9.0\",\n+    \"commoner\": \"~0.9.1\",\n     \"esprima-fb\": \"~3001.1.0-dev-harmony-fb\",\n     \"jstransform\": \"~3.0.0\"\n   },"}, {"role": "assistant", "content": "upgrade commoner dependency to v0.9.1 to fix mkdirp bug."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberReconciler.js b/packages/react-reconciler/src/ReactFiberReconciler.js\nindex be4bab8089bf..3202f36c1a84 100644\n--- a/packages/react-reconciler/src/ReactFiberReconciler.js\n+++ b/packages/react-reconciler/src/ReactFiberReconciler.js\n@@ -473,7 +473,7 @@ if (__DEV__) {\n \n export function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n   const {findFiberByHostInstance} = devToolsConfig;\n-  const {ReactCurrentDispatcher} = ReactSharedInternals;\n+  const {ReactCurrentDispatcher, ReactDebugCurrentFrame} = ReactSharedInternals;\n \n   return injectInternals({\n     ...devToolsConfig,\n@@ -501,5 +501,7 @@ export function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n     scheduleRefresh: __DEV__ ? scheduleRefresh : null,\n     scheduleRoot: __DEV__ ? scheduleRoot : null,\n     setRefreshHandler: __DEV__ ? setRefreshHandler : null,\n+    // Enables DevTools to append component stack to error messages in DEV mode.\n+    debugCurrentFrame: ReactDebugCurrentFrame,\n   });\n }"}, {"role": "assistant", "content": "inject reactdebugcurrentframe into devtools so it can append component stacks to warnings in dev mode"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/client/ReactDOM.js b/packages/react-dom/src/client/ReactDOM.js\nindex ffd34d6e48c1..1d43d2e6ed8f 100644\n--- a/packages/react-dom/src/client/ReactDOM.js\n+++ b/packages/react-dom/src/client/ReactDOM.js\n@@ -772,9 +772,11 @@ type RootOptions = {\n };\n \n function createRoot(container: DOMContainer, options?: RootOptions): ReactRoot {\n+  const functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';\n   invariant(\n     isValidContainer(container),\n-    'unstable_createRoot(...): Target container is not a DOM element.',\n+    '%s(...): Target container is not a DOM element.',\n+    functionName,\n   );\n   const hydrate = options != null && options.hydrate === true;\n   return new ReactRoot(container, true, hydrate);"}, {"role": "assistant", "content": "update createroot warning message based on `enablestableconcurrentmodeapis`"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/dom/components/ReactDOMInput.js b/src/dom/components/ReactDOMInput.js\nindex 27148e483ba6..b461f711d848 100644\n--- a/src/dom/components/ReactDOMInput.js\n+++ b/src/dom/components/ReactDOMInput.js\n@@ -130,17 +130,24 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n     var name = this.props.name;\n     if (this.props.type === 'radio' && name != null) {\n       var rootNode = this.getDOMNode();\n+      var queryRoot = rootNode;\n+\n+      while (queryRoot.parentNode) {\n+        queryRoot = queryRoot.parentNode;\n+      }\n+\n       // If `rootNode.form` was non-null, then we could try `form.elements`,\n       // but that sometimes behaves strangely in IE8. We could also try using\n       // `form.getElementsByName`, but that will only return direct children\n       // and won't include inputs that use the HTML5 `form=` attribute. Since\n       // the input might not even be in a form, let's just use the global\n-      // `getElementsByName` to ensure we don't miss anything.\n-      var group = document.getElementsByName(name);\n+      // `querySelectorAll` to ensure we don't miss anything.\n+      var group = queryRoot.querySelectorAll(\n+        'input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n+\n       for (var i = 0, groupLen = group.length; i < groupLen; i++) {\n         var otherNode = group[i];\n         if (otherNode === rootNode ||\n-            otherNode.nodeName !== 'INPUT' || otherNode.type !== 'radio' ||\n             otherNode.form !== rootNode.form) {\n           continue;\n         }"}, {"role": "assistant", "content": "use queryselectorall instead of getelementsbyname in reactdominput."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/shared/warningWithoutStack.js b/packages/shared/warningWithoutStack.js\nindex 50b58a85d6f6..c2c911a26456 100644\n--- a/packages/shared/warningWithoutStack.js\n+++ b/packages/shared/warningWithoutStack.js\n@@ -26,7 +26,8 @@ if (__DEV__) {\n       return;\n     }\n     if (typeof console !== 'undefined') {\n-      console.error('Warning: ' + format, ...args);\n+      const stringArgs = args.map(item => '' + item);\n+      console.error('Warning: ' + format, ...stringArgs);\n     }\n     try {\n       // --- Welcome to debugging React ---"}, {"role": "assistant", "content": "ensure arguments are coerced to strings in warnings"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js b/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js\nindex 7a02c1904a7f..75f5dc7922d2 100644\n--- a/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js\n+++ b/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js\n@@ -741,6 +741,13 @@ var ReactCompositeComponentMixin = {\n     nextUnmaskedContext\n   ) {\n     var inst = this._instance;\n+    invariant(\n+      inst != null,\n+      'Attempted to update component `%s` that has already been unmounted ' +\n+      '(or failed to mount).',\n+      this.getName() || 'ReactCompositeComponent'\n+    );\n+\n     var willReceive = false;\n     var nextContext;\n     var nextProps;"}, {"role": "assistant", "content": "improve error message for components in bad states"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberScope.js b/packages/react-reconciler/src/ReactFiberScope.js\nindex 1b33b78cadfa..34eb261f24d2 100644\n--- a/packages/react-reconciler/src/ReactFiberScope.js\n+++ b/packages/react-reconciler/src/ReactFiberScope.js\n@@ -31,6 +31,8 @@ function getSuspenseFallbackChild(fiber: Fiber): Fiber | null {\n   return ((((fiber.child: any): Fiber).sibling: any): Fiber).child;\n }\n \n+const emptyObject = {};\n+\n function collectScopedNodes(\n   node: Fiber,\n   fn: (type: string | Object, props: Object) => boolean,\n@@ -39,7 +41,7 @@ function collectScopedNodes(\n   if (enableScopeAPI) {\n     if (node.tag === HostComponent) {\n       const {type, memoizedProps} = node;\n-      if (fn(type, memoizedProps) === true) {\n+      if (fn(type, memoizedProps || emptyObject) === true) {\n         scopedNodes.push(getPublicInstance(node.stateNode));\n       }\n     }"}, {"role": "assistant", "content": "ensure props on scope query function is always object"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/test/reactComponentExpect.js b/src/test/reactComponentExpect.js\nindex b17caea96d46..0a359fe2d2f6 100644\n--- a/src/test/reactComponentExpect.js\n+++ b/src/test/reactComponentExpect.js\n@@ -20,7 +20,7 @@\n var ReactComponent = require('ReactComponent');\n var ReactTestUtils = require('ReactTestUtils');\n \n-var copyProperties = require('copyProperties');\n+var mergeInto = require('mergeInto');\n \n function reactComponentExpect(instance) {\n   if (instance instanceof reactComponentExpect) {\n@@ -35,7 +35,7 @@ function reactComponentExpect(instance) {\n   this.toBeValidReactComponent();\n }\n \n-copyProperties(reactComponentExpect.prototype, {\n+mergeInto(reactComponentExpect.prototype, {\n   // Getters -------------------------------------------------------------------\n \n   /**"}, {"role": "assistant", "content": "move test utils internally, update for consistency"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-test-renderer/src/ReactShallowRenderer.js b/packages/react-test-renderer/src/ReactShallowRenderer.js\nindex 956005da561a..fc3baf251f02 100644\n--- a/packages/react-test-renderer/src/ReactShallowRenderer.js\n+++ b/packages/react-test-renderer/src/ReactShallowRenderer.js\n@@ -147,9 +147,11 @@ class ReactShallowRenderer {\n     // Fallback to previous instance state to support rendering React.cloneElement()\n     const state = this._newState || this._instance.state || emptyObject;\n \n-    if (typeof this._instance.shouldComponentUpdate === 'function') {\n+    if (\n+      typeof this._instance.shouldComponentUpdate === 'function' &&\n+      !this._forcedUpdate\n+    ) {\n       if (\n-        this._forcedUpdate ||\n         this._instance.shouldComponentUpdate(props, state, context) === false\n       ) {\n         this._instance.context = context;\ndiff --git a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\nindex 55647fbaaf34..1f51e390040b 100644\n--- a/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n+++ b/packages/react-test-renderer/src/__tests__/ReactShallowRenderer-test.js\n@@ -142,6 +142,24 @@ describe('ReactShallowRenderer', () => {\n     expect(scuCounter).toEqual(0);\n   });\n \n+  it('should rerender when calling forceUpdate', () => {\n+    let renderCounter = 0;\n+    class SimpleComponent extends React.Component {\n+      render() {\n+        renderCounter += 1;\n+        return <div />;\n+      }\n+    }\n+\n+    const shallowRenderer = createRenderer();\n+    shallowRenderer.render(<SimpleComponent />);\n+    expect(renderCounter).toEqual(1);\n+\n+    const instance = shallowRenderer.getMountedInstance();\n+    instance.forceUpdate();\n+    expect(renderCounter).toEqual(2);\n+  });\n+\n   it('should shallow render a functional component', () => {\n     function SomeComponent(props, context) {\n       return ("}, {"role": "assistant", "content": "fix reactshallowrenderer not rerendering when calling forceupdate"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/devtools/views/Element.js b/src/devtools/views/Element.js\nindex 7006032af195..4fa325599df5 100644\n--- a/src/devtools/views/Element.js\n+++ b/src/devtools/views/Element.js\n@@ -1,6 +1,13 @@\n // @flow\n \n-import React, { Fragment, useCallback, useContext, useMemo } from 'react';\n+import React, {\n+  Fragment,\n+  useCallback,\n+  useContext,\n+  useMemo,\n+  useRef,\n+  useEffect,\n+} from 'react';\n import { ElementTypeClass, ElementTypeFunction } from 'src/devtools/types';\n import { createRegExp } from './utils';\n import { TreeContext } from './TreeContext';\n@@ -45,6 +52,13 @@ export default function ElementView({ index, style }: Props) {\n   const showDollarR =\n     isSelected && (type === ElementTypeClass || type === ElementTypeFunction);\n \n+  const component = useRef(null);\n+  useEffect(() => {\n+    if (isSelected && component.current !== null) {\n+      component.current.scrollIntoView();\n+    }\n+  }, [isSelected]);\n+\n   // TODO styles.SelectedElement is 100% width but it doesn't take horizontal overflow into account.\n \n   return (\n@@ -57,7 +71,7 @@ export default function ElementView({ index, style }: Props) {\n         paddingLeft: `${(depth - baseDepth) * 0.75 + 0.25}rem`,\n       }}\n     >\n-      <span className={styles.Component}>\n+      <span ref={component} className={styles.Component}>\n         <DisplayName displayName={displayName} id={id} />\n         {key && (\n           <Fragment>"}, {"role": "assistant", "content": "scroll to newly selected component if it's out of view"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/__tests__/refs-test.js b/src/core/__tests__/refs-test.js\nindex 505c2c3fbb79..193c9554ac99 100644\n--- a/src/core/__tests__/refs-test.js\n+++ b/src/core/__tests__/refs-test.js\n@@ -36,6 +36,9 @@ var ClickCounter = React.createClass({\n   triggerReset: function() {\n     this.setState({count: this.props.initialCount});\n   },\n+  handleClick: function() {\n+    this.setState({count: this.state.count + 1});\n+  },\n   render: function() {\n     var children = [];\n     var i;\n@@ -45,10 +48,7 @@ var ClickCounter = React.createClass({\n       );\n     }\n     return (\n-      <span className=\"clickIncrementer\"\n-          onClick={function() {\n-            this.setState({count: this.state.count + 1});\n-          }.bind(this)}>\n+      <span className=\"clickIncrementer\" onClick={this.handleClick}>\n         {children}\n       </span>\n     );\n@@ -77,7 +77,7 @@ var TestRefsComponent = React.createClass({\n   render: function() {\n     return (\n       <div>\n-        <div ref=\"resetDiv\" onClick={this.doReset.bind(this)}>\n+        <div ref=\"resetDiv\" onClick={this.doReset}>\n           Reset Me By Clicking This.\n         </div>\n         <GeneralContainerComponent ref=\"myContainer\">"}, {"role": "assistant", "content": "fix tests to silence some warnings due to autobinding"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/typechecking-with-proptypes.md b/docs/docs/typechecking-with-proptypes.md\nindex 63c3241c2e1c..ce5e0aedee97 100644\n--- a/docs/docs/typechecking-with-proptypes.md\n+++ b/docs/docs/typechecking-with-proptypes.md\n@@ -7,7 +7,7 @@ redirect_from:\n ---\n \n > Note:\n-> `React.PropTypes` is deprecated as of React v15.5. Please use [the `prop-types` library instead](https://github.com/aackerman/PropTypes).\n+> `React.PropTypes` is deprecated as of React v15.5. Please use [the `prop-types` library instead](https://www.npmjs.com/package/prop-types).\n \n As your app grows, you can catch a lot of bugs with typechecking. For some applications, you can use JavaScript extensions like [Flow](https://flowtype.org/) or [TypeScript](https://www.typescriptlang.org/) to typecheck your whole application. But even if you don't use those, React has some built-in typechecking abilities. To run typechecking on the props for a component, you can assign the special `propTypes` property:"}, {"role": "assistant", "content": "point users to the npm page instead of the github project for prop-types"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/ReactMultiChild.js b/src/core/ReactMultiChild.js\nindex 501baa21ca4b..6bfe277bd6cb 100644\n--- a/src/core/ReactMultiChild.js\n+++ b/src/core/ReactMultiChild.js\n@@ -197,6 +197,7 @@ var ReactMultiChild = {\n     mountChildren: function(children, transaction) {\n       var mountImages = [];\n       var index = 0;\n+      this._renderedChildren = children;\n       for (var name in children) {\n         var child = children[name];\n         if (children.hasOwnProperty(name) && child) {\n@@ -213,7 +214,6 @@ var ReactMultiChild = {\n           index++;\n         }\n       }\n-      this._renderedChildren = children;\n       return mountImages;\n     },"}, {"role": "assistant", "content": "expose the rendered children before they're actually mounted"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/dom/DefaultDOMPropertyConfig.js b/src/dom/DefaultDOMPropertyConfig.js\nindex 73eaeead81c5..1fae3153fdc0 100644\n--- a/src/dom/DefaultDOMPropertyConfig.js\n+++ b/src/dom/DefaultDOMPropertyConfig.js\n@@ -101,6 +101,7 @@ var DefaultDOMPropertyConfig = {\n     scrollTop: MUST_USE_PROPERTY,\n     selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n     size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n+    span: HAS_POSITIVE_NUMERIC_VALUE,\n     spellCheck: null,\n     src: null,\n     step: null,"}, {"role": "assistant", "content": "add span property to react defaultdompropertyconfig"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-noop-renderer/package.json b/packages/react-noop-renderer/package.json\nindex e7a145892bee..21fe8be9d891 100644\n--- a/packages/react-noop-renderer/package.json\n+++ b/packages/react-noop-renderer/package.json\n@@ -10,7 +10,7 @@\n     \"object-assign\": \"^4.1.1\",\n     \"prop-types\": \"^15.6.2\",\n     \"regenerator-runtime\": \"^0.11.0\",\n-    \"react-reconciler\": \"*\"\n+    \"react-reconciler\": \"* || 0.16.0-alpha.8af6728\"\n   },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0 || 16.6.0-beta.0\""}, {"role": "assistant", "content": "revert \"revert \"updating dependencies for react-noop-renderer\"\""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/backend/views/TraceUpdates/index.js b/packages/react-devtools-shared/src/backend/views/TraceUpdates/index.js\nindex e94d4fd5c13d..0637d7b818f1 100644\n--- a/packages/react-devtools-shared/src/backend/views/TraceUpdates/index.js\n+++ b/packages/react-devtools-shared/src/backend/views/TraceUpdates/index.js\n@@ -127,7 +127,9 @@ function prepareToDraw(): void {\n \n   draw(nodeToData);\n \n-  redrawTimeoutID = setTimeout(prepareToDraw, earliestExpiration - now);\n+  if (earliestExpiration !== Number.MAX_VALUE) {\n+    redrawTimeoutID = setTimeout(prepareToDraw, earliestExpiration - now);\n+  }\n }\n \n function measureNode(node: Object): Rect | null {"}, {"role": "assistant", "content": "fix performance issue in react-devtools when highlight enabled"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/DOMPropertyOperations.js b/src/renderers/dom/shared/DOMPropertyOperations.js\nindex 895a7ec71ed2..aa8010640c73 100644\n--- a/src/renderers/dom/shared/DOMPropertyOperations.js\n+++ b/src/renderers/dom/shared/DOMPropertyOperations.js\n@@ -138,7 +138,7 @@ var DOMPropertyOperations = {\n       if (mutationMethod) {\n         mutationMethod(node, value);\n       } else if (shouldIgnoreValue(propertyInfo, value)) {\n-        this.deleteValueForProperty(node, name);\n+        DOMPropertyOperations.deleteValueForProperty(node, name);\n         return;\n       } else if (propertyInfo.mustUseProperty) {\n         // Contrary to `setAttribute`, object properties are properly"}, {"role": "assistant", "content": "refer to object by name instead of function call context"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/grunt/config/jsx/jsx.js b/grunt/config/jsx/jsx.js\nindex c75c318aca84..4245cc7aa1ef 100644\n--- a/grunt/config/jsx/jsx.js\n+++ b/grunt/config/jsx/jsx.js\n@@ -6,7 +6,9 @@ var rootIDs = [\n \n var debug = {\n   rootIDs: rootIDs,\n-  configFile: \"grunt/config/jsx/debug.json\"\n+  configFile: \"grunt/config/jsx/debug.json\",\n+  sourceDir: \"src\",\n+  outputDir: \"build/modules\"\n };\n \n var test = {\n@@ -14,12 +16,16 @@ var test = {\n     \"test/all.js\",\n     \"**/__tests__/*.js\"\n   ]),\n-  configFile: debug.configFile\n+  configFile: debug.configFile,\n+  sourceDir: \"src\",\n+  outputDir: \"build/modules\"\n };\n \n var release = {\n   rootIDs: rootIDs,\n-  configFile: \"grunt/config/jsx/release.json\"\n+  configFile: \"grunt/config/jsx/release.json\",\n+  sourceDir: \"src\",\n+  outputDir: \"build/modules\"\n };\n \n module.exports = {\ndiff --git a/grunt/tasks/jsx.js b/grunt/tasks/jsx.js\nindex 1ecee11fd7c9..6b2f4123d74d 100644\n--- a/grunt/tasks/jsx.js\n+++ b/grunt/tasks/jsx.js\n@@ -9,8 +9,8 @@ module.exports = function() {\n \n   var args = [\n     \"bin/jsx\",\n-    \"src\",\n-    \"build/modules\"\n+    config.sourceDir,\n+    config.outputDir\n   ];\n \n   var rootIDs = expand({"}, {"role": "assistant", "content": "make the bin/jsx source and output directories configurable."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex 0808d1028f5d..de9a5b03cf0a 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -254,4 +254,4 @@ However, you may still specify `.propTypes` and `.defaultProps` by setting them\n >\n > Because stateless functions don't have a backing instance, you can't attach a ref to a stateless function component. Normally this isn't an issue, since stateless functions do not provide an imperative API. Without an imperative API, there isn't much you could do with an instance anyway. However, if a user wants to find the DOM node of a stateless function component, they must wrap the component in a stateful component (eg. ES6 class component) and attach the ref to the stateful wrapper component.\n \n-In an ideal world, most of your components would be stateless functions because these stateless components can follow a faster code path within the React core. This is the recommended pattern, when possible.\n+In an ideal world, most of your components would be stateless functions because in the future we\u2019ll also be able to make performance optimizations specific to these components by avoiding unnecessary checks and memory allocations. This is the recommended pattern, when possible."}, {"role": "assistant", "content": "clarify stateless function component optimizations."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/index.experimental.js b/packages/react-dom/index.experimental.js\nindex c21671c8306e..e946fee65632 100644\n--- a/packages/react-dom/index.experimental.js\n+++ b/packages/react-dom/index.experimental.js\n@@ -30,3 +30,30 @@ export {\n   preinitModule,\n   version,\n } from './src/client/ReactDOM';\n+\n+import type {FormStatus} from 'react-dom-bindings/src/shared/ReactDOMFormActions';\n+import {useFormStatus, useFormState} from './src/client/ReactDOM';\n+\n+export function experimental_useFormStatus(): FormStatus {\n+  if (__DEV__) {\n+    console.error(\n+      'useFormStatus is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useFormStatus();\n+}\n+\n+export function experimental_useFormState<S, P>(\n+  action: (S, P) => Promise<S>,\n+  initialState: S,\n+  permalink?: string,\n+): [S, (P) => void] {\n+  if (__DEV__) {\n+    console.error(\n+      'useFormState is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useFormState(action, initialState, permalink);\n+}\ndiff --git a/packages/react/index.experimental.js b/packages/react/index.experimental.js\nindex f1092ff4a877..c3d7e01adb6b 100644\n--- a/packages/react/index.experimental.js\n+++ b/packages/react/index.experimental.js\n@@ -58,3 +58,18 @@ export {\n   useTransition,\n   version,\n } from './src/React';\n+\n+import {useOptimistic} from './src/React';\n+\n+export function experimental_useOptimistic<S, A>(\n+  passthrough: S,\n+  reducer: ?(S, A) => S,\n+): [S, (A) => void] {\n+  if (__DEV__) {\n+    console.error(\n+      'useOptimistic is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useOptimistic(passthrough, reducer);\n+}"}, {"role": "assistant", "content": "add back temporary `experimental_` aliases for server actions apis"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/event/eventPlugins/ResponderSyntheticEvent.js b/src/renderers/shared/event/eventPlugins/ResponderSyntheticEvent.js\nindex ca2b8ecfe717..f1cf77feacfc 100644\n--- a/src/renderers/shared/event/eventPlugins/ResponderSyntheticEvent.js\n+++ b/src/renderers/shared/event/eventPlugins/ResponderSyntheticEvent.js\n@@ -31,7 +31,7 @@ var ResponderEventInterface = {\n  * @extends {SyntheticEvent}\n  */\n function ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n-  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n+  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n }\n \n SyntheticEvent.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);"}, {"role": "assistant", "content": "add a warning for adding properties into respondersyntheticevent"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberThrow.js b/packages/react-reconciler/src/ReactFiberThrow.js\nindex b739f4056c45..5806f63e345b 100644\n--- a/packages/react-reconciler/src/ReactFiberThrow.js\n+++ b/packages/react-reconciler/src/ReactFiberThrow.js\n@@ -15,7 +15,6 @@ import type {Update} from './ReactUpdateQueue';\n import type {Thenable} from './ReactFiberWorkLoop';\n import type {SuspenseContext} from './ReactFiberSuspenseContext';\n \n-import {unstable_wrap as Schedule_tracing_wrap} from 'scheduler/tracing';\n import getComponentName from 'shared/getComponentName';\n import warningWithoutStack from 'shared/warningWithoutStack';\n import {\n@@ -31,7 +30,6 @@ import {\n   ShouldCapture,\n   LifecycleEffectMask,\n } from 'shared/ReactSideEffectTags';\n-import {enableSchedulerTracing} from 'shared/ReactFeatureFlags';\n import {NoMode, BatchedMode} from './ReactTypeOfMode';\n import {shouldCaptureSuspense} from './ReactFiberSuspenseComponent';\n \n@@ -173,11 +171,6 @@ function attachPingListener(\n       thenable,\n       renderExpirationTime,\n     );\n-    if (enableSchedulerTracing) {\n-      if (thenable.__reactDoNotTraceInteractions !== true) {\n-        ping = Schedule_tracing_wrap(ping);\n-      }\n-    }\n     thenable.then(ping, ping);\n   }\n }"}, {"role": "assistant", "content": "remove unnecessary interaction tracing ping wrapper"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/ReactBrowserEventEmitter.js b/src/renderers/dom/client/ReactBrowserEventEmitter.js\nindex 7f203aace9c6..00cc48902497 100644\n--- a/src/renderers/dom/client/ReactBrowserEventEmitter.js\n+++ b/src/renderers/dom/client/ReactBrowserEventEmitter.js\n@@ -74,6 +74,7 @@ var isEventSupported = require('isEventSupported');\n  *    React Core     .  General Purpose Event Plugin System\n  */\n \n+var hasEventPageXY;\n var alreadyListeningTo = {};\n var isMonitoringScrollValue = false;\n var reactTopListenersCounter = 0;\n@@ -345,12 +346,19 @@ var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n    * Listens to window scroll and resize events. We cache scroll values so that\n    * application code can access them without triggering reflows.\n    *\n+   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n+   * pageX/pageY isn't supported (legacy browsers).\n+   *\n    * NOTE: Scroll events do not bubble.\n    *\n    * @see http://www.quirksmode.org/dom/events/scroll.html\n    */\n-  ensureScrollValueMonitoring: function() {\n-    if (!isMonitoringScrollValue) {\n+  ensureScrollValueMonitoring: function(){\n+    if (hasEventPageXY === undefined) {\n+      hasEventPageXY =\n+        document.createEvent && 'pageX' in document.createEvent('MouseEvent');\n+    }\n+    if (!hasEventPageXY && !isMonitoringScrollValue) {\n       var refresh = ViewportMetrics.refreshScrollValues;\n       ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n       isMonitoringScrollValue = true;"}, {"role": "assistant", "content": "disable viewportmetrics unless mouseevent lacks support for pagex/pagey"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/DOMPropertyOperations.js b/src/renderers/dom/shared/DOMPropertyOperations.js\nindex cb9dbc520dff..c242f4b0ed9c 100644\n--- a/src/renderers/dom/shared/DOMPropertyOperations.js\n+++ b/src/renderers/dom/shared/DOMPropertyOperations.js\n@@ -216,7 +216,7 @@ var DOMPropertyOperations = {\n     node.removeAttribute(name);\n     if (__DEV__) {\n       ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);\n-      ReactInstrumentation.debugTool.onNativeOperation(\n+      ReactInstrumentation.debugTool.onHostOperation(\n         ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n         'remove attribute',\n         name"}, {"role": "assistant", "content": "fix remaining onnativeoperation \u2192 onhostoperation rename"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\nindex 009ca37a6157..b36b2c5126a2 100644\n--- a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n+++ b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n@@ -107,6 +107,7 @@ var HTMLDOMPropertyConfig = {\n     is: MUST_USE_ATTRIBUTE,\n     keyParams: MUST_USE_ATTRIBUTE,\n     keyType: MUST_USE_ATTRIBUTE,\n+    kind: null,\n     label: null,\n     lang: null,\n     list: MUST_USE_ATTRIBUTE,\n@@ -152,6 +153,7 @@ var HTMLDOMPropertyConfig = {\n     spellCheck: null,\n     src: null,\n     srcDoc: MUST_USE_PROPERTY,\n+    srcLang: null,\n     srcSet: MUST_USE_ATTRIBUTE,\n     start: HAS_NUMERIC_VALUE,\n     step: null,"}, {"role": "assistant", "content": "add srclang and kind to better support track elements"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/fixtures/unstable-async/suspense/src/index.js b/fixtures/unstable-async/suspense/src/index.js\nindex d6287c50daa5..12a77f907843 100644\n--- a/fixtures/unstable-async/suspense/src/index.js\n+++ b/fixtures/unstable-async/suspense/src/index.js\n@@ -65,7 +65,7 @@ class Debugger extends PureComponent {\n   }\n \n   handleReset = () => {\n-    trace('Clear cache', () => {\n+    trace('Clear cache', performance.now(), () => {\n       cache.invalidate();\n       this.setState(state => ({\n         requests: {},"}, {"role": "assistant", "content": "fix minor bug with handlereset in suspense fixture"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/devtools/views/Profiler/ReloadAndProfileButton.js b/src/devtools/views/Profiler/ReloadAndProfileButton.js\nindex 5af7d8bf9e94..ac33e1feec42 100644\n--- a/src/devtools/views/Profiler/ReloadAndProfileButton.js\n+++ b/src/devtools/views/Profiler/ReloadAndProfileButton.js\n@@ -18,7 +18,11 @@ export default function ReloadAndProfileButton() {\n   }\n \n   return (\n-    <Button onClick={reloadAndProfile} title=\"Reload and start profiling\">\n+    <Button\n+      disabled={!store.supportsProfiling}\n+      onClick={reloadAndProfile}\n+      title=\"Reload and start profiling\"\n+    >\n       <ButtonIcon type=\"reload\" />\n     </Button>\n   );"}, {"role": "assistant", "content": "disable reload-and-profile button if no renderers support profiling"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-03-component-specs.md b/docs/docs/ref-03-component-specs.md\nindex 7294670c91b8..127b2ebf35eb 100644\n--- a/docs/docs/ref-03-component-specs.md\n+++ b/docs/docs/ref-03-component-specs.md\n@@ -112,7 +112,7 @@ Various methods are executed at specific points in a component's lifecycle.\n componentWillMount()\n ```\n \n-Invoked once, immediately before the initial rendering occurs. If you call `setState` within this method, `render()` will see the updated state and will be executed only once despite the state change.\n+Invoked once, both on the client and server, immediately before the initial rendering occurs. If you call `setState` within this method, `render()` will see the updated state and will be executed only once despite the state change.\n \n \n ### Mounting: componentDidMount\n@@ -121,7 +121,7 @@ Invoked once, immediately before the initial rendering occurs. If you call `setS\n componentDidMount()\n ```\n \n-Invoked immediately after rendering occurs. At this point in the lifecycle, the component has a DOM representation which you can access via `this.getDOMNode()`.\n+Invoked immediately after rendering occurs, only on the client (not on the server). At this point in the lifecycle, the component has a DOM representation which you can access via `this.getDOMNode()`.\n \n If you want to integrate with other JavaScript frameworks, set timers using `setTimeout` or `setInterval`, or send AJAX requests, perform those operations in this method."}, {"role": "assistant", "content": "add client/server mention in componentdid/willmount documentation"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\nindex 618c5c966b58..b71aafc78a33 100644\n--- a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n+++ b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n@@ -48,6 +48,7 @@ var HTMLDOMPropertyConfig = {\n     charSet: null,\n     challenge: null,\n     checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n+    cite: null,\n     classID: null,\n     className: null,\n     cols: HAS_POSITIVE_NUMERIC_VALUE,"}, {"role": "assistant", "content": "add \"cite\" attribute to whitelist for <blockquote> elements"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/html-jsx.md b/docs/html-jsx.md\nindex 76bb67edc390..56e84c47bbec 100644\n--- a/docs/html-jsx.md\n+++ b/docs/html-jsx.md\n@@ -6,6 +6,6 @@ id: html-jsx\n <div class=\"jsxCompiler\">\n   <h1>HTML to JSX Compiler</h1>\n   <div id=\"jsxCompiler\"></div>\n-  <script src=\"https://reactjs.github.io/react-magic/htmltojsx.min.js\"></script>\n+  <script src=\"https://reactcommunity.org/react-magic/htmltojsx.min.js\"></script>\n   <script src=\"js/html-jsx.js\"></script>\n </div>"}, {"role": "assistant", "content": "change script src for htmltojsx.min.js to referral target to fix https error"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/vendor/browser-transforms.js b/vendor/browser-transforms.js\nindex 797f233829d9..78a05c1374ad 100644\n--- a/vendor/browser-transforms.js\n+++ b/vendor/browser-transforms.js\n@@ -167,26 +167,35 @@ var load = exports.load = function(url, callback) {\n   return xhr.send(null);\n };\n \n-loadScripts = function(scripts, callback) {\n-  var result = [];\n+loadScripts = function(scripts) {\n+  var result = scripts.map(function() {\n+    return false;\n+  });\n+  var count = result.length;\n \n   var check = function() {\n-    var isComplete = result.every(function(task) {\n-      return task !== false;\n-    });\n-    if (isComplete) callback(result);\n+    var script, i;\n+\n+    for (i = 0; i < count; i++) {\n+      script = result[i];\n+\n+      if (script && !script.executed) {\n+        script.executed = true;\n+        run(script.content, script.url);\n+      } else if (!script) {\n+        break;\n+      }\n+    };\n   };\n \n   scripts.forEach(function(script, i) {\n-    result[i] = false;\n-\n     if (script.src) {\n       load(script.src, function(content, url) {\n-        result[i] = { content: content, url: url };\n+        result[i] = { executed: false, content: content, url: url };\n         check();\n       });\n     } else {\n-      result[i] = { content: script.innerHTML, url: null };\n+      result[i] = { executed: false, content: script.innerHTML, url: null };\n       check();\n     }\n   });\n@@ -205,11 +214,7 @@ runScripts = function() {\n \n   console.warn(\"You are using the in-browser JSX transformer. Be sure to precompile your JSX for production - http://facebook.github.io/react/docs/tooling-integration.html#jsx\");\n \n-  loadScripts(jsxScripts, function(results) {\n-    results.forEach(function(config) {\n-      run(config.content, config.url);\n-    });\n-  });\n+  loadScripts(jsxScripts);\n };\n \n if (typeof window !== \"undefined\" && window !== null) {"}, {"role": "assistant", "content": "load in parallel, evaluate linearly as they come in"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/__tests__/ReactPropTransferer-test.js b/src/core/__tests__/ReactPropTransferer-test.js\nindex 1854ef7e959c..ea33753a7341 100644\n--- a/src/core/__tests__/ReactPropTransferer-test.js\n+++ b/src/core/__tests__/ReactPropTransferer-test.js\n@@ -110,25 +110,26 @@ describe('ReactPropTransferer', function() {\n         .toBeDOMComponentWithNoChildren();\n   });\n \n-  it('should not transfer ref', function() {\n-    var RefTestComponent = React.createClass({\n+  it('should not transfer ref or key', function() {\n+    var TestComponent = React.createClass({\n       render: function() {\n         expect(this.props.ref).toBeUndefined();\n+        expect(this.props.key).toBeUndefined();\n         return <div />;\n       }\n     });\n-    var OuterRefTestComponent = React.createClass({\n+    var OuterTestComponent = React.createClass({\n       render: function() {\n-        return this.transferPropsTo(<RefTestComponent />);\n+        return this.transferPropsTo(<TestComponent />);\n       }\n     });\n-    var OuterOuterRefTestComponent = React.createClass({\n+    var OuterOuterTestComponent = React.createClass({\n       render: function() {\n-        return <OuterRefTestComponent ref=\"testref\" />;\n+        return <OuterTestComponent ref=\"testref\" key=\"testkey\" />;\n       }\n     });\n \n-    ReactTestUtils.renderIntoDocument(<OuterOuterRefTestComponent />);\n+    ReactTestUtils.renderIntoDocument(<OuterOuterTestComponent />);\n   });\n \n   it('should not transferPropsTo() a component you don\\'t own', function() {"}, {"role": "assistant", "content": "add unit test for transferpropsto, \"key\" should never transfer"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js b/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js\nindex 33cc332bf2e3..366bb93cf265 100644\n--- a/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js\n+++ b/src/renderers/shared/stack/event/eventPlugins/ResponderEventPlugin.js\n@@ -18,7 +18,6 @@ var ResponderSyntheticEvent = require('ResponderSyntheticEvent');\n var ResponderTouchHistoryStore = require('ResponderTouchHistoryStore');\n \n var accumulate = require('accumulate');\n-var invariant = require('invariant');\n var keyOf = require('keyOf');\n \n var isStartish = EventPluginUtils.isStartish;\n@@ -489,11 +488,14 @@ var ResponderEventPlugin = {\n     if (isStartish(topLevelType)) {\n       trackedTouchCount += 1;\n     } else if (isEndish(topLevelType)) {\n-      trackedTouchCount -= 1;\n-      invariant(\n-        trackedTouchCount >= 0,\n-        'Ended a touch event which was not counted in trackedTouchCount.'\n-      );\n+      if (trackedTouchCount >= 0) {\n+        trackedTouchCount -= 1;\n+      } else {\n+        console.error(\n+          'Ended a touch event which was not counted in `trackedTouchCount`.'\n+        );\n+        return null;\n+      }\n     }\n \n     ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);"}, {"role": "assistant", "content": "change `trackedtouchcount` invariant into a console.error"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/contributing/codebase-overview.md b/docs/contributing/codebase-overview.md\nindex 328f77e15a7c..d0062cf331b7 100644\n--- a/docs/contributing/codebase-overview.md\n+++ b/docs/contributing/codebase-overview.md\n@@ -113,7 +113,7 @@ One way to think about it is that the condition should reflect the normal situat\n \n It is a good idea to avoid spamming the console with duplicate warnings:\n \n-````js\n+```js\n var warning = require('warning');\n \n var didWarnAboutMath = false;"}, {"role": "assistant", "content": "remove one extraneous backtick from line 116 of 'codebase-overview.md' ."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/__tests__/profilingCache-test.js b/packages/react-devtools-shared/src/__tests__/profilingCache-test.js\nindex eb4a1aceba92..1a84be03aa50 100644\n--- a/packages/react-devtools-shared/src/__tests__/profilingCache-test.js\n+++ b/packages/react-devtools-shared/src/__tests__/profilingCache-test.js\n@@ -734,7 +734,7 @@ describe('ProfilingCache', () => {\n     }\n   });\n \n-  // @reactVersion >= 16.9\n+  // @reactVersion >= 18.0\n   it('should calculate durations based on actual children (not filtered children)', () => {\n     store.componentFilters = [utils.createDisplayNameFilter('^Parent$')];\n \ndiff --git a/scripts/jest/config.build-devtools.js b/scripts/jest/config.build-devtools.js\nindex ecea02fa338c..dd74a4ce984a 100644\n--- a/scripts/jest/config.build-devtools.js\n+++ b/scripts/jest/config.build-devtools.js\n@@ -51,8 +51,8 @@ moduleNameMapper['^react-reconciler/([^/]+)$'] =\n module.exports = Object.assign({}, baseConfig, {\n   // Redirect imports to the compiled bundles\n   moduleNameMapper: {\n-    ...moduleNameMapper,\n     ...devtoolsRegressionConfig.moduleNameMapper,\n+    ...moduleNameMapper,\n   },\n   // Don't run bundle tests on -test.internal.* files\n   testPathIgnorePatterns: ['/node_modules/', '-test.internal.js$'],"}, {"role": "assistant", "content": "fix modulenamemapper order in devtools config  #24602)"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/02.1-jsx-in-depth.md b/docs/docs/02.1-jsx-in-depth.md\nindex 7f1d52e4589c..4c7692ae07eb 100644\n--- a/docs/docs/02.1-jsx-in-depth.md\n+++ b/docs/docs/02.1-jsx-in-depth.md\n@@ -162,10 +162,15 @@ var content = <Container>{/* this is a comment */}<Nav /></Container>;\n Beyond the compilation step, JSX does not require any special tools.\n \n * Many editors already include reasonable support for JSX (Vim, Emacs js2-mode).\n+  * JSX syntax highlighting is available for Sublime Text and other editors\n+    that support `*.tmLanguage` using the third-party\n+    [`JavaScript (JSX).tmLanguage`][1].\n * Linting provides accurate line numbers after compiling without sourcemaps.\n * Elements use standard scoping so linters can find usage of out-of-scope\n   components.\n \n+[1]: https://github.com/yungsters/sublime/blob/master/tmLanguage/JavaScript%20(JSX).tmLanguage\n+\n ## Prior Work\n \n JSX is similar to several other JavaScript embedded XML language"}, {"role": "assistant", "content": "add link to third-party `javascript .tmlanguage` in docs."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/support.md b/docs/support.md\nindex 0c9e5690d0ed..4915455927da 100644\n--- a/docs/support.md\n+++ b/docs/support.md\n@@ -8,7 +8,7 @@ id: support\n \n ## Stack Overflow\n \n-Many members of the community use Stack Overflow to ask questions. Read through the [existing questions](http://stackoverflow.com/questions/tagged/reactjs) tagged with **reactjs** or [ask your own](http://stackoverflow.com/questions/ask)!\n+Many members of the community use Stack Overflow to ask questions. Read through the [existing questions](http://stackoverflow.com/questions/tagged/reactjs) tagged with **reactjs** or [ask your own](http://stackoverflow.com/questions/ask?tags=reactjs)!\n \n ## Discussion forum"}, {"role": "assistant", "content": "pre-fill tag when asking a stack overflow question"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/grunt/config/browserify.js b/grunt/config/browserify.js\nindex 0288fa751580..d7730a48d1e7 100644\n--- a/grunt/config/browserify.js\n+++ b/grunt/config/browserify.js\n@@ -9,6 +9,7 @@ var grunt = require('grunt');\n var UglifyJS = require('uglify-js');\n var uglifyify = require('uglifyify');\n var derequire = require('derequire');\n+var collapser = require('bundle-collapser/plugin');\n \n var SIMPLE_TEMPLATE =\n '/**\\n\\\n@@ -69,6 +70,7 @@ var min = {\n   debug: false,\n   standalone: 'React',\n   transforms: [envify({NODE_ENV: 'production'}), uglifyify],\n+  plugins: [collapser],\n   after: [es3ify.transform, derequire, minify, bannerify]\n };\n \n@@ -104,6 +106,7 @@ var addonsMin = {\n   standalone: 'React',\n   packageName: 'React (with addons)',\n   transforms: [envify({NODE_ENV: 'production'}), uglifyify],\n+  plugins: [collapser],\n   after: [es3ify.transform, derequire, minify, bannerify]\n };\n \ndiff --git a/grunt/tasks/browserify.js b/grunt/tasks/browserify.js\nindex 684c1ed8b0f0..060fe8f2437d 100644\n--- a/grunt/tasks/browserify.js\n+++ b/grunt/tasks/browserify.js\n@@ -13,6 +13,7 @@ module.exports = function() {\n   // grunt.config.requires('outfile');\n   // grunt.config.requires('entries');\n   config.transforms = config.transforms || [];\n+  config.plugins = config.plugins || [];\n   config.after = config.after || [];\n \n   // create the bundle we'll work with\n@@ -31,6 +32,8 @@ module.exports = function() {\n     bundle.transform({}, transform);\n   });\n \n+  config.plugins.forEach(bundle.plugin, bundle);\n+\n   // Actually bundle it up\n   var _this = this;\n   bundle.bundle(function(err, buf) {\ndiff --git a/package.json b/package.json\nindex e68ed8b5b4ab..f8a4bcfbf8b4 100644\n--- a/package.json\n+++ b/package.json\n@@ -32,6 +32,7 @@\n   \"devDependencies\": {\n     \"benchmark\": \"~1.0.0\",\n     \"browserify\": \"^7.0.2\",\n+    \"bundle-collapser\": \"^1.1.1\",\n     \"coverify\": \"~1.0.4\",\n     \"derequire\": \"^1.2.0\",\n     \"envify\": \"^3.0.0\","}, {"role": "assistant", "content": "use bundle-collapser to reduce browserified file size"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/01-why-react.zh-CN.md b/docs/docs/01-why-react.zh-CN.md\nindex 029923a7f7a1..9954f48997fd 100644\n--- a/docs/docs/01-why-react.zh-CN.md\n+++ b/docs/docs/01-why-react.zh-CN.md\n@@ -7,7 +7,7 @@ next: displaying-data-zh-CN.html\n \n React \u662f\u4e00\u4e2a Facebook \u548c Instagram \u7528\u6765\u521b\u5efa\u7528\u6237\u754c\u9762\u7684 JavaScript \u5e93\u3002\u5f88\u4eba\u591a\u8ba4\u4e3a React \u662f **[MVC](https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller)** \u4e2d\u7684 **V**\uff08\u89c6\u56fe\uff09\u3002\n \n-\u6211\u4eec\u521b\u9020 React \u662f\u4e3a\u4e86\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\uff1a**\u6784\u5efa\u968f\u7740\u65f6\u95f4\u6570\u636e\u4e0d\u65ad\u53d8\u5316\u7684\u5927\u89c4\u6a21\u5e94\u7528\u7a0b\u5e8f**\u3002\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u6807\uff0cReact \u91c7\u7528\u4e0b\u9762\u4e24\u4e2a\u4e3b\u8981\u7684\u601d\u60f3\u3002\n+\u6211\u4eec\u521b\u9020 React \u662f\u4e3a\u4e86\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\uff1a**\u6784\u5efa\u968f\u7740\u65f6\u95f4\u6570\u636e\u4e0d\u65ad\u53d8\u5316\u7684\u5927\u89c4\u6a21\u5e94\u7528\u7a0b\u5e8f**\u3002\n \n ### \u7b80\u5355"}, {"role": "assistant", "content": "maintain why-react-zh-cn sync to the current why-react"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/dom/components/ReactDOMInput.js b/src/dom/components/ReactDOMInput.js\nindex e6ba3ed3df5f..7b45aef5158f 100644\n--- a/src/dom/components/ReactDOMInput.js\n+++ b/src/dom/components/ReactDOMInput.js\n@@ -96,7 +96,7 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n     }\n   },\n \n-  handleChange: ReactCompositeComponent.autoBind(function(event) {\n+  handleChange: function(event) {\n     var returnValue;\n     if (this.props.onChange) {\n       this._isChanging = true;\n@@ -108,7 +108,7 @@ var ReactDOMInput = ReactCompositeComponent.createClass({\n       value: event.target.value\n     });\n     return returnValue;\n-  })\n+  }\n \n });\n \ndiff --git a/src/dom/components/ReactDOMTextarea.js b/src/dom/components/ReactDOMTextarea.js\nindex 776811992a7d..2d1beb7795d9 100644\n--- a/src/dom/components/ReactDOMTextarea.js\n+++ b/src/dom/components/ReactDOMTextarea.js\n@@ -122,7 +122,7 @@ var ReactDOMTextarea = ReactCompositeComponent.createClass({\n     }\n   },\n \n-  handleChange: ReactCompositeComponent.autoBind(function(event) {\n+  handleChange: function(event) {\n     var returnValue;\n     if (this.props.onChange) {\n       this._isChanging = true;\n@@ -131,7 +131,7 @@ var ReactDOMTextarea = ReactCompositeComponent.createClass({\n     }\n     this.setState({value: event.target.value});\n     return returnValue;\n-  })\n+  }\n \n });"}, {"role": "assistant", "content": "remove remaining calls to reactcompositecomponent.autobind."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/reference-dom-elements.md b/docs/docs/reference-dom-elements.md\nindex a3f627a076fc..660e04a52f03 100644\n--- a/docs/docs/reference-dom-elements.md\n+++ b/docs/docs/reference-dom-elements.md\n@@ -168,7 +168,7 @@ underlineThickness unicode unicodeBidi unicodeRange unitsPerEm vAlphabetic\n vHanging vIdeographic vMathematical values vectorEffect version vertAdvY\n vertOriginX vertOriginY viewBox viewTarget visibility widths wordSpacing\n writingMode x x1 x2 xChannelSelector xHeight xlinkActuate xlinkArcrole\n-xlinkHref xlinkRole xlinkShow xlinkTitle xlinkType xmlBase xmlLang xmlSpace\n-y y1 y2 yChannelSelector z zoomAndPan\n+xlinkHref xlinkRole xlinkShow xlinkTitle xlinkType xmlns xmlnsXlink xmlBase\n+xmlLang xmlSpace y y1 y2 yChannelSelector z zoomAndPan\n \n ```"}, {"role": "assistant", "content": "add a couple missing svg tags to dom elements docs"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/examples/todomvc-flux/js/components/Header.react.js b/examples/todomvc-flux/js/components/Header.react.js\nindex cbf7b6a32a03..3c3fe59db866 100644\n--- a/examples/todomvc-flux/js/components/Header.react.js\n+++ b/examples/todomvc-flux/js/components/Header.react.js\n@@ -45,7 +45,10 @@ var Header = React.createClass({\n    * @param {string} text\n    */\n   _onSave: function(text) {\n-    TodoActions.create(text);\n+    if(text.trim()){\n+      TodoActions.create(text);\n+    }\n+    \n   }\n \n });"}, {"role": "assistant", "content": "update todo example. fixes 'create' that shouldn't happen"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/test/all.js b/src/test/all.js\nindex a94a58062d67..a5c58f4bab60 100644\n--- a/src/test/all.js\n+++ b/src/test/all.js\n@@ -12,40 +12,24 @@ if (!Fp.bind) {\n   Fp.bind = function(context) {\n     var func = this;\n     var args = slice.call(arguments, 1);\n-    var bound;\n \n-    if (func.prototype) {\n-      if (args.length > 0) {\n-        bound = function() {\n-          return func.apply(\n-            !(this instanceof func) && context || this,\n-            args.concat(slice.call(arguments))\n-          );\n-        };\n-      } else {\n-        bound = function() {\n-          return func.apply(\n-            !(this instanceof func) && context || this,\n-            arguments\n-          );\n-        };\n-      }\n-\n-      bound.prototype = Object.create(func.prototype);\n-\n-    } else if (args.length > 0) {\n-      bound = function() {\n-        return func.apply(\n-          context || this,\n-          args.concat(slice.call(arguments))\n-        );\n-      };\n-    } else {\n-      bound = function() {\n-        return func.apply(context || this, arguments);\n-      };\n+    function bound() {\n+      var invokedAsConstructor = func.prototype && (this instanceof func);\n+      return func.apply(\n+        // Ignore the context parameter when invoking the bound function\n+        // as a constructor. Note that this includes not only constructor\n+        // invocations using the new keyword but also calls to base class\n+        // constructors such as BaseClass.call(this, ...) or super(...).\n+        !invokedAsConstructor && context || this,\n+        args.concat(slice.call(arguments))\n+      );\n     }\n \n+    // The bound function must share the .prototype of the unbound\n+    // function so that any object created by one constructor will count\n+    // as an instance of both constructors.\n+    bound.prototype = func.prototype;\n+\n     return bound;\n   };\n }"}, {"role": "assistant", "content": "pull in my rewritten function.prototype.bind polyfill from upstream."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/_posts/2015-12-18-react-components-elements-and-instances.md b/docs/_posts/2015-12-18-react-components-elements-and-instances.md\nindex a69abdaae4d1..29ce23addc32 100644\n--- a/docs/_posts/2015-12-18-react-components-elements-and-instances.md\n+++ b/docs/_posts/2015-12-18-react-components-elements-and-instances.md\n@@ -70,7 +70,9 @@ When an element\u2019s `type` is a string, it represents a DOM node with that tag n\n     className: 'button button-blue',\n     children: {\n       type: 'b',\n-      children: 'OK!'\n+      props: {\n+        children: 'OK!'\n+      }\n     }\n   }\n }\n@@ -191,7 +193,9 @@ React will ask `Button` what it renders to. The `Button` will return this elemen\n     className: 'button button-blue',\n     children: {\n       type: 'b',\n-      children: 'OK!'\n+      props: {\n+        children: 'OK!'\n+      }\n     }\n   }\n }"}, {"role": "assistant", "content": "fix children to be a prop in the blog post example"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ui/ReactEventListener.js b/src/browser/ui/ReactEventListener.js\nindex 591e91ea60cd..5dc6683bb72a 100644\n--- a/src/browser/ui/ReactEventListener.js\n+++ b/src/browser/ui/ReactEventListener.js\n@@ -20,6 +20,7 @@\n \"use strict\";\n \n var EventListener = require('EventListener');\n+var ExecutionEnvironment = require('ExecutionEnvironment');\n var PooledClass = require('PooledClass');\n var ReactInstanceHandles = require('ReactInstanceHandles');\n var ReactMount = require('ReactMount');\n@@ -101,7 +102,7 @@ var ReactEventListener = {\n   _enabled: true,\n   _handleTopLevel: null,\n \n-  WINDOW_HANDLE: window,\n+  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n \n   setHandleTopLevel: function(handleTopLevel) {\n     ReactEventListener._handleTopLevel = handleTopLevel;"}, {"role": "assistant", "content": "fix tests broken by undefined `window` references in reacteventlistener."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/test/__tests__/ReactDefaultPerf-test.js b/src/test/__tests__/ReactDefaultPerf-test.js\nindex 42c32518e4f2..716cbdf06b77 100644\n--- a/src/test/__tests__/ReactDefaultPerf-test.js\n+++ b/src/test/__tests__/ReactDefaultPerf-test.js\n@@ -58,7 +58,7 @@ describe('ReactDefaultPerf', function() {\n     ReactDefaultPerf.start();\n     fn();\n     ReactDefaultPerf.stop();\n-    return ReactDefaultPerf.getLastMeasurements();\n+    return ReactDefaultPerf.getLastMeasurements().__unstable_this_format_will_change;\n   }\n \n   it('should count no-op update as waste', function() {"}, {"role": "assistant", "content": "fix the reactdefaultperf test to match changes in #6286"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-extensions/README.md b/packages/react-devtools-extensions/README.md\nindex b5c7daf34f7b..d3e7689ea7eb 100644\n--- a/packages/react-devtools-extensions/README.md\n+++ b/packages/react-devtools-extensions/README.md\n@@ -15,6 +15,12 @@ DevTools depends on local versions of several NPM packages<sup>1</sup> also in t\n \n <sup>1</sup> Note that at this time, an _experimental_ build is required because DevTools depends on the `createRoot` API.\n \n+To install all necessary dependencies, run the following command from the root of the repository:\n+\n+```sh\n+yarn install\n+```\n+\n #### Build from source\n To build dependencies from source, run the following command from the root of the repository:\n ```sh"}, {"role": "assistant", "content": "include install command for devtools-extension build instructions"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ui/dom/SVGDOMPropertyConfig.js b/src/browser/ui/dom/SVGDOMPropertyConfig.js\nindex ca1a40345833..e9fbe129452c 100644\n--- a/src/browser/ui/dom/SVGDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/SVGDOMPropertyConfig.js\n@@ -39,6 +39,9 @@ var SVGDOMPropertyConfig = {\n     fy: MUST_USE_ATTRIBUTE,\n     gradientTransform: MUST_USE_ATTRIBUTE,\n     gradientUnits: MUST_USE_ATTRIBUTE,\n+    markerEnd: MUST_USE_ATTRIBUTE,\n+    markerMid: MUST_USE_ATTRIBUTE,\n+    markerStart: MUST_USE_ATTRIBUTE,\n     offset: MUST_USE_ATTRIBUTE,\n     opacity: MUST_USE_ATTRIBUTE,\n     patternContentUnits: MUST_USE_ATTRIBUTE,\n@@ -73,6 +76,9 @@ var SVGDOMPropertyConfig = {\n     fontSize: 'font-size',\n     gradientTransform: 'gradientTransform',\n     gradientUnits: 'gradientUnits',\n+    markerEnd: 'marker-end',\n+    markerMid: 'marker-mid',\n+    markerStart: 'marker-start',\n     patternContentUnits: 'patternContentUnits',\n     patternUnits: 'patternUnits',\n     preserveAspectRatio: 'preserveAspectRatio',"}, {"role": "assistant", "content": "add missing markerstart, markermid, markerend svg attributes"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/devtools/views/InspectedElementTree.js b/src/devtools/views/InspectedElementTree.js\nindex 157befb35746..afeb8f0b18a5 100644\n--- a/src/devtools/views/InspectedElementTree.js\n+++ b/src/devtools/views/InspectedElementTree.js\n@@ -1,6 +1,6 @@\n // @flow\n \n-import React, { Fragment, useCallback, useState } from 'react';\n+import React, { Fragment, useCallback, useRef, useState } from 'react';\n import Button from './Button';\n import ButtonIcon from './ButtonIcon';\n import { getMetaValueLabel } from './utils';\n@@ -175,6 +175,7 @@ export function EditableValue({\n }: EditableValueProps) {\n   const [hasPendingChanges, setHasPendingChanges] = useState(false);\n   const [editableValue, setEditableValue] = useState(value);\n+  const inputRef = useRef<HTMLInputElement | null>(null);\n \n   if (hasPendingChanges && editableValue === value) {\n     setHasPendingChanges(false);\n@@ -198,6 +199,10 @@ export function EditableValue({\n   const handleReset = useCallback(() => {\n     setEditableValue(value);\n     setHasPendingChanges(false);\n+\n+    if (inputRef.current !== null) {\n+      inputRef.current.focus();\n+    }\n   }, [value]);\n \n   const handleKeyDown = useCallback(\n@@ -242,6 +247,7 @@ export function EditableValue({\n           className={styles.ValueInput}\n           onChange={handleChange}\n           onKeyDown={handleKeyDown}\n+          ref={inputRef}\n           type={type}\n           value={dataType === 'boolean' ? undefined : inputValue}\n         />"}, {"role": "assistant", "content": "restore input focus after clicking reset value button"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/isomorphic/classic/class/ReactClass.js b/src/isomorphic/classic/class/ReactClass.js\nindex f3f545c0aeca..632a30130739 100644\n--- a/src/isomorphic/classic/class/ReactClass.js\n+++ b/src/isomorphic/classic/class/ReactClass.js\n@@ -389,7 +389,7 @@ function validateTypeDef(Constructor, typeDef, location) {\n   for (var propName in typeDef) {\n     if (typeDef.hasOwnProperty(propName)) {\n       // use a warning instead of an invariant so components\n-      // don't show up in prod but not in __DEV__\n+      // don't show up in prod but only in __DEV__\n       warning(\n         typeof typeDef[propName] === 'function',\n         '%s: %s type `%s` is invalid; it must be a function, usually from ' +"}, {"role": "assistant", "content": "rephrase comment to better describe use of `warning`"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex cfd9e4281fa3..03f5aa57c6f5 100644\n--- a/package.json\n+++ b/package.json\n@@ -108,7 +108,7 @@\n   \"scripts\": {\n     \"build\": \"node ./scripts/rollup/build.js\",\n     \"build-combined\": \"node ./scripts/rollup/build-all-release-channels.js\",\n-    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react/jsx,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh --type=NODE && rm -rf build && mkdir build && cp -r ./build/node_modules build/oss-experimental/\",\n+    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react/jsx,react-dom,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh --type=NODE && cp -r ./build/node_modules build/oss-experimental/\",\n     \"build-for-devtools-dev\": \"yarn build-for-devtools --type=NODE_DEV\",\n     \"build-for-devtools-prod\": \"yarn build-for-devtools --type=NODE_PROD\",\n     \"linc\": \"node ./scripts/tasks/linc.js\","}, {"role": "assistant", "content": "update yarn build-for-devtools script to account for build/build2 changes"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactChildFiber.js b/src/renderers/shared/fiber/ReactChildFiber.js\nindex e96f04d02680..ac8a4b2acbfd 100644\n--- a/src/renderers/shared/fiber/ReactChildFiber.js\n+++ b/src/renderers/shared/fiber/ReactChildFiber.js\n@@ -508,6 +508,14 @@ function ChildReconciler(shouldClone, shouldTrackSideEffects) {\n             return null;\n           }\n         }\n+\n+        case REACT_PORTAL_TYPE: {\n+          if (newChild.key === key) {\n+            return updatePortal(returnFiber, oldFiber, newChild, priority);\n+          } else {\n+            return null;\n+          }\n+        }\n       }\n \n       if (isArray(newChild) || getIteratorFn(newChild)) {"}, {"role": "assistant", "content": "add missing portal case to updateslot switch statement"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/utils/DOMLazyTree.js b/src/renderers/dom/client/utils/DOMLazyTree.js\nindex 520a06c5f976..249eb475c5c4 100644\n--- a/src/renderers/dom/client/utils/DOMLazyTree.js\n+++ b/src/renderers/dom/client/utils/DOMLazyTree.js\n@@ -53,9 +53,10 @@ function insertTreeChildren(tree) {\n \n var insertTreeBefore = createMicrosoftUnsafeLocalFunction(\n   function(parentNode, tree, referenceNode) {\n-    // Document Fragments in IE11, Edge (and possibly others) won't update\n-    // correctly if they are already inserted. So we have to break out of our\n-    // lazy approach and append children to the fragment before inserting it.\n+    // DocumentFragments aren't actually part of the DOM after insertion so\n+    // appending children won't update the DOM. We need to ensure the fragment\n+    // is properly populated first, breaking out of our lazy approach for just\n+    // this level.\n     if (tree.node.nodeType === 11) {\n       insertTreeChildren(tree);\n       parentNode.insertBefore(tree.node, referenceNode);"}, {"role": "assistant", "content": "update domlazytree fragments comment to reflect reality"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-fetch/src/ReactFetchBrowser.js b/packages/react-fetch/src/ReactFetchBrowser.js\nindex 41df29c8afcc..473a875c30b1 100644\n--- a/packages/react-fetch/src/ReactFetchBrowser.js\n+++ b/packages/react-fetch/src/ReactFetchBrowser.js\n@@ -32,8 +32,11 @@ type RejectedRecord = {|\n \n type Record = PendingRecord | ResolvedRecord | RejectedRecord;\n \n+declare var globalThis: any;\n+\n // TODO: this is a browser-only version. Add a separate Node entry point.\n-const nativeFetch = window.fetch;\n+const nativeFetch = (typeof globalThis !== 'undefined' ? globalThis : window)\n+  .fetch;\n \n function getRecordMap(): Map<string, Record> {\n   return unstable_getCacheForType(createRecordMap);\ndiff --git a/scripts/rollup/validate/eslintrc.cjs.js b/scripts/rollup/validate/eslintrc.cjs.js\nindex 0adb5a197dd1..e75f5967eeaf 100644\n--- a/scripts/rollup/validate/eslintrc.cjs.js\n+++ b/scripts/rollup/validate/eslintrc.cjs.js\n@@ -15,6 +15,7 @@ module.exports = {\n     WeakSet: true,\n     Uint16Array: true,\n     Reflect: true,\n+    globalThis: true,\n     // Vendor specific\n     MSApp: true,\n     __REACT_DEVTOOLS_GLOBAL_HOOK__: true,"}, {"role": "assistant", "content": "use globalthis if possible for native fetch in browser build"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/Rakefile b/docs/Rakefile\nindex ff61fc6cf32d..546f7dba12be 100644\n--- a/docs/Rakefile\n+++ b/docs/Rakefile\n@@ -1,10 +1,18 @@\n require('rubygems')\n require('json')\n require('yaml')\n+require('open-uri')\n+\n+desc \"download babel-browser\"\n+task :fetch_remotes do\n+  IO.copy_stream(\n+    open('https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.34/browser.min.js'),\n+    'js/babel-browser.min.js'\n+  )\n+end\n \n desc \"generate js from jsx\"\n task :js do\n-  system \"cp ../node_modules/babel/node_modules/babel-core/browser.min.js ./js/babel-browser.min.js\"\n   system \"../node_modules/.bin/babel _js --out-dir=js\"\n end\n \n@@ -54,7 +62,7 @@ task :update_acknowledgements do\n end\n \n desc \"build into ../../react-gh-pages\"\n-task :release => [:update_version, :default] do\n+task :release => [:update_version, :js, :fetch_remotes] do\n   system \"jekyll build -d ../../react-gh-pages\"\n end\n \ndiff --git a/package.json b/package.json\nindex cb4c380de5a8..a33bd953127e 100644\n--- a/package.json\n+++ b/package.json\n@@ -4,6 +4,7 @@\n   \"version\": \"0.15.0-alpha.1\",\n   \"devDependencies\": {\n     \"async\": \"^1.5.0\",\n+    \"babel-cli\": \"^6.6.5\",\n     \"babel-core\": \"^6.0.0\",\n     \"babel-eslint\": \"^5.0.0\",\n     \"babel-plugin-check-es2015-constants\": \"^6.5.0\","}, {"role": "assistant", "content": "upgrade to work with babel 6, fetch remote babel-browser for now"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/__tests__/validateDOMNesting-test.js b/src/renderers/dom/client/__tests__/validateDOMNesting-test.js\nindex e0bdfe959f2b..dec17ae4ba28 100644\n--- a/src/renderers/dom/client/__tests__/validateDOMNesting-test.js\n+++ b/src/renderers/dom/client/__tests__/validateDOMNesting-test.js\n@@ -83,5 +83,7 @@ describe('ReactContextValidator', function() {\n     expect(isTagStackValid(['table', 'tr'])).toBe(false);\n     expect(isTagStackValid(['div', 'ul', 'li', 'div', 'li'])).toBe(false);\n     expect(isTagStackValid(['div', 'html'])).toBe(false);\n+    expect(isTagStackValid(['body', 'body'])).toBe(false);\n+    expect(isTagStackValid(['svg', 'foreignObject', 'body', 'p'])).toBe(false);\n   });\n });\ndiff --git a/src/renderers/dom/client/validateDOMNesting.js b/src/renderers/dom/client/validateDOMNesting.js\nindex 431d80fd2d5d..9422a079e146 100644\n--- a/src/renderers/dom/client/validateDOMNesting.js\n+++ b/src/renderers/dom/client/validateDOMNesting.js\n@@ -208,6 +208,7 @@ if (__DEV__) {\n       case 'rt':\n         return impliedEndTags.indexOf(parentTag) === -1;\n \n+      case 'body':\n       case 'caption':\n       case 'col':\n       case 'colgroup':"}, {"role": "assistant", "content": "ensure validatedomnesting catches nested body elements"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/tutorial/tutorial.md b/docs/tutorial/tutorial.md\nindex 2aa369f6951a..bac325b57943 100644\n--- a/docs/tutorial/tutorial.md\n+++ b/docs/tutorial/tutorial.md\n@@ -393,7 +393,7 @@ Now when the square is clicked, it calls the `onClick` function that was passed\n 4. Board passed `onClick={() => this.handleClick(i)}` to Square, so, when called, it runs `this.handleClick(i)` on the Board.\n 5. We have not defined the `handleClick()` method on the Board yet, so the code crashes.\n \n-Note that `onClick` on the DOM `<button>` component has a special meaning to React, but we could have called `onClick` prop in Square and `handleClick` in Board something else. It is, however, a common convention in React apps to use `on*` names for the handler prop names and `handle*` for their implementations.\n+Note that DOM `<button>` element's `onClick` attribute has a special meaning to React, but we could have named Square's `onClick` prop or Board's `handleClick` method differently. It is, however, conventional in React apps to use `on*` names for the attributes and `handle*` for the handler methods.\n \n Try clicking a square \u2013 you should get an error because we haven't defined `handleClick` yet. Add it to the Board class."}, {"role": "assistant", "content": "tweak wording based on @landermkerbey's suggestion in #10433#issuecomment-324488168"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/devtools/views/Components/EditableValue.js b/packages/react-devtools-shared/src/devtools/views/Components/EditableValue.js\nindex 992f2b2dff65..e501c39adee0 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Components/EditableValue.js\n+++ b/packages/react-devtools-shared/src/devtools/views/Components/EditableValue.js\n@@ -8,8 +8,6 @@\n  */\n \n import React, {Fragment, useRef} from 'react';\n-import Button from '../Button';\n-import ButtonIcon from '../ButtonIcon';\n import styles from './EditableValue.css';\n import {useEditableValue} from '../hooks';\n \n@@ -51,9 +49,7 @@ export default function EditableValue({\n \n     switch (event.key) {\n       case 'Enter':\n-        if (isValid && hasPendingChanges) {\n-          overrideValueFn(path, parsedValue);\n-        }\n+        applyChanges();\n         break;\n       case 'Escape':\n         reset();\n@@ -63,6 +59,12 @@ export default function EditableValue({\n     }\n   };\n \n+  const applyChanges = () => {\n+    if (isValid && hasPendingChanges) {\n+      overrideValueFn(path, parsedValue);\n+    }\n+  };\n+\n   let placeholder = '';\n   if (editableValue === undefined) {\n     placeholder = '(undefined)';\n@@ -75,6 +77,7 @@ export default function EditableValue({\n       <input\n         autoComplete=\"new-password\"\n         className={`${isValid ? styles.Input : styles.Invalid} ${className}`}\n+        onBlur={applyChanges}\n         onChange={handleChange}\n         onKeyDown={handleKeyDown}\n         placeholder={placeholder}\n@@ -82,14 +85,6 @@ export default function EditableValue({\n         type=\"text\"\n         value={editableValue}\n       />\n-      {hasPendingChanges && (\n-        <Button\n-          className={styles.ResetButton}\n-          onClick={reset}\n-          title=\"Reset value\">\n-          <ButtonIcon type=\"undo\" />\n-        </Button>\n-      )}\n     </Fragment>\n   );\n }"}, {"role": "assistant", "content": "apply changes on editablevalue on blur feature implemented"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/error-codes/print-warnings.js b/scripts/error-codes/print-warnings.js\nindex 6d97a7508fe5..c886e021958c 100644\n--- a/scripts/error-codes/print-warnings.js\n+++ b/scripts/error-codes/print-warnings.js\n@@ -16,7 +16,7 @@ const gs = require('glob-stream');\n \n const evalToString = require('./evalToString');\n \n-const { paths } = require('../../gulpfile');\n+const paths = require('../../gulpfile').paths;\n \n \n const babylonOptions = {"}, {"role": "assistant", "content": "remove destructuring, since the version of node on www doesn't support it"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/test/__tests__/ReactTestUtils-test.js b/src/test/__tests__/ReactTestUtils-test.js\nindex ba5fe25d3980..b2f1929a121d 100644\n--- a/src/test/__tests__/ReactTestUtils-test.js\n+++ b/src/test/__tests__/ReactTestUtils-test.js\n@@ -309,4 +309,39 @@ describe('ReactTestUtils', function() {\n     expect(ReactTestUtils.isDOMComponent(component.refs.head)).toBe(true);\n     expect(ReactTestUtils.isDOMComponent(component.refs.body)).toBe(true);\n   });\n+\n+  it('should change the value of an input field', function() {\n+    var handler = jasmine.createSpy('spy');\n+    var container = document.createElement('div');\n+    var instance = React.render(<input type=\"text\" onChange={handler} />, container);\n+\n+    var node = React.findDOMNode(instance);\n+    node.value = 'giraffe';\n+    ReactTestUtils.Simulate.change(node);\n+\n+    expect(handler).toHaveBeenCalledWith(jasmine.objectContaining({target: node}));\n+  });\n+\n+  it('should change the value of an input field in a component', function() {\n+    var SomeComponent = React.createClass({\n+      render: function() {\n+        return (\n+          <div>\n+            <input type=\"text\" ref=\"input\" onChange={this.props.handleChange} />\n+          </div>\n+        );\n+      },\n+    });\n+\n+    var handler = jasmine.createSpy('spy');\n+    var container = document.createElement('div');\n+    var instance = React.render(<SomeComponent handleChange={handler} />, container);\n+\n+    var node = React.findDOMNode(instance.refs.input);\n+    node.value = 'zebra';\n+    ReactTestUtils.Simulate.change(node);\n+\n+    expect(handler).toHaveBeenCalledWith(jasmine.objectContaining({target: node}));\n+  });\n+\n });"}, {"role": "assistant", "content": "add tests for react.addons.testutils.simulate.change"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\nindex 40461186c310..daad64d18e2c 100644\n--- a/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\n+++ b/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\n@@ -190,7 +190,7 @@ if (__DEV__) {\n     /*eslint-disable no-func-assign */\n     SyntheticEvent = new Proxy(SyntheticEvent, {\n       construct: function(target, args) {\n-        return this.apply(target, {}, args);\n+        return this.apply(target, Object.create(target.prototype), args);\n       },\n       apply: function(constructor, that, args) {\n         return new Proxy(constructor.apply(that, args), {"}, {"role": "assistant", "content": "extend the correct object in the syntheticevent proxy"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-05-events.ko-KR.md b/docs/docs/ref-05-events.ko-KR.md\nindex 985d80d53e4c..00435470390d 100644\n--- a/docs/docs/ref-05-events.ko-KR.md\n+++ b/docs/docs/ref-05-events.ko-KR.md\n@@ -21,9 +21,9 @@ number eventPhase\n boolean isTrusted\n DOMEvent nativeEvent\n void preventDefault()\n-void isDefaultPrevented()\n+boolean isDefaultPrevented()\n void stopPropagation()\n-void isPropagationStopped()\n+boolean isPropagationStopped()\n DOMEventTarget target\n number timeStamp\n string type\ndiff --git a/docs/docs/ref-05-events.md b/docs/docs/ref-05-events.md\nindex 313d2bfd62e9..d1a804d8917c 100644\n--- a/docs/docs/ref-05-events.md\n+++ b/docs/docs/ref-05-events.md\n@@ -21,9 +21,9 @@ number eventPhase\n boolean isTrusted\n DOMEvent nativeEvent\n void preventDefault()\n-void isDefaultPrevented()\n+boolean isDefaultPrevented()\n void stopPropagation()\n-void isPropagationStopped()\n+boolean isPropagationStopped()\n DOMEventTarget target\n number timeStamp\n string type\ndiff --git a/docs/docs/ref-05-events.zh-CN.md b/docs/docs/ref-05-events.zh-CN.md\nindex 095749dc27c3..6708cbe5ddec 100644\n--- a/docs/docs/ref-05-events.zh-CN.md\n+++ b/docs/docs/ref-05-events.zh-CN.md\n@@ -21,7 +21,9 @@ Number eventPhase\n boolean isTrusted\n DOMEvent nativeEvent\n void preventDefault()\n+boolean isDefaultPrevented()\n void stopPropagation()\n+boolean isPropagationStopped()\n DOMEventTarget target\n Date timeStamp\n String type"}, {"role": "assistant", "content": "fix isdefaultprevented and ispropagationstopped methods of syntheticevent notation"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/DOMPropertyOperations.js b/src/renderers/dom/shared/DOMPropertyOperations.js\nindex dd44db48254e..46846b3d3a86 100644\n--- a/src/renderers/dom/shared/DOMPropertyOperations.js\n+++ b/src/renderers/dom/shared/DOMPropertyOperations.js\n@@ -131,12 +131,6 @@ var DOMPropertyOperations = {\n             return stringValue;\n           }\n         }\n-      } else if (DOMProperty.isCustomAttribute(name)) {\n-        return DOMPropertyOperations.diffValueForAttribute(\n-          node,\n-          name,\n-          expected,\n-        );\n       }\n     }\n   },"}, {"role": "assistant", "content": "fix incorrect reference to undefined diffvalueforattribute"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/tips/06-style-props-value-px.md b/docs/tips/06-style-props-value-px.md\nindex aeb2cb3e3f92..5f0991130cb1 100644\n--- a/docs/tips/06-style-props-value-px.md\n+++ b/docs/tips/06-style-props-value-px.md\n@@ -18,11 +18,14 @@ See [Inline Styles](/react/tips/inline-styles.html) for more info.\n \n Sometimes you _do_ want to keep the CSS properties unitless. Here's a list of properties that won't get the automatic \"px\" suffix:\n \n+- `boxFlex`\n - `columnCount`\n - `fillOpacity`\n - `flex`\n - `flexGrow`\n+- `flexPositive`\n - `flexShrink`\n+- `flexNegative`\n - `fontWeight`\n - `lineClamp`\n - `lineHeight`\ndiff --git a/src/browser/ui/dom/CSSProperty.js b/src/browser/ui/dom/CSSProperty.js\nindex 05f764ba95c5..f8e3c2624de1 100644\n--- a/src/browser/ui/dom/CSSProperty.js\n+++ b/src/browser/ui/dom/CSSProperty.js\n@@ -20,7 +20,9 @@ var isUnitlessNumber = {\n   columnCount: true,\n   flex: true,\n   flexGrow: true,\n+  flexPositive: true,\n   flexShrink: true,\n+  flexNegative: true,\n   fontWeight: true,\n   lineClamp: true,\n   lineHeight: true,"}, {"role": "assistant", "content": "treat flexpositive/negative/boxflex as unitless styles"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ReactEventEmitter.js b/src/browser/ReactEventEmitter.js\nindex 5481c2e9b828..5f1956d7d9db 100644\n--- a/src/browser/ReactEventEmitter.js\n+++ b/src/browser/ReactEventEmitter.js\n@@ -129,7 +129,9 @@ var topEventMapping = {\n var topListenersIDKey = \"_reactListenersID\" + String(Math.random()).slice(2);\n \n function getListeningForDocument(mountAt) {\n-  if (!mountAt.hasOwnProperty(topListenersIDKey)) {\n+  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n+  // directly.\n+  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n     mountAt[topListenersIDKey] = reactTopListenersCounter++;\n     alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n   }"}, {"role": "assistant", "content": "use object.prototype.hasownproperty for doc in ie8"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex a7ef000e1812..be911dc6f8e0 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -398,13 +398,9 @@ function mixSpecIntoComponent(Constructor, spec) {\n  * @private\n  */\n function createChainedFunction(one, two) {\n-  return function chainedFunction(a, b, c, d, e, f, g, tooMany) {\n-    invariant(\n-      typeof tooMany === 'undefined',\n-      'Chained function can only take a maximum of 7 arguments.'\n-    );\n-    one.call(this, a, b, c, d, e, f, g);\n-    two.call(this, a, b, c, d, e, f, g);\n+  return function chainedFunction() {\n+    one.apply(this, arguments);\n+    two.apply(this, arguments);\n   };\n }\n \n@@ -833,14 +829,9 @@ var ReactCompositeComponentMixin = {\n    */\n   _bindAutoBindMethod: function(method) {\n     var component = this;\n-    function autoBound(a, b, c, d, e, f, g, tooMany) {\n-      invariant(\n-        typeof tooMany === 'undefined',\n-        'React.autoBind(...): Methods can only take a maximum of 7 arguments.'\n-      );\n-      return method.call(component, a, b, c, d, e, f, g);\n-    }\n-    return autoBound;\n+    return function() {\n+      return method.apply(component, arguments);\n+    };\n   }\n \n };"}, {"role": "assistant", "content": "use .apply instead of .call in reactcompositecomponent"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-extensions/src/main.js b/packages/react-devtools-extensions/src/main.js\nindex 60ed0fcb1a9e..f8750292a1a7 100644\n--- a/packages/react-devtools-extensions/src/main.js\n+++ b/packages/react-devtools-extensions/src/main.js\n@@ -33,6 +33,7 @@ const LOCAL_STORAGE_SUPPORTS_PROFILING_KEY =\n   'React::DevTools::supportsProfiling';\n \n const isChrome = getBrowserName() === 'Chrome';\n+const isEdge = getBrowserName() === 'Edge';\n \n let panelCreated = false;\n \n@@ -203,7 +204,7 @@ function createPanelIfReactLoaded() {\n \n           store = new Store(bridge, {\n             isProfiling,\n-            supportsReloadAndProfile: isChrome,\n+            supportsReloadAndProfile: isChrome || isEdge,\n             supportsProfiling,\n             // At this time, the scheduling profiler can only parse Chrome performance profiles.\n             supportsSchedulingProfiler: isChrome,"}, {"role": "assistant", "content": "enable 'reload and start profiling' for microsoft edge"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/_data/nav_docs.yml b/docs/_data/nav_docs.yml\nindex 8b4acecef57d..fcde3e374f71 100644\n--- a/docs/_data/nav_docs.yml\n+++ b/docs/_data/nav_docs.yml\n@@ -8,6 +8,8 @@\n     title: Thinking in React\n - title: Community Resources\n   items:\n+  - id: conferences\n+    title: Conferences\n   - id: videos\n     title: Videos\n   - id: complementary-tools\ndiff --git a/docs/docs/conferences.md b/docs/docs/conferences.md\nnew file mode 100644\nindex 000000000000..d2c5297e01ac\n--- /dev/null\n+++ b/docs/docs/conferences.md\n@@ -0,0 +1,19 @@\n+\ufeff---\n+id: conferences\n+title: Conferences\n+permalink: conferences.html\n+prev: thinking-in-react.html\n+next: videos.html\n+---\n+\n+### React.js Conf 2015\n+January 28 & 29\n+\n+[Website](http://conf.reactjs.com/) - [Schedule](http://conf.reactjs.com/schedule.html) - [Videos](https://www.youtube.com/playlist?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr)\n+\n+<iframe width=\"650\" height=\"315\" src=\"//www.youtube.com/embed/KVZ-P-ZI6W4?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr\" frameborder=\"0\" allowfullscreen></iframe>\n+\n+### ReactEurope 2015\n+July 2 & 3\n+\n+[Website](http://www.react-europe.org/) - [Schedule](http://www.react-europe.org/#schedule)\ndiff --git a/docs/docs/thinking-in-react.md b/docs/docs/thinking-in-react.md\nindex e5518d5b7ad7..6d2dc87cb818 100644\n--- a/docs/docs/thinking-in-react.md\n+++ b/docs/docs/thinking-in-react.md\n@@ -2,7 +2,7 @@\n id: thinking-in-react\n title: Thinking in React\n prev: tutorial.html\n-next: videos.html\n+next: conferences.html\n ---\n \n This was originally a [blog post](/react/blog/2013/11/05/thinking-in-react.html) from the [official React blog](/react/blog).\ndiff --git a/docs/docs/videos.md b/docs/docs/videos.md\nindex 8036b1045709..c15a78dad770 100644\n--- a/docs/docs/videos.md\n+++ b/docs/docs/videos.md\n@@ -2,7 +2,7 @@\n id: videos\n title: Videos\n permalink: videos.html\n-prev: thinking-in-react.html\n+prev: conferences.html\n next: complementary-tools.html\n ---"}, {"role": "assistant", "content": "add conferences section to the community resources on the website"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/shells/browser/shared/build.js b/shells/browser/shared/build.js\nindex 8cc9de1c3a0c..52744b484a14 100644\n--- a/shells/browser/shared/build.js\n+++ b/shells/browser/shared/build.js\n@@ -63,7 +63,9 @@ const build = async (tempPath, manifestPath) => {\n \n   const manifest = JSON.parse(readFileSync(copiedManifestPath).toString());\n   manifest.description += `\\n\\nCreated from revision ${commit} (${new Date().toLocaleDateString()})`;\n-  manifest.version_name = `${commit} (${new Date().toLocaleDateString()})`;\n+  if (tempPath.includes('chrome')) {\n+    manifest.version_name = `${commit} (${new Date().toLocaleDateString()})`;\n+  }\n   writeFileSync(copiedManifestPath, JSON.stringify(manifest, null, 2));\n \n   // Pack the extension"}, {"role": "assistant", "content": "remove version_name from firefox webextension manifest"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/shared/forks/ReactFeatureFlags.www-dynamic.js b/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\nindex c9e353f2baef..42e9c8a7ab2f 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\n@@ -26,6 +26,8 @@ export const enableUnifiedSyncLane = __VARIANT__;\n export const enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay =\n   __VARIANT__;\n export const enableTransitionTracing = __VARIANT__;\n+export const enableCustomElementPropertySupport = __VARIANT__;\n+\n // Enable this flag to help with concurrent mode debugging.\n // It logs information to the console about React scheduling, rendering, and commit phases.\n //\ndiff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex 83e3f877c7f1..edbc49557aaa 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -32,6 +32,7 @@ export const {\n   enableUnifiedSyncLane,\n   enableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay,\n   enableTransitionTracing,\n+  enableCustomElementPropertySupport,\n } = dynamicFeatureFlags;\n \n // On WWW, __EXPERIMENTAL__ is used for a new modern build.\n@@ -100,8 +101,6 @@ export const enableServerContext = true;\n // Some www surfaces are still using this. Remove once they have been migrated.\n export const enableUseMutableSource = true;\n \n-export const enableCustomElementPropertySupport = __EXPERIMENTAL__;\n-\n export const useModernStrictMode = false;\n export const enableFizzExternalRuntime = true;"}, {"role": "assistant", "content": "make enablecustomelementpropertysupport a dynamic flag in www build"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\nindex e486b85146f5..5f0a88a64a29 100644\n--- a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n+++ b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n@@ -193,6 +193,8 @@ var HTMLDOMPropertyConfig = {\n     autoCorrect: null,\n     // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n     autoSave: null,\n+    // color is for Safari mask-icon link\n+    color: null,\n     // itemProp, itemScope, itemType are for\n     // Microdata support. See http://schema.org/docs/gs.html\n     itemProp: MUST_USE_ATTRIBUTE,"}, {"role": "assistant", "content": "add non-standard property for supporting safari mask-icon."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/test/ReactTestUtils.js b/src/test/ReactTestUtils.js\nindex 8cc08615eea8..d1365b50c541 100644\n--- a/src/test/ReactTestUtils.js\n+++ b/src/test/ReactTestUtils.js\n@@ -16,6 +16,7 @@ var EventPluginHub = require('EventPluginHub');\n var EventPluginRegistry = require('EventPluginRegistry');\n var EventPropagators = require('EventPropagators');\n var React = require('React');\n+var ReactDefaultInjection = require('ReactDefaultInjection');\n var ReactDOM = require('ReactDOM');\n var ReactDOMComponentTree = require('ReactDOMComponentTree');\n var ReactElement = require('ReactElement');\n@@ -409,6 +410,11 @@ Object.assign(\n );\n \n ReactShallowRenderer.prototype.render = function(element, context) {\n+  // Ensure we've done the default injections. This might not be true in the\n+  // case of a simple test that only requires React and the TestUtils in\n+  // conjunction with an inline-requires transform.\n+  ReactDefaultInjection.inject();\n+\n   invariant(\n     ReactElement.isValidElement(element),\n     'ReactShallowRenderer render(): Invalid component element.%s',"}, {"role": "assistant", "content": "ensure default injection is injected for test utils"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitList.js b/packages/react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitList.js\nindex 4fda4177706a..2b837f28f649 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitList.js\n+++ b/packages/react-devtools-shared/src/devtools/views/Profiler/SnapshotCommitList.js\n@@ -217,7 +217,11 @@ function List({\n \n     // Only some React versions include commit durations.\n     // Show a richer tooltip only for builds that have that info.\n-    if (effectDuration !== null || passiveEffectDuration !== null) {\n+    if (\n+      effectDuration !== null ||\n+      passiveEffectDuration !== null ||\n+      priorityLevel !== null\n+    ) {\n       tooltipLabel = (\n         <ul className={styles.TooltipList}>\n           {priorityLevel !== null && ("}, {"role": "assistant", "content": "fix devtools advanced tooltip display conditional check"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/native/ReactNative/ReactNativeBaseComponentEnvironment.js b/src/renderers/native/ReactNative/ReactNativeComponentEnvironment.js\nsimilarity index 100%\nrename from src/renderers/native/ReactNative/ReactNativeBaseComponentEnvironment.js\nrename to src/renderers/native/ReactNative/ReactNativeComponentEnvironment.js"}, {"role": "assistant", "content": "fix reactnativecomponentenvironment providesmodule"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/create-subscription/package.json b/packages/create-subscription/package.json\nindex 578169ae00a1..a2b84ee07554 100644\n--- a/packages/create-subscription/package.json\n+++ b/packages/create-subscription/package.json\n@@ -13,7 +13,7 @@\n     \"fbjs\": \"^0.8.16\"\n   },\n   \"peerDependencies\": {\n-    \"react\": \"^16.3.0-alpha.1\"\n+    \"react\": \"^16.3.0\"\n   },\n   \"devDependencies\": {\n     \"rxjs\": \"^5.5.6\""}, {"role": "assistant", "content": "change create-subscription's peerdep on react to ^16.3.0"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/dangerousStyleValue.js b/src/renderers/dom/shared/dangerousStyleValue.js\nindex f0ed355178ee..8aa2e49607fa 100644\n--- a/src/renderers/dom/shared/dangerousStyleValue.js\n+++ b/src/renderers/dom/shared/dangerousStyleValue.js\n@@ -44,7 +44,7 @@ function dangerousStyleValue(name, value, component) {\n   }\n \n   var isNonNumeric = isNaN(value);\n-  if (isNonNumeric || value === 0 || value === '0' ||\n+  if (isNonNumeric || value === 0 ||\n       isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n     return '' + value; // cast to string\n   }"}, {"role": "assistant", "content": "revert \"merge pull request #6458 from mondaychen/master\""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/native/ReactNativeAttributePayload.js b/src/renderers/native/ReactNativeAttributePayload.js\nindex 54912f354682..8882f1131d56 100644\n--- a/src/renderers/native/ReactNativeAttributePayload.js\n+++ b/src/renderers/native/ReactNativeAttributePayload.js\n@@ -394,9 +394,9 @@ function diffProperties(\n       // default: fallthrough case when nested properties are defined\n       removedKeys = null;\n       removedKeyCount = 0;\n-      // $FlowFixMe - We think that attributeConfig is not\n-      // CustomAttributeConfiguration at this point so we assume\n-      // it must be AttributeConfiguration.\n+      // We think that attributeConfig is not CustomAttributeConfiguration at\n+      // this point so we assume it must be AttributeConfiguration.\n+      // $FlowFixMe\n       updatePayload = diffNestedProperty(\n         updatePayload,\n         prevProp,"}, {"role": "assistant", "content": "fix $flowfixme broken by comment spanning multiple lines"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js\nindex e13691969c13..affc51a259be 100644\n--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js\n+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMInput-test.js\n@@ -279,6 +279,17 @@ describe('ReactDOMInput', function() {\n     expect(console.error.argsForCall.length).toBe(1);\n   });\n \n+  it('should have a this value of undefined if bind is not used', function() {\n+    var unboundInputOnChange = function() {\n+      expect(this).toBe(undefined);\n+    };\n+\n+    var instance = <input type=\"text\" onChange={unboundInputOnChange} />;\n+    instance = ReactTestUtils.renderIntoDocument(instance);\n+\n+    ReactTestUtils.Simulate.change(instance);\n+  });\n+\n   it('should throw if both value and valueLink are provided', function() {\n     var node = document.createElement('div');\n     var link = new ReactLink('yolo', mocks.getMockFunction());"}, {"role": "assistant", "content": "add test to show `this` is indeed undefined - closes #3613"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/release/shared-commands/download-build-artifacts.js b/scripts/release/shared-commands/download-build-artifacts.js\nindex fba746520273..2952bc977103 100644\n--- a/scripts/release/shared-commands/download-build-artifacts.js\n+++ b/scripts/release/shared-commands/download-build-artifacts.js\n@@ -22,9 +22,15 @@ const run = async ({build, cwd, releaseChannel}) => {\n   }\n \n   // Download and extract artifact\n+  const {CIRCLE_CI_API_TOKEN} = process.env;\n+  let header = '';\n+  // Add Circle CI API token to request header if available.\n+  if (CIRCLE_CI_API_TOKEN != null) {\n+    header = '-H \"Circle-Token: ${CIRCLE_CI_API_TOKEN}\" ';\n+  }\n   await exec(`rm -rf ./build`, {cwd});\n   await exec(\n-    `curl -L $(fwdproxy-config curl) ${buildArtifacts.url} | tar -xvz`,\n+    `curl -L $(fwdproxy-config curl) ${buildArtifacts.url} ${header}| tar -xvz`,\n     {\n       cwd,\n     }\ndiff --git a/scripts/release/utils.js b/scripts/release/utils.js\nindex 241395f42d52..efee7b25bc50 100644\n--- a/scripts/release/utils.js\n+++ b/scripts/release/utils.js\n@@ -59,8 +59,13 @@ const extractCommitFromVersionNumber = version => {\n };\n \n const getArtifactsList = async buildID => {\n+  const headers = {};\n+  const {CIRCLE_CI_API_TOKEN} = process.env;\n+  if (CIRCLE_CI_API_TOKEN != null) {\n+    headers['Circle-Token'] = CIRCLE_CI_API_TOKEN;\n+  }\n   const jobArtifactsURL = `https://circleci.com/api/v1.1/project/github/facebook/react/${buildID}/artifacts`;\n-  const jobArtifacts = await fetch(jobArtifactsURL);\n+  const jobArtifacts = await fetch(jobArtifactsURL, {headers});\n   return jobArtifacts.json();\n };"}, {"role": "assistant", "content": "add circle ci api token to request header if available"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/vendor/fbtransform/transforms/react.js b/vendor/fbtransform/transforms/react.js\nindex 03d4880b826e..ae149cdde96e 100644\n--- a/vendor/fbtransform/transforms/react.js\n+++ b/vendor/fbtransform/transforms/react.js\n@@ -57,18 +57,23 @@ function visitReactTag(traverse, object, path, state) {\n \n   utils.catchup(openingElement.range[0], state, trimLeft);\n \n-  if (nameObject.namespace) {\n-    throw new Error(\n-       'Namespace tags are not supported. ReactJSX is not XML.');\n+  var isFallbackTag = false;\n+\n+  if (nameObject.type === Syntax.XJSIdentifier) {\n+    if (nameObject.namespace) {\n+      throw new Error(\n+         'Namespace tags are not supported. ReactJSX is not XML.');\n+    }\n+\n+    isFallbackTag = FALLBACK_TAGS.hasOwnProperty(nameObject.name);\n   }\n \n-  var isFallbackTag = FALLBACK_TAGS.hasOwnProperty(nameObject.name);\n-  utils.append(\n-    (isFallbackTag ? jsxObjIdent + '.' : '') + (nameObject.name) + '(',\n-    state\n-  );\n+  utils.append(isFallbackTag ? jsxObjIdent + '.' : '', state);\n+\n+  utils.move(nameObject.range[0], state);\n+  utils.catchup(nameObject.range[1], state);\n \n-  utils.move(nameObject.range[1], state);\n+  utils.append('(', state);\n \n   var hasAttributes = attributesObject.length;"}, {"role": "assistant", "content": "add support for jsx member expressions <react.dom.div />"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react/index.experimental.js b/packages/react/index.experimental.js\nindex e348f332b7f7..a1e7b9629a5d 100644\n--- a/packages/react/index.experimental.js\n+++ b/packages/react/index.experimental.js\n@@ -43,4 +43,8 @@ export {\n   unstable_withSuspenseConfig,\n   // enableBlocksAPI\n   block,\n+  // enableJSXTransformAPI\n+  jsx,\n+  jsxs,\n+  jsxDEV,\n } from './src/React';"}, {"role": "assistant", "content": "put react.jsx and react.jsxdev behind experimental build"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/release/build-commands/update-package-versions.js b/scripts/release/build-commands/update-package-versions.js\nindex 7d1ed1e6c966..60e98fbc2f28 100644\n--- a/scripts/release/build-commands/update-package-versions.js\n+++ b/scripts/release/build-commands/update-package-versions.js\n@@ -61,7 +61,22 @@ const update = async ({cwd, dry, packages, version}) => {\n       // Unstable package version.\n       json.version = getNextVersion(json.version, version);\n \n-      if (project !== 'react' && json.peerDependencies) {\n+      if (project === 'react') {\n+        // Update inter-package dependencies as well.\n+        // e.g. react depends on scheduler\n+        if (json.dependencies) {\n+          Object.keys(json.dependencies).forEach(dependency => {\n+            if (packages.indexOf(dependency) >= 0) {\n+              const prevVersion = json.dependencies[dependency];\n+              const nextVersion = getNextVersion(\n+                prevVersion.replace('^', ''),\n+                version\n+              );\n+              json.dependencies[dependency] = `^${nextVersion}`;\n+            }\n+          });\n+        }\n+      } else if (json.peerDependencies) {\n         let peerVersion = json.peerDependencies.react.replace('^', '');\n \n         // If the previous release was a pre-release version,"}, {"role": "assistant", "content": "build script correctly bumps prerelease deps  for react"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/dom/components/ReactDOMSelect.js b/src/dom/components/ReactDOMSelect.js\nindex b4aca39e7999..0709eaf5b1d7 100644\n--- a/src/dom/components/ReactDOMSelect.js\n+++ b/src/dom/components/ReactDOMSelect.js\n@@ -39,13 +39,15 @@ function selectValueType(props, propName, componentName) {\n     invariant(\n       Array.isArray(props[propName]),\n       'The `%s` prop supplied to <select> must be an array if `multiple` is ' +\n-      'true.'\n+      'true.',\n+      propName\n     );\n   } else {\n     invariant(\n       !Array.isArray(props[propName]),\n       'The `%s` prop supplied to <select> must be a scalar value if ' +\n-      '`multiple` is false.'\n+      '`multiple` is false.',\n+      propName\n     );\n   }\n }"}, {"role": "assistant", "content": "add missing argument to invariant in reactdomselect"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/getting-started.md b/docs/docs/getting-started.md\nindex 5a388495e341..d9e4431895b7 100644\n--- a/docs/docs/getting-started.md\n+++ b/docs/docs/getting-started.md\n@@ -34,7 +34,7 @@ $ npm install --save react react-dom babelify babel-preset-react\n $ browserify -t [ babelify --presets [ react ] ] main.js -o bundle.js\n ```\n \n-To install React DOM and build your bundle with webpack:  \n+To install React DOM and build your bundle with webpack:\n \n ```sh\n $ npm install --save react react-dom babel-preset-react\n@@ -45,6 +45,15 @@ $ webpack\n >\n > If you are using ES2015, you will want to also use the `babel-preset-es2015` package.\n \n+**Note:** by default, React will be in development mode, which is slower, and not advised for production. To use React in production mode, set the environment variable `NODE_ENV` to `production` (using envify or webpack's DefinePlugin). For example:\n+\n+```js\n+new webpack.DefinePlugin({\n+  \"process.env\": {\n+    NODE_ENV: JSON.stringify(\"production\")\n+  }\n+});\n+```\n \n ## Quick Start Without npm"}, {"role": "assistant", "content": "improve documentation for using react with webpack"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/bin/jsx b/bin/jsx\nindex c6aa70e8ecdf..2a6437d535b3 100755\n--- a/bin/jsx\n+++ b/bin/jsx\n@@ -25,17 +25,12 @@ require(\"commoner\").resolve(function(id) {\n \n }).process(function(id, source) {\n   var context = this;\n+  var constants = context.config.constants || {};\n \n   // This is where JSX, ES6, etc. desugaring happens.\n   source = transform(visitors.react, source).code;\n \n-  return context.makePromise(function(callback) {\n-    var constants = context.config.constants || {};\n-\n-    // Constant propagation means removing dead code after replacing\n-    // constant conditional expressions with literal (boolean) values.\n-    propagate(constants, source, function(source) {\n-      callback(null, source);\n-    });\n-  });\n+  // Constant propagation means removing any obviously dead code after\n+  // replacing constant expressions with literal (boolean) values.\n+  return propagate(constants, source);\n });\ndiff --git a/vendor/constants.js b/vendor/constants.js\nindex c5f178f3a143..b0530b4d69aa 100644\n--- a/vendor/constants.js\n+++ b/vendor/constants.js\n@@ -17,14 +17,10 @@\n \n var recast = require('recast');\n \n-exports.propagate = function(constants, source, writeback) {\n-  recast.runString(\n-    source,\n-    function(ast, callback) {\n-      callback(new ConstantVisitor(constants).visit(ast));\n-    },\n-    { writeback: writeback }\n-  );\n+exports.propagate = function(constants, source) {\n+  var ast = recast.parse(source);\n+  ast = new ConstantVisitor(constants).visit(ast);\n+  return recast.print(ast);\n };\n \n var ConstantVisitor = recast.Visitor.extend({"}, {"role": "assistant", "content": "use recast.parse and .print for require.propagate."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactFiberStateQueue.js b/src/renderers/shared/fiber/ReactFiberStateQueue.js\nindex beceeb07dd27..d410f8d0d69a 100644\n--- a/src/renderers/shared/fiber/ReactFiberStateQueue.js\n+++ b/src/renderers/shared/fiber/ReactFiberStateQueue.js\n@@ -53,9 +53,13 @@ exports.mergeStateQueue = function(queue : ?StateQueue, prevState : any, props :\n   }\n   let state = Object.assign({}, prevState);\n   do {\n-    const partialState = typeof node.partialState === 'function' ?\n-      node.partialState(state, props) :\n-      node.partialState;\n+    let partialState;\n+    if (typeof node.partialState === 'function') {\n+      const updateFn = node.partialState;\n+      partialState = updateFn(state, props);\n+    } else {\n+      partialState = node.partialState;\n+    }\n     state = Object.assign(state, partialState);\n   } while (node = node.next);\n   return state;"}, {"role": "assistant", "content": "ensure that setstate update function's context is undefined"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/addons/ReactWithAddons.js b/src/addons/ReactWithAddons.js\nindex a0f8975762e2..0a5a1b48c4d2 100644\n--- a/src/addons/ReactWithAddons.js\n+++ b/src/addons/ReactWithAddons.js\n@@ -30,6 +30,9 @@ var ReactUpdates = require('ReactUpdates');\n var cloneWithProps = require('cloneWithProps');\n var shallowCompare = require('shallowCompare');\n var update = require('update');\n+var warning = require('warning');\n+\n+var warnedAboutBatchedUpdates = false;\n \n React.addons = {\n   CSSTransitionGroup: ReactCSSTransitionGroup,\n@@ -37,7 +40,17 @@ React.addons = {\n   PureRenderMixin: ReactComponentWithPureRenderMixin,\n   TransitionGroup: ReactTransitionGroup,\n \n-  batchedUpdates: ReactUpdates.batchedUpdates,\n+  batchedUpdates: function() {\n+    if (__DEV__) {\n+      warning(\n+        warnedAboutBatchedUpdates,\n+        'React.addons.batchedUpdates is deprecated. Use ' +\n+        'ReactDOM.unstable_batchedUpdates instead.'\n+      );\n+      warnedAboutBatchedUpdates = true;\n+    }\n+    return ReactUpdates.batchedUpdates.apply(this, arguments);\n+  },\n   cloneWithProps: cloneWithProps,\n   createFragment: ReactFragment.create,\n   shallowCompare: shallowCompare,"}, {"role": "assistant", "content": "add deprecation notice for react.addons.batchedupdates"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/rollup/build.js b/scripts/rollup/build.js\nindex c42edbe7eea6..52c0b7dc9fe2 100644\n--- a/scripts/rollup/build.js\n+++ b/scripts/rollup/build.js\n@@ -438,13 +438,21 @@ function shouldSkipBundle(bundle, bundleType) {\n     }\n   }\n   if (requestedBundleNames.length > 0) {\n+    // If the name ends with `something/index` we only match if the\n+    // entry ends in something. Such as `react-dom/index` only matches\n+    // `react-dom` but not `react-dom/server`. Everything else is fuzzy\n+    // search.\n+    const entryLowerCase = bundle.entry.toLowerCase() + '/index.js';\n     const isAskingForDifferentNames = requestedBundleNames.every(\n-      // If the name ends with `something/index` we only match if the\n-      // entry ends in something. Such as `react-dom/index` only matches\n-      // `react-dom` but not `react-dom/server`. Everything else is fuzzy\n-      // search.\n-      requestedName =>\n-        (bundle.entry + '/index.js').indexOf(requestedName) === -1\n+      requestedName => {\n+        const matchEntry = entryLowerCase.indexOf(requestedName) !== -1;\n+        if (!bundle.name) {\n+          return !matchEntry;\n+        }\n+        const matchName =\n+          bundle.name.toLowerCase().indexOf(requestedName) !== -1;\n+        return !matchEntry && !matchName;\n+      }\n     );\n     if (isAskingForDifferentNames) {\n       return true;"}, {"role": "assistant", "content": "match bundle.name and match upper case entry points"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-timeline/src/Timeline.js b/packages/react-devtools-timeline/src/Timeline.js\nindex 4b6d21f8a8f7..33459fc4543e 100644\n--- a/packages/react-devtools-timeline/src/Timeline.js\n+++ b/packages/react-devtools-timeline/src/Timeline.js\n@@ -10,6 +10,7 @@\n import type {DataResource} from './createDataResourceFromImportedFile';\n import type {ViewState} from './types';\n \n+import {isInternalFacebookBuild} from 'react-devtools-feature-flags';\n import * as React from 'react';\n import {\n   Suspense,\n@@ -79,6 +80,19 @@ export function Timeline(_: {||}) {\n \n const Welcome = ({onFileSelect}: {|onFileSelect: (file: File) => void|}) => (\n   <ol className={styles.WelcomeInstructionsList}>\n+    {isInternalFacebookBuild && (\n+      <li className={styles.WelcomeInstructionsListItem}>\n+        Enable the\n+        <a\n+          className={styles.WelcomeInstructionsListItemLink}\n+          href=\"https://fburl.com/react-devtools-scheduling-profiler-gk\"\n+          rel=\"noopener noreferrer\"\n+          target=\"_blank\">\n+          <code>react_enable_scheduling_profiler</code> GK\n+        </a>\n+        .\n+      </li>\n+    )}\n     <li className={styles.WelcomeInstructionsListItem}>\n       Open a website that's built with the\n       <a"}, {"role": "assistant", "content": "add scheduling profiler gk link to timeline ui for fb build"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-is/README.md b/packages/react-is/README.md\nindex 9adeee1d9aad..d25597761817 100644\n--- a/packages/react-is/README.md\n+++ b/packages/react-is/README.md\n@@ -26,7 +26,7 @@ class ClassComponent extends React.Component {\n   }\n }\n \n-const StatelessComponent = () => React.createElement(\"div\");\n+const FunctionComponent = () => React.createElement(\"div\");\n \n const ForwardRefComponent = React.forwardRef((props, ref) =>\n   React.createElement(Component, { forwardedRef: ref, ...props })\n@@ -36,7 +36,7 @@ const Context = React.createContext(false);\n \n ReactIs.isValidElementType(\"div\"); // true\n ReactIs.isValidElementType(ClassComponent); // true\n-ReactIs.isValidElementType(StatelessComponent); // true\n+ReactIs.isValidElementType(FunctionComponent); // true\n ReactIs.isValidElementType(ForwardRefComponent); // true\n ReactIs.isValidElementType(Context.Provider); // true\n ReactIs.isValidElementType(Context.Consumer); // true"}, {"role": "assistant", "content": "rename statelesscomponent to functioncomponent in react-is/readme.md"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/grunt/tasks/version-check.js b/grunt/tasks/version-check.js\nindex ae082988ad1b..fe5747d1c12d 100644\n--- a/grunt/tasks/version-check.js\n+++ b/grunt/tasks/version-check.js\n@@ -10,7 +10,7 @@ var reactVersionExp = /\\bReact\\.version\\s*=\\s*['\"]([^'\"]+)['\"];/;\n \n module.exports = function() {\n   var reactVersion = reactVersionExp.exec(\n-    grunt.file.read('./src/browser/React.js')\n+    grunt.file.read('./src/browser/ui/React.js')\n   )[1];\n   var npmReactVersion = grunt.file.readJSON('./npm-react/package.json').version;\n   var reactToolsVersion = grunt.config.data.pkg.version;"}, {"role": "assistant", "content": "fix verion-check to look in right place for react.js"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/09.5-clone-with-props.md b/docs/docs/09.5-clone-with-props.md\nindex 0d466adf4a26..d6a4bc0ab760 100644\n--- a/docs/docs/09.5-clone-with-props.md\n+++ b/docs/docs/09.5-clone-with-props.md\n@@ -12,3 +12,9 @@ In rare situations a component may want to change the props of a component that\n #### `ReactComponent React.addons.cloneWithProps(ReactComponent component, object? extraProps)`\n \n Do a shallow copy of `component` and merge any props provided by `extraProps`. Props are merged in the same manner as [`transferPropsTo()`](/react/docs/component-api.html#transferpropsto), so props like `className` will be merged intelligently.\n+\n+**NOTE:** `cloneWithProps` does not transfer the `key` prop to the cloned component. If you wish to preserve the key, add it to the `extraProps` object:\n+\n+```js\n+var clonedComponent = cloneWithProps(originalComponent, { key : originalComponent.props.key });\n+```"}, {"role": "assistant", "content": "add note about key prop being excluded by clonewithprops"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/vendor/fbtransform/transforms/react.js b/vendor/fbtransform/transforms/react.js\nindex 2e50fb9b3310..9b6019a634bf 100644\n--- a/vendor/fbtransform/transforms/react.js\n+++ b/vendor/fbtransform/transforms/react.js\n@@ -130,7 +130,9 @@ function visitReactTag(traverse, object, path, state) {\n   var childrenToRender = object.children.filter(function(child) {\n     return !(child.type === Syntax.Literal\n              && typeof child.value === 'string'\n-             && child.value.match(/^[ \\t]*[\\r\\n][ \\t\\r\\n]*$/));\n+             && child.value.match(/^[ \\t]*[\\r\\n][ \\t\\r\\n]*$/)\n+             || child.type === Syntax.XJSExpressionContainer\n+             && child.expression.type === Syntax.XJSEmptyExpression);\n   });\n   if (childrenToRender.length > 0) {\n     utils.append(', ', state);"}, {"role": "assistant", "content": "fix empty jsx expressions sometimes emitting erroneous commas"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/test/all.js b/src/test/all.js\nindex 5b07fb551c75..b370c31b629f 100644\n--- a/src/test/all.js\n+++ b/src/test/all.js\n@@ -12,14 +12,41 @@ if (!Fp.bind) {\n   Fp.bind = function(context) {\n     var func = this;\n     var args = slice.call(arguments, 1);\n-    return args.length > 0 ? function() {\n-      return func.apply(\n-        context || this,\n-        args.concat(slice.call(arguments))\n-      );\n-    } : function() {\n-      return func.apply(context || this, arguments);\n-    };\n+    var bound;\n+\n+    if (func.prototype) {\n+      if (args.length > 0) {\n+        bound = function() {\n+          return func.apply(\n+            !(this instanceof func) && context || this,\n+            args.concat(slice.call(arguments))\n+          );\n+        };\n+      } else {\n+        bound = function() {\n+          return func.apply(\n+            !(this instanceof func) && context || this,\n+            arguments\n+          );\n+        };\n+      }\n+\n+      bound.prototype = Object.create(func.prototype);\n+\n+    } else if (args.length > 0) {\n+      bound = function() {\n+        return func.apply(\n+          context || this,\n+          args.concat(slice.call(arguments))\n+        );\n+      };\n+    } else {\n+      bound = function() {\n+        return func.apply(context || this, arguments);\n+      };\n+    }\n+\n+    return bound;\n   };\n }"}, {"role": "assistant", "content": "implement constructor-aware binding per @zpao's request."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react/index.experimental.js b/packages/react/index.experimental.js\nindex b54fe6fdcd0b..287c13729881 100644\n--- a/packages/react/index.experimental.js\n+++ b/packages/react/index.experimental.js\n@@ -22,7 +22,6 @@ export {\n   createContext,\n   createElement,\n   createFactory,\n-  createMutableSource as unstable_createMutableSource,\n   createRef,\n   createServerContext,\n   forwardRef,"}, {"role": "assistant", "content": "remove unstable_createmutablesource from experimental build"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex cd20f3a569b0..f91b3c119b23 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -133,6 +133,20 @@ var ReactCompositeComponentMixin = {\n \n     // Initialize the public class\n     var inst = new Component(publicProps, publicContext);\n+\n+    if (__DEV__) {\n+      // This will throw later in _renderValidatedComponent, but add an early\n+      // warning now to help debugging\n+      warning(\n+        inst.render != null,\n+        '%s(...): No `render` method found on the returned component ' +\n+        'instance: you may have forgotten to define `render` in your ' +\n+        'component or you may have accidentally tried to render an element ' +\n+        'whose type is a function that isn\\'t a React component.',\n+        Component.displayName || Component.name || 'Component'\n+      );\n+    }\n+\n     // These should be set up in the constructor, but as a convenience for\n     // simpler class abstractions, we set them up after the fact.\n     inst.props = publicProps;\ndiff --git a/src/core/__tests__/ReactCompositeComponent-test.js b/src/core/__tests__/ReactCompositeComponent-test.js\nindex 6b8a56bb9cb5..c2fa177ff22d 100644\n--- a/src/core/__tests__/ReactCompositeComponent-test.js\n+++ b/src/core/__tests__/ReactCompositeComponent-test.js\n@@ -954,4 +954,17 @@ describe('ReactCompositeComponent', function() {\n     expect(a).toBe(b);\n   });\n \n+  it('should warn when using non-React functions in JSX', function() {\n+    function NotAComponent() {\n+      return [<div />, <div />];\n+    }\n+    expect(function() {\n+      ReactTestUtils.renderIntoDocument(<div><NotAComponent /></div>);\n+    }).toThrow();  // has no method 'render'\n+    expect(console.warn.calls.length).toBe(1);\n+    expect(console.warn.calls[0].args[0]).toContain(\n+      'NotAComponent(...): No `render` method found'\n+    );\n+  });\n+\n });"}, {"role": "assistant", "content": "add warning when using non-component element types"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/10.10-shallow-compare.md b/docs/docs/10.10-shallow-compare.md\nindex 4ce3ee4107ec..08f30c5b1872 100644\n--- a/docs/docs/10.10-shallow-compare.md\n+++ b/docs/docs/10.10-shallow-compare.md\n@@ -26,7 +26,7 @@ export class SampleComponent extends React.Component {\n ```\n \n `shallowCompare` performs a shallow equality check on the current `props` and `nextProps` objects as well as the current `state` and `nextState` objects.  \n-It does this by iterating on the keys of the objects being compared and returning false when the value of a key in each object are not strictly equal.\n+It does this by iterating on the keys of the objects being compared and returning true when the values of a key in each object are not strictly equal.\n \n `shallowCompare` returns `true` if the shallow comparison for props or state fails and therefore the component should update.  \n `shallowCompare` returns `false` if the shallow comparison for props and state both pass and therefore the component does not need to update."}, {"role": "assistant", "content": "fix the typo in the documentaion pages for shallowcompare"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/09-addons.md b/docs/docs/09-addons.md\nindex 30bacadc7796..0997336bf3fd 100644\n--- a/docs/docs/09-addons.md\n+++ b/docs/docs/09-addons.md\n@@ -67,7 +67,7 @@ You can use these classes to trigger a CSS animation or transition. For example,\n }\n \n .example-enter.example-enter-active {\n-  opacity: 0.99;\n+  opacity: 1;\n }\n ```\n \n@@ -75,7 +75,7 @@ You'll notice that when you try to remove an item `ReactTransitionGroup` keeps i\n \n ```css\n .example-leave {\n-  opacity: 0.99;\n+  opacity: 1;\n   transition: opacity .5s ease-in;\n }\n \ndiff --git a/examples/transitions/transition.css b/examples/transitions/transition.css\nindex eeaead7c4cf5..ee851d113608 100644\n--- a/examples/transitions/transition.css\n+++ b/examples/transitions/transition.css\n@@ -20,7 +20,7 @@\n .example-enter.example-enter-active,\n .example-leave {\n   margin-left: 0;\n-  opacity: 0.99;\n+  opacity: 1;\n }\n \n .animateExample {"}, {"role": "assistant", "content": "fix doc & example transition opacity from .99 to 1"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/use-subscription/package.json b/packages/use-subscription/package.json\nindex 1ed01ae0329f..3220c1e122cf 100644\n--- a/packages/use-subscription/package.json\n+++ b/packages/use-subscription/package.json\n@@ -14,6 +14,9 @@\n     \"index.js\",\n     \"cjs/\"\n   ],\n+  \"dependencies\": {\n+    \"object-assign\": \"^4.1.1\"\n+  },\n   \"peerDependencies\": {\n     \"react\": \"^16.8.0\"\n   },"}, {"role": "assistant", "content": "avoid bundling in ponyfill for object.assign in use-subscription package"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-05-events.it-IT.md b/docs/docs/ref-05-events.it-IT.md\nindex bbf88f45002f..563714733d32 100644\n--- a/docs/docs/ref-05-events.it-IT.md\n+++ b/docs/docs/ref-05-events.it-IT.md\n@@ -81,6 +81,22 @@ DOMDataTransfer clipboardData\n ```\n \n \n+### Eventi di Composizione\n+\n+Nomi degli eventi:\n+\n+```\n+onCompositionEnd onCompositionStart onCompositionUpdate\n+```\n+\n+Propriet\u00e0:\n+\n+```javascript\n+string data\n+\n+```\n+\n+\n ### Eventi di Tastiera\n \n Nomi degli eventi:\n@@ -165,6 +181,15 @@ boolean shiftKey\n ```\n \n \n+### Eventi di Selezione\n+\n+Nomi degli eventi:\n+\n+```\n+onSelect\n+```\n+\n+\n ### Eventi del Tocco\n \n Nomi degli eventi:\ndiff --git a/docs/docs/ref-05-events.md b/docs/docs/ref-05-events.md\nindex edb425690339..50c8641658c3 100644\n--- a/docs/docs/ref-05-events.md\n+++ b/docs/docs/ref-05-events.md\n@@ -183,7 +183,7 @@ boolean shiftKey\n ```\n \n \n-### Selection events\n+### Selection Events\n \n Event names:\n \n@@ -192,7 +192,7 @@ onSelect\n ```\n \n \n-### Touch events\n+### Touch Events\n \n Event names:\n \ndiff --git a/docs/docs/ref-05-events.zh-CN.md b/docs/docs/ref-05-events.zh-CN.md\nindex 6e16a53601b9..5c747ca3b586 100644\n--- a/docs/docs/ref-05-events.zh-CN.md\n+++ b/docs/docs/ref-05-events.zh-CN.md\n@@ -138,6 +138,15 @@ boolean shiftKey\n ```\n \n \n+### Selection Events\n+\n+\u4e8b\u4ef6\u540d\u79f0:\n+\n+```\n+onSelect\n+```\n+\n+\n ### \u89e6\u63a7\u4e8b\u4ef6\n \n \u4e8b\u4ef6\u540d\u79f0\uff1a\n@@ -192,3 +201,19 @@ number deltaX\n number deltaY\n number deltaZ\n ```\n+\n+### Media Events\n+\n+\u4e8b\u4ef6\u540d\u79f0:\n+\n+```\n+onAbort onCanPlay onCanPlayThrough onDurationChange onEmptied onEncrypted onEnded onError onLoadedData onLoadedMetadata onLoadStart onPause onPlay onPlaying onProgress onRateChange onSeeked onSeeking onStalled onSuspend onTimeUpdate onVolumeChange onWaiting\n+```\n+\n+### Image Events\n+\n+\u4e8b\u4ef6\u540d\u79f0:\n+\n+```\n+onLoad onError\n+```"}, {"role": "assistant", "content": "add missing sections to events reference page in it and cn"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/addons/__tests__/renderSubtreeIntoContainer-test.js b/src/addons/__tests__/renderSubtreeIntoContainer-test.js\nindex 1ee3bd6a939b..7ed20edeeaf7 100644\n--- a/src/addons/__tests__/renderSubtreeIntoContainer-test.js\n+++ b/src/addons/__tests__/renderSubtreeIntoContainer-test.js\n@@ -196,4 +196,23 @@ describe('renderSubtreeIntoContainer', () => {\n     expect(portal.firstChild.innerHTML).toBe('changed-changed');\n   });\n \n+  it('should render portal with non-context-provider parent', () => {\n+    var container = document.createElement('div');\n+    document.body.appendChild(container);\n+    var portal = document.createElement('div');\n+\n+    class Parent extends React.Component {\n+      render() {\n+        return null;\n+      }\n+\n+      componentDidMount() {\n+        renderSubtreeIntoContainer(this, <div>hello</div>, portal);\n+      }\n+    }\n+\n+    ReactDOM.render(<Parent bar=\"initial\" />, container);\n+    expect(portal.firstChild.innerHTML).toBe('hello');\n+  });\n+\n });\ndiff --git a/src/renderers/shared/fiber/ReactFiberReconciler.js b/src/renderers/shared/fiber/ReactFiberReconciler.js\nindex a97271fc0aa0..15b415f88d7a 100644\n--- a/src/renderers/shared/fiber/ReactFiberReconciler.js\n+++ b/src/renderers/shared/fiber/ReactFiberReconciler.js\n@@ -19,6 +19,7 @@ import type { PriorityLevel } from 'ReactPriorityLevel';\n \n var {\n   findCurrentUnmaskedContext,\n+  isContextProvider,\n   processChildContext,\n } = require('ReactFiberContext');\n var { createFiberRoot } = require('ReactFiberRoot');\n@@ -91,7 +92,10 @@ export type Reconciler<C, I, TI> = {\n };\n \n getContextForSubtree._injectFiber(function(fiber : Fiber) {\n-  return processChildContext(fiber, findCurrentUnmaskedContext(fiber));\n+  const parentContext = findCurrentUnmaskedContext(fiber);\n+  return isContextProvider(fiber) ?\n+    processChildContext(fiber, parentContext) :\n+    parentContext;\n });\n \n module.exports = function<T, P, I, TI, C>(config : HostConfig<T, P, I, TI, C>) : Reconciler<C, I, TI> {"}, {"role": "assistant", "content": "fix rendersubtreeintocontainer with non-context-provider parent"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/grunt/tasks/npm-react-addons.js b/grunt/tasks/npm-react-addons.js\nindex 4a427092c27f..28608cda9787 100644\n--- a/grunt/tasks/npm-react-addons.js\n+++ b/grunt/tasks/npm-react-addons.js\n@@ -36,8 +36,8 @@ var addons = {\n     name: 'shallow-compare',\n   },\n   updates: {\n-    module: 'updates',\n-    name: 'updates',\n+    module: 'update',\n+    name: 'update',\n   },\n };"}, {"role": "assistant", "content": "rename react-addons-updates to react-addons-update"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/server-rendering-stub.js b/packages/react-dom/server-rendering-stub.js\nindex bb6dbd1813ac..b2e88599718a 100644\n--- a/packages/react-dom/server-rendering-stub.js\n+++ b/packages/react-dom/server-rendering-stub.js\n@@ -28,3 +28,30 @@ export {\n   useFormState,\n   unstable_batchedUpdates,\n } from './src/server/ReactDOMServerRenderingStub';\n+\n+import type {FormStatus} from 'react-dom-bindings/src/shared/ReactDOMFormActions';\n+import {useFormStatus, useFormState} from './src/client/ReactDOM';\n+\n+export function experimental_useFormStatus(): FormStatus {\n+  if (__DEV__) {\n+    console.error(\n+      'useFormStatus is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useFormStatus();\n+}\n+\n+export function experimental_useFormState<S, P>(\n+  action: (S, P) => Promise<S>,\n+  initialState: S,\n+  permalink?: string,\n+): [S, (P) => void] {\n+  if (__DEV__) {\n+    console.error(\n+      'useFormState is now in canary. Remove the experimental_ prefix. ' +\n+        'The prefixed alias will be removed in an upcoming release.',\n+    );\n+  }\n+  return useFormState(action, initialState, permalink);\n+}"}, {"role": "assistant", "content": "restore experimental prefix for `useformstate` and `useformstatus`"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/ReactDOMComponent.js b/src/renderers/dom/shared/ReactDOMComponent.js\nindex e97ea68c85d4..8db1b8f5956a 100644\n--- a/src/renderers/dom/shared/ReactDOMComponent.js\n+++ b/src/renderers/dom/shared/ReactDOMComponent.js\n@@ -259,7 +259,8 @@ if (__DEV__) {\n   setContentChildForInstrumentation = function(content) {\n     var hasExistingContent = this._contentDebugID != null;\n     var debugID = this._debugID;\n-    var contentDebugID = debugID + '#text';\n+    // This ID represents the inlined child that has no backing instance:\n+    var contentDebugID = -debugID;\n \n     if (content == null) {\n       if (hasExistingContent) {\ndiff --git a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js\nindex 28f3d931a14d..e2d1ba77e67c 100644\n--- a/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js\n+++ b/src/renderers/shared/hooks/__tests__/ReactComponentTreeHook-test.js\n@@ -1721,6 +1721,16 @@ describe('ReactComponentTreeHook', () => {\n     expect(ReactComponentTreeTestUtils.getRegisteredDisplayNames()).toEqual([]);\n   });\n \n+  it('registers inlined text nodes', () => {\n+    var node = document.createElement('div');\n+\n+    ReactDOM.render(<div>hi</div>, node);\n+    expect(ReactComponentTreeTestUtils.getRegisteredDisplayNames()).toEqual(['div', '#text']);\n+\n+    ReactDOM.unmountComponentAtNode(node);\n+    expect(ReactComponentTreeTestUtils.getRegisteredDisplayNames()).toEqual([]);\n+  });\n+\n   describe('stack addenda', () => {\n     it('gets created', () => {\n       function getAddendum(element) {"}, {"role": "assistant", "content": "fix reactcomponenttreehook.getregisteredids to work with inlined content"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/scheduler/src/forks/Scheduler.js b/packages/scheduler/src/forks/Scheduler.js\nindex ccea89d80bf1..2263b706aad3 100644\n--- a/packages/scheduler/src/forks/Scheduler.js\n+++ b/packages/scheduler/src/forks/Scheduler.js\n@@ -152,7 +152,7 @@ function handleTimeout(currentTime: number) {\n   if (!isHostCallbackScheduled) {\n     if (peek(taskQueue) !== null) {\n       isHostCallbackScheduled = true;\n-      requestHostCallback(flushWork);\n+      requestHostCallback();\n     } else {\n       const firstTimer = peek(timerQueue);\n       if (firstTimer !== null) {\n@@ -419,7 +419,7 @@ function unstable_scheduleCallback(\n     // wait until the next time we yield.\n     if (!isHostCallbackScheduled && !isPerformingWork) {\n       isHostCallbackScheduled = true;\n-      requestHostCallback(flushWork);\n+      requestHostCallback();\n     }\n   }\n \n@@ -434,7 +434,7 @@ function unstable_continueExecution() {\n   isSchedulerPaused = false;\n   if (!isHostCallbackScheduled && !isPerformingWork) {\n     isHostCallbackScheduled = true;\n-    requestHostCallback(flushWork);\n+    requestHostCallback();\n   }\n }\n \n@@ -616,7 +616,7 @@ if (typeof localSetImmediate === 'function') {\n   };\n }\n \n-function requestHostCallback(callback: (initialTime: number) => boolean) {\n+function requestHostCallback() {\n   if (!isMessageLoopRunning) {\n     isMessageLoopRunning = true;\n     schedulePerformWorkUntilDeadline();"}, {"role": "assistant", "content": "remove unused argument from schedule requesthostcallback"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/fixtures/attribute-behavior/src/App.js b/fixtures/attribute-behavior/src/App.js\nindex c682b73aae67..6d1ed959c0b1 100644\n--- a/fixtures/attribute-behavior/src/App.js\n+++ b/fixtures/attribute-behavior/src/App.js\n@@ -958,35 +958,25 @@ class App extends React.Component {\n     return (\n       <div>\n         <div>\n-          <select onChange={this.onUpdateSort}>\n-            <option\n-              selected={this.state.sortOrder === ALPHABETICAL}\n-              value={ALPHABETICAL}>\n+          <select value={this.state.sortOrder} onChange={this.onUpdateSort}>\n+            <option value={ALPHABETICAL}>\n               alphabetical\n             </option>\n-            <option\n-              selected={this.state.sortOrder === REV_ALPHABETICAL}\n-              value={REV_ALPHABETICAL}>\n+            <option value={REV_ALPHABETICAL}>\n               reverse alphabetical\n             </option>\n-            <option\n-              selected={this.state.sortOrder === GROUPED_BY_ROW_PATTERN}\n-              value={GROUPED_BY_ROW_PATTERN}>\n+            <option value={GROUPED_BY_ROW_PATTERN}>\n               grouped by row pattern :)\n             </option>\n           </select>\n-          <select onChange={this.onUpdateFilter}>\n-            <option selected={this.state.sortOrder === ALL} value={ALL}>\n+          <select value={this.state.filter} onChange={this.onUpdateFilter}>\n+            <option value={ALL}>\n               all\n             </option>\n-            <option\n-              selected={this.state.sortOrder === INCOMPLETE}\n-              value={INCOMPLETE}>\n+            <option value={INCOMPLETE}>\n               incomplete\n             </option>\n-            <option\n-              selected={this.state.sortOrder === COMPLETE}\n-              value={COMPLETE}>\n+            <option value={COMPLETE}>\n               complete\n             </option>\n           </select>"}, {"role": "assistant", "content": "use value on <select> instead of setting selected on <option>"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-05-events.md b/docs/docs/ref-05-events.md\nindex 8d6fb5fce710..edb425690339 100644\n--- a/docs/docs/ref-05-events.md\n+++ b/docs/docs/ref-05-events.md\n@@ -138,6 +138,7 @@ Properties:\n DOMEventTarget relatedTarget\n ```\n \n+These focus events work on all elements in the React DOM, not just form elements.\n \n ### Form Events"}, {"role": "assistant", "content": "specify focus events work on all elements in the react dom"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/04-multiple-components.md b/docs/docs/04-multiple-components.md\nindex eb04cfd3f44d..0b3d9bf6b4a9 100644\n--- a/docs/docs/04-multiple-components.md\n+++ b/docs/docs/04-multiple-components.md\n@@ -133,6 +133,46 @@ The situation gets more complicated when the children are shuffled around (as in\n \n When React reconciles the keyed children, it will ensure that any child with `key` will be reordered (instead of clobbered) or destroyed (instead of reused).\n \n+The `key` should *always* be supplied directly to the components in the array, not to the container HTML child of each component in the array:\n+\n+```javascript\n+// WRONG!\n+var ListItemWrapper = React.createClass({\n+  render: function() {\n+    return <li key={this.props.data.id}>{this.props.data.text}</li>;\n+  }\n+});\n+var MyComponent = React.createClass({\n+  render: function() {\n+    return (\n+      <ul>\n+        {this.props.results.map(function(result) {\n+          return <ListItemWrapper data={result}/>;\n+        })}\n+      </ul>\n+    );\n+  }\n+});\n+\n+// Correct :)\n+var ListItemWrapper = React.createClass({\n+  render: function() {\n+    return <li>{this.props.data.text}</li>;\n+  }\n+});\n+var MyComponent = React.createClass({\n+  render: function() {\n+    return (\n+      <ul>\n+        {this.props.results.map(function(result) {\n+           return <ListItemWrapper key={result.id} data={result}/>;\n+        })}\n+      </ul>\n+    );\n+  }\n+});\n+```\n+\n You can also key children by passing an object. The object keys will be used as `key` for each value. However it is important to remember that JavaScript does not guarantee the ordering of properties will be preserved. In practice browsers will preserve property order **except** for properties that can be parsed as a 32-bit unsigned integers. Numeric properties will be ordered sequentially and before other properties. If this happens React will render components out of order. This can be avoided by adding a string prefix to the key:\n \n ```javascript"}, {"role": "assistant", "content": "explain where to provide the key for dynamic children."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex 24252f8e732c..926995357fde 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -98,7 +98,7 @@ Verifies the object is a ReactElement.\n array React.Children.map(object children, function fn [, object thisArg])\n ```\n \n-Invoke `fn` on every immediate child contained within `children` with `this` set to `thisArg`. If `children` is a nested object or array it will be traversed: `fn` will never be passed the container objects. If children is `null` or `undefined` returns `null` or `undefined` rather than an array.\n+Invoke `fn` on every immediate child contained within `children` with `this` set to `thisArg`. If `children` is a keyed fragment or array it will be traversed: `fn` will never be passed the container objects. If children is `null` or `undefined` returns `null` or `undefined` rather than an array.\n \n #### React.Children.forEach"}, {"role": "assistant", "content": "remove mention of 'nested object' as an allowed children in react.children.map"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools/app.js b/packages/react-devtools/app.js\nindex 2153fad0e070..3912a80ef09d 100644\n--- a/packages/react-devtools/app.js\n+++ b/packages/react-devtools/app.js\n@@ -5,7 +5,7 @@\n  * LICENSE file in the root directory of this source tree.\n  */\n \n-const {app, BrowserWindow} = require('electron'); // Module to create native browser window.\n+const {app, BrowserWindow, shell} = require('electron'); // Module to create native browser window.\n const {join} = require('path');\n const os = require('os');\n \n@@ -40,9 +40,9 @@ app.on('ready', function () {\n   }\n \n   // https://stackoverflow.com/questions/32402327/\n-  mainWindow.webContents.on('new-window', function (event, url) {\n-    event.preventDefault();\n-    require('electron').shell.openExternal(url);\n+  mainWindow.webContents.setWindowOpenHandler(({url}) => {\n+    shell.openExternal(url);\n+    return {action: 'deny'};\n   });\n \n   // and load the index.html of the app."}, {"role": "assistant", "content": "replace deprecated `new-window` with `webcontents.setwindowopenhandler`"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactFiberBeginWork.js b/src/renderers/shared/fiber/ReactFiberBeginWork.js\nindex 6b534789ab68..24ec08db9079 100644\n--- a/src/renderers/shared/fiber/ReactFiberBeginWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberBeginWork.js\n@@ -97,16 +97,16 @@ function beginWork(current : ?Fiber, workInProgress : Fiber) : ?Fiber {\n   switch (workInProgress.tag) {\n     case IndeterminateComponent:\n       mountIndeterminateComponent(current, workInProgress);\n-      break;\n+      return workInProgress.child;\n     case FunctionalComponent:\n       updateFunctionalComponent(current, workInProgress);\n-      break;\n+      return workInProgress.child;\n     case ClassComponent:\n       console.log('class component', workInProgress.input.type.name);\n-      break;\n+      return workInProgress.child;\n     case HostComponent:\n       updateHostComponent(current, workInProgress);\n-      break;\n+      return workInProgress.child;\n     case CoroutineHandlerPhase:\n       // This is a restart. Reset the tag to the initial phase.\n       workInProgress.tag = CoroutineComponent;\n@@ -121,7 +121,7 @@ function beginWork(current : ?Fiber, workInProgress : Fiber) : ?Fiber {\n           workInProgress.child\n         );\n       }\n-      break;\n+      return workInProgress.child;\n     case YieldComponent:\n       // A yield component is just a placeholder, we can just run through the\n       // next one immediately.\n@@ -135,7 +135,6 @@ function beginWork(current : ?Fiber, workInProgress : Fiber) : ?Fiber {\n     default:\n       throw new Error('Unknown unit of work tag');\n   }\n-  return workInProgress.child;\n }\n \n exports.beginWork = beginWork;"}, {"role": "assistant", "content": "get rid of ugly and difficult to follow breaks in switch"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/.flowconfig b/.flowconfig\nindex c2f42c17c7c9..d613bab513a3 100644\n--- a/.flowconfig\n+++ b/.flowconfig\n@@ -25,6 +25,7 @@ shells/dev/build/*\n [lints]\n \n [options]\n+server.max_workers=4\n esproposal.class_instance_fields=enable\n suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowFixMe\n suppress_comment=\\\\(.\\\\|\\n\\\\)*\\\\$FlowIssue"}, {"role": "assistant", "content": "fix flow failure on circleci due to the number of workers"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/stack/reconciler/ReactMultiChild.js b/src/renderers/shared/stack/reconciler/ReactMultiChild.js\nindex 01014e80f92c..70e39bcbffcf 100644\n--- a/src/renderers/shared/stack/reconciler/ReactMultiChild.js\n+++ b/src/renderers/shared/stack/reconciler/ReactMultiChild.js\n@@ -12,6 +12,7 @@\n 'use strict';\n \n var ReactComponentEnvironment = require('ReactComponentEnvironment');\n+var ReactInstanceMap = require('ReactInstanceMap');\n var ReactInstrumentation = require('ReactInstrumentation');\n var ReactMultiChildUpdateTypes = require('ReactMultiChildUpdateTypes');\n \n@@ -142,14 +143,28 @@ function processQueue(inst, updateQueue) {\n var setParentForInstrumentation = emptyFunction;\n var setChildrenForInstrumentation = emptyFunction;\n if (__DEV__) {\n+  var getDebugID = function(inst) {\n+    if (!inst._debugID) {\n+      // Check for ART-like instances. TODO: This is silly/gross.\n+      var internal;\n+      if ((internal = ReactInstanceMap.get(inst))) {\n+        inst = internal;\n+      }\n+    }\n+    return inst._debugID;\n+  };\n   setParentForInstrumentation = function(child) {\n+    invariant(child._debugID != null, 'mooooooooooooooooooo');\n     if (child._debugID !== 0) {\n-      ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);\n+      ReactInstrumentation.debugTool.onSetParent(\n+        child._debugID,\n+        getDebugID(this._debugID)\n+      );\n     }\n   };\n   setChildrenForInstrumentation = function(children) {\n     ReactInstrumentation.debugTool.onSetChildren(\n-      this._debugID,\n+      getDebugID(this),\n       children ? Object.keys(children).map(key => children[key]._debugID) : []\n     );\n   };"}, {"role": "assistant", "content": "add hacks to make react art not warn from devtools"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex d35a9af1b830..da8d0bc2dacb 100644\n--- a/package.json\n+++ b/package.json\n@@ -36,7 +36,7 @@\n   },\n   \"dependencies\": {\n     \"base62\": \"~0.1.1\",\n-    \"commoner\": \"~0.8.3\",\n+    \"commoner\": \"~0.8.4\",\n     \"esprima\": \"https://github.com/facebook/esprima/tarball/a3e0ea3979eb8d54d8bfade220c272903f928b1e\",\n     \"recast\": \"~0.4.8\",\n     \"source-map\": \"~0.1.22\"\n@@ -44,7 +44,7 @@\n   \"devDependencies\": {\n     \"browserify\": \"~2.24.1\",\n     \"wrapup\": \"~0.12.0\",\n-    \"populist\": \"~0.1.2\",\n+    \"populist\": \"~0.1.3\",\n     \"grunt-cli\": \"~0.1.9\",\n     \"grunt\": \"~0.4.1\",\n     \"grunt-contrib-copy\": \"~0.4.1\","}, {"role": "assistant", "content": "upgrade commoner and populist to force upgrade to graceful-fs v2.0.0."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/rollup/build.js b/scripts/rollup/build.js\nindex f7ce2760fb7b..6e6384aba66f 100644\n--- a/scripts/rollup/build.js\n+++ b/scripts/rollup/build.js\n@@ -182,12 +182,16 @@ let getRollupInteropValue = id => {\n   // Specifying `interop: 'default'` instead will have Rollup use the imported variable as-is,\n   // without adding a `.default` to the reference.\n   const modulesWithCommonJsExports = [\n-    'JSResourceReferenceImpl',\n-    'error-stack-parser',\n     'art/core/transform',\n     'art/modes/current',\n     'art/modes/fast-noSideEffects',\n     'art/modes/svg',\n+    'JSResourceReferenceImpl',\n+    'error-stack-parser',\n+    'neo-async',\n+    'webpack/lib/dependencies/ModuleDependency',\n+    'webpack/lib/dependencies/NullDependency',\n+    'webpack/lib/Template',\n   ];\n \n   if (modulesWithCommonJsExports.includes(id)) {"}, {"role": "assistant", "content": "fix remaining commonjs imports after rollup upgrade"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex eefa55133841..6f7bac5b6358 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -89,7 +89,7 @@ If the optional callback is provided, it will be executed after the component is\n \n > Note:\n >\n-> `React.render()` controls the contents of the container node you pass in*. Any existing DOM elements\n+> `React.render()` controls the contents of the container node you pass in. Any existing DOM elements\n > inside are replaced when first called. Later calls use React\u2019s DOM diffing algorithm for efficient\n > updates.\n >"}, {"role": "assistant", "content": "remove footnote reference asterisk, no longer needed"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/09-reference.md b/docs/docs/09-reference.md\nindex 304a6c0ae200..64a1fb82a7db 100644\n--- a/docs/docs/09-reference.md\n+++ b/docs/docs/09-reference.md\n@@ -205,4 +205,5 @@ React has implemented a browser-independent events and DOM system for performanc\n * All events (including submit) bubble correctly per the W3C spec\n * All event objects conform to the W3C spec\n * All DOM properties and attributes (including event handlers) should be camelCased to be consistent with standard JavaScript style. We intentionally break with the spec here, since the spec is inconsistent.\n+* The `style` attribute accepts a JavaScript object with camelCased properties rather than a CSS string. This is consistent with the DOM `style` JavaScript property, is more efficient, and prevents XSS security holes.\n * `onChange` behaves as you would expect it to: whenever a form field is changed this event is fired rather than inconsistently on blur. We intentionally break from existing browser behavior because `onChange` is a misnomer for its behavior and React relies on this event to react to user input in real time."}, {"role": "assistant", "content": "update dom differences docs to include a note about the style attribute."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/grunt/config/browserify.js b/grunt/config/browserify.js\nindex ad54483a3f38..30e63dcfbab6 100644\n--- a/grunt/config/browserify.js\n+++ b/grunt/config/browserify.js\n@@ -56,7 +56,7 @@ var basic = {\n   outfile: './build/react.js',\n   debug: false,\n   standalone: 'React',\n-  transforms: [envify({NODE_ENV: 'development'})],\n+  transforms: [envify({NODE_ENV: process.env.NODE_ENV || 'development'})],\n   plugins: [collapser],\n   after: [derequire, simpleBannerify],\n };\n@@ -68,7 +68,7 @@ var min = {\n   outfile: './build/react.min.js',\n   debug: false,\n   standalone: 'React',\n-  transforms: [envify({NODE_ENV: 'production'}), uglifyify],\n+  transforms: [envify({NODE_ENV: process.env.NODE_ENV || 'production'}), uglifyify],\n   plugins: [collapser],\n   // No need to derequire because the minifier will mangle\n   // the \"require\" calls.\n@@ -100,7 +100,7 @@ var addons = {\n   debug: false,\n   standalone: 'React',\n   packageName: 'React (with addons)',\n-  transforms: [envify({NODE_ENV: 'development'})],\n+  transforms: [envify({NODE_ENV: process.env.NODE_ENV || 'development'})],\n   plugins: [collapser],\n   after: [derequire, simpleBannerify],\n };\n@@ -113,7 +113,7 @@ var addonsMin = {\n   debug: false,\n   standalone: 'React',\n   packageName: 'React (with addons)',\n-  transforms: [envify({NODE_ENV: 'production'}), uglifyify],\n+  transforms: [envify({NODE_ENV: process.env.NODE_ENV || 'production'}), uglifyify],\n   plugins: [collapser],\n   // No need to derequire because the minifier will mangle\n   // the \"require\" calls.\n@@ -129,7 +129,7 @@ var withCodeCoverageLogging = {\n   debug: true,\n   standalone: 'React',\n   transforms: [\n-    envify({NODE_ENV: 'development'}),\n+    envify({NODE_ENV: process.env.NODE_ENV || 'development'}),\n     require('coverify'),\n   ],\n   plugins: [collapser],"}, {"role": "assistant", "content": "respect node_env environment variable if set when building"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/contributing/how-to-contribute.md b/docs/contributing/how-to-contribute.md\nindex 736b6b3cf458..4beaabeac90b 100644\n--- a/docs/contributing/how-to-contribute.md\n+++ b/docs/contributing/how-to-contribute.md\n@@ -54,7 +54,7 @@ There is also [an active community of React users on the Discord chat platform](\n \n ### Proposing a Change\n \n-If you intend to change to the public API, or make any non-trivial changes to the implementation, we recommend [filing an issue](https://github.com/facebook/react/issues/new). This lets us reach an agreement on your proposal before you put significant effort into it.\n+If you intend to change the public API, or make any non-trivial changes to the implementation, we recommend [filing an issue](https://github.com/facebook/react/issues/new). This lets us reach an agreement on your proposal before you put significant effort into it.\n \n If you're only fixing a bug, it's fine to submit a pull request right away but we still recommend to file an issue detailing what you're fixing. This is helpful in case we don't accept that specific fix but want to keep track of the issue."}, {"role": "assistant", "content": "fix typo in proposing a change section in how-to-contribute.md"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/SchedulingProfiler.js b/packages/react-reconciler/src/SchedulingProfiler.js\nindex 0304f39a12e5..6ef0b6293bc7 100644\n--- a/packages/react-reconciler/src/SchedulingProfiler.js\n+++ b/packages/react-reconciler/src/SchedulingProfiler.js\n@@ -18,6 +18,7 @@ import {\n import ReactVersion from 'shared/ReactVersion';\n import getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\n import {SCHEDULING_PROFILER_VERSION} from 'react-devtools-timeline/src/constants';\n+import isArray from 'shared/isArray';\n \n import {\n   getLabelForLane as getLabelForLane_old,\n@@ -105,11 +106,18 @@ function markInternalModuleRanges() {\n     typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.getInternalModuleRanges === 'function'\n   ) {\n     const ranges = __REACT_DEVTOOLS_GLOBAL_HOOK__.getInternalModuleRanges();\n-    for (let i = 0; i < ranges.length; i++) {\n-      const [startStackFrame, stopStackFrame] = ranges[i];\n-\n-      markAndClear(`--react-internal-module-start-${startStackFrame}`);\n-      markAndClear(`--react-internal-module-stop-${stopStackFrame}`);\n+    // This check would not be required,\n+    // except that it's possible for things to override __REACT_DEVTOOLS_GLOBAL_HOOK__.\n+    if (isArray(ranges)) {\n+      for (let i = 0; i < ranges.length; i++) {\n+        const range = ranges[i];\n+        if (isArray(range) && range.length === 2) {\n+          const [startStackFrame, stopStackFrame] = ranges[i];\n+\n+          markAndClear(`--react-internal-module-start-${startStackFrame}`);\n+          markAndClear(`--react-internal-module-stop-${stopStackFrame}`);\n+        }\n+      }\n     }\n   }\n }"}, {"role": "assistant", "content": "add runtime type checks around module boundary code"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-native-renderer/src/ReactNativeFiberInspector.js b/packages/react-native-renderer/src/ReactNativeFiberInspector.js\nindex 874ac91d8473..2cc3c4ca8bf3 100644\n--- a/packages/react-native-renderer/src/ReactNativeFiberInspector.js\n+++ b/packages/react-native-renderer/src/ReactNativeFiberInspector.js\n@@ -112,6 +112,7 @@ if (__DEV__ || enableGetInspectorDataForInstanceInProduction) {\n     const selectedIndex = fiberHierarchy.indexOf(instance);\n \n     return {\n+      closestInstance: instance,\n       hierarchy,\n       props,\n       selectedIndex,\n@@ -225,7 +226,6 @@ if (__DEV__) {\n                 pointerY: locationY,\n                 frame: {left: pageX, top: pageY, width, height},\n                 touchedViewTag: nativeViewTag,\n-                closestInstance,\n               });\n             },\n           );\ndiff --git a/packages/react-native-renderer/src/ReactNativeTypes.js b/packages/react-native-renderer/src/ReactNativeTypes.js\nindex 5eef1a6dff9c..0b0a57b89596 100644\n--- a/packages/react-native-renderer/src/ReactNativeTypes.js\n+++ b/packages/react-native-renderer/src/ReactNativeTypes.js\n@@ -138,6 +138,7 @@ type InspectorDataGetter = (\n }>;\n \n export type InspectorData = $ReadOnly<{\n+  closestInstance?: mixed,\n   hierarchy: Array<{\n     name: ?string,\n     getInspectorData: InspectorDataGetter,\n@@ -150,7 +151,6 @@ export type InspectorData = $ReadOnly<{\n export type TouchedViewDataAtPoint = $ReadOnly<{\n   pointerY: number,\n   touchedViewTag?: number,\n-  closestInstance?: mixed,\n   frame: $ReadOnly<{\n     top: number,\n     left: number,"}, {"role": "assistant", "content": "return lastnonhostinstance in getinspectordataforinstance for devtools"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactFiberHostContext.js b/src/renderers/shared/fiber/ReactFiberHostContext.js\nindex f49f41ea95cc..a10688aa7f89 100644\n--- a/src/renderers/shared/fiber/ReactFiberHostContext.js\n+++ b/src/renderers/shared/fiber/ReactFiberHostContext.js\n@@ -48,10 +48,11 @@ module.exports = function<T, P, I, TI, C, CX>(\n   let rootInstanceStackCursor : StackCursor<?C> = createCursor((null: ?C));\n \n   function getRootHostContainer() : C {\n-    if (rootInstanceStackCursor.current == null) {\n+    const rootInstance = rootInstanceStackCursor.current;\n+    if (rootInstance == null) {\n       throw new Error('Expected root container to exist.');\n     }\n-    return rootInstanceStackCursor.current;\n+    return rootInstance;\n   }\n \n   function pushHostContainer(fiber : Fiber, nextRootInstance : C) {\n@@ -74,20 +75,20 @@ module.exports = function<T, P, I, TI, C, CX>(\n   }\n \n   function getHostContext() : CX {\n-    if (contextStackCursor.current == null) {\n+    const context = contextStackCursor.current;\n+    if (context == null) {\n       throw new Error('Expected host context to exist.');\n     }\n-\n-    return contextStackCursor.current;\n+    return context;\n   }\n \n   function pushHostContext(fiber : Fiber) : void {\n-    if (rootInstanceStackCursor.current == null) {\n+    const rootInstance = rootInstanceStackCursor.current;\n+    if (rootInstance == null) {\n       throw new Error('Expected root host context to exist.');\n     }\n \n     const context = contextStackCursor.current || emptyObject;\n-    const rootInstance = rootInstanceStackCursor.current;\n     const nextContext = getChildHostContext(context, fiber.type, rootInstance);\n \n     // Don't push this Fiber's context unless it's unique."}, {"role": "assistant", "content": "avoid reading the same stackcursor current multiple times"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/fiber/tests-failing.txt b/scripts/fiber/tests-failing.txt\nindex 46e114bb2454..ae1b00f2df5a 100644\n--- a/scripts/fiber/tests-failing.txt\n+++ b/scripts/fiber/tests-failing.txt\n@@ -26,7 +26,6 @@ src/renderers/dom/shared/__tests__/ReactDOMTextComponent-test.js\n * can reconcile text arbitrarily split into multiple nodes on some substitutions only\n \n src/renderers/dom/shared/__tests__/ReactMount-test.js\n-* throws when given a non-node\n * throws when given a string\n * throws when given a factory\n * tracks root instances\ndiff --git a/scripts/fiber/tests-passing.txt b/scripts/fiber/tests-passing.txt\nindex 495ab14b83f0..ab34e726913f 100644\n--- a/scripts/fiber/tests-passing.txt\n+++ b/scripts/fiber/tests-passing.txt\n@@ -752,6 +752,7 @@ src/renderers/dom/shared/__tests__/ReactEventListener-test.js\n * should not fire duplicate events for a React DOM tree\n \n src/renderers/dom/shared/__tests__/ReactMount-test.js\n+* throws when given a non-node\n * should render different components in same root\n * should unmount and remount if the key changes\n * should reuse markup if rendering to the same target twice\ndiff --git a/src/renderers/dom/fiber/ReactDOMFiber.js b/src/renderers/dom/fiber/ReactDOMFiber.js\nindex ed27da5ee98a..79ad9a28decc 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiber.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiber.js\n@@ -352,6 +352,10 @@ var ReactDOM = {\n   },\n \n   unmountComponentAtNode(container : DOMContainerElement) {\n+    invariant(\n+      isValidContainer(container),\n+      'unmountComponentAtNode(...): Target container is not a DOM element.'\n+    );\n     warnAboutUnstableUse();\n     if (container._reactRootContainer) {\n       // Unmount should not be batched."}, {"role": "assistant", "content": "throw when attempting to unmount at an invalid node"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-09-glossary.md b/docs/docs/ref-09-glossary.md\nindex 3179cc1f7dc4..5c0e460d1fb5 100644\n--- a/docs/docs/ref-09-glossary.md\n+++ b/docs/docs/ref-09-glossary.md\n@@ -44,7 +44,7 @@ var root = <ul className=\"my-list\">\n React.render(root, document.getElementById('example'));\n ```\n \n-__Factories__\n+### Factories\n \n A `ReactElement`-factory is simply a function that generates a `ReactElement` with a particular `type` property. React has a built-in helper for you to create factories. It's effectively just:\n \n@@ -105,7 +105,7 @@ When this constructor is invoked it is expected to return an object with at leas\n var component = new MyComponent(props); // never do this\n ```\n \n-Other than for testing, you would normally __never__ call this constructor yourself. React calls it for you.\n+Other than for testing, you would normally *never* call this constructor yourself. React calls it for you.\n \n Instead, you pass the `ReactComponent` Class to `createElement` you get a `ReactElement`.\n \n@@ -140,13 +140,13 @@ The `render` method of a `ReactComponent` is expected to return another `ReactEl\n \n ## Formal Type Definitions\n \n-__Entry Point__\n+### Entry Point\n \n ```\n React.render = (ReactElement, HTMLElement | SVGElement) => ReactComponent;\n ```\n \n-__Nodes and Elements__\n+### Nodes and Elements\n \n ```\n type ReactNode = ReactElement | ReactFragment | ReactText;\n@@ -180,7 +180,7 @@ type ReactText = string | number;\n type ReactEmpty = null | undefined | boolean;\n ```\n \n-__Classes and Components__\n+### Classes and Components\n \n ```\n type ReactClass<TProps> = (TProps) => ReactComponent<TProps>;"}, {"role": "assistant", "content": "use same type of markdown as everywhere else for glossary"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/devtools/views/DevTools.css b/packages/react-devtools-shared/src/devtools/views/DevTools.css\nindex efc59b78dba6..dd6b0d81e78b 100644\n--- a/packages/react-devtools-shared/src/devtools/views/DevTools.css\n+++ b/packages/react-devtools-shared/src/devtools/views/DevTools.css\n@@ -29,6 +29,7 @@\n .TabContent {\n   flex: 1 1 100%;\n   overflow: auto;\n+  -webkit-app-region: no-drag;\n }\n \n .DevToolsVersion {"}, {"role": "assistant", "content": "fix for the standalone devtools not responding to clicks."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/__tests__/ReactErrorBoundariesHooks-test.internal.js b/packages/react-dom/src/__tests__/ReactErrorBoundariesHooks-test.internal.js\nnew file mode 100644\nindex 000000000000..078c58e0357e\n--- /dev/null\n+++ b/packages/react-dom/src/__tests__/ReactErrorBoundariesHooks-test.internal.js\n@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) Facebook, Inc. and its affiliates.\n+ *\n+ * This source code is licensed under the MIT license found in the\n+ * LICENSE file in the root directory of this source tree.\n+ *\n+ * @emails react-core\n+ */\n+\n+'use strict';\n+\n+let React;\n+let ReactDOM;\n+\n+describe('ReactErrorBoundariesHooks', () => {\n+  beforeEach(() => {\n+    jest.resetModules();\n+    ReactDOM = require('react-dom');\n+    React = require('react');\n+  });\n+\n+  it('should preserve hook order if errors are caught', () => {\n+    function ErrorThrower() {\n+      React.useMemo(() => undefined, []);\n+      throw new Error('expected');\n+    }\n+\n+    function StatefulComponent() {\n+      React.useState(null);\n+      return ' | stateful';\n+    }\n+\n+    class ErrorHandler extends React.Component {\n+      state = {error: null};\n+\n+      componentDidCatch(error) {\n+        return this.setState({error});\n+      }\n+\n+      render() {\n+        if (this.state.error !== null) {\n+          return <p>Handled error: {this.state.error.message}</p>;\n+        }\n+        return this.props.children;\n+      }\n+    }\n+\n+    function App(props) {\n+      return (\n+        <React.Fragment>\n+          <ErrorHandler>\n+            <ErrorThrower />\n+          </ErrorHandler>\n+          <StatefulComponent />\n+        </React.Fragment>\n+      );\n+    }\n+\n+    const container = document.createElement('div');\n+    ReactDOM.render(<App />, container);\n+\n+    expect(() => {\n+      ReactDOM.render(<App />, container);\n+    }).not.toThrow();\n+  });\n+});"}, {"role": "assistant", "content": "add regression test for hooks after error boundaries"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/client/ReactDOMSelection.js b/packages/react-dom/src/client/ReactDOMSelection.js\nindex 9f247af15b4f..1f584597514c 100644\n--- a/packages/react-dom/src/client/ReactDOMSelection.js\n+++ b/packages/react-dom/src/client/ReactDOMSelection.js\n@@ -153,6 +153,14 @@ export function getModernOffsetsFromPoints(\n export function setOffsets(node, offsets) {\n   const doc = node.ownerDocument || document;\n   const win = (doc && doc.defaultView) || window;\n+\n+  // Edge fails with \"Object expected\" in some scenarios.\n+  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,\n+  // fails when pasting 100+ items)\n+  if (!win.getSelection) {\n+    return;\n+  }\n+\n   const selection = win.getSelection();\n   const length = node.textContent.length;\n   let start = Math.min(offsets.start, length);"}, {"role": "assistant", "content": "add back early return in setoffsets which was removed between 16.4.2 and 16.5.0. fails in edge in some scenarios."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/fixtures/dom/package.json b/fixtures/dom/package.json\nindex 8677f5d70b80..099b4791220a 100644\n--- a/fixtures/dom/package.json\n+++ b/fixtures/dom/package.json\n@@ -12,7 +12,7 @@\n   },\n   \"scripts\": {\n     \"start\": \"react-scripts start\",\n-    \"prestart\": \"cp ../build/{react,react-dom}.js public/\",\n+    \"prestart\": \"cp ../../build/{react,react-dom}.js public/\",\n     \"build\": \"react-scripts build\",\n     \"test\": \"react-scripts test --env=jsdom\",\n     \"eject\": \"react-scripts eject\""}, {"role": "assistant", "content": "fix relative reference to build folder in dom fixtures"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/fixtures/attribute-behavior/src/App.js b/fixtures/attribute-behavior/src/App.js\nindex b7a8037b0c0c..156efa418f2c 100644\n--- a/fixtures/attribute-behavior/src/App.js\n+++ b/fixtures/attribute-behavior/src/App.js\n@@ -2573,6 +2573,7 @@ function getRenderedAttributeValue(renderer, serverRenderer, attribute, type) {\n   };\n \n   let defaultValue;\n+  let canonicalDefaultValue;\n   let result;\n   let canonicalResult;\n   let ssrResult;\n@@ -2586,6 +2587,7 @@ function getRenderedAttributeValue(renderer, serverRenderer, attribute, type) {\n   try {\n     renderer.render(React.createElement(tagName, baseProps), container);\n     defaultValue = read(container.firstChild);\n+    canonicalDefaultValue = getCanonicalizedValue(defaultValue);\n     renderer.render(React.createElement(tagName, props), container);\n     result = read(container.firstChild);\n     canonicalResult = getCanonicalizedValue(result);\n@@ -2662,7 +2664,7 @@ function getRenderedAttributeValue(renderer, serverRenderer, attribute, type) {\n     defaultValue,\n     result,\n     canonicalResult,\n-    canonicalDefaultValue: getCanonicalizedValue(defaultValue),\n+    canonicalDefaultValue,\n     didWarn,\n     didError,\n     ssrResult,"}, {"role": "assistant", "content": "canonicalize values immediately after reading them"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-core/src/standalone.js b/packages/react-devtools-core/src/standalone.js\nindex 1ef01e8ffc02..ab3250d7cff7 100644\n--- a/packages/react-devtools-core/src/standalone.js\n+++ b/packages/react-devtools-core/src/standalone.js\n@@ -41,13 +41,17 @@ import type {InspectedElement} from 'react-devtools-shared/src/devtools/views/Co\n \n installHook(window);\n \n-export type StatusListener = (message: string) => void;\n+export type StatusTypes = 'server-connected' | 'devtools-connected' | 'error';\n+export type StatusListener = (message: string, status: StatusTypes) => void;\n export type OnDisconnectedCallback = () => void;\n \n let node: HTMLElement = ((null: any): HTMLElement);\n let nodeWaitingToConnectHTML: string = '';\n let projectRoots: Array<string> = [];\n-let statusListener: StatusListener = (message: string) => {};\n+let statusListener: StatusListener = (\n+  message: string,\n+  status?: StatusTypes,\n+) => {};\n let disconnectedCallback: OnDisconnectedCallback = () => {};\n \n // TODO (Webpack 5) Hopefully we can remove this prop after the Webpack 5 migration.\n@@ -260,6 +264,7 @@ function initialize(socket: WebSocket) {\n   });\n \n   log('Connected');\n+  statusListener('DevTools initialized.', 'devtools-connected');\n   reload();\n }\n \n@@ -372,12 +377,15 @@ function startServer(\n \n   httpServer.on('error', event => {\n     onError(event);\n-    statusListener('Failed to start the server.');\n+    statusListener('Failed to start the server.', 'error');\n     startServerTimeoutID = setTimeout(() => startServer(port), 1000);\n   });\n \n   httpServer.listen(port, () => {\n-    statusListener('The server is listening on the port ' + port + '.');\n+    statusListener(\n+      'The server is listening on the port ' + port + '.',\n+      'server-connected',\n+    );\n   });\n \n   return {"}, {"role": "assistant", "content": "emit new event when devtools connects in standalone app"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex 5c1e06566529..42872293d0ee 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -555,6 +555,16 @@ function mixStaticSpecIntoComponent(Constructor, statics) {\n       continue;\n     }\n \n+    var isReserved = name in RESERVED_SPEC_KEYS;\n+    invariant(\n+      !isReserved,\n+      'ReactCompositeComponent: You are attempting to define a reserved ' +\n+      'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n+      'as an instance property instead; it will still be accessible on the ' +\n+      'constructor.',\n+      name\n+    );\n+\n     var isInherited = name in Constructor;\n     invariant(\n       !isInherited,\ndiff --git a/src/core/__tests__/ReactCompositeComponent-test.js b/src/core/__tests__/ReactCompositeComponent-test.js\nindex 2deb31e912af..20c7accb698f 100644\n--- a/src/core/__tests__/ReactCompositeComponent-test.js\n+++ b/src/core/__tests__/ReactCompositeComponent-test.js\n@@ -1272,6 +1272,29 @@ describe('ReactCompositeComponent', function() {\n     expect(Component.pqr()).toBe(Component.type);\n   });\n \n+  it('should throw if a reserved property is in statics', function() {\n+    expect(function() {\n+      React.createClass({\n+        statics: {\n+          getDefaultProps: function() {\n+            return {\n+              foo: 0\n+            };\n+          }\n+        },\n+\n+        render: function() {\n+          return <span />;\n+        }\n+      });\n+    }).toThrow(\n+      'Invariant Violation: ReactCompositeComponent: You are attempting to ' +\n+      'define a reserved property, `getDefaultProps`, that shouldn\\'t be on ' +\n+      'the \"statics\" key. Define it as an instance property instead; it ' +\n+      'will still be accessible on the constructor.'\n+    );\n+  });\n+\n   it('should support statics in mixins', function() {\n     var Mixin = {\n       statics: {"}, {"role": "assistant", "content": "throw if a reserved property is defined in 'statics'"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/__tests__/profilerStore-test.js b/src/__tests__/profilerStore-test.js\nindex 08f64b344b15..f6ffcfe78369 100644\n--- a/src/__tests__/profilerStore-test.js\n+++ b/src/__tests__/profilerStore-test.js\n@@ -54,4 +54,21 @@ describe('ProfilerStore', () => {\n \n     expect(store.profilerStore.getDataForRoot(rootB)).not.toBeNull();\n   });\n+\n+  it('should not allow new/saved profiling data to be set while profiling is in progress', () => {\n+    utils.act(() => store.profilerStore.startProfiling());\n+    const fauxProfilingData = {\n+      dataForRoots: new Map(),\n+    };\n+    spyOn(console, 'warn');\n+    store.profilerStore.profilingData = fauxProfilingData;\n+    expect(store.profilerStore.profilingData).not.toBe(fauxProfilingData);\n+    expect(console.warn).toHaveBeenCalledTimes(1);\n+    expect(console.warn).toHaveBeenCalledWith(\n+      'Profiling data cannot be updated while profiling is in progress.'\n+    );\n+    utils.act(() => store.profilerStore.stopProfiling());\n+    store.profilerStore.profilingData = fauxProfilingData;\n+    expect(store.profilerStore.profilingData).toBe(fauxProfilingData);\n+  });\n });\ndiff --git a/src/devtools/ProfilerStore.js b/src/devtools/ProfilerStore.js\nindex 30e193460026..f4901287ea15 100644\n--- a/src/devtools/ProfilerStore.js\n+++ b/src/devtools/ProfilerStore.js\n@@ -144,6 +144,13 @@ export default class ProfilerStore extends EventEmitter {\n     return this._dataFrontend;\n   }\n   set profilingData(value: ProfilingDataFrontend | null): void {\n+    if (this._isProfiling) {\n+      console.warn(\n+        'Profiling data cannot be updated while profiling is in progress.'\n+      );\n+      return;\n+    }\n+\n     this._dataBackends.splice(0);\n     this._dataFrontend = value;\n     this._initialRendererIDs.clear();"}, {"role": "assistant", "content": "fix potential rte caused by setting  profiling data while profiling is in progress"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/events/isEventSupported.js b/packages/react-dom/src/events/isEventSupported.js\nindex 11c1e2339eba..cf9e854c7a03 100644\n--- a/packages/react-dom/src/events/isEventSupported.js\n+++ b/packages/react-dom/src/events/isEventSupported.js\n@@ -7,16 +7,6 @@\n \n import ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\n \n-let useHasFeature;\n-if (ExecutionEnvironment.canUseDOM) {\n-  useHasFeature =\n-    document.implementation &&\n-    document.implementation.hasFeature &&\n-    // always returns true in newer browsers as per the standard.\n-    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n-    document.implementation.hasFeature('', '') !== true;\n-}\n-\n /**\n  * Checks if an event is supported in the current execution environment.\n  *\n@@ -48,11 +38,6 @@ function isEventSupported(eventNameSuffix, capture) {\n     isSupported = typeof element[eventName] === 'function';\n   }\n \n-  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n-    // This is the only way to test support for the `wheel` event in IE9+.\n-    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n-  }\n-\n   return isSupported;\n }"}, {"role": "assistant", "content": "remove unused wheel event detection in iseventsupported"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/package.json b/packages/react-dom/package.json\nindex 128c567ef283..b7f864a72cb8 100644\n--- a/packages/react-dom/package.json\n+++ b/packages/react-dom/package.json\n@@ -27,6 +27,7 @@\n     \"README.md\",\n     \"index.js\",\n     \"server.js\",\n+    \"node-stream.js\",\n     \"test-utils.js\",\n     \"cjs/\",\n     \"umd/\""}, {"role": "assistant", "content": "add node-stream.js to react-dom's package.json files entry, enabling the file to be uploaded to npm."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/fixtures/attribute-behavior/AttributeTableSnapshot.md b/fixtures/attribute-behavior/AttributeTableSnapshot.md\nindex d0fa5f567f5e..62dc25d7771b 100644\n--- a/fixtures/attribute-behavior/AttributeTableSnapshot.md\n+++ b/fixtures/attribute-behavior/AttributeTableSnapshot.md\n@@ -3587,8 +3587,8 @@\n | `focusable=(integer)`| (changed)| `\"1\"` |\n | `focusable=(NaN)`| (changed, warning)| `\"NaN\"` |\n | `focusable=(float)`| (changed)| `\"99.99\"` |\n-| `focusable=(true)`| (initial, warning)| `<null>` |\n-| `focusable=(false)`| (initial, warning)| `<null>` |\n+| `focusable=(true)`| (changed)| `\"true\"` |\n+| `focusable=(false)`| (changed)| `\"false\"` |\n | `focusable=(string 'true')`| (changed)| `\"true\"` |\n | `focusable=(string 'false')`| (changed)| `\"false\"` |\n | `focusable=(string 'on')`| (changed)| `\"on\"` |\ndiff --git a/packages/react-dom/src/shared/DOMProperty.js b/packages/react-dom/src/shared/DOMProperty.js\nindex 23a00b48a59b..cef4609497fb 100644\n--- a/packages/react-dom/src/shared/DOMProperty.js\n+++ b/packages/react-dom/src/shared/DOMProperty.js\n@@ -260,7 +260,12 @@ const properties = {};\n // In React, we let users pass `true` and `false` even though technically\n // these aren't boolean attributes (they are coerced to strings).\n // Since these are SVG attributes, their attribute names are case-sensitive.\n-['autoReverse', 'externalResourcesRequired', 'preserveAlpha'].forEach(name => {\n+[\n+  'autoReverse',\n+  'externalResourcesRequired',\n+  'focusable',\n+  'preserveAlpha',\n+].forEach(name => {\n   properties[name] = new PropertyInfoRecord(\n     name,\n     BOOLEANISH_STRING,"}, {"role": "assistant", "content": "treat focusable as enumerated boolean svg attribute"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/rollup/bundles.js b/scripts/rollup/bundles.js\nindex 3ba276130135..e2e59d2c4092 100644\n--- a/scripts/rollup/bundles.js\n+++ b/scripts/rollup/bundles.js\n@@ -118,6 +118,7 @@ const bundles = [\n       FB_WWW_PROFILING,\n       NODE_DEV,\n       NODE_PROD,\n+      NODE_PROFILING,\n     ],\n     moduleType: RENDERER,\n     entry: 'react-dom/unstable-new-scheduler',\ndiff --git a/scripts/rollup/forks.js b/scripts/rollup/forks.js\nindex 41d0f9bce6cd..45c1fd411f17 100644\n--- a/scripts/rollup/forks.js\n+++ b/scripts/rollup/forks.js\n@@ -7,6 +7,9 @@ const inlinedHostConfigs = require('../shared/inlinedHostConfigs');\n const UMD_DEV = bundleTypes.UMD_DEV;\n const UMD_PROD = bundleTypes.UMD_PROD;\n const UMD_PROFILING = bundleTypes.UMD_PROFILING;\n+const NODE_DEV = bundleTypes.NODE_DEV;\n+const NODE_PROD = bundleTypes.NODE_PROD;\n+const NODE_PROFILING = bundleTypes.NODE_PROFILING;\n const FB_WWW_DEV = bundleTypes.FB_WWW_DEV;\n const FB_WWW_PROD = bundleTypes.FB_WWW_PROD;\n const FB_WWW_PROFILING = bundleTypes.FB_WWW_PROFILING;\n@@ -69,10 +72,20 @@ const forks = Object.freeze({\n   'shared/ReactFeatureFlags': (bundleType, entry) => {\n     switch (entry) {\n       case 'react-dom/unstable-new-scheduler': {\n-        if (entry === 'react-dom/unstable-new-scheduler') {\n-          return 'shared/forks/ReactFeatureFlags.www-new-scheduler.js';\n+        switch (bundleType) {\n+          case FB_WWW_DEV:\n+          case FB_WWW_PROD:\n+          case FB_WWW_PROFILING:\n+            return 'shared/forks/ReactFeatureFlags.www-new-scheduler.js';\n+          case NODE_DEV:\n+          case NODE_PROD:\n+          case NODE_PROFILING:\n+            return 'shared/forks/ReactFeatureFlags.new-scheduler.js';\n+          default:\n+            throw Error(\n+              `Unexpected entry (${entry}) and bundleType (${bundleType})`\n+            );\n         }\n-        return null;\n       }\n       case 'react-native-renderer':\n         switch (bundleType) {"}, {"role": "assistant", "content": "fix feature flags react-dom/unstable-new-scheduler"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-noop-renderer/package.json b/packages/react-noop-renderer/package.json\nindex 21fe8be9d891..e7a145892bee 100644\n--- a/packages/react-noop-renderer/package.json\n+++ b/packages/react-noop-renderer/package.json\n@@ -10,7 +10,7 @@\n     \"object-assign\": \"^4.1.1\",\n     \"prop-types\": \"^15.6.2\",\n     \"regenerator-runtime\": \"^0.11.0\",\n-    \"react-reconciler\": \"* || 0.16.0-alpha.8af6728\"\n+    \"react-reconciler\": \"*\"\n   },\n   \"peerDependencies\": {\n     \"react\": \"^16.0.0 || 16.6.0-beta.0\""}, {"role": "assistant", "content": "revert \"updating dependencies for react-noop-renderer\""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/tutorial.md b/docs/docs/tutorial.md\nindex c87175a076b2..13e43fb9bfe7 100644\n--- a/docs/docs/tutorial.md\n+++ b/docs/docs/tutorial.md\n@@ -249,7 +249,7 @@ All we're doing here is calling the marked library. We need to convert `this.pro\n \n But there's a problem! Our rendered comments look like this in the browser: \"`<p>`This is `<em>`another`</em>` comment`</p>`\". We want those tags to actually render as HTML.\n \n-That's React protecting you from an XSS attack. There's a way to get around it but the framework warns you not to use it:\n+That's React protecting you from an [XSS attack](http://en.wikipedia.org/wiki/Cross-site_scripting). There's a way to get around it but the framework warns you not to use it:\n \n ```javascript{4,10}\n // tutorial7.js"}, {"role": "assistant", "content": "add wikipedia link to cross-site scripting on \"xss attack\" string"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-native-renderer/src/ReactFabric.js b/packages/react-native-renderer/src/ReactFabric.js\nindex 1371067ab0a7..d9b532e49798 100644\n--- a/packages/react-native-renderer/src/ReactFabric.js\n+++ b/packages/react-native-renderer/src/ReactFabric.js\n@@ -199,7 +199,13 @@ const ReactFabric: ReactFabricType = {\n     return getPublicRootInstance(root);\n   },\n \n+  // Deprecated - this function is being renamed to stopSurface, use that instead.\n+  // TODO (T47576999): Delete this once it's no longer called from native code.\n   unmountComponentAtNode(containerTag: number) {\n+    this.stopSurface(containerTag);\n+  },\n+\n+  stopSurface(containerTag: number) {\n     const root = roots.get(containerTag);\n     if (root) {\n       // TODO: Is it safe to reset this now or should I wait since this unmount could be deferred?\ndiff --git a/scripts/rollup/shims/react-native/ReactFabric.js b/scripts/rollup/shims/react-native/ReactFabric.js\nindex 8f6a708fd205..536ce9a6f30b 100644\n--- a/scripts/rollup/shims/react-native/ReactFabric.js\n+++ b/scripts/rollup/shims/react-native/ReactFabric.js\n@@ -23,6 +23,10 @@ if (__DEV__) {\n   ReactFabric = require('../implementations/ReactFabric-prod');\n }\n \n-BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);\n+if (global.RN$Bridgeless) {\n+  global.RN$stopSurface = ReactFabric.stopSurface;\n+} else {\n+  BatchedBridge.registerCallableModule('ReactFabric', ReactFabric);\n+}\n \n module.exports = (ReactFabric: ReactNativeType);"}, {"role": "assistant", "content": "create reactfabric.stopsurface and use that for bridgeless mode binding"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/devtools/views/Components/Element.css b/packages/react-devtools-shared/src/devtools/views/Components/Element.css\nindex f71e9f479f47..cd92bd3937d3 100644\n--- a/packages/react-devtools-shared/src/devtools/views/Components/Element.css\n+++ b/packages/react-devtools-shared/src/devtools/views/Components/Element.css\n@@ -13,7 +13,7 @@\n \n .Wrapper {\n   padding: 0 0.25rem;\n-  white-space: nowrap;\n+  white-space: pre;\n   height: var(--line-height-data);\n   line-height: var(--line-height-data);\n   display: inline-flex;"}, {"role": "assistant", "content": "fix whitespace problem wiht devtools components search"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberBeginWork.js b/packages/react-reconciler/src/ReactFiberBeginWork.js\nindex fbd85b553939..75a9759508eb 100644\n--- a/packages/react-reconciler/src/ReactFiberBeginWork.js\n+++ b/packages/react-reconciler/src/ReactFiberBeginWork.js\n@@ -953,7 +953,7 @@ export default function<T, P, I, TI, HI, PI, C, CC, CX, PL>(\n     }\n     workInProgress.memoizedProps = newProps;\n \n-    let observedBits = newProps.observedBits;\n+    let observedBits = newProps.unstable_observedBits;\n     if (observedBits === undefined || observedBits === null) {\n       // Subscribe to all changes by default\n       observedBits = MAX_SIGNED_31_BIT_INT;\ndiff --git a/packages/react-reconciler/src/__tests__/ReactNewContext-test.internal.js b/packages/react-reconciler/src/__tests__/ReactNewContext-test.internal.js\nindex 11ffbe8a4f68..fde767979423 100644\n--- a/packages/react-reconciler/src/__tests__/ReactNewContext-test.internal.js\n+++ b/packages/react-reconciler/src/__tests__/ReactNewContext-test.internal.js\n@@ -516,7 +516,7 @@ describe('ReactNewContext', () => {\n \n     function Foo() {\n       return (\n-        <Context.Consumer observedBits={0b01}>\n+        <Context.Consumer unstable_observedBits={0b01}>\n           {value => {\n             ReactNoop.yield('Foo');\n             return <span prop={'Foo: ' + value.foo} />;\n@@ -527,7 +527,7 @@ describe('ReactNewContext', () => {\n \n     function Bar() {\n       return (\n-        <Context.Consumer observedBits={0b10}>\n+        <Context.Consumer unstable_observedBits={0b10}>\n           {value => {\n             ReactNoop.yield('Bar');\n             return <span prop={'Bar: ' + value.bar} />;"}, {"role": "assistant", "content": "add unstable prefix to `observedbits` prop until its proven to work in practice"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/test/reactComponentExpect.js b/src/test/reactComponentExpect.js\nindex 1959bea86c56..48d9092dbbd4 100644\n--- a/src/test/reactComponentExpect.js\n+++ b/src/test/reactComponentExpect.js\n@@ -157,8 +157,8 @@ Object.assign(reactComponentExpectInternal.prototype, {\n       if (count > 0) {\n         expect(renderedChildren).toBeTruthy();\n         expect(Object.keys(renderedChildren).length).toBe(count);\n-      } else {\n-        expect(renderedChildren).toBeFalsy();\n+      } else if (renderedChildren) {\n+        expect(Object.keys(renderedChildren).length).toBe(0);\n       }\n     }\n     return this;"}, {"role": "assistant", "content": "fix reactcomponentexpect.tobedomcomponentwithchildcount regression"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/vendor/browser-transforms.js b/vendor/browser-transforms.js\nindex 701693c34a7c..9de0bc1873f9 100644\n--- a/vendor/browser-transforms.js\n+++ b/vendor/browser-transforms.js\n@@ -25,8 +25,16 @@ var transform = require('jstransform').transform;\n var visitors = require('./fbtransform/visitors').transformVisitors;\n var docblock = require('jstransform/src/docblock');\n \n+// The source-map library relies on Object.defineProperty, but IE8 doesn't\n+// support it fully even with es5-sham. Indeed, es5-sham's defineProperty\n+// throws when Object.prototype.__defineGetter__ is missing, so we skip building\n+// the source map in that case.\n+var supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\n+\n function transformReact(source) {\n-  return transform(visitors.react, source, {sourceMap: true});\n+  return transform(visitors.react, source, {\n+    sourceMap: supportsAccessors\n+  });\n }\n \n exports.transform = transformReact;\n@@ -97,6 +105,10 @@ var transformCode = function(code, source) {\n       throw e;\n     }\n \n+    if (!transformed.sourceMap) {\n+      return transformed.code;\n+    }\n+\n     var map = transformed.sourceMap.toJSON();\n     if (source == null) {\n       source = \"Inline JSX script\";"}, {"role": "assistant", "content": "disable source maps when defineproperty is missing"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/02.1-jsx-in-depth.md b/docs/docs/02.1-jsx-in-depth.md\nindex 36a503ecac2e..6c2a78d64626 100644\n--- a/docs/docs/02.1-jsx-in-depth.md\n+++ b/docs/docs/02.1-jsx-in-depth.md\n@@ -106,7 +106,7 @@ See [Multiple Components](/react/docs/multiple-components.html) to learn more ab\n \n > Note:\n >\n-> Since JSX is JavaScript, identifiers such as `class` and `for` are not allowed\n+> Since JSX is JavaScript, identifiers such as `class` and `for` are discouraged\n > as XML attribute names. Instead, React DOM components expect attributes like\n > `className` and `htmlFor`, respectively."}, {"role": "assistant", "content": "change \u201cnot allowed\u201d back to \u201cdiscouraged\u201d since you technically *can* use props called `class` or `for`\u2026"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js b/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js\nindex c0b30b032e57..6e1320dd7cc3 100644\n--- a/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js\n+++ b/packages/react-dom/src/__tests__/ReactCompositeComponent-test.js\n@@ -466,9 +466,7 @@ describe('ReactCompositeComponent', () => {\n       instance = ReactDOM.render(<Component />, container);\n     }).toWarnDev(\n       'Cannot update during an existing state transition (such as within ' +\n-        \"`render` or another component's constructor). Render methods should \" +\n-        'be a pure function of props and state; constructor side-effects are ' +\n-        'an anti-pattern, but can be moved to `componentWillMount`.',\n+        '`render`). Render methods should be a pure function of props and state.',\n       {withoutStack: true},\n     );\n \ndiff --git a/packages/react-reconciler/src/ReactFiberScheduler.js b/packages/react-reconciler/src/ReactFiberScheduler.js\nindex 325522b2c4b4..a7e60f17b1e6 100644\n--- a/packages/react-reconciler/src/ReactFiberScheduler.js\n+++ b/packages/react-reconciler/src/ReactFiberScheduler.js\n@@ -210,9 +210,7 @@ if (__DEV__) {\n         warningWithoutStack(\n           false,\n           'Cannot update during an existing state transition (such as within ' +\n-            \"`render` or another component's constructor). Render methods should \" +\n-            'be a pure function of props and state; constructor side-effects are ' +\n-            'an anti-pattern, but can be moved to `componentWillMount`.',\n+            '`render`). Render methods should be a pure function of props and state.',\n         );\n         didWarnAboutStateTransition = true;\n         break;"}, {"role": "assistant", "content": "remove irrelevant suggestion of a legacy method from a warning"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/eslint-plugin-react-hooks/README.md b/packages/eslint-plugin-react-hooks/README.md\nindex df8ae3440262..480891c72aae 100644\n--- a/packages/eslint-plugin-react-hooks/README.md\n+++ b/packages/eslint-plugin-react-hooks/README.md\n@@ -49,8 +49,6 @@ Or use the recommended config:\n \n Please refer to the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html) documentation and the [Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#what-exactly-do-the-lint-rules-enforce) to learn more about this rule.\n \n-For feedback about the `exhaustive-deps` rule, please post in [this thread](https://github.com/facebook/react/issues/14920).\n-\n ## License\n \n MIT"}, {"role": "assistant", "content": "remove hint to post feedback about exhaustive-deps rule"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js b/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\nindex 14678d160ea9..c95e050cfe00 100644\n--- a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\n+++ b/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\n@@ -1314,6 +1314,37 @@ describe('ReactSuspense', () => {\n \n       expect(ReactNoop.getChildren()).toEqual([span('Loading...')]);\n     });\n+\n+    it('does not infinite loop if fallback contains lifecycle method', async () => {\n+      class Fallback extends React.Component {\n+        state = {\n+          name: 'foo',\n+        };\n+        componentDidMount() {\n+          this.setState({\n+            name: 'bar',\n+          });\n+        }\n+        render() {\n+          return <Text text=\"Loading...\" />;\n+        }\n+      }\n+\n+      class Demo extends React.Component {\n+        render() {\n+          return (\n+            <Placeholder fallback={<Fallback />}>\n+              <AsyncText text=\"Hi\" ms={100} />\n+            </Placeholder>\n+          );\n+        }\n+      }\n+\n+      ReactNoop.renderLegacySyncRoot(<Demo />);\n+      expect(ReactNoop.getChildren()).toEqual([span('Loading...')]);\n+      await advanceTimers(100);\n+      expect(ReactNoop.getChildren()).toEqual([span('Hi')]);\n+    });\n   });\n \n   it('does not call lifecycles of a suspended component', async () => {"}, {"role": "assistant", "content": "add regression test for placeholder fallbacks with lifecycle methods"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/examples/todomvc-flux/index.html b/examples/todomvc-flux/index.html\nindex 27efd297eed3..9c884862b755 100644\n--- a/examples/todomvc-flux/index.html\n+++ b/examples/todomvc-flux/index.html\n@@ -7,7 +7,9 @@\n \t\t<link rel=\"stylesheet\" href=\"css/app.css\">\n \t</head>\n \t<body>\n-\t\t<section id=\"todoapp\" />\n+\t\t<div>\n+\t\t\t<section id=\"todoapp\" />\n+\t\t</div>\n \t\t<footer id=\"info\">\n \t\t\t<p>Double-click to edit a todo</p>\n \t\t\t<p>Created by <a href=\"http://facebook.com/bill.fisher.771\">Bill Fisher</a></p>"}, {"role": "assistant", "content": "fix the disappearing footer on the todomvc-flux sample"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/downloads.md b/docs/downloads.md\nindex 6b8f61bf1661..eb5da226e87f 100644\n--- a/docs/downloads.md\n+++ b/docs/downloads.md\n@@ -48,25 +48,10 @@ The compressed, production version of React with [add-ons](/react/docs/addons.ht\n <script src=\"https://fb.me/react-with-addons-{{site.react_version}}.min.js\"></script>\n ```\n \n-#### <a href=\"https://fb.me/JSXTransformer-{{site.react_version}}.js\">JSX Transformer</a>\n-The JSX transformer used to support [XML syntax](/react/docs/jsx-in-depth.html) in JavaScript.\n-\n-```html\n-<script src=\"https://fb.me/JSXTransformer-{{site.react_version}}.js\"></script>\n-```\n-\n All scripts are also available via [CDNJS](https://cdnjs.com/libraries/react/).\n \n ## npm\n \n-To install the JSX transformer on your computer, run:\n-\n-```sh\n-$ npm install -g react-tools\n-```\n-\n-For more info about the `jsx` binary, see the [Getting Started](/react/docs/getting-started.html#offline-transform) guide.\n-\n If you're using an npm-compatible packaging system like browserify or webpack, you can use the `react` package. After installing it using `npm install react` or adding `react` to `package.json`, you can use React:\n \n ```js"}, {"role": "assistant", "content": "remove jsxtransformer, react-tools from downloads page"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/.eslintrc.js b/.eslintrc.js\nindex 3805f13b7c57..4645e51855d4 100644\n--- a/.eslintrc.js\n+++ b/.eslintrc.js\n@@ -6,6 +6,9 @@ const ERROR = 2;\n module.exports = {\n   extends: 'fbjs',\n \n+  // Stop ESLint from looking for a configuration file in parent folders\n+  'root': true,\n+\n   plugins: [\n     'react',\n     'react-internal',"}, {"role": "assistant", "content": "stop eslint from looking for a configuration file in parent folders"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/05-reusable-components.md b/docs/docs/05-reusable-components.md\nindex b4159ac97fe0..cd1fbfa66969 100644\n--- a/docs/docs/05-reusable-components.md\n+++ b/docs/docs/05-reusable-components.md\n@@ -26,7 +26,7 @@ React.createClass({\n     optionalString: React.PropTypes.string,\n \n     // Anything that can be rendered: numbers, strings, elements or an array\n-    // containing these types.\n+    // (or fragment) containing these types.\n     optionalNode: React.PropTypes.node,\n \n     // A React element."}, {"role": "assistant", "content": "clarify that react.proptypes.node accepts fragments"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/_posts/2014-06-27-community-roundup-19.md b/docs/_posts/2014-06-27-community-roundup-19.md\nindex 71b774f760e6..30f2b9eea3b4 100644\n--- a/docs/_posts/2014-06-27-community-roundup-19.md\n+++ b/docs/_posts/2014-06-27-community-roundup-19.md\n@@ -14,7 +14,7 @@ In case you haven't seen it, we've consolidated the tooling solution around Reac\n \n - [Ryan Florence](https://github.com/rpflorence)'s [react-nested-router](https://github.com/rpflorence/react-nested-router), which is a translation of the Ember router API to React.\n \n-- [Pieter Vanderwerff](https://github.com/pieterv)'s [React-Bootstrap](https://github.com/react-bootstrap/react-bootstrap), which wraps the popular framework with a bit of React goodness. The [website](http://react-bootstrap.github.io/components.html) features live-editable demos.\n+- [Stephen J. Collings](https://github.com/stevoland)'s [React-Bootstrap](https://github.com/react-bootstrap/react-bootstrap), which wraps the popular framework with a bit of React goodness. The [website](http://react-bootstrap.github.io/components.html) features live-editable demos.\n \n - [Andrey Popp](https://github.com/andreypopp)'s [react-quickstart](https://github.com/andreypopp/react-quickstart), which gives you a quick template for server-side rendering and routing, among other features."}, {"role": "assistant", "content": "change community roundup 19's react bootstrap author to @stevoland"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js b/packages/react-reconciler/src/__tests__/ReactSuspenseWithNoopRenderer-test.internal.js\nsimilarity index 99%\nrename from packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\nrename to packages/react-reconciler/src/__tests__/ReactSuspenseWithNoopRenderer-test.internal.js\nindex 8f5eb547e8a5..017817fd621b 100644\n--- a/packages/react-reconciler/src/__tests__/ReactSuspense-test.internal.js\n+++ b/packages/react-reconciler/src/__tests__/ReactSuspenseWithNoopRenderer-test.internal.js\n@@ -12,7 +12,10 @@ let cache;\n let TextResource;\n let textResourceShouldFail;\n \n-describe('ReactSuspense', () => {\n+// These tests use React Noop Renderer.  All new tests should use React Test\n+// Renderer and go in ReactSuspense-test; plan is gradually migrate the noop\n+// tests to that file.\n+describe('ReactSuspenseWithNoopRenderer', () => {\n   beforeEach(() => {\n     jest.resetModules();\n     ReactFeatureFlags = require('shared/ReactFeatureFlags');"}, {"role": "assistant", "content": "rename reactsuspense-test -> reactsuspensewithnooprenderer-test"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/_css/react.scss b/docs/_css/react.scss\nindex 78fb3d7a3313..a2e0aab3c966 100644\n--- a/docs/_css/react.scss\n+++ b/docs/_css/react.scss\n@@ -74,6 +74,24 @@ li {\n   margin-left: 20px;\n }\n \n+// Make header navigation linkable and on the screen. Used in documentation and\n+// blog posts.\n+h1, h2, h3, h4, h5, h6 {\n+  &.anchor {\n+    position: relative;\n+    top: -$navHeight;\n+    > a {\n+      color: $darkTextColor;\n+      position: relative;\n+      top: $navHeight;\n+\n+      &:hover {\n+        text-decoration: underline;\n+      }\n+    }\n+  }\n+}\n+\n // Main Nav\n \n .nav-main {\n@@ -392,22 +410,6 @@ section.black content {\n     font-size: 24px;\n   }\n \n-  h1, h2, h3, h4, h5, h6 {\n-    &.anchor {\n-      position: relative;\n-      top: -$navHeight;\n-    }\n-\n-    > a {\n-      color: $darkTextColor;\n-      position: relative;\n-      top: $navHeight;\n-\n-      &:hover {\n-        text-decoration: underline;\n-      }\n-    }\n-  }\n \n   // H2s form documentation topic dividers. Extra space helps.\n   h2 {"}, {"role": "assistant", "content": "move header link styling out of documentation only"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/ReactInstanceHandles.js b/src/core/ReactInstanceHandles.js\nindex 02ea765e0ab3..df3d2e8f5bcd 100644\n--- a/src/core/ReactInstanceHandles.js\n+++ b/src/core/ReactInstanceHandles.js\n@@ -284,18 +284,30 @@ var ReactInstanceHandles = {\n    * @internal\n    */\n   findComponentRoot: function(ancestorNode, id) {\n-    var child = ancestorNode.firstChild;\n-    while (child) {\n-      var childID = ReactID.getID(child);\n-      if (childID) {\n-        if (id === childID) {\n-          return child;\n-        } else if (isAncestorIDOf(childID, id)) {\n-          return ReactInstanceHandles.findComponentRoot(child, id);\n+    var firstChildren = [ancestorNode.firstChild];\n+    var childIndex = 0;\n+\n+    while (childIndex < firstChildren.length) {\n+      var child = firstChildren[childIndex++];\n+      while (child) {\n+        var childID = ReactID.getID(child);\n+        if (childID) {\n+          if (id === childID) {\n+            return child;\n+          } else if (isAncestorIDOf(childID, id)) {\n+            // If we find a child whose ID is an ancestor of the given ID,\n+            // then we can be sure that we only want to search the subtree\n+            // rooted at this child, so we can throw out the rest of the\n+            // search state.\n+            firstChildren.length = childIndex = 0;\n+            firstChildren.push(child.firstChild);\n+            break;\n+          }\n         }\n+        child = child.nextSibling;\n       }\n-      child = child.nextSibling;\n     }\n+\n     global.console && console.error && console.error(\n       'Error while invoking `findComponentRoot` with the following ' +\n       'ancestor node:',"}, {"role": "assistant", "content": "make reactmount.findcomponentroot breadth-first & non-recursive."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-server/src/ReactFizzServer.js b/packages/react-server/src/ReactFizzServer.js\nindex 8b84ce822bcc..bc3b06449f79 100644\n--- a/packages/react-server/src/ReactFizzServer.js\n+++ b/packages/react-server/src/ReactFizzServer.js\n@@ -1245,22 +1245,18 @@ function abortTask(task: Task): void {\n   } else {\n     boundary.pendingTasks--;\n \n-    if (boundary.fallbackAbortableTasks.size > 0) {\n-      // If this boundary was still pending then we haven't already cancelled its fallbacks.\n-      // We'll need to abort the fallbacks, which will also error that parent boundary.\n-      // This means that we don't have to client render this boundary because its parent\n-      // will be client rendered anyway.\n-      boundary.fallbackAbortableTasks.forEach(abortTask, request);\n-      boundary.fallbackAbortableTasks.clear();\n-    } else {\n-      if (!boundary.forceClientRender) {\n-        boundary.forceClientRender = true;\n-        if (boundary.parentFlushed) {\n-          request.clientRenderedBoundaries.push(boundary);\n-        }\n+    if (!boundary.forceClientRender) {\n+      boundary.forceClientRender = true;\n+      if (boundary.parentFlushed) {\n+        request.clientRenderedBoundaries.push(boundary);\n       }\n     }\n \n+    // If this boundary was still pending then we haven't already cancelled its fallbacks.\n+    // We'll need to abort the fallbacks, which will also error that parent boundary.\n+    boundary.fallbackAbortableTasks.forEach(abortTask, request);\n+    boundary.fallbackAbortableTasks.clear();\n+\n     request.allPendingTasks--;\n     if (request.allPendingTasks === 0) {\n       const onCompleteAll = request.onCompleteAll;"}, {"role": "assistant", "content": "mark boundary as client rendered even if aborting fallback"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/index.md b/docs/index.md\nindex bfb7ac373294..67d5a36ef968 100644\n--- a/docs/index.md\n+++ b/docs/index.md\n@@ -85,6 +85,7 @@ id: home\n <section class=\"home-section home-presentation\">\n   <h3>Presentation</h3>\n   <p>Watch this 30-minute presentation followed by a Q&A to learn more about React.</p>\n+  <p><strong>Note:</strong> React was at 0.3.2 by the time of this talk and somethings have already changed since then.</p>\n   <figure><iframe width=\"650\" height=\"400\" src=\"//www.youtube.com/embed/XxVg_s8xAms\" frameborder=\"0\" allowfullscreen></iframe></figure>\n </section>\n <hr class=\"home-divider\" />"}, {"role": "assistant", "content": "note about react's version on the talk, since somethings have already changed since then"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-extensions/src/parseHookNames/parseHookNames.js b/packages/react-devtools-extensions/src/parseHookNames/parseHookNames.js\nindex 6ea73e77ec04..5337eb4aff3c 100644\n--- a/packages/react-devtools-extensions/src/parseHookNames/parseHookNames.js\n+++ b/packages/react-devtools-extensions/src/parseHookNames/parseHookNames.js\n@@ -451,6 +451,10 @@ function extractAndLoadSourceMaps(\n }\n \n function fetchFile(url: string): Promise<string> {\n+  if (__PERFORMANCE_PROFILE__) {\n+    mark('fetchFile(\"' + url + '\")');\n+  }\n+\n   return new Promise((resolve, reject) => {\n     fetch(url).then(\n       response => {\n@@ -458,18 +462,27 @@ function fetchFile(url: string): Promise<string> {\n           response\n             .text()\n             .then(text => {\n+              if (__PERFORMANCE_PROFILE__) {\n+                measure('fetchFile(\"' + url + '\")');\n+              }\n               resolve(text);\n             })\n             .catch(error => {\n               if (__DEBUG__) {\n                 console.log(`fetchFile() Could not read text for url \"${url}\"`);\n               }\n+              if (__PERFORMANCE_PROFILE__) {\n+                measure('fetchFile(\"' + url + '\")');\n+              }\n               reject(null);\n             });\n         } else {\n           if (__DEBUG__) {\n             console.log(`fetchFile() Got bad response for url \"${url}\"`);\n           }\n+          if (__PERFORMANCE_PROFILE__) {\n+            measure('fetchFile(\"' + url + '\")');\n+          }\n           reject(null);\n         }\n       },\n@@ -477,6 +490,9 @@ function fetchFile(url: string): Promise<string> {\n         if (__DEBUG__) {\n           console.log(`fetchFile() Could not fetch file: ${error.message}`);\n         }\n+        if (__PERFORMANCE_PROFILE__) {\n+          measure('fetchFile(\"' + url + '\")');\n+        }\n         reject(null);\n       },\n     );"}, {"role": "assistant", "content": "add performance marksf or individual fetch requests"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/shells/dev/app/console.js b/shells/dev/app/console.js\nnew file mode 100644\nindex 000000000000..9e5f01401aa3\n--- /dev/null\n+++ b/shells/dev/app/console.js\n@@ -0,0 +1,27 @@\n+// @flow\n+\n+function ignoreStrings(\n+  methodName: string,\n+  stringsToIgnore: Array<string>\n+): void {\n+  const originalMethod = console[methodName];\n+  console[methodName] = (...args) => {\n+    const maybeString = args[0];\n+    if (typeof maybeString === 'string') {\n+      for (let i = 0; i < stringsToIgnore.length; i++) {\n+        if (maybeString.startsWith(stringsToIgnore[i])) {\n+          return;\n+        }\n+      }\n+    }\n+    originalMethod(...args);\n+  };\n+}\n+\n+export function ignoreErrors(errorsToIgnore: Array<string>): void {\n+  ignoreStrings('error', errorsToIgnore);\n+}\n+\n+export function ignoreWarnings(warningsToIgnore: Array<string>): void {\n+  ignoreStrings('warn', warningsToIgnore);\n+}\ndiff --git a/shells/dev/app/index.js b/shells/dev/app/index.js\nindex b0609a877ca2..4115c1c4807f 100644\n--- a/shells/dev/app/index.js\n+++ b/shells/dev/app/index.js\n@@ -19,9 +19,20 @@ import ReactNativeWeb from './ReactNativeWeb';\n import ToDoList from './ToDoList';\n import Toggle from './Toggle';\n import SuspenseTree from './SuspenseTree';\n+import { ignoreErrors, ignoreWarnings } from './console';\n \n import './styles.css';\n \n+// DevTools intentionally tests compatibility with certain legacy APIs.\n+// Suppress their error messages in the local dev shell,\n+// because they might mask other more serious error messages.\n+ignoreErrors([\n+  'Warning: Legacy context API',\n+  'Warning: Unsafe lifecycle methods',\n+  'Warning: %s is deprecated in StrictMode.', // findDOMNode\n+]);\n+ignoreWarnings(['Warning: componentWillReceiveProps is deprecated']);\n+\n const roots = [];\n \n function mountHelper(App) {"}, {"role": "assistant", "content": "suppress known/expected warnings and errors in local dev shell"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/02.1-jsx-in-depth.md b/docs/docs/02.1-jsx-in-depth.md\nindex 4d65d2c7347c..cd18fd8c3753 100644\n--- a/docs/docs/02.1-jsx-in-depth.md\n+++ b/docs/docs/02.1-jsx-in-depth.md\n@@ -136,10 +136,10 @@ JSX will take care to make the things right when compile your code.\n \n ```javascript\n var App = (\n-  Form(null, \n-    Form.Row(null, \n-      Form.Label(null), \n-      Form.Input(null)\n+  React.createElement(Form, null, \n+    React.createElement(Form.Row, null, \n+      React.createElement(Form.Label, null), \n+      React.createElement(Form.Input, null)\n     )\n   )\n );"}, {"role": "assistant", "content": "update namespaced component to adapt with the v0.12"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberWorkLoop.js b/packages/react-reconciler/src/ReactFiberWorkLoop.js\nindex 5046d38b589c..24901177563d 100644\n--- a/packages/react-reconciler/src/ReactFiberWorkLoop.js\n+++ b/packages/react-reconciler/src/ReactFiberWorkLoop.js\n@@ -3771,6 +3771,7 @@ if (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n       if (\n         didSuspendOrErrorWhileHydratingDEV() ||\n         originalError === SuspenseException ||\n+        originalError === SelectiveHydrationException ||\n         (originalError !== null &&\n           typeof originalError === 'object' &&\n           typeof originalError.then === 'function')"}, {"role": "assistant", "content": "avoid replaying selectivehydrationexception in dev"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/error-codes/codes.json b/scripts/error-codes/codes.json\nindex e4662c091265..fb8006fdf2b8 100644\n--- a/scripts/error-codes/codes.json\n+++ b/scripts/error-codes/codes.json\n@@ -142,5 +142,6 @@\n   \"140\": \"Expected hook events to fire for the child before its parent includes it in onSetChildren().\",\n   \"141\": \"Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().\",\n   \"142\": \"Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).\",\n-  \"143\": \"React.Children.only expected to receive a single React element child.\"\n+  \"143\": \"React.Children.only expected to receive a single React element child.\",\n+  \"144\": \"React.PropTypes type checking code is stripped in production.\"\n }\ndiff --git a/src/isomorphic/classic/types/__tests__/ReactPropTypesProduction-test.js b/src/isomorphic/classic/types/__tests__/ReactPropTypesProduction-test.js\nindex 07a46a877444..67842710e414 100644\n--- a/src/isomorphic/classic/types/__tests__/ReactPropTypesProduction-test.js\n+++ b/src/isomorphic/classic/types/__tests__/ReactPropTypesProduction-test.js\n@@ -49,7 +49,7 @@ describe('ReactPropTypesProduction', function() {\n         'prop'\n       );\n     }).toThrowError(\n-      'React.PropTypes type checking code is stripped in production.'\n+      'Minified React error #144'\n     );\n   }"}, {"role": "assistant", "content": "fix proptypes production test so it works with error code system"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/_css/react.scss b/docs/_css/react.scss\nindex c502b06b79a7..5e94c2fe0890 100644\n--- a/docs/_css/react.scss\n+++ b/docs/_css/react.scss\n@@ -459,7 +459,7 @@ section.black content {\n   }\n \n   .playgroundPreview {\n-    padding: 14px;\n+    padding: 0;\n     width: 600px;\n \n     pre {\ndiff --git a/docs/_js/live_editor.js b/docs/_js/live_editor.js\nindex 818d3b4eb9e2..e03bde05bf59 100644\n--- a/docs/_js/live_editor.js\n+++ b/docs/_js/live_editor.js\n@@ -22,7 +22,8 @@ var CodeMirrorEditor = React.createClass({\n       mode: 'javascript',\n       lineNumbers: false,\n       matchBrackets: true,\n-      theme: 'solarized-light'\n+      theme: 'solarized-light',\n+      readOnly: this.props.readOnly\n     });\n     this.editor.on('change', this.onChange);\n     this.onChange();\n@@ -82,7 +83,7 @@ var ReactPlayground = React.createClass({\n     } else if (this.state.mode === this.MODES.JS) {\n       content =\n         <div className=\"playgroundJS playgroundStage\">\n-            {this.getDesugaredCode()}\n+          {this.getDesugaredCode()}\n         </div>;\n     }\n \n@@ -111,13 +112,14 @@ var ReactPlayground = React.createClass({\n     } catch (e) { }\n \n     try {\n+      var desugaredCode = this.getDesugaredCode();\n       if (this.props.renderCode) {\n         React.renderComponent(\n-          <pre>{this.getDesugaredCode()}</pre>,\n+          <CodeMirrorEditor codeText={desugaredCode} readOnly={true} />,\n           mountNode\n         );\n       } else {\n-        eval(this.getDesugaredCode());\n+        eval(desugaredCode);\n       }\n     } catch (e) {\n       React.renderComponent("}, {"role": "assistant", "content": "make docs jsx compiler highlight transpiled js code"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/addons/ReactFragment.js b/src/addons/ReactFragment.js\nindex d5862dd97277..2c19261550f1 100644\n--- a/src/addons/ReactFragment.js\n+++ b/src/addons/ReactFragment.js\n@@ -46,24 +46,23 @@ var ReactFragment = {\n   // Wrap a keyed object in an opaque proxy that warns you if you access any\n   // of its properties.\n   create: function(object) {\n-    if (__DEV__) {\n-      if (typeof object !== 'object' || !object || Array.isArray(object)) {\n-        warning(\n-          false,\n-          'React.addons.createFragment only accepts a single object. Got: %s',\n-          object\n-        );\n-        return object;\n-      }\n-      if (ReactElement.isValidElement(object)) {\n-        warning(\n-          false,\n-          'React.addons.createFragment does not accept a ReactElement ' +\n-          'without a wrapper object.'\n-        );\n-        return object;\n-      }\n+    if (typeof object !== 'object' || !object || Array.isArray(object)) {\n+      warning(\n+        false,\n+        'React.addons.createFragment only accepts a single object. Got: %s',\n+        object\n+      );\n+      return object;\n     }\n+    if (ReactElement.isValidElement(object)) {\n+      warning(\n+        false,\n+        'React.addons.createFragment does not accept a ReactElement ' +\n+        'without a wrapper object.'\n+      );\n+      return object;\n+    }\n+\n     invariant(\n       object.nodeType !== 1,\n       'React.addons.createFragment(...): Encountered an invalid child; DOM ' +"}, {"role": "assistant", "content": "fix diverging behavior of reactfragment in `__dev__`"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/client/ReactDOMFiberInput.js b/packages/react-dom/src/client/ReactDOMFiberInput.js\nindex c754daab5abd..22cf89c400b0 100644\n--- a/packages/react-dom/src/client/ReactDOMFiberInput.js\n+++ b/packages/react-dom/src/client/ReactDOMFiberInput.js\n@@ -307,7 +307,7 @@ function updateNamedCousins(rootNode, props) {\n // when the user is inputting text\n //\n // https://github.com/facebook/react/issues/7253\n-function synchronizeDefaultValue(\n+export function synchronizeDefaultValue(\n   node: InputWithWrapperState,\n   type: ?string,\n   value: *,\ndiff --git a/packages/react-dom/src/events/ChangeEventPlugin.js b/packages/react-dom/src/events/ChangeEventPlugin.js\nindex 7ab525f2e0a7..cb98d19a9b9f 100644\n--- a/packages/react-dom/src/events/ChangeEventPlugin.js\n+++ b/packages/react-dom/src/events/ChangeEventPlugin.js\n@@ -17,6 +17,7 @@ import getEventTarget from './getEventTarget';\n import isEventSupported from './isEventSupported';\n import {getNodeFromInstance} from '../client/ReactDOMComponentTree';\n import * as inputValueTracking from '../client/inputValueTracking';\n+import {synchronizeDefaultValue} from '../client/ReactDOMFiberInput';\n \n var eventTypes = {\n   change: {\n@@ -235,10 +236,7 @@ function handleControlledInputBlur(inst, node) {\n   }\n \n   // If controlled, assign the value attribute to the current value on blur\n-  let value = '' + node.value;\n-  if (node.getAttribute('value') !== value) {\n-    node.setAttribute('value', value);\n-  }\n+  synchronizeDefaultValue(node, 'number', node.value);\n }\n \n /**"}, {"role": "assistant", "content": "use the same value synchronization function on number blur"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex c1467036aaf9..c57c892b1573 100644\n--- a/package.json\n+++ b/package.json\n@@ -148,6 +148,6 @@\n     \"download-build-in-codesandbox-ci\": \"cd scripts/release && yarn install && cd ../../ && yarn download-build-for-head || yarn build-combined --type=node react/index react-dom scheduler\"\n   },\n   \"resolutions\": {\n-    \"**/@playwright/test/**/react-is\": \"^16.0.0\"\n+    \"react-is\": \"npm:react-is\"\n   }\n }\ndiff --git a/yarn.lock b/yarn.lock\nindex 518c249287bf..f376e74f8c5a 100644\n--- a/yarn.lock\n+++ b/yarn.lock\n@@ -13629,10 +13629,10 @@ rc@^1.0.1, rc@^1.1.6, rc@^1.2.8:\n     prop-types \"^15.6.2\"\n     scheduler \"^0.13.0\"\n \n-react-is@^16.0.0, react-is@^16.8.1:\n-  version \"16.13.1\"\n-  resolved \"https://registry.yarnpkg.com/react-is/-/react-is-16.13.1.tgz#789729a4dc36de2999dc156dd6c1d9c18cea56a4\"\n-  integrity sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\n+react-is@^16.8.1, \"react-is@npm:react-is\":\n+  version \"17.0.2\"\n+  resolved \"https://registry.yarnpkg.com/react-is/-/react-is-17.0.2.tgz#e691d4a8e9c789365655539ab372762b0efb54f0\"\n+  integrity sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==\n \n react-lifecycles-compat@^3.0.4:\n   version \"3.0.4\""}, {"role": "assistant", "content": "ensure react-is version used for resolution for playwright is installed"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/bin/jsx-internal b/bin/jsx-internal\nindex 6e62b6993d1b..b642f9bed3f9 100755\n--- a/bin/jsx-internal\n+++ b/bin/jsx-internal\n@@ -3,7 +3,7 @@\n // vim: set ft=javascript :\n \"use strict\";\n \n-var babel = require('babel-core');\n+var babel = require('babel');\n \n var constants = require('../vendor/constants')(babel);\n \ndiff --git a/docs/Rakefile b/docs/Rakefile\nindex 6a7454bad1c5..a454da6fde53 100644\n--- a/docs/Rakefile\n+++ b/docs/Rakefile\n@@ -4,12 +4,12 @@ require('yaml')\n \n desc \"generate js from jsx\"\n task :js do\n-  system \"../bin/jsx --harmony _js js\"\n+  system \"../node_modules/.bin/babel _js --out-dir=js\"\n end\n \n desc \"watch js\"\n task :watch do\n-  Process.spawn \"../bin/jsx --watch --harmony _js js\"\n+  Process.spawn \"../node_modules/.bin/babel _js --out-dir=js --watch\"\n   Process.waitall\n end\n \ndiff --git a/jest/preprocessor.js b/jest/preprocessor.js\nindex ab2ce321412d..29fee899b027 100644\n--- a/jest/preprocessor.js\n+++ b/jest/preprocessor.js\n@@ -1,6 +1,6 @@\n 'use strict';\n \n-var babel = require('babel-core');\n+var babel = require('babel');\n var coffee = require('coffee-script');\n \n var tsPreprocessor = require('./ts-preprocessor');\ndiff --git a/package.json b/package.json\nindex 35c12d946ced..87e1013ea46e 100644\n--- a/package.json\n+++ b/package.json\n@@ -29,7 +29,7 @@\n     \"jstransform\": \"^11.0.0\"\n   },\n   \"devDependencies\": {\n-    \"babel-core\": \"^5.2.7\",\n+    \"babel\": \"^5.3.3\",\n     \"benchmark\": \"~1.0.0\",\n     \"browserify\": \"^9.0.3\",\n     \"bundle-collapser\": \"^1.1.1\","}, {"role": "assistant", "content": "use babel to transform js in docs, update other calls"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/test/__tests__/ReactTestUtils-test.js b/src/renderers/dom/test/__tests__/ReactTestUtils-test.js\nindex e320887c3237..edc11927a761 100644\n--- a/src/renderers/dom/test/__tests__/ReactTestUtils-test.js\n+++ b/src/renderers/dom/test/__tests__/ReactTestUtils-test.js\n@@ -161,6 +161,42 @@ describe('ReactTestUtils', () => {\n     ]);\n   });\n \n+  it('should shallow render a component returning strings directly from render', () => {\n+    const Text = ({value}) => value;\n+\n+    const shallowRenderer = createRenderer();\n+    const result = shallowRenderer.render(<Text value=\"foo\" />);\n+    expect(result).toEqual('foo');\n+  });\n+\n+  it('should shallow render a component returning numbers directly from render', () => {\n+    const Text = ({value}) => value;\n+\n+    const shallowRenderer = createRenderer();\n+    const result = shallowRenderer.render(<Text value={10} />);\n+    expect(result).toEqual(10);\n+  });\n+\n+  it('should shallow render a fragment', () => {\n+    class SomeComponent extends React.Component {\n+      render() {\n+        return <div />;\n+      }\n+    }\n+    class Fragment extends React.Component {\n+      render() {\n+        return [<div key=\"a\" />, <span key=\"b\" />, <SomeComponent />];\n+      }\n+    }\n+    const shallowRenderer = createRenderer();\n+    const result = shallowRenderer.render(<Fragment />);\n+    expect(result).toEqual([\n+      <div key=\"a\" />,\n+      <span key=\"b\" />,\n+      <SomeComponent />,\n+    ]);\n+  });\n+\n   it('should throw for invalid elements', () => {\n     class SomeComponent extends React.Component {\n       render() {"}, {"role": "assistant", "content": "add tests that shallowrenderer supports string and fragment"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/dom/DefaultDOMPropertyConfig.js b/src/dom/DefaultDOMPropertyConfig.js\nindex 09175c7ccd34..a5380fa9d7b5 100644\n--- a/src/dom/DefaultDOMPropertyConfig.js\n+++ b/src/dom/DefaultDOMPropertyConfig.js\n@@ -16,6 +16,8 @@\n  * @providesModule DefaultDOMPropertyConfig\n  */\n \n+/*jslint bitwise: true*/\n+\n \"use strict\";\n \n var DOMProperty = require('DOMProperty');"}, {"role": "assistant", "content": "add bitwise lint escape to defaultdompropertyconfig"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/fiber/ReactDOMFiberComponent.js b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\nindex 475960cdf7e5..0ce5956146a3 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiberComponent.js\n@@ -951,10 +951,10 @@ var ReactDOMFiberComponent = {\n           }\n         }\n       } else if (registrationNameModules.hasOwnProperty(propKey)) {\n-        if (__DEV__ && typeof nextProp !== 'function') {\n-          warnForInvalidEventListener(propKey, nextProp);\n-        }\n         if (nextProp) {\n+          if (__DEV__ && typeof nextProp !== 'function') {\n+            warnForInvalidEventListener(propKey, nextProp);\n+          }\n           ensureListeningTo(rootContainerElement, propKey);\n         }\n       } else if (__DEV__) {"}, {"role": "assistant", "content": "put warnforinvalideventlistener call behind nextprop check"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/__tests__/ReactServerRenderingHydration-test.js b/packages/react-dom/src/__tests__/ReactServerRenderingHydration-test.js\nindex 33e56bba260e..1707f9f1dbdc 100644\n--- a/packages/react-dom/src/__tests__/ReactServerRenderingHydration-test.js\n+++ b/packages/react-dom/src/__tests__/ReactServerRenderingHydration-test.js\n@@ -659,4 +659,15 @@ describe('ReactDOMServerHydration', () => {\n \n     document.body.removeChild(parentContainer);\n   });\n+\n+  it('regression test: Suspense + hydration in legacy mode ', () => {\n+    const element = document.createElement('div');\n+    element.innerHTML = '<div>Hello World</div>';\n+    ReactDOM.hydrate(\n+      <React.Suspense>\n+        <div>Hello World</div>\n+      </React.Suspense>,\n+      element,\n+    );\n+  });\n });\ndiff --git a/packages/react-reconciler/src/ReactFiberHydrationContext.js b/packages/react-reconciler/src/ReactFiberHydrationContext.js\nindex 018a80886e6e..61f007daca25 100644\n--- a/packages/react-reconciler/src/ReactFiberHydrationContext.js\n+++ b/packages/react-reconciler/src/ReactFiberHydrationContext.js\n@@ -404,11 +404,10 @@ function skipPastDehydratedSuspenseInstance(\n   let suspenseState: null | SuspenseState = fiber.memoizedState;\n   let suspenseInstance: null | SuspenseInstance =\n     suspenseState !== null ? suspenseState.dehydrated : null;\n-  invariant(\n-    suspenseInstance,\n-    'Expected to have a hydrated suspense instance. ' +\n-      'This error is likely caused by a bug in React. Please file an issue.',\n-  );\n+  if (suspenseInstance === null) {\n+    // This Suspense boundary was hydrated without a match.\n+    return nextHydratableInstance;\n+  }\n   return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n }"}, {"role": "assistant", "content": "allow suspense mismatch on the client to silently proceed"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/reconciler/shouldUpdateReactComponent.js b/src/renderers/shared/reconciler/shouldUpdateReactComponent.js\nindex 3ffb75625edb..a5d37f79f22c 100644\n--- a/src/renderers/shared/reconciler/shouldUpdateReactComponent.js\n+++ b/src/renderers/shared/reconciler/shouldUpdateReactComponent.js\n@@ -41,7 +41,6 @@ function shouldUpdateReactComponent(prevElement, nextElement) {\n       prevElement.key === nextElement.key\n     );\n   }\n-  return false;\n }\n \n module.exports = shouldUpdateReactComponent;"}, {"role": "assistant", "content": "remove unreachable return from shouldupdatereactcomponent"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/07-working-with-the-browser.md b/docs/docs/07-working-with-the-browser.md\nindex 39ad1cefc20e..c234d4943d23 100644\n--- a/docs/docs/07-working-with-the-browser.md\n+++ b/docs/docs/07-working-with-the-browser.md\n@@ -113,7 +113,9 @@ In addition to that philosophy, we've also taken the stance that we, as authors\n \n ### Polyfills Needed to Support Older Browsers\n \n-These six functions can be polyfilled using a combination of `es5-shim.js` and `es5-sham.js` from [kriskowal's es5-shim](https://github.com/kriskowal/es5-shim):\n+`es5-shim.js` from [kriskowal's\n+es5-shim](https://github.com/kriskowal/es5-shim) provides the following\n+that React needs:\n \n * `Array.isArray`\n * `Array.prototype.forEach`\n@@ -122,10 +124,15 @@ These six functions can be polyfilled using a combination of `es5-shim.js` and `\n * `Date.now`\n * `Function.prototype.bind`\n \n-Other required polyfills:\n+`es5-sham.js`, also from [kriskowal's\n+117 es5-shim](https://github.com/kriskowal/es5-shim), provides the\n+following that React needs:\n \n-* `Object.create` \u2013 Provided by `es5-sham.js` from [kriskowal's es5-shim](https://github.com/kriskowal/es5-shim).\n-* `console.*` \u2013 Only needed when using the unminified build. If you need to polyfill this, try [paulmillr's console-polyfill](https://github.com/paulmillr/console-polyfill).\n+* `Object.create`\n+\n+The unminified build of React needs the following from [paulmillr's console-polyfill](https://github.com/paulmillr/console-polyfill).\n+\n+* `console.*`\n \n \n ### Cross-browser Issues"}, {"role": "assistant", "content": "rewrite older browsers polyfill section for clarity."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/shared/validAriaProperties.js b/packages/react-dom/src/shared/validAriaProperties.js\nindex 36875e765119..bfe7b73e2aed 100644\n--- a/packages/react-dom/src/shared/validAriaProperties.js\n+++ b/packages/react-dom/src/shared/validAriaProperties.js\n@@ -7,6 +7,7 @@\n \n const ariaProperties = {\n   'aria-current': 0, // state\n+  'aria-description': 0,\n   'aria-details': 0,\n   'aria-disabled': 0, // state\n   'aria-hidden': 0, // state"}, {"role": "assistant", "content": "add aria-description to the list of known aria attributes"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-08-reconciliation.md b/docs/docs/ref-08-reconciliation.md\nindex 25d20b283257..54e40d37006b 100644\n--- a/docs/docs/ref-08-reconciliation.md\n+++ b/docs/docs/ref-08-reconciliation.md\n@@ -129,5 +129,5 @@ Because we rely on two heuristics, if the assumptions behind them are not met, p\n \n 1. The algorithm will not try to match sub-trees of different components classes. If you see yourself alternating between two components classes with very similar output, you may want to make it the same class. In practice, we haven't found this to be an issue.\n \n-2. If you don't provide stable keys (by using Math.random() for example), all the sub-trees are going to be re-rendered every single time. By giving the users the choice to choose the key, they have the ability to shoot themselves in the foot.\n+2. Keys should be stable, predictable, and unique. Unstable keys (like those produced by Math.random()) will cause many nodes to be unnecessarily re-created, which can cause performance degradation and lost state in child components."}, {"role": "assistant", "content": "state that math.random is not a good way to generate keys"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/wrappers/LinkedValueUtils.js b/src/renderers/dom/client/wrappers/LinkedValueUtils.js\nindex 5b62d79a048e..49b746e107fa 100644\n--- a/src/renderers/dom/client/wrappers/LinkedValueUtils.js\n+++ b/src/renderers/dom/client/wrappers/LinkedValueUtils.js\n@@ -13,6 +13,7 @@\n 'use strict';\n \n var ReactPropTypes = require('ReactPropTypes');\n+var ReactPropTypeLocations = require('ReactPropTypeLocations');\n \n var invariant = require('invariant');\n var warning = require('warning');\n@@ -105,7 +106,12 @@ var LinkedValueUtils = {\n   checkPropTypes: function (tagName, props, owner) {\n     for (var propName in propTypes) {\n       if (propTypes.hasOwnProperty(propName)) {\n-        var error = propTypes[propName](props, propName, tagName, location);\n+        var error = propTypes[propName](\n+          props,\n+          propName,\n+          tagName,\n+          ReactPropTypeLocations.prop\n+        );\n       }\n       if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n         // Only monitor this failure once because there tends to be a lot of the"}, {"role": "assistant", "content": "use correct location when running linkedvalueutils proptype checks"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/__tests__/ReactDOMFloat-test.js b/packages/react-dom/src/__tests__/ReactDOMFloat-test.js\nindex 8c5fafdb71c6..937796dfc87a 100644\n--- a/packages/react-dom/src/__tests__/ReactDOMFloat-test.js\n+++ b/packages/react-dom/src/__tests__/ReactDOMFloat-test.js\n@@ -248,6 +248,60 @@ describe('ReactDOMFloat', () => {\n     );\n   });\n \n+  // @gate enableFloat\n+  it('emits resources before everything else when rendering with no head', async () => {\n+    function App() {\n+      return (\n+        <>\n+          <title>foo</title>\n+          <link rel=\"preload\" href=\"foo\" as=\"style\" />\n+        </>\n+      );\n+    }\n+\n+    await actIntoEmptyDocument(() => {\n+      buffer = `<!DOCTYPE html><html><head>${ReactDOMFizzServer.renderToString(\n+        <App />,\n+      )}</head><body>foo</body></html>`;\n+    });\n+    expect(getVisibleChildren(document)).toEqual(\n+      <html>\n+        <head>\n+          <link rel=\"preload\" href=\"foo\" as=\"style\" />\n+          <title>foo</title>\n+        </head>\n+        <body>foo</body>\n+      </html>,\n+    );\n+  });\n+\n+  // @gate enableFloat\n+  it('emits resources before everything else when rendering with just a head', async () => {\n+    function App() {\n+      return (\n+        <head>\n+          <title>foo</title>\n+          <link rel=\"preload\" href=\"foo\" as=\"style\" />\n+        </head>\n+      );\n+    }\n+\n+    await actIntoEmptyDocument(() => {\n+      buffer = `<!DOCTYPE html><html>${ReactDOMFizzServer.renderToString(\n+        <App />,\n+      )}<body>foo</body></html>`;\n+    });\n+    expect(getVisibleChildren(document)).toEqual(\n+      <html>\n+        <head>\n+          <link rel=\"preload\" href=\"foo\" as=\"style\" />\n+          <title>foo</title>\n+        </head>\n+        <body>foo</body>\n+      </html>,\n+    );\n+  });\n+\n   describe('HostResource', () => {\n     // @gate enableFloat\n     it('warns when you update props to an invalid type', async () => {"}, {"role": "assistant", "content": "add tests for resource emission when rendering no head or just a head"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ui/ReactMount.js b/src/browser/ui/ReactMount.js\nindex 4d206d0e9340..3fe9bb41370f 100644\n--- a/src/browser/ui/ReactMount.js\n+++ b/src/browser/ui/ReactMount.js\n@@ -41,6 +41,7 @@ var nodeCache = {};\n \n var ELEMENT_NODE_TYPE = 1;\n var DOC_NODE_TYPE = 9;\n+var DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n \n /** Mapping from reactRootID to React component instance. */\n var instancesByReactRootID = {};\n@@ -355,7 +356,8 @@ var ReactMount = {\n     invariant(\n       container && (\n         container.nodeType === ELEMENT_NODE_TYPE ||\n-        container.nodeType === DOC_NODE_TYPE\n+        container.nodeType === DOC_NODE_TYPE ||\n+        container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE\n       ),\n       '_registerComponent(...): Target container is not a DOM element.'\n     );\n@@ -578,7 +580,8 @@ var ReactMount = {\n     invariant(\n       container && (\n         container.nodeType === ELEMENT_NODE_TYPE ||\n-        container.nodeType === DOC_NODE_TYPE\n+        container.nodeType === DOC_NODE_TYPE ||\n+        container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE\n       ),\n       'unmountComponentAtNode(...): Target container is not a DOM element.'\n     );\n@@ -790,7 +793,8 @@ var ReactMount = {\n     invariant(\n       container && (\n         container.nodeType === ELEMENT_NODE_TYPE ||\n-          container.nodeType === DOC_NODE_TYPE\n+        container.nodeType === DOC_NODE_TYPE ||\n+        container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE\n       ),\n       'mountComponentIntoNode(...): Target container is not valid.'\n     );"}, {"role": "assistant", "content": "allow rendering into document fragments. fixes #840"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/__tests__/ReactEventEmitter-test.js b/src/core/__tests__/ReactEventEmitter-test.js\nindex 40e81c32b1a6..cbe794f91f7d 100644\n--- a/src/core/__tests__/ReactEventEmitter-test.js\n+++ b/src/core/__tests__/ReactEventEmitter-test.js\n@@ -86,6 +86,7 @@ function registerSimpleTestHandler() {\n describe('ReactEventEmitter', function() {\n   beforeEach(function() {\n     require('mock-modules').dumpCache();\n+    LISTENER.mockClear();\n     EventPluginHub = require('EventPluginHub');\n     TapEventPlugin = require('TapEventPlugin');\n     ReactMount = require('ReactMount');"}, {"role": "assistant", "content": "make sure the mock is cleared in the eventemitter test"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/rollup/bundles.js b/scripts/rollup/bundles.js\nindex 02f0c68f6baa..bfa423b720c8 100644\n--- a/scripts/rollup/bundles.js\n+++ b/scripts/rollup/bundles.js\n@@ -259,9 +259,14 @@ const bundles = [\n \n   /******* React DOM Server *******/\n   {\n-    bundleTypes: __EXPERIMENTAL__\n-      ? [UMD_DEV, UMD_PROD, NODE_DEV, NODE_PROD]\n-      : [UMD_DEV, UMD_PROD, NODE_DEV, NODE_PROD, FB_WWW_DEV, FB_WWW_PROD],\n+    bundleTypes: [\n+      UMD_DEV,\n+      UMD_PROD,\n+      NODE_DEV,\n+      NODE_PROD,\n+      FB_WWW_DEV,\n+      FB_WWW_PROD,\n+    ],\n     moduleType: RENDERER,\n     entry: 'react-dom/src/server/ReactDOMLegacyServerBrowser',\n     name: 'react-dom-server-legacy.browser',\n@@ -317,7 +322,7 @@ const bundles = [\n     bundleTypes: __EXPERIMENTAL__ ? [FB_WWW_DEV, FB_WWW_PROD] : [],\n     moduleType: RENDERER,\n     entry: 'react-server-dom-relay/src/ReactDOMServerFB',\n-    global: 'ReactDOMServer',\n+    global: 'ReactDOMServerStreaming',\n     minifyWithProdErrorCodes: false,\n     wrapWithModuleBoundaries: false,\n     externals: ['react'],"}, {"role": "assistant", "content": "build both a partial renderer and fizz renderer of the legacy api for fb"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/fixtures/dom/src/components/fixtures/text-inputs/index.js b/fixtures/dom/src/components/fixtures/text-inputs/index.js\nindex 8bf2b36de1bc..af71edcbb5cb 100644\n--- a/fixtures/dom/src/components/fixtures/text-inputs/index.js\n+++ b/fixtures/dom/src/components/fixtures/text-inputs/index.js\n@@ -42,6 +42,46 @@ class TextInputFixtures extends React.Component {\n           </p>\n         </TestCase>\n \n+        <TestCase\n+          title=\"Required Inputs\"\n+          affectedBrowsers=\"Firefox\"\n+          relatedIssues=\"8395\">\n+          <TestCase.Steps>\n+            <li>View this test in Firefox</li>\n+          </TestCase.Steps>\n+\n+          <TestCase.ExpectedResult>\n+            You should{' '}\n+            <b>\n+              <i>not</i>\n+            </b>{' '}\n+            see a red aura, indicating the input is invalid.\n+            <br />\n+            This aura looks roughly like:\n+            <input style={{boxShadow: '0 0 1px 1px red', marginLeft: 8}} />\n+          </TestCase.ExpectedResult>\n+\n+          <Fixture>\n+            <form className=\"control-box\">\n+              <fieldset>\n+                <legend>Text</legend>\n+                <input required={true} />\n+              </fieldset>\n+              <fieldset>\n+                <legend>Date</legend>\n+                <input type=\"date\" required={true} />\n+              </fieldset>\n+            </form>\n+          </Fixture>\n+\n+          <p className=\"footnote\">\n+            Checking the date type is also important because of a prior fix for\n+            iOS Safari that involved assigning over value/defaultValue\n+            properties of the input to prevent a display bug. This also\n+            triggered input validation.\n+          </p>\n+        </TestCase>\n+\n         <TestCase title=\"Cursor when editing email inputs\">\n           <TestCase.Steps>\n             <li>Type \"user@example.com\"</li>"}, {"role": "assistant", "content": "add test fixture for initial input validation bug in firefox"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/vendor/jasmine/jasmine-support.js b/vendor/jasmine/jasmine-support.js\nindex dc3d807520a2..d6d1e3ef3b87 100644\n--- a/vendor/jasmine/jasmine-support.js\n+++ b/vendor/jasmine/jasmine-support.js\n@@ -37,7 +37,7 @@ var _xit = jasmine.Env.prototype.xit;\n jasmine.Env.prototype.it = function(desc, func) {\n   // If spec is provided, only run matching specs\n   if (!spec || desc.match(new RegExp(spec, 'i'))) {\n-    return _it.bind(this, desc, func)();\n+    return _it.call(this, desc, func);\n   } else {\n     return this.xit(desc, func);\n   }\n@@ -50,7 +50,7 @@ jasmine.Env.prototype.xit = function(desc, func) {\n       this.reporter.subReporters_[0].totalCount += matches.length;\n     }\n   }\n-  return _xit.bind(this, desc, func)();\n+  return _xit.call(this, desc, func);\n }\n \n // Mainline Jasmine sets __Jasmine_been_here_before__ on each object to detect"}, {"role": "assistant", "content": "fix some silly uses of function.prototype.bind in jasmine-support.js."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/09.2-form-input-binding-sugar.md b/docs/docs/09.2-form-input-binding-sugar.md\nindex eafd053b08af..0e2bc0973079 100644\n--- a/docs/docs/09.2-form-input-binding-sugar.md\n+++ b/docs/docs/09.2-form-input-binding-sugar.md\n@@ -66,9 +66,9 @@ var WithLink = React.createClass({\n \n `ReactLink` objects can be passed up and down the tree as props, so it's easy (and explicit) to set up two-way binding between a component deep in the hierarchy and state that lives higher in the hierarchy.\n \n-Note that `<input>` supports ReactLink for both `value` and `checked`. For checkboxes, you should use `checkedLink` instead of `valueLink`, as their value is fixed to `on`: \n+Note that checkboxes have a special behavior regarding their `value` attribute, which is the value that will be sent on form submit if the checkbox is checked (defaults to `on`). The `value` attribute is not updated when the checkbox is checked or unchecked. For checkboxes, you should use `checkedLink` instead of `valueLink`:\n ```\n-<input type=\"checkbox\" checkedLink=valueLink={this.linkState('booleanValue')} />\n+<input type=\"checkbox\" checkedLink={this.linkState('booleanValue')} />\n ```"}, {"role": "assistant", "content": "update 09.2-form-input-binding-sugar.md -> better checkedlink documentation"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/Gruntfile.js b/Gruntfile.js\nindex 0d554baa576d..3b87e91d71bc 100644\n--- a/Gruntfile.js\n+++ b/Gruntfile.js\n@@ -17,7 +17,7 @@ module.exports = function(grunt) {\n   grunt.initConfig({\n     pkg: grunt.file.readJSON('package.json'),\n     copy: require('./grunt/config/copy'),\n-    jsx: require('./grunt/config/jsx/jsx'),\n+    jsx: require('./grunt/config/jsx'),\n     browserify: require('./grunt/config/browserify'),\n     populist: require('./grunt/config/populist'),\n     connect: require('./grunt/config/server')(grunt),\ndiff --git a/grunt/config/jsx/jsx.js b/grunt/config/jsx.js\nsimilarity index 100%\nrename from grunt/config/jsx/jsx.js\nrename to grunt/config/jsx.js"}, {"role": "assistant", "content": "move grunt/config/jsx/jsx.js to grunt/config/jsx.js."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/server/ReactDOMServerFormatConfig.js b/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\nindex f41abe26cfff..4814bd0aa333 100644\n--- a/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\n+++ b/packages/react-dom/src/server/ReactDOMServerFormatConfig.js\n@@ -83,16 +83,25 @@ const startScriptSrc = stringToPrecomputedChunk('<script src=\"');\n const startModuleSrc = stringToPrecomputedChunk('<script type=\"module\" src=\"');\n const endAsyncScript = stringToPrecomputedChunk('\" async=\"\"></script>');\n \n-const scriptRegex = /(<\\/|<)(s)(cript)/gi;\n-const scriptReplacer = (match, prefix, s, suffix) =>\n-  `${prefix}${s === 's' ? '\\\\u0073' : '\\\\u0053'}${suffix}`;\n-\n+/**\n+ * This escaping function is designed to work with bootstrapScriptContent only.\n+ * because we know we are escaping the entire script. We can avoid for instance\n+ * escaping html comment string sequences that are valid javascript as well because\n+ * if there are no sebsequent <script sequences the html parser will never enter\n+ * script data double escaped state (see: https://www.w3.org/TR/html53/syntax.html#script-data-double-escaped-state)\n+ *\n+ * While untrusted script content should be made safe before using this api it will\n+ * ensure that the script cannot be early terminated or never terminated state\n+ */\n function escapeBootstrapScriptContent(scriptText) {\n   if (__DEV__) {\n     checkHtmlStringCoercion(scriptText);\n   }\n   return ('' + scriptText).replace(scriptRegex, scriptReplacer);\n }\n+const scriptRegex = /(<\\/|<)(s)(cript)/gi;\n+const scriptReplacer = (match, prefix, s, suffix) =>\n+  `${prefix}${s === 's' ? '\\\\u0073' : '\\\\u0053'}${suffix}`;\n \n // Allows us to keep track of what we've already written so we can refer back to it.\n export function createResponseState("}, {"role": "assistant", "content": "explain the rationale for the chosen escaping implemenation in a comment"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react/package.json b/packages/react/package.json\nindex a7ae10388473..0ab41de16ca5 100644\n--- a/packages/react/package.json\n+++ b/packages/react/package.json\n@@ -32,7 +32,7 @@\n     \"./build-info.json\": \"./build-info.json\",\n     \"./jsx-runtime\": \"./jsx-runtime.js\",\n     \"./jsx-dev-runtime\": \"./jsx-dev-runtime.js\",\n-    \"./*\": \"./*\"\n+    \"./\": \"./\"\n   },\n   \"repository\": {\n     \"type\": \"git\","}, {"role": "assistant", "content": "revert \"fix node package.json ./ exports deprecation warning \""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/native/ReactNative/ReactNativeEventEmitter.js b/src/renderers/native/ReactNative/ReactNativeEventEmitter.js\nindex add29ce39d26..bf7179c2aeb3 100644\n--- a/src/renderers/native/ReactNative/ReactNativeEventEmitter.js\n+++ b/src/renderers/native/ReactNative/ReactNativeEventEmitter.js\n@@ -120,6 +120,11 @@ var ReactNativeEventEmitter = merge(ReactEventEmitterMixin, {\n   ) {\n     var nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;\n     var inst = ReactNativeComponentTree.getInstanceFromNode(rootNodeID);\n+    if (!inst) {\n+      // If the original instance is already gone, we don't have to dispatch\n+      // any events.\n+      return;\n+    }\n     ReactUpdates.batchedUpdates(function() {\n       ReactNativeEventEmitter.handleTopLevel(\n         topLevelType,"}, {"role": "assistant", "content": "ignore events fired on missing react native instances"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/error-codes/extract-errors.js b/scripts/error-codes/extract-errors.js\nindex d82b4e68db15..58823cbe1687 100644\n--- a/scripts/error-codes/extract-errors.js\n+++ b/scripts/error-codes/extract-errors.js\n@@ -6,7 +6,7 @@\n  */\n 'use strict';\n \n-const babylon = require('babylon');\n+const parser = require('@babel/parser');\n const fs = require('fs');\n const path = require('path');\n const traverse = require('@babel/traverse').default;\n@@ -65,7 +65,7 @@ module.exports = function(opts) {\n   existingErrorMap = invertObject(existingErrorMap);\n \n   function transform(source) {\n-    const ast = babylon.parse(source, babylonOptions);\n+    const ast = parser.parse(source, babylonOptions);\n \n     traverse(ast, {\n       CallExpression: {"}, {"role": "assistant", "content": "use babel parser rather than babylon in extract errors"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/ReactDOMSelection.js b/src/renderers/dom/client/ReactDOMSelection.js\nindex 31912ae2ff4d..b483c2aea71c 100644\n--- a/src/renderers/dom/client/ReactDOMSelection.js\n+++ b/src/renderers/dom/client/ReactDOMSelection.js\n@@ -76,6 +76,22 @@ function getModernOffsets(node) {\n \n   var currentRange = selection.getRangeAt(0);\n \n+  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n+  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n+  // divs do not seem to expose properties, triggering a \"Permission denied\n+  // error\" if any of its properties are accessed. The only seemingly possible\n+  // way to avoid erroring is to access a property that typically works for\n+  // non-anonymous divs and catch any error that may otherwise arise. See\n+  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n+  try {\n+    /* eslint-disable no-unused-expressions */\n+    currentRange.startContainer.nodeType;\n+    currentRange.endContainer.nodeType;\n+    /* eslint-enable no-unused-expressions */\n+  } catch (e) {\n+    return null;\n+  }\n+\n   // If the node and offset values are the same, the selection is collapsed.\n   // `Selection.isCollapsed` is available natively, but IE sometimes gets\n   // this value wrong."}, {"role": "assistant", "content": "fix reactdomselection to avoid erroring on firefox's anonymous divs"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/jest/preprocessor.js b/scripts/jest/preprocessor.js\nindex 44642ec91888..b04daaee886b 100644\n--- a/scripts/jest/preprocessor.js\n+++ b/scripts/jest/preprocessor.js\n@@ -40,6 +40,10 @@ const babelOptions = {\n     require.resolve('@babel/plugin-transform-react-jsx-source'),\n \n     require.resolve('../babel/transform-prevent-infinite-loops'),\n+\n+    // This optimization is important for extremely performance-sensitive (e.g. React source).\n+    // It's okay to disable it for tests.\n+    [require.resolve('@babel/plugin-transform-block-scoping'), {throwIfClosureRequired: false}],\n   ],\n   retainLines: true,\n };"}, {"role": "assistant", "content": "disable @babel/plugin-transform-block-scoping \"throwifclosurerequired\" option for tests"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/addons/ReactWithAddons.js b/src/addons/ReactWithAddons.js\nindex 04f327a14bd5..a0f8975762e2 100644\n--- a/src/addons/ReactWithAddons.js\n+++ b/src/addons/ReactWithAddons.js\n@@ -28,7 +28,6 @@ var ReactTransitionGroup = require('ReactTransitionGroup');\n var ReactUpdates = require('ReactUpdates');\n \n var cloneWithProps = require('cloneWithProps');\n-var renderSubtreeIntoContainer = require('renderSubtreeIntoContainer');\n var shallowCompare = require('shallowCompare');\n var update = require('update');\n \n@@ -41,7 +40,6 @@ React.addons = {\n   batchedUpdates: ReactUpdates.batchedUpdates,\n   cloneWithProps: cloneWithProps,\n   createFragment: ReactFragment.create,\n-  renderSubtreeIntoContainer: renderSubtreeIntoContainer,\n   shallowCompare: shallowCompare,\n   update: update,\n };\ndiff --git a/src/renderers/dom/ReactDOMClient.js b/src/renderers/dom/ReactDOMClient.js\nindex 03609f1e5e69..6d35c7f1cc92 100644\n--- a/src/renderers/dom/ReactDOMClient.js\n+++ b/src/renderers/dom/ReactDOMClient.js\n@@ -22,6 +22,7 @@ var ReactPerf = require('ReactPerf');\n var ReactReconciler = require('ReactReconciler');\n \n var findDOMNode = require('findDOMNode');\n+var renderSubtreeIntoContainer = require('renderSubtreeIntoContainer');\n var warning = require('warning');\n \n ReactDefaultInjection.inject();\n@@ -34,6 +35,7 @@ var React = {\n   findDOMNode: findDOMNode,\n   render: render,\n   unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n+  _renderSubtreeIntoContainer: renderSubtreeIntoContainer,\n };\n \n // Inject the runtime into a devtools global hook regardless of browser."}, {"role": "assistant", "content": "move rendersubtreeintocontainer into reactdomclient"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/backend/agent.js b/src/backend/agent.js\nindex 5c85cd4562da..c6d705524533 100644\n--- a/src/backend/agent.js\n+++ b/src/backend/agent.js\n@@ -296,12 +296,19 @@ export default class Agent extends EventEmitter {\n     if (renderer == null) {\n       console.warn(`Invalid renderer id \"${rendererID}\" for element \"${id}\"`);\n     } else {\n-      // Update the active DOM node on the global hook object.\n-      // The content script will read this to update window.$0\n-      // when we switch tabs.\n+      // When a different React component is selected, we want to store\n+      // the active DOM node ($0) on the global hook so that content script\n+      // can update the native elements panel to match it.\n       const node = ((renderer.findNativeByFiberID(id): any): HTMLElement);\n       if (node !== null) {\n-        window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0 = node;\n+        // However, we don't want to do it if the current $0 node already\n+        // belongs to this component. In this case we were probably inspecting\n+        // a part of its host subtree, and changing $0 would be disuptive.\n+        const prev$0 = window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0;\n+        const prev$0ID = this.getIDForNode(prev$0);\n+        if (prev$0ID !== id) {\n+          window.__REACT_DEVTOOLS_GLOBAL_HOOK__.$0 = node;\n+        }\n       }\n       renderer.selectElement(id);\n       this._bridge.send('selectElement');"}, {"role": "assistant", "content": "keep dom selection if last $0 resolves to same component"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex e6b05679f86e..ea9610713d05 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -35,10 +35,7 @@ export const {\n // It's not used anywhere in production yet.\n \n export const enableProfilerTimer = __PROFILE__;\n-\n-// Temporarily disable commit hooks flag to verify it does not cause a regression.\n-// TODO (brian) Re-enable this flag if performance is mostly neutral.\n-export const enableProfilerCommitHooks = false;\n+export const enableProfilerCommitHooks = __PROFILE__;\n \n // Logs additional User Timing API marks for use with an experimental profiling tool.\n export const enableSchedulingProfiler = __PROFILE__;"}, {"role": "assistant", "content": "revert \"temporarily disable profiler commit hooks flag \""}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\nindex ec288be9eae3..da0ca9b44936 100644\n--- a/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n+++ b/src/renderers/dom/shared/HTMLDOMPropertyConfig.js\n@@ -139,6 +139,8 @@ var HTMLDOMPropertyConfig = {\n     shape: 0,\n     size: HAS_POSITIVE_NUMERIC_VALUE,\n     sizes: 0,\n+    // support for projecting regular DOM Elements via V1 named slots ( shadow dom )\n+    slot: 0,\n     span: HAS_POSITIVE_NUMERIC_VALUE,\n     spellCheck: 0,\n     src: 0,\ndiff --git a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\nindex 36d284170084..00d0bd445d49 100644\n--- a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\n+++ b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\n@@ -245,6 +245,24 @@ describe('ReactDOMComponent', () => {\n       expect(stubStyle.display).toEqual('');\n     });\n \n+    it('should allow named slot projection on both web components and regular DOM elements', () => {\n+      var container = document.createElement('div');\n+\n+      ReactDOM.render(\n+        <my-component>\n+          <my-second-component slot=\"first\"></my-second-component>\n+          <button slot=\"second\">Hello</button>\n+        </my-component>,\n+        container\n+      );\n+\n+      var lightDOM = container.firstChild.childNodes;\n+\n+      expect(lightDOM[0].getAttribute('slot')).toBe('first');\n+      expect(lightDOM[1].getAttribute('slot')).toBe('second');\n+\n+    } );\n+\n     it('should skip reserved props on web components', () => {\n       var container = document.createElement('div');"}, {"role": "assistant", "content": "support slot attribute on dom elements for v1 shadowdom named slots p\u2026"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/bin/jsx b/bin/jsx\nindex e0f6247a39aa..45009e435e23 100755\n--- a/bin/jsx\n+++ b/bin/jsx\n@@ -2,8 +2,7 @@\n // -*- mode: js -*-\n \"use strict\";\n \n-var visitors = require('../vendor/fbtransform/visitors');\n-var transform = require('jstransform').transform;\n+var transform = require('../main').transform;\n \n require('commoner').version(\n   require('../package.json').version\n@@ -12,13 +11,14 @@ require('commoner').version(\n }).option(\n   '--harmony',\n   'Turns on JS transformations such as ES6 Classes etc.'\n+).option(\n+  '--source-map-inline',\n+  'Embed inline sourcemap in transformed source'\n ).process(function(id, source) {\n   // This is where JSX, ES6, etc. desugaring happens.\n-  var visitorList;\n-  if (this.options.harmony) {\n-    visitorList = visitors.getAllVisitors();\n-  } else {\n-    visitorList = visitors.transformVisitors.react;\n-  }\n-  return transform(visitorList, source).code;\n+  var options = {\n+    harmony: this.options.harmony,\n+    sourceMap: this.options.sourceMapInline\n+  };\n+  return transform(source, options);\n });\ndiff --git a/npm-react-tools/README.md b/npm-react-tools/README.md\nindex 38a259f25fba..f2073866e87c 100644\n--- a/npm-react-tools/README.md\n+++ b/npm-react-tools/README.md\n@@ -26,6 +26,7 @@ This package installs a `jsx` executable that can be used to transform JSX into\n       --source-charset <utf8 | win1252 | ...>  Charset of source (default: utf8)\n       --output-charset <utf8 | win1252 | ...>  Charset of output (default: utf8)\n       --harmony                                Turns on JS transformations such as ES6 Classes etc.\n+      --source-map-inline                      Embed inline sourcemap in transformed source\n \n ## API"}, {"role": "assistant", "content": "add support for inline sourcemaps in jsx executable"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/tutorial.md b/docs/docs/tutorial.md\nindex d9ca8729cf1a..ab49fe57273f 100644\n--- a/docs/docs/tutorial.md\n+++ b/docs/docs/tutorial.md\n@@ -383,8 +383,12 @@ var CommentBox = React.createClass({\n   getInitialState: function() {\n     $.ajax({\n       url: 'comments.json',\n+      dataType: 'json',\n       success: function(data) {\n         this.setState({data: data});\n+      }.bind(this),\n+      error: function(xhr, status, err) {\n+        console.log(\"comments.json\", status, err.toString());\n       }.bind(this)\n     });\n     return {data: []};"}, {"role": "assistant", "content": "use explicit $.ajax datatype and add error callback"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/vendor/core/warning.js b/src/vendor/core/warning.js\nindex 5321055edbc0..9a2bec313ddd 100644\n--- a/src/vendor/core/warning.js\n+++ b/src/vendor/core/warning.js\n@@ -33,7 +33,14 @@ if (__DEV__) {\n \n     if (!condition) {\n       var argIndex = 0;\n-      console.warn('Warning: ' + format.replace(/%s/g, () => args[argIndex++]));\n+      var message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n+      console.warn(message);\n+      try {\n+        // --- Welcome to debugging React ---\n+        // This error was thrown as a convenience so that you can use this stack\n+        // to find the callsite that caused this warning to fire.\n+        throw new Error(message);\n+      } catch(x) {}\n     }\n   };\n }"}, {"role": "assistant", "content": "throw a caught error in the default warning module"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js b/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js\nindex e68bf66d913f..7d931a6ccbd5 100644\n--- a/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js\n+++ b/src/renderers/dom/shared/hooks/ReactDOMUnknownPropertyHook.js\n@@ -126,6 +126,18 @@ var warnUnknownProperties = function(type, props, debugID) {\n     var isValid = validateProperty(type, key, debugID);\n     if (!isValid) {\n       unknownProps.push(key);\n+      var value = props[key];\n+      if (typeof value === 'object' && value !== null) {\n+        warning(\n+          false,\n+          'The %s prop on <%s> is not a known property, and was given an object.' +\n+            'Remove it, or it will appear in the ' +\n+            'DOM after a future React update.%s',\n+          key,\n+          type,\n+          getStackAddendum(debugID),\n+        );\n+      }\n     }\n   }"}, {"role": "assistant", "content": "find callsites that would call tostring if we pass attributes through"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-rt-renderer/src/ReactNativeRTTypes.js b/packages/react-rt-renderer/src/ReactNativeRTTypes.js\nindex 02e9ced1cfad..f6eb64f13882 100644\n--- a/packages/react-rt-renderer/src/ReactNativeRTTypes.js\n+++ b/packages/react-rt-renderer/src/ReactNativeRTTypes.js\n@@ -5,6 +5,7 @@\n  * LICENSE file in the root directory of this source tree.\n  *\n  * @flow\n+ * @providesModule ReactNativeRTTypes\n  */\n \n /**\ndiff --git a/packages/shared/ReactTypes.js b/packages/shared/ReactTypes.js\nindex 4efa9a3851dd..900582e5d5ac 100644\n--- a/packages/shared/ReactTypes.js\n+++ b/packages/shared/ReactTypes.js\n@@ -5,6 +5,7 @@\n  * LICENSE file in the root directory of this source tree.\n  *\n  * @flow\n+ * @providesModule ReactTypes\n  */\n \n export type ReactNode =\ndiff --git a/scripts/circleci/check_modules.sh b/scripts/circleci/check_modules.sh\nindex 8ecd67dfbbee..9f900beb027f 100755\n--- a/scripts/circleci/check_modules.sh\n+++ b/scripts/circleci/check_modules.sh\n@@ -5,11 +5,17 @@ set -e\n # Make sure we don't introduce accidental @providesModule annotations.\n EXPECTED='packages/react-cs-renderer/src/ReactNativeCSTypes.js\n packages/react-native-renderer/src/ReactNativeTypes.js\n+packages/react-rt-renderer/src/ReactNativeRTTypes.js\n+packages/shared/ReactTypes.js\n scripts/rollup/wrappers.js'\n ACTUAL=$(git grep -l @providesModule -- './*.js' ':!scripts/rollup/shims/*.js')\n \n+# Colors\n+red=$'\\e[1;31m'\n+end=$'\\e[0m'\n+\n if [ \"$EXPECTED\" != \"$ACTUAL\" ]; then\n-  echo \"@providesModule crept into some new files?\"\n+  printf \"%s\\n\" \"${red}ERROR: @providesModule crept into some new files?${end}\"\n   diff -u <(echo \"$EXPECTED\") <(echo \"$ACTUAL\") || true\n   exit 1\n fi"}, {"role": "assistant", "content": "re-add haste modules for reacttypes and reactnativerttypes shims"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-05-events.md b/docs/docs/ref-05-events.md\nindex 313d2bfd62e9..779ab75a63f7 100644\n--- a/docs/docs/ref-05-events.md\n+++ b/docs/docs/ref-05-events.md\n@@ -144,7 +144,7 @@ onDragLeave onDragOver onDragStart onDrop onMouseDown onMouseEnter onMouseLeave\n onMouseMove onMouseOut onMouseOver onMouseUp\n ```\n \n-The `onMouseEnter` and `onMouseLeave` events propagate from the component being left to the one being entered instead of ordinary bubbling and do not have a capture phase.\n+The `onMouseEnter` and `onMouseLeave` events propagate from the element being left to the one being entered instead of ordinary bubbling and do not have a capture phase.\n \n Properties:"}, {"role": "assistant", "content": "clarify that events work for elements not for components"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactFiberCommitWork.js b/src/renderers/shared/fiber/ReactFiberCommitWork.js\nindex 9e00ff045734..0fe3c232bd28 100644\n--- a/src/renderers/shared/fiber/ReactFiberCommitWork.js\n+++ b/src/renderers/shared/fiber/ReactFiberCommitWork.js\n@@ -66,7 +66,7 @@ module.exports = function<T, P, I, TI, C>(\n     }\n   }\n \n-  function getHostParent(fiber : Fiber) : null | I | C {\n+  function getHostParent(fiber : Fiber) : I | C {\n     let parent = fiber.return;\n     while (parent) {\n       switch (parent.tag) {\n@@ -79,7 +79,7 @@ module.exports = function<T, P, I, TI, C>(\n       }\n       parent = parent.return;\n     }\n-    return null;\n+    throw new Error('Expected to find a host parent.');\n   }\n \n   function isHostParent(fiber : Fiber) : boolean {\n@@ -134,9 +134,6 @@ module.exports = function<T, P, I, TI, C>(\n   function commitInsertion(finishedWork : Fiber) : void {\n     // Recursively insert all host nodes into the parent.\n     const parent = getHostParent(finishedWork);\n-    if (!parent) {\n-      return;\n-    }\n     const before = getHostSibling(finishedWork);\n     // We only have the top Fiber that was inserted but we need recurse down its\n     // children to find all the terminal nodes.\n@@ -208,9 +205,7 @@ module.exports = function<T, P, I, TI, C>(\n         commitNestedUnmounts(node);\n         // After all the children have unmounted, it is now safe to remove the\n         // node from the tree.\n-        if (parent) {\n-          removeChild(parent, node.stateNode);\n-        }\n+        removeChild(parent, node.stateNode);\n       } else if (node.tag === Portal) {\n         // If this is a portal, then the parent is actually the portal itself.\n         // We need to keep track of which parent we're removing from."}, {"role": "assistant", "content": "assert that we always find a parent for dom mutations"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/reconciler/ReactOwner.js b/src/renderers/shared/reconciler/ReactOwner.js\nindex 4b91f9117e86..89d5cd39955c 100644\n--- a/src/renderers/shared/reconciler/ReactOwner.js\n+++ b/src/renderers/shared/reconciler/ReactOwner.js\n@@ -92,7 +92,7 @@ var ReactOwner = {\n     invariant(\n       ReactOwner.isValidOwner(owner),\n       'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +\n-      'usually means that you\\'re trying to remove a ref to a component that ' +\n+      'usually means that you\\'re trying to remove a ref from a component that ' +\n       'doesn\\'t have an owner (that is, was not created inside of another ' +\n       'component\\'s `render` method). Try rendering this component inside of ' +\n       'a new top-level component which will hold the ref.'"}, {"role": "assistant", "content": "fix typo in removecomponentasreffrom error message."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js b/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js\nindex 876cf73803b9..0df7395be015 100644\n--- a/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js\n+++ b/scripts/rollup/shims/react-native/ReactNativeViewConfigRegistry.js\n@@ -34,8 +34,8 @@ const customDirectEventTypes: {\n exports.customBubblingEventTypes = customBubblingEventTypes;\n exports.customDirectEventTypes = customDirectEventTypes;\n \n-const viewConfigCallbacks = new Map();\n-const viewConfigs = new Map();\n+const viewConfigCallbacks = new Map<string, ?() => ViewConfig>();\n+const viewConfigs = new Map<string, ViewConfig>();\n \n function processEventTypes(viewConfig: ViewConfig): void {\n   const {bubblingEventTypes, directEventTypes} = viewConfig;"}, {"role": "assistant", "content": "add flow types to maps in reactnativeviewconfigregistry.js"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/addons/ReactFragment.js b/src/addons/ReactFragment.js\nindex e6afbd75f4ff..f811ee568aa8 100644\n--- a/src/addons/ReactFragment.js\n+++ b/src/addons/ReactFragment.js\n@@ -96,6 +96,14 @@ var ReactFragment = {\n   // of its properties.\n   create: function(object) {\n     if (__DEV__) {\n+      if (typeof object !== 'object' || !object) {\n+        warning(\n+          false,\n+          'React.addons.createFragment only accepts a single object. Not %s',\n+          object\n+        );\n+        return object;\n+      }\n       if (canWarnForReactFragment) {\n         var proxy = {};\n         Object.defineProperty(proxy, fragmentKey, {\ndiff --git a/src/addons/__tests__/ReactFragment-test.js b/src/addons/__tests__/ReactFragment-test.js\nindex d7025f8029e2..ebd918b3afd7 100644\n--- a/src/addons/__tests__/ReactFragment-test.js\n+++ b/src/addons/__tests__/ReactFragment-test.js\n@@ -73,4 +73,13 @@ describe('ReactFragment', function() {\n     );\n   });\n \n+  it('should warn if accessing any property on a fragment', function() {\n+    spyOn(console, 'warn');\n+    ReactFragment.create(null);\n+    expect(console.warn.calls.length).toBe(1);\n+    expect(console.warn.calls[0].args[0]).toContain(\n+      'React.addons.createFragment only accepts a single object. Not null'\n+    );\n+  });\n+\n });"}, {"role": "assistant", "content": "warn if a non-object value is used in reactfragment.create"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex 7c64e1fbc3d2..39bc37b169c2 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -22,6 +22,21 @@ Create a component given a specification. A component implements a `render` meth\n For more information about the specification object, see [Component Specs and Lifecycle](/react/docs/component-specs.html).\n \n \n+### React.createElement\n+\n+```javascript\n+function createElement(\n+  string/ReactComponent type,\n+  [object props],\n+  [children ...]\n+)\n+```\n+\n+Create and return a new ReactElement of the given type. The type argument can be either an\n+html tag name string (eg. 'div', 'span', etc), or a `ReactComponent` class that was created\n+with `React.createClass`.\n+\n+\n ### React.render\n \n ```javascript"}, {"role": "assistant", "content": "add top-level api docs section for react.createelement."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/__tests__/DOMPropertyOperations-test.js b/packages/react-dom/src/__tests__/DOMPropertyOperations-test.js\nindex aabb3e995f86..08874222d594 100644\n--- a/packages/react-dom/src/__tests__/DOMPropertyOperations-test.js\n+++ b/packages/react-dom/src/__tests__/DOMPropertyOperations-test.js\n@@ -155,5 +155,11 @@ describe('DOMPropertyOperations', () => {\n       expect(container.firstChild.getAttribute('value')).toBe('foo');\n       expect(container.firstChild.value).toBe('foo');\n     });\n+\n+    it('should not remove attributes for custom component tag', () => {\n+      const container = document.createElement('div');\n+      ReactDOM.render(<my-icon size=\"5px\" />, container);\n+      expect(container.firstChild.getAttribute('size')).toBe('5px');\n+    });\n   });\n });\ndiff --git a/packages/react-dom/src/shared/DOMProperty.js b/packages/react-dom/src/shared/DOMProperty.js\nindex dd2c8f6e3a42..b01c069dbad0 100644\n--- a/packages/react-dom/src/shared/DOMProperty.js\n+++ b/packages/react-dom/src/shared/DOMProperty.js\n@@ -157,6 +157,9 @@ export function shouldRemoveAttribute(\n   ) {\n     return true;\n   }\n+  if (isCustomComponentTag) {\n+    return false;\n+  }\n   if (propertyInfo !== null) {\n     switch (propertyInfo.type) {\n       case BOOLEAN:"}, {"role": "assistant", "content": "prevent removing attributes on custom component tags"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberCompleteWork.js b/packages/react-reconciler/src/ReactFiberCompleteWork.js\nindex b8270ea1fa0b..2aa17aa1e024 100644\n--- a/packages/react-reconciler/src/ReactFiberCompleteWork.js\n+++ b/packages/react-reconciler/src/ReactFiberCompleteWork.js\n@@ -684,6 +684,7 @@ function completeWork(\n       break;\n     }\n     case ForwardRef:\n+      break;\n     case SuspenseComponent: {\n       const nextState = workInProgress.memoizedState;\n       const prevState = current !== null ? current.memoizedState : null;"}, {"role": "assistant", "content": "add back accidentally deleted `break` to prevent fallthrough"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/fiber/ReactDOMFiber.js b/src/renderers/dom/fiber/ReactDOMFiber.js\nindex 8708b20a0e4d..278e4e62e2ed 100644\n--- a/src/renderers/dom/fiber/ReactDOMFiber.js\n+++ b/src/renderers/dom/fiber/ReactDOMFiber.js\n@@ -368,7 +368,20 @@ var ReactDOM = {\n       // allows arrays.\n       invariant(\n         isValidElement(element),\n-        'render(): Invalid component element.'\n+        'ReactDOM.render(): Invalid component element.%s',\n+        (\n+          typeof element === 'string' ?\n+            ' Instead of passing a string like \\'div\\', pass ' +\n+            'React.createElement(\\'div\\') or <div />.' :\n+          typeof element === 'function' ?\n+            ' Instead of passing a class like Foo, pass ' +\n+            'React.createElement(Foo) or <Foo />.' :\n+          // Check if it quacks like an element\n+          element != null && element.props !== undefined ?\n+            ' This may be caused by unintentionally loading two independent ' +\n+            'copies of React.' :\n+            ''\n+        )\n       );\n     }"}, {"role": "assistant", "content": "add extra invalid element info to invariant message"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/events/BeforeInputEventPlugin.js b/packages/react-dom/src/events/BeforeInputEventPlugin.js\nindex 9bdb8dab7d01..445575173fae 100644\n--- a/packages/react-dom/src/events/BeforeInputEventPlugin.js\n+++ b/packages/react-dom/src/events/BeforeInputEventPlugin.js\n@@ -200,6 +200,20 @@ function getDataFromCustomEvent(nativeEvent) {\n   return null;\n }\n \n+/**\n+ * Check if a composition event was triggered by Korean IME.\n+ * Our fallback mode does not work well with IE's Korean IME,\n+ * so just use native composition events when Korean IME is used.\n+ * Although CompositionEvent.locale property is deprecated,\n+ * it is available in IE, where our fallback mode is enabled.\n+ *\n+ * @param {object} nativeEvent\n+ * @return {boolean}\n+ */\n+function isUsingKoreanIME(nativeEvent) {\n+  return nativeEvent.locale === 'ko';\n+}\n+\n // Track the current IME composition status, if any.\n let isComposing = false;\n \n@@ -229,7 +243,7 @@ function extractCompositionEvent(\n     return null;\n   }\n \n-  if (useFallbackCompositionData) {\n+  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {\n     // The current composition is stored statically and must not be\n     // overwritten while composition continues.\n     if (!isComposing && eventType === eventTypes.compositionStart) {\n@@ -378,7 +392,9 @@ function getFallbackBeforeInputChars(topLevelType: TopLevelType, nativeEvent) {\n       }\n       return null;\n     case TOP_COMPOSITION_END:\n-      return useFallbackCompositionData ? null : nativeEvent.data;\n+      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)\n+        ? null\n+        : nativeEvent.data;\n     default:\n       return null;\n   }"}, {"role": "assistant", "content": "fix incorrect data in compositionend event with korean ime on ie11"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex a10d76d48570..59aed94e1cf9 100644\n--- a/package.json\n+++ b/package.json\n@@ -108,7 +108,7 @@\n   \"scripts\": {\n     \"build\": \"node ./scripts/rollup/build.js\",\n     \"build-combined\": \"node ./scripts/rollup/build-all-release-channels.js\",\n-    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react/jsx,react-dom/index,react-dom/test,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh,react-art --type=NODE && cp -r ./build/node_modules build/oss-experimental/\",\n+    \"build-for-devtools\": \"cross-env RELEASE_CHANNEL=experimental yarn build react/index,react/jsx,react-dom/index,react-dom/unstable_testing,react-is,react-debug-tools,scheduler,react-test-renderer,react-refresh,react-art --type=NODE && cp -r ./build/node_modules build/oss-experimental/\",\n     \"build-for-devtools-dev\": \"yarn build-for-devtools --type=NODE_DEV\",\n     \"build-for-devtools-prod\": \"yarn build-for-devtools --type=NODE_PROD\",\n     \"linc\": \"node ./scripts/tasks/linc.js\","}, {"role": "assistant", "content": "rename react-dom/testing to react-dom/unstable_testing in yarn build-for-devtools"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ui/ReactDOMComponent.js b/src/browser/ui/ReactDOMComponent.js\nindex a1c8bc23489a..cf93f29b86d0 100644\n--- a/src/browser/ui/ReactDOMComponent.js\n+++ b/src/browser/ui/ReactDOMComponent.js\n@@ -367,6 +367,7 @@ ReactDOMComponent.Mixin = {\n             styleUpdates[styleName] = '';\n           }\n         }\n+        this._previousStyleCopy = null;\n       } else if (registrationNameModules.hasOwnProperty(propKey)) {\n         if (lastProps[propKey]) {\n           // Only call deleteListener if there was a listener previously or\ndiff --git a/src/browser/ui/__tests__/ReactDOMComponent-test.js b/src/browser/ui/__tests__/ReactDOMComponent-test.js\nindex aabc6393bcd1..2f99e484531d 100644\n--- a/src/browser/ui/__tests__/ReactDOMComponent-test.js\n+++ b/src/browser/ui/__tests__/ReactDOMComponent-test.js\n@@ -152,6 +152,17 @@ describe('ReactDOMComponent', function() {\n       expect(stubStyle.color).toEqual('');\n     });\n \n+    it(\"should update styles when 'style' changes from null to object\", function() {\n+      var container = document.createElement('div');\n+      var styles = {color: 'red'};\n+      React.render(<div style={styles} />, container);\n+      React.render(<div />, container);\n+      React.render(<div style={styles} />, container);\n+\n+      var stubStyle = container.firstChild.style;\n+      expect(stubStyle.color).toEqual('red');\n+    });\n+\n     it(\"should empty element when removing innerHTML\", function() {\n       var container = document.createElement('div');\n       React.render(<div dangerouslySetInnerHTML={{__html: ':)'}} />, container);"}, {"role": "assistant", "content": "fix incorrect update of style when props.style transitions from null to non-null"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/examples/basic-jsx-precompile/index.html b/examples/basic-jsx-precompile/index.html\nindex f74a7379a668..53a84f876425 100644\n--- a/examples/basic-jsx-precompile/index.html\n+++ b/examples/basic-jsx-precompile/index.html\n@@ -11,9 +11,10 @@ <h1>Basic Example with Precompiled JSX</h1>\n       <p>\n         If you can see this, React is not running. Try running:\n       </p>\n-      <pre>npm install -g babel\n+      <pre>npm install -g babel-cli\n cd examples/basic-jsx-precompile/\n-babel example.js --out-dir=build</pre>\n+npm install babel-preset-react\n+babel example.js --presets react --out-dir=build</pre>\n     </div>\n     <h4>Example Details</h4>\n     <p>This is written with JSX in a separate file and precompiled to vanilla JS by running:</p>\n@@ -25,8 +26,8 @@ <h4>Example Details</h4>\n \n \t<p><i>With Babel 6.0 or higher</i></p>\n     <pre>npm install -g babel-cli\n-npm install babel-preset-react\n cd examples/basic-jsx-precompile/\n+npm install babel-preset-react\n babel example.js --presets react --out-dir=build</pre>\n     <p>\n       Learn more about React at"}, {"role": "assistant", "content": "update react example basic-jsx-precompile comand line on markdown file,new version of babel needed a react presets dependency."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/ReactComponentEnvironment.js b/src/core/ReactComponentEnvironment.js\nindex e626314ae809..78bdd1b63b95 100644\n--- a/src/core/ReactComponentEnvironment.js\n+++ b/src/core/ReactComponentEnvironment.js\n@@ -15,6 +15,7 @@\n  *\n  * @providesModule ReactComponentEnvironment\n  */\n+\n \"use strict\";\n \n var ReactComponentBrowserEnvironment =\ndiff --git a/src/core/ReactMultiChildUpdateTypes.js b/src/core/ReactMultiChildUpdateTypes.js\nindex 3d9297754b9e..179dca2c3775 100644\n--- a/src/core/ReactMultiChildUpdateTypes.js\n+++ b/src/core/ReactMultiChildUpdateTypes.js\n@@ -15,6 +15,7 @@\n  *\n  * @providesModule ReactMultiChildUpdateTypes\n  */\n+\n \"use strict\";\n \n var keyMirror = require('keyMirror');\ndiff --git a/src/core/__tests__/ReactMultiChild-test.js b/src/core/__tests__/ReactMultiChild-test.js\nindex f1700384d501..914b8b173383 100644\n--- a/src/core/__tests__/ReactMultiChild-test.js\n+++ b/src/core/__tests__/ReactMultiChild-test.js\n@@ -16,6 +16,7 @@\n  * @jsx React.DOM\n  * @emails react-core\n  */\n+\n \"use strict\";\n \n var mocks = require('mocks');\ndiff --git a/src/dom/__tests__/Danger-test.js b/src/dom/__tests__/Danger-test.js\nindex 871b91ee497e..5086a8f2794a 100644\n--- a/src/dom/__tests__/Danger-test.js\n+++ b/src/dom/__tests__/Danger-test.js\n@@ -16,10 +16,10 @@\n  * @jsx React.DOM\n  * @emails react-core\n  */\n-\"use strict\";\n-\n /*jslint evil: true */\n \n+\"use strict\";\n+\n var React = require('React');\n \n describe('Danger', function() {"}, {"role": "assistant", "content": "add new lines above use strict and keep directives at the top"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js b/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\nindex b9154ee33b4f..f46d81cfd620 100644\n--- a/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\n+++ b/fixtures/dom/src/components/fixtures/input-change-events/RangeKeyboardFixture.js\n@@ -54,11 +54,16 @@ class RangeKeyboardFixture extends React.Component {\n \n     return (\n       <Fixture>\n-        <input\n-          type=\"range\"\n-          ref={r => (this.input = r)}\n-          onChange={this.handleChange}\n-        />\n+        <div>\n+          <input\n+            type=\"range\"\n+            ref={r => (this.input = r)}\n+            onChange={this.handleChange}\n+          />\n+          <button onClick={() => this.input.focus()}>\n+            Focus Knob\n+          </button>\n+        </div>\n         {' '}\n \n         <p style={{color}}>\ndiff --git a/fixtures/dom/src/style.css b/fixtures/dom/src/style.css\nindex 28e01b611b2f..c316bb3f37eb 100644\n--- a/fixtures/dom/src/style.css\n+++ b/fixtures/dom/src/style.css\n@@ -17,9 +17,13 @@ body {\n }\n \n button {\n+  background: white;\n+  border-radius: 2px;\n+  border: 1px solid rgba(0, 0, 0, 0.24);\n+  cursor: pointer;\n+  font-size: 16px;\n   margin: 10px;\n-  font-size: 18px;\n-  padding: 5px;\n+  padding: 6px 8px;\n }\n \n .header {"}, {"role": "assistant", "content": "add focus helper to range test, update button styles"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-extensions/src/main.js b/packages/react-devtools-extensions/src/main.js\nindex 5203b511035d..60ed0fcb1a9e 100644\n--- a/packages/react-devtools-extensions/src/main.js\n+++ b/packages/react-devtools-extensions/src/main.js\n@@ -216,7 +216,7 @@ function createPanelIfReactLoaded() {\n           chrome.devtools.inspectedWindow.eval(\n             `window.postMessage({\n                source: 'react-devtools-inject-backend',\n-               extensionId: \"${CURRENT_EXTENSION_ID}\"\n+               extensionId: \"${CURRENT_EXTENSION_ID}\",\n              }, '*');`,\n             function(response, evalError) {\n               if (evalError) {\n@@ -361,15 +361,15 @@ function createPanelIfReactLoaded() {\n               chrome.runtime.onMessage.addListener(onPortMessage);\n \n               chrome.devtools.inspectedWindow.eval(`\n-              window.postMessage({\n-                source: 'react-devtools-extension',\n-                extensionId: \"${CURRENT_EXTENSION_ID}\"\n-                payload: {\n-                  type: 'fetch-file-with-cache',\n-                  url: \"${url}\",\n-                },\n-              });\n-            `);\n+                window.postMessage({\n+                  source: 'react-devtools-extension',\n+                  extensionId: \"${CURRENT_EXTENSION_ID}\",\n+                  payload: {\n+                    type: 'fetch-file-with-cache',\n+                    url: \"${url}\",\n+                  },\n+                }, '*');\n+              `);\n             };\n \n             // Fetching files from the extension won't make use of the network cache"}, {"role": "assistant", "content": "fix passing extensionid in evaled postmessage calls"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/CONTRIBUTING.md b/CONTRIBUTING.md\nindex 5ced38bb0abe..5bc39592ae7f 100644\n--- a/CONTRIBUTING.md\n+++ b/CONTRIBUTING.md\n@@ -14,6 +14,14 @@ Some of the core team will be working directly on GitHub. These changes will be\n \n We will do our best to keep `master` in good shape, with tests passing at all times. But in order to move fast, we will make API changes that your application might not be compatible with. We will do our best to communicate these changes and always version appropriately so you can lock into a specific version if need be.\n \n+### Test Suite\n+\n+Use `grunt test` to run the full test suite with PhantomJS.\n+\n+This command is just a facade to [Jest](https://facebook.github.io/jest/). You may optionally `npm install -g jest-cli` run and use Jest commands directly to have more control over how tests are executed.\n+\n+For example, `jest --watch` lets you automatically run the test suite on every file change.\n+\n ### Pull Requests\n \n The core team will be monitoring for pull requests. When we get one, we'll run some Facebook-specific integration tests on it first. From here, we'll need to get another person to sign off on the changes and then merge the pull request. For API changes we may need to fix internal uses, which could cause some delay. We'll do our best to provide updates and feedback throughout the process."}, {"role": "assistant", "content": "mention that jest can be used directly in contributing"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/events/DOMEventResponderSystem.js b/packages/react-dom/src/events/DOMEventResponderSystem.js\nindex 8ef3c42d5538..ce23eb5ad9d7 100644\n--- a/packages/react-dom/src/events/DOMEventResponderSystem.js\n+++ b/packages/react-dom/src/events/DOMEventResponderSystem.js\n@@ -259,7 +259,7 @@ function handleTopLevelType(\n \n export function runResponderEventsInBatch(\n   topLevelType: DOMTopLevelEventType,\n-  targetFiber: Fiber,\n+  targetFiber: null | Fiber,\n   nativeEvent: AnyNativeEvent,\n   nativeEventTarget: EventTarget,\n   eventSystemFlags: EventSystemFlags,\ndiff --git a/packages/react-dom/src/events/ReactDOMEventListener.js b/packages/react-dom/src/events/ReactDOMEventListener.js\nindex 5591646b1980..1e1e67936f98 100644\n--- a/packages/react-dom/src/events/ReactDOMEventListener.js\n+++ b/packages/react-dom/src/events/ReactDOMEventListener.js\n@@ -143,7 +143,7 @@ function handleTopLevel(bookKeeping: BookKeepingInstance) {\n         nativeEvent,\n         eventTarget,\n       );\n-    } else if (enableEventAPI && targetInst !== null) {\n+    } else if (enableEventAPI) {\n       // Responder event system (experimental event API)\n       runResponderEventsInBatch(\n         topLevelType,"}, {"role": "assistant", "content": "allow for null targetfiber for root event handling"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ReactComponentBrowserEnvironment.js b/src/browser/ReactComponentBrowserEnvironment.js\nindex 570e61dea284..0f6c3077522a 100644\n--- a/src/browser/ReactComponentBrowserEnvironment.js\n+++ b/src/browser/ReactComponentBrowserEnvironment.js\n@@ -133,21 +133,7 @@ var ReactComponentBrowserEnvironment = {\n           'See renderComponentToString() for server rendering.'\n       );\n \n-      // Asynchronously inject markup by ensuring that the container is not in\n-      // the document when settings its `innerHTML`.\n-      var parent = container.parentNode;\n-      if (parent) {\n-        var next = container.nextSibling;\n-        parent.removeChild(container);\n-        container.innerHTML = markup;\n-        if (next) {\n-          parent.insertBefore(container, next);\n-        } else {\n-          parent.appendChild(container);\n-        }\n-      } else {\n-        container.innerHTML = markup;\n-      }\n+      container.innerHTML = markup;\n     }\n   )\n };"}, {"role": "assistant", "content": "simplify `mountimageintonode`'s way of putting markup in innerhtml"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/shared/fiber/ReactFiberUpdateQueue.js b/src/renderers/shared/fiber/ReactFiberUpdateQueue.js\nindex a246436fff93..1474e69e2f06 100644\n--- a/src/renderers/shared/fiber/ReactFiberUpdateQueue.js\n+++ b/src/renderers/shared/fiber/ReactFiberUpdateQueue.js\n@@ -12,7 +12,7 @@\n \n 'use strict';\n \n-import type {Fiber} from 'ReactFiber';\n+import type { Fiber } from 'ReactFiber';\n import type {PriorityLevel} from 'ReactPriorityLevel';\n \n const {"}, {"role": "assistant", "content": "commit changes without running prettier to see if ci fails"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/ReactCompositeComponent.js b/src/core/ReactCompositeComponent.js\nindex 35fe4e4220c9..e0c73a158a64 100644\n--- a/src/core/ReactCompositeComponent.js\n+++ b/src/core/ReactCompositeComponent.js\n@@ -108,7 +108,6 @@ var ReactCompositeComponentMixin = {\n    */\n   construct: function(element) {\n     this._currentElement = element;\n-\n     this._rootNodeID = null;\n     this._instance = null;"}, {"role": "assistant", "content": "move component class instantiation into reactcompositecomponent"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/bin/jsx b/bin/jsx\nindex c848f496e957..412dff72c19f 100755\n--- a/bin/jsx\n+++ b/bin/jsx\n@@ -1,10 +1,13 @@\n #!/usr/bin/env node\n+// -*- mode: js -*-\n \"use strict\";\n \n var visitors = require('../vendor/fbtransform/visitors').transformVisitors;\n var transform = require('jstransform').transform;\n \n-require(\"commoner\").resolve(function(id) {\n+require(\"commoner\").version(\n+  require(\"../package.json\").version\n+).resolve(function(id) {\n   return this.readModuleP(id);\n }).process(function(id, source) {\n   // This is where JSX, ES6, etc. desugaring happens.\ndiff --git a/bin/jsx-internal b/bin/jsx-internal\nindex 3ad9f7c40af9..7d295217dac2 100755\n--- a/bin/jsx-internal\n+++ b/bin/jsx-internal\n@@ -1,11 +1,14 @@\n #!/usr/bin/env node\n+// -*- mode: js -*-\n \"use strict\";\n \n var visitors = require('../vendor/fbtransform/visitors').transformVisitors;\n var transform = require('jstransform').transform;\n var propagate = require(\"../vendor/constants\").propagate;\n \n-require(\"commoner\").resolve(function(id) {\n+require(\"commoner\").version(\n+  require(\"../package.json\").version\n+).resolve(function(id) {\n   var context = this;\n \n   // Note that the result of context.getProvidedP() is cached for the\ndiff --git a/package.json b/package.json\nindex e86eef0a15df..de0aa349cef6 100644\n--- a/package.json\n+++ b/package.json\n@@ -36,7 +36,7 @@\n     \"test\": \"grunt build && grunt test\"\n   },\n   \"dependencies\": {\n-    \"commoner\": \"~0.8.4\",\n+    \"commoner\": \"~0.8.7\",\n     \"esprima-fb\": \"~1001.1001.2000-dev-harmony-fb\",\n     \"jstransform\": \"~1.0.1\"\n   },"}, {"role": "assistant", "content": "make bin/jsx --version output the react version according to package.json."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberScheduler.js b/packages/react-reconciler/src/ReactFiberScheduler.js\nindex 0bd0f1c82e6f..8f78c0bc4a15 100644\n--- a/packages/react-reconciler/src/ReactFiberScheduler.js\n+++ b/packages/react-reconciler/src/ReactFiberScheduler.js\n@@ -1768,7 +1768,6 @@ function performWorkOnRoot(\n       // This root is already complete. We can commit it.\n       completeRoot(root, finishedWork, expirationTime);\n     } else {\n-      root.finishedWork = null;\n       finishedWork = renderRoot(root, expirationTime, false);\n       if (finishedWork !== null) {\n         // We've completed the root. Commit it.\n@@ -1782,7 +1781,6 @@ function performWorkOnRoot(\n       // This root is already complete. We can commit it.\n       completeRoot(root, finishedWork, expirationTime);\n     } else {\n-      root.finishedWork = null;\n       finishedWork = renderRoot(root, expirationTime, true);\n       if (finishedWork !== null) {\n         // We've completed the root. Check the deadline one more time"}, {"role": "assistant", "content": "delete a couple of redundant lines in performworkonroot in reactfiberscheduler.js"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex 1cd5ad4a594b..6500fd1146be 100644\n--- a/package.json\n+++ b/package.json\n@@ -33,7 +33,7 @@\n     \"url\": \"https://github.com/facebook/react\"\n   },\n   \"dependencies\": {\n-    \"commoner\": \"~0.9.1\",\n+    \"commoner\": \"^0.9.2\",\n     \"esprima-fb\": \"~3001.1.0-dev-harmony-fb\",\n     \"jstransform\": \"~3.0.0\"\n   },"}, {"role": "assistant", "content": "upgrade commoner to v0.9.2 to silence deprecation warnings."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/core/__tests__/ReactEventTopLevelCallback-test.js b/src/core/__tests__/ReactEventTopLevelCallback-test.js\nindex 8252263e2839..14b02ac1d099 100644\n--- a/src/core/__tests__/ReactEventTopLevelCallback-test.js\n+++ b/src/core/__tests__/ReactEventTopLevelCallback-test.js\n@@ -22,28 +22,23 @@ require('mock-modules')\n   .dontMock('ReactEventTopLevelCallback')\n   .dontMock('ReactMount')\n   .dontMock('ReactInstanceHandles')\n-  .dontMock('ReactDOM');\n+  .dontMock('ReactDOM')\n+  .mock('ReactEventEmitter');\n \n var EVENT_TARGET_PARAM = 1;\n \n describe('ReactEventTopLevelCallback', function() {\n-  var mocks;\n-\n   var React;\n   var ReactEventTopLevelCallback;\n   var ReactDOM;\n-  var ReactEventEmitter;\n+  var ReactEventEmitter; // mocked\n \n   beforeEach(function() {\n     require('mock-modules').dumpCache();\n-    mocks = require('mocks');\n-\n     React = require('React');\n     ReactEventTopLevelCallback = require('ReactEventTopLevelCallback');\n     ReactDOM = require('ReactDOM');\n-    ReactEventEmitter = require('ReactEventEmitter');\n-\n-    ReactEventEmitter.handleTopLevel = mocks.getMockFunction();\n+    ReactEventEmitter = require('ReactEventEmitter'); // mocked\n   });\n \n   describe('Propagation', function() {"}, {"role": "assistant", "content": "add back mocking removed to make reacteventtoplevelcallback-test pass."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js b/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\nindex 10ac51d4317d..2ec797e9bd44 100644\n--- a/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\n+++ b/packages/react-native-renderer/src/ReactFabricGlobalResponderHandler.js\n@@ -9,7 +9,7 @@\n \n const ReactFabricGlobalResponderHandler = {\n   onChange: function (from: any, to: any, blockNativeResponder: boolean) {\n-    if (from) {\n+    if (from && from.stateNode) {\n       // equivalent to clearJSResponder\n       nativeFabricUIManager.setIsJSResponder(\n         from.stateNode.node,\n@@ -18,7 +18,7 @@ const ReactFabricGlobalResponderHandler = {\n       );\n     }\n \n-    if (to) {\n+    if (to && to.stateNode) {\n       // equivalent to setJSResponder\n       nativeFabricUIManager.setIsJSResponder(\n         to.stateNode.node,"}, {"role": "assistant", "content": "restore some guards in reactfabricglobalresponderhandler after refactor"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/classic/types/ReactPropTypes.js b/src/classic/types/ReactPropTypes.js\nindex e8f913f57301..8e2e9f112a18 100644\n--- a/src/classic/types/ReactPropTypes.js\n+++ b/src/classic/types/ReactPropTypes.js\n@@ -292,6 +292,7 @@ function isNode(propValue) {\n   switch (typeof propValue) {\n     case 'number':\n     case 'string':\n+    case 'undefined':\n       return true;\n     case 'boolean':\n       return !propValue;\n@@ -299,7 +300,7 @@ function isNode(propValue) {\n       if (Array.isArray(propValue)) {\n         return propValue.every(isNode);\n       }\n-      if (ReactElement.isValidElement(propValue)) {\n+      if (propValue === null || ReactElement.isValidElement(propValue)) {\n         return true;\n       }\n       propValue = ReactFragment.extractIfFragment(propValue);\ndiff --git a/src/classic/types/__tests__/ReactPropTypes-test.js b/src/classic/types/__tests__/ReactPropTypes-test.js\nindex c3d9a49d8ca0..f87856491a36 100644\n--- a/src/classic/types/__tests__/ReactPropTypes-test.js\n+++ b/src/classic/types/__tests__/ReactPropTypes-test.js\n@@ -384,7 +384,9 @@ describe('ReactPropTypes', function() {\n           k30: <MyComponent />,\n           k31: frag({k310: <a />}),\n           k32: 'Another string'\n-        })\n+        }),\n+        k4: null,\n+        k5: undefined\n       }));\n       expect(console.warn.calls).toEqual([]);\n \n@@ -397,7 +399,9 @@ describe('ReactPropTypes', function() {\n           k30: <MyComponent />,\n           k31: {k310: <a />},\n           k32: 'Another string'\n-        }\n+        },\n+        k4: null,\n+        k5: undefined\n       });\n     });"}, {"role": "assistant", "content": "allow null and undefined values in non-frag object passed to proptypes.node"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex 0333bb02cd39..de72afeec9a8 100644\n--- a/package.json\n+++ b/package.json\n@@ -38,7 +38,7 @@\n     \"base62\": \"~0.1.1\",\n     \"commoner\": \"~0.7.0\",\n     \"esprima\": \"git://github.com/facebook/esprima#fb-harmony\",\n-    \"recast\": \"~0.4.5\",\n+    \"recast\": \"~0.4.8\",\n     \"source-map\": \"~0.1.22\"\n   },\n   \"devDependencies\": {"}, {"role": "assistant", "content": "upgrade recast to 0.4.8 to fix options.writeback bug."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/tips/16-references-to-components.md b/docs/tips/16-references-to-components.md\nindex 38572276e61d..a8ce67eeaa96 100644\n--- a/docs/tips/16-references-to-components.md\n+++ b/docs/tips/16-references-to-components.md\n@@ -14,18 +14,20 @@ If you're using React components in a larger non-React application or transition\n var myComponent = React.renderComponent(<MyComponent />, myContainer);\n ```\n \n-If you pass a variable to 'React.renderComponent`, it's not guaranteed that the component passed in will be the one that's mounted. In cases where you construct a component before mounting it, be sure to reassign your variable:\n+Keep in mind, however, that the \"constructor\" of a component doesn't return a component instance! It's just a **descriptor**: a lightweight representation that tells React what the mounted component should look like.\n+\n+Descriptors also contain any methods that you define in the [statics](http://facebook.github.io/react/docs/component-specs.html#statics) property of the component.\n \n ```js\n /** @jsx React.DOM */\n \n-var myComponent = <MyComponent />;\n+var myComponent = <MyComponent />; // This is just a descriptor.\n \n-// Some code here...\n+// Some code here, possibly using static methods...\n \n myComponent = React.renderComponent(myComponent, myContainer);\n ```\n \n > Note:\n >\n-> This should only ever be used at the top level. Inside components, let your `props` and `state` handle communication with child components, and only reference components via `ref`s.\n+> This should only ever be used at the top level. Inside components, let your `props` and `state` handle communication with child components, and only reference components via [refs](http://facebook.github.io/react/docs/more-about-refs.html)."}, {"role": "assistant", "content": "amend \"references to components\" tip to mention descriptors."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/ReactVersions.js b/ReactVersions.js\nindex ef97ee7e3afc..c59e772e5cfc 100644\n--- a/ReactVersions.js\n+++ b/ReactVersions.js\n@@ -35,7 +35,6 @@ const stablePackages = {\n   'react-art': ReactVersion,\n   'react-dom': ReactVersion,\n   'react-server-dom-webpack': ReactVersion,\n-  'react-server-dom-turbopack': ReactVersion,\n   'react-is': ReactVersion,\n   'react-reconciler': '0.30.0',\n   'react-refresh': '0.15.0',"}, {"role": "assistant", "content": "revert \"publish `react-server-dom-turbopack` to canary channels"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/dom/DefaultDOMPropertyConfig.js b/src/dom/DefaultDOMPropertyConfig.js\nindex a5380fa9d7b5..ed6a53206dc3 100644\n--- a/src/dom/DefaultDOMPropertyConfig.js\n+++ b/src/dom/DefaultDOMPropertyConfig.js\n@@ -57,7 +57,7 @@ var DefaultDOMPropertyConfig = {\n     data: null, // For `<object />` acts as `src`.\n     dateTime: MUST_USE_ATTRIBUTE,\n     dir: null,\n-    disabled: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n+    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n     draggable: null,\n     encType: null,\n     form: MUST_USE_ATTRIBUTE,"}, {"role": "assistant", "content": "make 'disabled' must_use_attribute for compatibility with css  selectors."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/rollup/build.js b/scripts/rollup/build.js\nindex c08adda6d925..b054e0d4a320 100644\n--- a/scripts/rollup/build.js\n+++ b/scripts/rollup/build.js\n@@ -21,7 +21,7 @@ const useForks = require('./plugins/use-forks-plugin');\n const stripUnusedImports = require('./plugins/strip-unused-imports');\n const Packaging = require('./packaging');\n const {asyncRimRaf} = require('./utils');\n-const codeFrame = require('babel-code-frame');\n+const codeFrame = require('@babel/code-frame');\n const Wrappers = require('./wrappers');\n \n const RELEASE_CHANNEL = process.env.RELEASE_CHANNEL;"}, {"role": "assistant", "content": "update import for babel-code-frame in build script"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/release-manager/cli.js b/scripts/release-manager/cli.js\nindex 350aa468bb5e..7269382d6dc5 100755\n--- a/scripts/release-manager/cli.js\n+++ b/scripts/release-manager/cli.js\n@@ -125,10 +125,12 @@ const app = {\n       vorpal.use(require(`./commands/${command}`)(vorpal, app));\n     });\n \n-    vorpal\n+    var v = vorpal\n       .history('react-release-manager')\n-      .delimiter('rrm \\u2234')\n-      .show();\n+      .delimiter('rrm \\u2234');\n+    v.exec('help');\n+    v.show();\n+\n   },\n };"}, {"role": "assistant", "content": "display the help at startup, otherwise it's hard to figure out what to do"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/06-transferring-props.md b/docs/docs/06-transferring-props.md\nindex 972b567cd418..955bf98340e6 100644\n--- a/docs/docs/06-transferring-props.md\n+++ b/docs/docs/06-transferring-props.md\n@@ -143,7 +143,7 @@ z; // { a: 3, b: 4 }\n \n > Note:\n >\n-> This proposal has reached stage 2 and is now enabled by default in Babel. Older versions of Babel may need to explicitly enable this transform with `babel --optional es7.objectRestSpread`\n+> To transform rest and spread properties using Babel 6, you need to install the [`es2015`](https://babeljs.io/docs/plugins/preset-es2015/) preset, the [`transform-object-rest-spread`](https://babeljs.io/docs/plugins/transform-object-rest-spread/) plugin and configure them in the `.babelrc` file.\n \n ## Transferring with Underscore"}, {"role": "assistant", "content": "transform rest and spread properties using babel 6"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/shared/forks/ReactFeatureFlags.www-dynamic.js b/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\nindex 72ae2f2c5b47..23a7e321e60e 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www-dynamic.js\n@@ -18,7 +18,6 @@ export const disableInputAttributeSyncing = __VARIANT__;\n export const enableFilterEmptyStringAttributesDOM = __VARIANT__;\n export const enableLegacyFBSupport = __VARIANT__;\n export const skipUnmountedBoundaries = __VARIANT__;\n-export const enableSuspenseLayoutEffectSemantics = __VARIANT__;\n \n // Enable this flag to help with concurrent mode debugging.\n // It logs information to the console about React scheduling, rendering, and commit phases.\ndiff --git a/packages/shared/forks/ReactFeatureFlags.www.js b/packages/shared/forks/ReactFeatureFlags.www.js\nindex d514e15e8827..39c359e2fc68 100644\n--- a/packages/shared/forks/ReactFeatureFlags.www.js\n+++ b/packages/shared/forks/ReactFeatureFlags.www.js\n@@ -26,7 +26,6 @@ export const {\n   enableDebugTracing,\n   skipUnmountedBoundaries,\n   createRootStrictEffectsByDefault,\n-  enableSuspenseLayoutEffectSemantics,\n   enableUseRefAccessWarning,\n   disableNativeComponentFrames,\n   disableSchedulerTimeoutInWorkLoop,\n@@ -47,6 +46,8 @@ export const enableProfilerNestedUpdateScheduledHook =\n   __PROFILE__ && dynamicFeatureFlags.enableProfilerNestedUpdateScheduledHook;\n export const enableUpdaterTracking = __PROFILE__;\n \n+export const enableSuspenseLayoutEffectSemantics = true;\n+\n // Logs additional User Timing API marks for use with an experimental profiling tool.\n export const enableSchedulingProfiler =\n   __PROFILE__ && dynamicFeatureFlags.enableSchedulingProfiler;"}, {"role": "assistant", "content": "enable enablesuspenselayouteffectsemantics flag statically for facebook"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/09.3-environments.md b/docs/docs/09.3-environments.md\nindex ec3dbc3908ad..eb3c2e1b9b58 100644\n--- a/docs/docs/09.3-environments.md\n+++ b/docs/docs/09.3-environments.md\n@@ -29,6 +29,11 @@ If you use JSX, you may want to pre-compile your components. Alternatively you m\n >\n > Some versions of Node.js have an `Object.assign` implementation that does not preserve key order. This can cause errors when validating the markup, creating a warning that says \"React attempted to reuse markup in a container but the checksum was invalid\". If you run into this issue, you can override `Object.assign` to use a polyfill that preserves key order. For more details, see [Issue #6451](https://github.com/facebook/react/issues/6451).\n \n+C#\n+==\n+\n+Support for server-side component rendering and JSX compilation (via Babel) in a .NET Framework / ASP.NET environment is provided through our [ReactJS.NET](http://reactjs.net/) project.\n+\n \n ## Nashorn"}, {"role": "assistant", "content": "add link to reactjs.net on server-side environments page"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/test/ReactTestUtils.js b/src/test/ReactTestUtils.js\nindex 7b504c01c5e3..d56ad26b31fb 100644\n--- a/src/test/ReactTestUtils.js\n+++ b/src/test/ReactTestUtils.js\n@@ -238,9 +238,10 @@ var ReactTestUtils = {\n    * @return {object} the ReactTestUtils object (for chaining)\n    */\n   mockComponent: function(module, mockTagName) {\n+    mockTagName = mockTagName || module.mockTagName || \"div\";\n+\n     var ConvenienceConstructor = React.createClass({\n       render: function() {\n-        var mockTagName = mockTagName || module.mockTagName || \"div\";\n         return ReactDOM[mockTagName](null, this.props.children);\n       }\n     });"}, {"role": "assistant", "content": "fix reacttestutils.mockcomponent so that mocktagname is not ignored."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-reconciler/src/ReactFiberScheduler.js b/packages/react-reconciler/src/ReactFiberScheduler.js\nindex dbd252a20e03..0bd0f1c82e6f 100644\n--- a/packages/react-reconciler/src/ReactFiberScheduler.js\n+++ b/packages/react-reconciler/src/ReactFiberScheduler.js\n@@ -1208,7 +1208,7 @@ function captureCommitPhaseError(fiber: Fiber, error: mixed) {\n function computeAsyncExpiration(currentTime: ExpirationTime) {\n   // Given the current clock time, returns an expiration time. We use rounding\n   // to batch like updates together.\n-  // Should complete within ~1000ms. 1200ms max.\n+  // Should complete within ~5000ms. 5250ms max.\n   const expirationMs = 5000;\n   const bucketSizeMs = 250;\n   return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);"}, {"role": "assistant", "content": "update comment in computeasyncexpiration to reflect code"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/fixtures/dom/src/react-loader.js b/fixtures/dom/src/react-loader.js\nindex 89c8e239703a..6d108b0c28a8 100644\n--- a/fixtures/dom/src/react-loader.js\n+++ b/fixtures/dom/src/react-loader.js\n@@ -42,7 +42,9 @@ export default function loadReact() {\n   let version = query.version || 'local';\n \n   if (version !== 'local') {\n-    if (parseInt(version, 10) >= 16) {\n+    // The file structure was updated in 16. This wasn't the case for alphas.\n+    // Load the old module location for anything less than 16 RC\n+    if (parseInt(version, 10) >= 16 && version.indexOf('alpha') < 0) {\n       REACT_PATH =\n         'https://unpkg.com/react@' + version + '/umd/react.development.js';\n       DOM_PATH ="}, {"role": "assistant", "content": "add exception for 16.alpha when loading react in dom fixtures"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ReactTextComponent.js b/src/browser/ReactTextComponent.js\nindex 25cdd6e1bf87..2293b78a485a 100644\n--- a/src/browser/ReactTextComponent.js\n+++ b/src/browser/ReactTextComponent.js\n@@ -20,7 +20,6 @@\n \"use strict\";\n \n var DOMPropertyOperations = require('DOMPropertyOperations');\n-var ReactBrowserComponentMixin = require('ReactBrowserComponentMixin');\n var ReactComponent = require('ReactComponent');\n var ReactElement = require('ReactElement');"}, {"role": "assistant", "content": "remove reactbrowsercomponent dependency from reacttextcomponent"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-dom/src/__tests__/ReactDOM-test.js b/packages/react-dom/src/__tests__/ReactDOM-test.js\nindex 0ca365afd8a9..46b9f5cabe16 100644\n--- a/packages/react-dom/src/__tests__/ReactDOM-test.js\n+++ b/packages/react-dom/src/__tests__/ReactDOM-test.js\n@@ -377,6 +377,26 @@ describe('ReactDOM', () => {\n     }\n   });\n \n+  it('should not crash calling findDOMNode inside a functional component', () => {\n+    const container = document.createElement('div');\n+\n+    class Component extends React.Component {\n+      render() {\n+        return <div />;\n+      }\n+    }\n+\n+    const instance = ReactTestUtils.renderIntoDocument(<Component />);\n+    const App = () => {\n+      ReactDOM.findDOMNode(instance);\n+      return <div />;\n+    };\n+\n+    if (__DEV__) {\n+      ReactDOM.render(<App />, container);\n+    }\n+  });\n+\n   it('throws in DEV if jsdom is destroyed by the time setState() is called', () => {\n     class App extends React.Component {\n       state = {x: 1};"}, {"role": "assistant", "content": "add regression test for reading reactcurrentowner statenode"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react-devtools-shared/src/backend/StyleX/utils.js b/packages/react-devtools-shared/src/backend/StyleX/utils.js\nindex d99362766f4c..2ae10f316b78 100644\n--- a/packages/react-devtools-shared/src/backend/StyleX/utils.js\n+++ b/packages/react-devtools-shared/src/backend/StyleX/utils.js\n@@ -67,7 +67,10 @@ function crawlObjectProperties(\n         // Special case; this key is the name of the style's source/file/module.\n         sources.add(key);\n       } else {\n-        resolvedStyles[key] = getPropertyValueForStyleName(value);\n+        const propertyValue = getPropertyValueForStyleName(value);\n+        if (propertyValue != null) {\n+          resolvedStyles[key] = propertyValue;\n+        }\n       }\n     } else {\n       const nestedStyle = {};\n@@ -90,13 +93,19 @@ function getPropertyValueForStyleName(styleName: string): string | null {\n     const styleSheet = ((document.styleSheets[\n       styleSheetIndex\n     ]: any): CSSStyleSheet);\n-    // $FlowFixMe Flow doesn't konw about these properties\n-    const rules = styleSheet.rules || styleSheet.cssRules;\n-    // $FlowFixMe `rules` is mixed\n+    let rules: CSSRuleList | null = null;\n+    // this might throw if CORS rules are enforced https://www.w3.org/TR/cssom-1/#the-cssstylesheet-interface\n+    try {\n+      rules = styleSheet.cssRules;\n+    } catch (_e) {\n+      continue;\n+    }\n+\n     for (let ruleIndex = 0; ruleIndex < rules.length; ruleIndex++) {\n-      // $FlowFixMe `rules` is mixed\n-      const rule = rules[ruleIndex];\n-      // $FlowFixMe Flow doesn't konw about these properties\n+      if (!(rules[ruleIndex] instanceof CSSStyleRule)) {\n+        continue;\n+      }\n+      const rule = ((rules[ruleIndex]: any): CSSStyleRule);\n       const {cssText, selectorText, style} = rule;\n \n       if (selectorText != null) {"}, {"role": "assistant", "content": "prevent stylex plugin from throwing when inspecting css"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/circleci/build_gh_pages.sh b/scripts/circleci/build_gh_pages.sh\nindex fcf49f2af95d..c0ecc81e35da 100755\n--- a/scripts/circleci/build_gh_pages.sh\n+++ b/scripts/circleci/build_gh_pages.sh\n@@ -2,7 +2,7 @@\n \n set -e\n \n-if [ -z $CI_PULL_REQUEST ] && [ \"$CIRCLE_BRANCH\" = \"$REACT_WEBSITE_BRANCH\" ]; then\n+if [ \"$CIRCLE_BRANCH\" = \"$REACT_WEBSITE_BRANCH\" ]; then\n \n   GH_PAGES_DIR=`pwd`/../react-gh-pages"}, {"role": "assistant", "content": "remove pr check from gh pages build hook for stable branch"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/environment/ReactServerRendering.js b/src/environment/ReactServerRendering.js\nindex 9c67e880ea75..d0750653fcdc 100644\n--- a/src/environment/ReactServerRendering.js\n+++ b/src/environment/ReactServerRendering.js\n@@ -27,7 +27,7 @@ var invariant = require('invariant');\n \n /**\n  * @param {ReactComponent} component\n- * @return {String} the markup\n+ * @return {string} the markup\n  */\n function renderComponentToString(component) {\n   invariant("}, {"role": "assistant", "content": "use lowercase \"string\" so that the documentation complies with typecheckers"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js b/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js\nindex 6a8174613719..56bcdbc27ded 100644\n--- a/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js\n+++ b/src/renderers/dom/client/wrappers/__tests__/ReactDOMTextarea-test.js\n@@ -251,4 +251,10 @@ describe('ReactDOMTextarea', function() {\n     expect(link.requestChange.mock.calls.length).toBe(1);\n     expect(link.requestChange.mock.calls[0][0]).toEqual('test');\n   });\n+\n+  it('should unmount', function() {\n+    var container = document.createElement('div');\n+    renderTextarea(<textarea />, container);\n+    React.unmountComponentAtNode(container);\n+  });\n });\ndiff --git a/src/renderers/dom/shared/ReactDOMComponent.js b/src/renderers/dom/shared/ReactDOMComponent.js\nindex 0e8a0667ca54..60bcc899eca5 100644\n--- a/src/renderers/dom/shared/ReactDOMComponent.js\n+++ b/src/renderers/dom/shared/ReactDOMComponent.js\n@@ -787,9 +787,6 @@ ReactDOMComponent.Mixin = {\n       case 'input':\n         ReactDOMInput.unmountWrapper(this);\n         break;\n-      case 'textarea':\n-        ReactDOMTextarea.unmountWrapper(this);\n-        break;\n       case 'html':\n       case 'head':\n       case 'body':"}, {"role": "assistant", "content": "remove stray call to reactdomtextarea.unmountwrapper"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/use-sync-external-store/src/useSyncExternalStore.js b/packages/use-sync-external-store/src/useSyncExternalStore.js\nindex f1bb95556d2b..b8abd5b6857f 100644\n--- a/packages/use-sync-external-store/src/useSyncExternalStore.js\n+++ b/packages/use-sync-external-store/src/useSyncExternalStore.js\n@@ -22,7 +22,7 @@ if (__DEV__) {\n       'it only works with React 18+.' +\n       '\\n\\n' +\n       'If you wish to support React 16 and 17, import from ' +\n-      \"'use-sync-external-store/shim' instead. It will fall back to a shimmed\" +\n+      \"'use-sync-external-store/shim' instead. It will fall back to a shimmed \" +\n       'implementation when the native one is not available.' +\n       '\\n\\n' +\n       \"If you only support React 18+, you can import directly from 'react'.\","}, {"role": "assistant", "content": "fix typo in usesyncexternalstore main entry point error"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/npm-jsx_whitespace_transform/run.js b/npm-jsx_whitespace_transform/run.js\nindex 246af42b5435..f886cf23cef3 100755\n--- a/npm-jsx_whitespace_transform/run.js\n+++ b/npm-jsx_whitespace_transform/run.js\n@@ -146,7 +146,7 @@ if (require.main === module) {\n     );\n   }\n \n-  var absPath = path.resolve(__dirname, argv._[0]);\n+  var absPath = path.resolve(argv._[0]);\n \n   fs.stat(absPath, function(err, stat) {\n     if (err) throw err;"}, {"role": "assistant", "content": "resolve paths relative to pwd, not npm install dir"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/browser/ui/dom/HTMLDOMPropertyConfig.js b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\nindex 850f6e5bc264..0f24d99acbb5 100644\n--- a/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n+++ b/src/browser/ui/dom/HTMLDOMPropertyConfig.js\n@@ -88,7 +88,11 @@ var HTMLDOMPropertyConfig = {\n     draggable: null,\n     encType: null,\n     form: MUST_USE_ATTRIBUTE,\n+    formAction: MUST_USE_ATTRIBUTE,\n+    formEncType: MUST_USE_ATTRIBUTE,\n+    formMethod: MUST_USE_ATTRIBUTE,\n     formNoValidate: HAS_BOOLEAN_VALUE,\n+    formTarget: MUST_USE_ATTRIBUTE,\n     frameBorder: MUST_USE_ATTRIBUTE,\n     height: MUST_USE_ATTRIBUTE,\n     hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,"}, {"role": "assistant", "content": "add attributes formaction, formenctype, formmethod and formtarget"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/fixtures/src/components/fixtures/index.js b/fixtures/src/components/fixtures/index.js\nindex 763939d28ff2..876a4a5044f0 100644\n--- a/fixtures/src/components/fixtures/index.js\n+++ b/fixtures/src/components/fixtures/index.js\n@@ -20,7 +20,7 @@ const FixturesPage = React.createClass({\n       case '/textareas':\n         return <TextAreaFixtures />;\n       default:\n-        return <span />;\n+        return <p>Please select a text fixture.</p>\n     }\n   },\n });"}, {"role": "assistant", "content": "add test prompt message when no fixture is selected"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/devtools/views/Components/TreeContext.js b/src/devtools/views/Components/TreeContext.js\nindex 7d23766767ba..d610cddfb397 100644\n--- a/src/devtools/views/Components/TreeContext.js\n+++ b/src/devtools/views/Components/TreeContext.js\n@@ -134,7 +134,11 @@ function reduceTreeState(store: Store, state: State, action: Action): State {\n           const selectedElement = store.getElementAtIndex(\n             ((selectedElementIndex: any): number)\n           );\n-          if (selectedElement !== null && selectedElement.children.length > 0) {\n+          if (\n+            selectedElement !== null &&\n+            selectedElement.children.length > 0 &&\n+            !selectedElement.isCollapsed\n+          ) {\n             const firstChildID = selectedElement.children[0];\n             const firstChildIndex = store.getIndexOfElementID(firstChildID);\n             if (firstChildIndex !== null) {"}, {"role": "assistant", "content": "fix a bug that caused it to jump over nodes when pressing too fast"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/ref-01-top-level-api.md b/docs/docs/ref-01-top-level-api.md\nindex e15975d05dbd..9a215b76ecb8 100644\n--- a/docs/docs/ref-01-top-level-api.md\n+++ b/docs/docs/ref-01-top-level-api.md\n@@ -53,10 +53,6 @@ boolean unmountComponentAtNode(DOMElement container)\n \n Remove a mounted React component from the DOM and clean up its event handlers and state. If no component was mounted in the container, calling this function does nothing. Returns `true` if a component was unmounted and `false` if there was no component to unmount.\n \n-> Note:\n->\n-> This method was called `React.unmountAndReleaseReactRootNode` until v0.5. It still works in v0.5 but will be removed in future versions.\n-\n \n ### React.renderComponentToString"}, {"role": "assistant", "content": "remove stale deprecation note from unmounting docs"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/_js/examples/markdown.js b/docs/_js/examples/markdown.js\nindex f0cab2b8b0da..50ed3f91da8b 100644\n--- a/docs/_js/examples/markdown.js\n+++ b/docs/_js/examples/markdown.js\n@@ -21,7 +21,8 @@ class MarkdownEditor extends React.Component {\n         <h3>Input</h3>\n         <textarea\n           onChange={this.handleChange}\n-          defaultValue={this.state.value} />\n+          defaultValue={this.state.value}\n+        />\n         <h3>Output</h3>\n         <div\n           className=\"content\""}, {"role": "assistant", "content": "make the world a better place by placing closing /> on a new line"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/release/download-experimental-build.js b/scripts/release/download-experimental-build.js\nindex ae5e69857990..2de19359559a 100755\n--- a/scripts/release/download-experimental-build.js\n+++ b/scripts/release/download-experimental-build.js\n@@ -18,15 +18,16 @@ const printSummary = require('./download-experimental-build-commands/print-summa\n const run = async () => {\n   try {\n     addDefaultParamValue('-r', '--releaseChannel', 'experimental');\n+    addDefaultParamValue(\n+      null,\n+      '--build',\n+      await getLatestMasterBuildNumber(true)\n+    );\n \n     const params = await parseParams();\n     params.cwd = join(__dirname, '..', '..');\n     params.packages = await getPublicPackages(true);\n \n-    if (!params.build) {\n-      params.build = await getLatestMasterBuildNumber(true);\n-    }\n-\n     await checkEnvironmentVariables(params);\n     await downloadBuildArtifacts(params);\n \ndiff --git a/scripts/release/utils.js b/scripts/release/utils.js\nindex f49471ad76f5..08ffdeb7c8c9 100644\n--- a/scripts/release/utils.js\n+++ b/scripts/release/utils.js\n@@ -17,18 +17,18 @@ const logger = createLogger({\n   storagePath: join(__dirname, '.progress-estimator'),\n });\n \n-const addDefaultParamValue = (shortName, longName, defaultValue) => {\n+const addDefaultParamValue = (optionalShortName, longName, defaultValue) => {\n   let found = false;\n   for (let i = 0; i < process.argv.length; i++) {\n     const current = process.argv[i];\n-    if (current === shortName || current.startsWith(`${longName}=`)) {\n+    if (current === optionalShortName || current.startsWith(`${longName}=`)) {\n       found = true;\n       break;\n     }\n   }\n \n   if (!found) {\n-    process.argv.push(shortName, defaultValue);\n+    process.argv.push(`${longName}=${defaultValue}`);\n   }\n };"}, {"role": "assistant", "content": "restore experimental build script's ability to auto download latest build"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/eslint-plugin-react-hooks/README.md b/packages/eslint-plugin-react-hooks/README.md\nindex 2fc149a7e35a..bda6fe8fdc83 100644\n--- a/packages/eslint-plugin-react-hooks/README.md\n+++ b/packages/eslint-plugin-react-hooks/README.md\n@@ -6,7 +6,7 @@ It is a part of the [Hooks API](https://reactjs.org/docs/hooks-intro.html) for R\n \n ## Installation\n \n-**Note: If you're using Create React App, please wait for a corresponding release of `react-scripts` that includes this rule instead of adding it directly.**\n+**Note: If you're using Create React App, please use `react-scripts` >= 3 instead of adding it directly.**\n \n Assuming you already have ESLint installed, run:"}, {"role": "assistant", "content": "update create-react-app note for eslint-plugin-react-hooks"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/shared/utils/PooledClass.js b/src/shared/utils/PooledClass.js\nindex 5000ca726fc0..5ffc255ae9e6 100644\n--- a/src/shared/utils/PooledClass.js\n+++ b/src/shared/utils/PooledClass.js\n@@ -94,7 +94,7 @@ var DEFAULT_POOLER = oneArgumentPooler;\n  * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n  * itself (statically) not adding any prototypical fields. Any CopyConstructor\n  * you give this may have a `poolSize` property, and will look for a\n- * prototypical `destructor` on instances (optional).\n+ * prototypical `destructor` on instances.\n  *\n  * @param {Function} CopyConstructor Constructor that can be used to reset.\n  * @param {Function} pooler Customizable pooler."}, {"role": "assistant", "content": "remove comment about pooledclass destructors being optional"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js b/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\nindex d3cdf3c399d3..967c52a494a4 100644\n--- a/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\n+++ b/src/renderers/dom/client/syntheticEvents/SyntheticEvent.js\n@@ -173,10 +173,9 @@ Object.assign(SyntheticEvent.prototype, {\n       this[shouldBeReleasedProperties[i]] = null;\n     }\n     if (__DEV__) {\n-      var noop = require('emptyFunction');\n       Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n-      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', noop));\n-      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', noop));\n+      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n+      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n     }\n   },"}, {"role": "assistant", "content": "remove unnecessary require causing excess memory usage"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/test/ReactDefaultPerfAnalysis.js b/src/test/ReactDefaultPerfAnalysis.js\nindex 0134a839ae29..5fcfbc0b4351 100644\n--- a/src/test/ReactDefaultPerfAnalysis.js\n+++ b/src/test/ReactDefaultPerfAnalysis.js\n@@ -25,7 +25,9 @@ var DOM_OPERATION_TYPES = {\n   'setValueForProperty': 'update attribute',\n   'setValueForAttribute': 'update attribute',\n   'deleteValueForProperty': 'remove attribute',\n-  'dangerouslyReplaceNodeWithMarkupByID': 'replace',\n+  'setValueForStyles': 'update styles',\n+  'replaceNodeWithMarkup': 'replace',\n+  'updateTextContent': 'set textContent',\n };\n \n function getTotalTime(measurements) {"}, {"role": "assistant", "content": "update dom_operation_types mappings for reactdefaultperfanalysis"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/shared/DOMProperty.js b/src/renderers/dom/shared/DOMProperty.js\nindex 068638ad6b7c..8496fb7acf89 100644\n--- a/src/renderers/dom/shared/DOMProperty.js\n+++ b/src/renderers/dom/shared/DOMProperty.js\n@@ -193,9 +193,13 @@ var DOMProperty = {\n   /**\n    * Mapping from lowercase property names to the properly cased version, used\n    * to warn in the case of missing properties. Available only in __DEV__.\n+   *\n+   * autofocus is predefined, because adding it to the property whitelist\n+   * causes unintended side effects.\n+   *\n    * @type {Object}\n    */\n-  getPossibleStandardName: __DEV__ ? {} : null,\n+  getPossibleStandardName: __DEV__ ? {autofocus: 'autoFocus'} : null,\n \n   /**\n    * All of the isCustomAttribute() functions that have been injected.\ndiff --git a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\nindex 0c09b11baf5c..8060769ef688 100644\n--- a/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\n+++ b/src/renderers/dom/shared/__tests__/ReactDOMComponent-test.js\n@@ -1495,5 +1495,22 @@ describe('ReactDOMComponent', () => {\n       //since hard coding the line number would make test too brittle\n       expect(parseInt(previousLine, 10) + 12).toBe(parseInt(currentLine, 10));\n     });\n+\n+    it('should suggest property name if available', () => {\n+      spyOn(console, 'error');\n+\n+      ReactTestUtils.renderIntoDocument(React.createElement('label', {for: 'test'}));\n+      ReactTestUtils.renderIntoDocument(React.createElement('input', {type: 'text', autofocus: true}));\n+\n+      expect(console.error.calls.count()).toBe(2);\n+\n+      expect(console.error.calls.argsFor(0)[0]).toBe(\n+        'Warning: Unknown DOM property for. Did you mean htmlFor?\\n    in label'\n+      );\n+\n+      expect(console.error.calls.argsFor(1)[0]).toBe(\n+        'Warning: Unknown DOM property autofocus. Did you mean autoFocus?\\n    in input'\n+      );\n+    });\n   });\n });"}, {"role": "assistant", "content": "add unknown property warning for use of `autofocus`"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/isomorphic/children/flattenChildren.js b/src/isomorphic/children/flattenChildren.js\nindex c6caa802bea2..82ce3a03a1db 100644\n--- a/src/isomorphic/children/flattenChildren.js\n+++ b/src/isomorphic/children/flattenChildren.js\n@@ -15,21 +15,7 @@\n var KeyEscapeUtils = require('KeyEscapeUtils');\n var traverseAllChildren = require('traverseAllChildren');\n var warning = require('fbjs/lib/warning');\n-\n-var ReactComponentTreeHook;\n-\n-if (\n-  typeof process !== 'undefined' &&\n-  process.env &&\n-  process.env.NODE_ENV === 'test'\n-) {\n-  // Temporary hack.\n-  // Inline requires don't work well with Jest:\n-  // https://github.com/facebook/react/issues/7240\n-  // Remove the inline requires when we don't need them anymore:\n-  // https://github.com/facebook/react/pull/7178\n-  ReactComponentTreeHook = require('ReactComponentTreeHook');\n-}\n+var ReactComponentTreeHook = require('ReactComponentTreeHook');\n \n /**\n  * @param {function} traverseContext Context passed through traversal.\n@@ -48,9 +34,6 @@ function flattenSingleChildIntoContext(\n     const result = traverseContext;\n     const keyUnique = result[name] === undefined;\n     if (__DEV__) {\n-      if (!ReactComponentTreeHook) {\n-        ReactComponentTreeHook = require('ReactComponentTreeHook');\n-      }\n       if (!keyUnique) {\n         warning(\n           false,"}, {"role": "assistant", "content": "prevent process polyfill to be included in builds because of process guards preventing code replace"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/package.json b/package.json\nindex 7c2651474352..9dc97a27eb42 100644\n--- a/package.json\n+++ b/package.json\n@@ -145,7 +145,7 @@\n     \"publish-prereleases\": \"node ./scripts/release/publish-using-ci-workflow.js\",\n     \"download-build\": \"node ./scripts/release/download-experimental-build.js\",\n     \"download-build-for-head\": \"node ./scripts/release/download-experimental-build.js --commit=$(git rev-parse HEAD)\",\n-    \"download-build-in-codesandbox-ci\": \"cd scripts/release && yarn install && cd ../../ && yarn download-build-for-head || yarn build-combined --type=node react/index react-dom scheduler\",\n+    \"download-build-in-codesandbox-ci\": \"cd scripts/release && yarn install && cd ../../ && yarn download-build-for-head || yarn build-combined --type=node react/index react-dom/index react-dom/src/server react-dom/test-utils scheduler/index react/jsx-runtime react/jsx-dev-runtime\",\n     \"check-release-dependencies\": \"node ./scripts/release/check-release-dependencies\"\n   },\n   \"resolutions\": {"}, {"role": "assistant", "content": "include other build types when building for codesandbox ci"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/docs/07-working-with-the-browser.md b/docs/docs/07-working-with-the-browser.md\nindex d04f1a48234b..2b2e277fdd3e 100644\n--- a/docs/docs/07-working-with-the-browser.md\n+++ b/docs/docs/07-working-with-the-browser.md\n@@ -113,7 +113,7 @@ In addition to that philosophy, we've also taken the stance that we, as authors\n \n ### Polyfills Needed to Support Older Browsers\n \n-These six functions can be polyfilled using `es5-shim.js` from [kriskowal's es5-shim](https://github.com/kriskowal/es5-shim):\n+These six functions can be polyfilled using a combintion of `es5-shim.js` and `es5-sham.js` from [kriskowal's es5-shim](https://github.com/kriskowal/es5-shim):\n \n * `Array.isArray`\n * `Array.prototype.forEach`"}, {"role": "assistant", "content": "update docs to mention that you need both es5-shim.js and es5-sham.js to use react with ie8."}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/jest/matchers/toWarnDev.js b/scripts/jest/matchers/toWarnDev.js\nindex f8ae0be17414..c8e17d794c11 100644\n--- a/scripts/jest/matchers/toWarnDev.js\n+++ b/scripts/jest/matchers/toWarnDev.js\n@@ -49,11 +49,11 @@ const createMatcherFor = consoleMethod =>\n         } else if (expectedMessages.length === 1) {\n           errorMessage =\n             'Unexpected warning recorded: ' +\n-            jestDiff(normalizedMessage, expectedMessages[0]);\n+            jestDiff(expectedMessages[0], normalizedMessage);\n         } else {\n           errorMessage =\n             'Unexpected warning recorded: ' +\n-            jestDiff([normalizedMessage], expectedMessages);\n+            jestDiff(expectedMessages, [normalizedMessage]);\n         }\n \n         // Record the call stack for unexpected warnings."}, {"role": "assistant", "content": "fix jest/matchers/towarndev expected, actual order for jest-diff"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/src/renderers/dom/client/wrappers/DisabledInputUtils.js b/src/renderers/dom/client/wrappers/DisabledInputUtils.js\nindex 06ab2dc9dc9a..37f80283514b 100644\n--- a/src/renderers/dom/client/wrappers/DisabledInputUtils.js\n+++ b/src/renderers/dom/client/wrappers/DisabledInputUtils.js\n@@ -38,7 +38,7 @@ var DisabledInputUtils = {\n     // Copy the props, except the mouse listeners\n     var nativeProps = {};\n     for (var key in props) {\n-      if (props.hasOwnProperty(key) && !disableableMouseListenerNames[key]) {\n+      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {\n         nativeProps[key] = props[key];\n       }\n     }"}, {"role": "assistant", "content": "flip conditional in disabledinpututils to cut hasownproperty calls"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/scripts/tasks/danger.js b/scripts/tasks/danger.js\nindex 8198d0c22bc4..ad61424e9e29 100644\n--- a/scripts/tasks/danger.js\n+++ b/scripts/tasks/danger.js\n@@ -12,8 +12,8 @@ const spawn = require('child_process').spawn;\n \n const extension = process.platform === 'win32' ? '.cmd' : '';\n \n-// This came from React Native's circle.yml\n-const token = 'e622517d9f1136ea8900' + '07c6373666312cdfaa69';\n+// Facebook-Open-Source-Bot public_repo token\n+const token = 'b186c9a82bab3b08ec80' + 'c0818117619eec6f281a';\n spawn(path.join('node_modules', '.bin', 'danger-ci' + extension), [], {\n   // Allow colors to pass through\n   stdio: 'inherit',"}, {"role": "assistant", "content": "replace danger token with a refreshed facebook-open-source-bot token"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/docs/_posts/2013-06-05-why-react.md b/docs/_posts/2013-06-05-why-react.md\nindex 7aa3c2ddf188..07f02e1ef9a1 100644\n--- a/docs/_posts/2013-06-05-why-react.md\n+++ b/docs/_posts/2013-06-05-why-react.md\n@@ -75,7 +75,7 @@ some pretty cool things with it:\n - We've built internal prototypes that run React apps in a web worker and use\n   React to drive **native iOS views** via an Objective-C bridge.\n - You can run React\n-  [on the server](http://github.com/petehunt/react-server-rendering)\n+  [on the server](http://github.com/petehunt/react-server-rendering-example)\n   for SEO, performance, code sharing and overall flexibility.\n - Events behave in a consistent, standards-compliant way in all browsers\n   (including IE8) and automatically use"}, {"role": "assistant", "content": "update link to @petehunt's react-server-rendering github repo"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react/src/React.js b/packages/react/src/React.js\nindex 2f6221a23eff..50ce68dc3cfd 100644\n--- a/packages/react/src/React.js\n+++ b/packages/react/src/React.js\n@@ -55,7 +55,6 @@ const React = {\n   StrictMode: REACT_STRICT_MODE_TYPE,\n   unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,\n   unstable_Profiler: REACT_PROFILER_TYPE,\n-  Timeout: REACT_TIMEOUT_TYPE,\n \n   createElement: __DEV__ ? createElementWithValidation : createElement,\n   cloneElement: __DEV__ ? cloneElementWithValidation : cloneElement,"}, {"role": "assistant", "content": "remove timeout export on react object unless enablesuspense flag"}]}
{"messages": [{"role": "system", "content": "Summarize diff logs with a commit message."}, {"role": "user", "content": "diff --git a/packages/react/src/ReactSharedSubset.experimental.js b/packages/react/src/ReactSharedSubset.experimental.js\nindex 076349e29383..b05ec07302ed 100644\n--- a/packages/react/src/ReactSharedSubset.experimental.js\n+++ b/packages/react/src/ReactSharedSubset.experimental.js\n@@ -32,8 +32,6 @@ export {\n   useCallback,\n   useContext,\n   useDebugValue,\n-  useDeferredValue,\n   useMemo,\n-  useTransition,\n   version,\n } from './React';"}, {"role": "assistant", "content": "remove usedeferredvalue and usetransition from flight subset"}]}
